[
 {
  "author": "dlr", 
  "date": "2007-09-27T18:09:10.973400Z", 
  "msg": [
   "Finish issue #2828, documenting the conflict resolution callback.", 
   "* www/svn_1.5_releasenotes.html", 
   "(conflict-resolution): Extend the RN's to include coverage of the", 
   "API that third-party clients would use.", 
   "* www/merge-tracking/func-spec.html", 
   "* www/merge-tracking/design.html", 
   "(conflict-resolution): Update the MT func spec to describe the", 
   "available and proposed additional behaviors, and add a quick blurb", 
   "to the MT design."
  ], 
  "revision_id": "866880"
 }, 
 {
  "author": "pburba", 
  "date": "2007-09-27T15:16:56.140531Z", 
  "msg": [
   "Follow-up to r26803, make variable declarations C89 friendly.", 
   "* subversion/libsvn_client/merge.c", 
   "(drive_merge_report_editor): Move all declarations to start of block."
  ], 
  "revision_id": "866879"
 }, 
 {
  "author": "pburba", 
  "date": "2007-09-27T14:57:55.337857Z", 
  "msg": [
   "Follow-up to r26802, remove guaranteed no-op.", 
   "* subversion/libsvn_client/merge.c", 
   "(remove_absent_children): Here's an idea: Don't create a new hash then", 
   "try to remove something from it, just don't bother with the removal in", 
   "the first place!"
  ], 
  "revision_id": "866878"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-09-27T14:25:29.351082Z", 
  "msg": [
   "Fix issue 2821.", 
   "Improve merge algorithm used for target trees with child paths which have", 
   "mergeinfo that differs from their parent.", 
   "Recap of Status quo merge operation for same url merges:", 
   "-------------------------------------------------------", 
   "* Harvest all paths under a target having explicit merge corresponding to merge source.", 
   "* Harvest all switched paths.", 
   "* Harvest all parent paths missing child due to 'insufficient - authorization.", 
   "From above 3 harvesting populate a list by name 'children_with_mergeinfo'.", 
   "Items in children_with_mergeinfo should be sorted in depth first order to", 
   "confirms to reporter's set_path semantics.", 
   "'do_merge' function was doing all the merges for a given path and complex", 
   "mergeinfo recording.", 
   "For each child in children_with_mergeinfo:", 
   "if child == merge_target", 
   "continute", 
   "do_merge(child)", 
   "do_merge(user_given_target)", 
   "New style of merge(same urls) as suggested by Peter Lundblad on", 
   "http://subversion.tigris.org/servlets/BrowseList?list=dev&by=thread&from=565086", 
   "-------------------------------------------------------", 
   "* Harvest all paths under a target having explicit merge corresponding to merge source.", 
   "* Harvest all switched paths.", 
   "* Harvest all parent paths missing child due to 'insufficient - authorization.", 
   "From above 3 harvesting populate a list by name 'children_with_mergeinfo'.", 
   "If 'children_with_mergeinfo' is empty add 'target' explicitly to it.", 
   "If We don't have any 'target' in 'children_with_mergeinfo' add it in a", 
   "correct location confirming to 'depth-first-ordering'.", 
   "'do_merge' function is doing only the merges for a given path and no complex", 
   "mergeinfo recording.", 
   "For each child in children_with_mergeinfo:", 
   "Calculate remaining_ranges to merge with the help of", 
   "'populate_remaining_ranges'.", 
   "Get the smallest end_rev out of all paths remaing_ranges.", 
   "*** No need to run diff summarize as the new style of merging does", 
   "not need it.***", 
   "While(end_rev!=INVALID_REVNUM)", 
   "slice_remaining_ranges(children_with_mergeinfo, end_rev)", 
   "do_merge(orig_target, start, end_rev)", 
   "start = start + 1", 
   "remove_first_range_from_remaining_ranges(children_with_mergeinfo)", 
   "end_rev = get_nearest_end_rev(children_with_mergeinfo)", 
   "Record mergeinfo.", 
   "* subversion/tests/cmdline/merge_tests.py", 
   "(textual_merges_galore): Now mergeinfo gets elided on othe_wc/A/D/G/rho.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__merge_path_t): Add new members", 
   "'remaining_ranges' - per path yet to be merged ranges.", 
   "'pre_merge_mergeinfo' - 'mergeinfo prior to merge'.", 
   "'indirect_mergeinfo' - Flag indicating whether path inherits mergeinfo.", 
   "* subversion/libsvn_client/merge.c", 
   "(struct merge_cmd_baton): Add flag stating 'target_has_dummy_merge_range'", 
   "indicating the fact that merge target has nothing to merge, we need this", 
   "as few child may have something to merge.", 
   "(drive_merge_report_editor):", 
   "Instead of calling 'set_path' for child with rev as 'end'(to do", 
   "no-op merge), it calls with relevant 'start_rev' of each child.", 
   "(populate_remaining_ranges): New function that populates 'remaining_ranges'", 
   "for each child of 'children_with_mergeinfo'.", 
   "(get_nearest_end_rev): New function that gives the nearest end_rev for next", 
   "do_merge call on the target.", 
   "(slice_remaining_ranges): Slice remaining_ranges[0] of each child if it is", 
   "inclusive of end_rev.", 
   "(remove_first_range_from_remaining_ranges): New function that removes the", 
   "remaining_ranges[0] of each child.", 
   "(elide_target_mergeinfo): For all paths other than 'MERGE_B->target' elide", 
   "the mergeinfo.(May be this function need to be renamed and signature need", 
   "to be changed, will do it in subsequent commit).", 
   "(do_merge):", 
   "Now notify_b is common for all subsequent merges allocated at", 
   "'svn_client_merge3' or 'svn_client_merge_peg3'. Change the signature to", 
   "accept it. We don't need 'target_index' anymore as mergeinfo recording has", 
   "been moved to 'discover_and_merge_children'.", 
   "This function just prints the 'merge notification lines' and does the", 
   "merge no mergeingfo recording at all.", 
   "(get_mergeinfo_paths): Make sure 'children_with_mergeinfo' is non-empty and", 
   "has the 'target' as its first item.", 
   "(struct get_diff_summary_baton, get_diff_summary_func_cb): Removed.", 
   "(discover_and_merge_children): Accept 'notify_b' to cascade to 'do_merge'.", 
   "Renaming the formal variable 'merge_cmd_baton' to 'merge_b'.", 
   "Implementing a new style of merges as described above, records the", 
   "mergeingo.", 
   "(svn_client_merge3, svn_client_merge_peg3): Create notify_b and pass the", 
   "same to do_merge and discover_and_merge_children.", 
   "If merge source urls are same call 'discover_and_merge_children' else", 
   "call 'do_merge'."
  ], 
  "revision_id": "866877"
 }, 
 {
  "author": "pburba", 
  "date": "2007-09-27T14:03:02.797253Z", 
  "msg": [
   "Follow-up to r26493, issue #2893 fix.  Fix potential segfault.", 
   "* subversion/libsvn_client/merge.c", 
   "(remove_absent_children): Make notify_b->skipped_paths hash if it has", 
   "not been created yet."
  ], 
  "revision_id": "866876"
 }
]