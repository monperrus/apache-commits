[
 {
  "author": "cmpilato", 
  "date": "2003-08-22T05:04:15.800941Z", 
  "msg": [
   "Incremental check-in of the bulk (I hope) of the streamy status work.", 
   "There are bugs, and there are unimplemented things (externals, item", 
   "missing in HEAD, etc.), but the code seems to generally work.  For", 
   "now, it's still harvesting into a status hash, but doing so well", 
   "outside the library API.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_dup_status): New.", 
   "(svn_wc_get_status_editor): Add 'config', 'get_all', 'no_ignore',", 
   "'status_func', 'status_baton', and 'traversal_info' parameters.", 
   "Lose 'statushash'.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_status): Add 'status_func' and 'status_baton'.  Lose", 
   "'statushash'.", 
   "* subversion/libsvn_wc/status.c", 
   "(add_unversioned_item): Compress this function.", 
   "(add_unversioned_path): Rename 'default_ignores' to just 'ignores',", 
   "and compress this code a little bit, too.", 
   "(add_unversioned_items): Minor cleanups here.", 
   "(get_dir_status): Add 'skip_this_dir' parameter (and the code to", 
   "handle it).", 
   "(svn_wc_dup_status): Was 'dup_status'.", 
   "(tweak_statushash): Lose 'edit_baton'.  Add 'statushash' and", 
   "'adm_access'.", 
   "(struct edit_baton): Add 'config', 'get_all', 'no_ignore',", 
   "'status_func', 'status_baton', 'cancel_func', 'cancel_baton',", 
   "'statii', and 'traversal_info' members.  Rename 'path' to", 
   "'anchor', and add 'target'.  Lose 'pool', 'statushash'", 
   "and 'hashpool'.", 
   "(struct dir_baton): Add 'statii'.", 
   "(make_dir_baton): Init the new 'statii' member by creating status", 
   "items for the directory's entries.", 
   "(is_sendable_status, handle_statii): New.", 
   "(open_root, open_directory, add_directory): Update calls to", 
   "make_dir_baton().", 
   "(delete_entry): Update calls to tweak_statushash().", 
   "(close_directory): Update calls to tweak_statushash(), and call new", 
   "handle_statii().", 
   "(close_file): Update calls to tweak_statushash().", 
   "(close_edit): Handle any remaining, unhandled status items now.", 
   "(svn_wc_statuses): Removed.", 
   "(svn_wc_get_status_editor): Add 'config', 'get_all', 'no_ignore',", 
   "'status_func', 'status_baton', and 'traversal_info' parameters.", 
   "Lose 'statushash'.", 
   "* subversion/libsvn_client/status.c", 
   "(status_baton, hash_stash): New (temporary).", 
   "(add_update_info_to_status_hash): Buh-bye.  Merged into svn_client_status().", 
   "(svn_client_status): Add 'status_func' and 'status_baton'.  Lose", 
   "'statushash'.  Do the status work using svn_wc_status() and", 
   "svn_wc_get_status_editor() now.", 
   "* subversion/clients/cmdline/status-cmd.c", 
   "(hash_stash): New.", 
   "(svn_cl__status): Update call to svn_client_status().", 
   "* subversion/libsvn_client/delete.c", 
   "(struct status_baton, find_undeletables): New.", 
   "(svn_client__can_delete): Use svn_client_status() instead of", 
   "svn_wc_statuses().  And use the new find_undeletables() callback to", 
   "do the job.", 
   "* subversion/svnversion/main.c", 
   "(struct status_baton, analyze_status): New.", 
   "(main): Update call to svn_client_status() to use analyze_status()", 
   "callback for analyzing the status items."
  ], 
  "revision_id": "846895"
 }, 
 {
  "author": "sussman", 
  "date": "2003-08-21T18:51:20.631657Z", 
  "msg": [
   "Rewrite the repo_upgrade_HOWTO for the upcoming 0.28 release.", 
   "* repos_upgrade_HOWTO:  completely gut this file, rewrite it to", 
   "describe only the latest fs schema change."
  ], 
  "revision_id": "846894"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-08-21T18:17:55.760873Z", 
  "msg": [
   "* www/project_status.html: Add 0.31 date, as should have done before."
  ], 
  "revision_id": "846893"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-08-21T18:15:15.766543Z", 
  "msg": [
   "Fix issue #1473: repos->wc copy of a file with svn:keywords property", 
   "set caused a segmentation fault.  With Ben Collins-Sussman.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_add_repos_file_helper_t): Removed.", 
   "(svn_wc_add_repos_file): Change interface drastically.", 
   "(svn_wc_install_file): Depublicize; this is now the static function", 
   "install_file in libsvn_wc/update_editor.c, see below.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(install_file): New name for svn_wc_install_file.  Tweak docs.", 
   "Take new arguments is_add, copyfrom_url and copyfrom_rev.", 
   "(close_file): Call install_file now, with adjusted arguments.", 
   "(svn_wc_add_repos_file): Complete rewrite, just wrap install_file.", 
   "* subversion/libsvn_client/copy.c", 
   "(add_repos_file_baton_t, add_repos_file_helper): Removed.", 
   "(repos_to_wc_copy): Use the new svn_wc_add_repos_file interface.", 
   "Don't call svn_wc_add nor svn_client__add.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__add): Remove public declaration.", 
   "* subversion/libsvn_client/add.c", 
   "(add): New name for svn_client__add, now a static function.", 
   "(svn_client_add): Call add now, not svn_client__add.", 
   "* subversion/libsvn_client/diff.c", 
   "(fetch_file_baton, fetch_file_helper): Removed.", 
   "(merge_file_added): Use the new svn_wc_add_repos_file interface.", 
   "Don't call svn_wc_add.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge): Adjust comment.", 
   "* subversion/libsvn_wc/entries.c", 
   "(svn_wc__atts_to_entry): If setting copyfrom information, set the", 
   "appropriate modify_flags too.", 
   "(SVN_WC__ENTRY_VALUE_ADD, SVN_WC__ENTRY_VALUE_DELETE,", 
   "SVN_WC__ENTRY_VALUE_REPLACE): Moved from here...", 
   "* subversion/libsvn_wc/entries.h", 
   "(SVN_WC__ENTRY_VALUE_ADD, SVN_WC__ENTRY_VALUE_DELETE,", 
   "SVN_WC__ENTRY_VALUE_REPLACE): ...to here.", 
   "* subversion/tests/clients/cmdline/copy_tests.py", 
   "(repos_to_wc_copy_eol_keywords): New test, contributed by Shlomi", 
   "Fish, tweaked a bit by us."
  ], 
  "revision_id": "846892"
 }, 
 {
  "author": "clkao", 
  "date": "2003-08-21T17:26:22.581882Z", 
  "msg": [
   "Default pool support in Perl bindings.", 
   "* core.i: wrap the current_pool variable for perl", 
   "* svn_types.i: simplify the pool typemaps with svn_swig_pl_make_pool.", 
   "* swigutil_pl.c", 
   "* swigutil_pl.h", 
   "(svn_swig_pl_make_pool): New.", 
   "* perl/Core.pm", 
   "(SVN::Pool): new."
  ], 
  "revision_id": "846891"
 }
]