[
 {
  "author": "owulff", 
  "date": "2012-12-23T15:53:45.865886Z", 
  "msg": [
   "Fixed wrong dependency"
  ], 
  "revision_id": "1425473"
 }, 
 {
  "author": "stefan2", 
  "date": "2012-12-23T15:17:47.004349Z", 
  "msg": [
   "On the fsfs-format7 branch, follow-up to r1415451:", 
   "More splitting up fs_fs.c.", 
   "This is the second step in that process.  The 5 new c/h file pairs are", 
   "- cached_data.*  for cached (read) read access to FSFS data structures", 
   "and representation content.", 
   "- hotcopy.*      FSFS hotcopy functionality", 
   "- pack.*         FSFS shared packing code and access to packed rev files", 
   "- recovery.*     FSFS data recovery code", 
   "- transaction.*  all FSFS transaction and commit functionality", 
   "Also, a number of smaller modifications to other files were necessary", 
   "to facilitate the split.", 
   "* subversion/libsvn_fs_fs/cached_data.h", 
   "(): new header file", 
   "(svn_fs_fs__get_node_revision,", 
   "svn_fs_fs__rev_get_root,", 
   "svn_fs_fs__try_process_file_contents,", 
   "svn_fs_fs__get_file_delta_stream,", 
   "svn_fs_fs__rep_contents_dir,", 
   "svn_fs_fs__rep_contents_dir_entry,", 
   "svn_fs_fs__get_proplist): declare API functions moved from fs_fs.h", 
   "(svn_fs_fs__get_contents): ditto; address by rep instead of noderev", 
   "(svn_fs_fs__check_rep,", 
   "svn_fs_fs__get_changes): declare new API functions", 
   "* subversion/libsvn_fs_fs/cached_data.c", 
   "(): new source file", 
   "(rep_state_t,", 
   "rep_read_baton,", 
   "cache_access_wrapper_baton_t,", 
   "delta_read_baton): define data types taken from fs_fs.c", 
   "(open_and_seek_revision,", 
   "open_and_seek_transaction,", 
   "open_and_seek_representation,", 
   "err_dangling_id,", 
   "get_cached_node_revision_body,", 
   "set_cached_node_revision_body,", 
   "get_node_revision_body,", 
   "get_fs_id_at_offset,", 
   "create_rep_state_body,", 
   "create_rep_state,", 
   "get_window_key,", 
   "get_cached_window,", 
   "set_cached_window,", 
   "get_cached_combined_window,", 
   "set_cached_combined_window,", 
   "build_rep_list,", 
   "rep_read_get_baton,", 
   "read_delta_window,", 
   "read_plain_window,", 
   "get_combined_window,", 
   "fulltext_size_is_cachable,", 
   "rep_read_contents_close,", 
   "get_contents,", 
   "rep_read_contents,", 
   "cache_access_wrapper,", 
   "delta_read_next_window,", 
   "delta_read_md5_digest,", 
   "get_dir_contents,", 
   "parse_dir_entries,", 
   "locate_dir_cache): static functions taken from fs_fs.c", 
   "(svn_fs_fs__get_node_revision,", 
   "svn_fs_fs__rev_get_root,", 
   "svn_fs_fs__try_process_file_contents,", 
   "svn_fs_fs__get_file_delta_stream,", 
   "svn_fs_fs__rep_contents_dir,", 
   "svn_fs_fs__rep_contents_dir_entry,", 
   "svn_fs_fs__get_proplist): implement API functions taken from fs_fs.c", 
   "(svn_fs_fs__get_contents): ditto; address by rep instead of noderev", 
   "(svn_fs_fs__check_rep,", 
   "svn_fs_fs__get_changes): implemenent new API functions", 
   "* subversion/libsvn_fs_fs/hotcopy.h", 
   "(): new header file", 
   "(svn_fs_fs__hotcopy): declare API function taken from fs_fs.h", 
   "* subversion/libsvn_fs_fs/hotcopy.c", 
   "(): new source file", 
   "(hotcopy_body_baton): define data types taken from fs_fs.c", 
   "(hotcopy_io_dir_file_copy,", 
   "entry_name_to_utf8,", 
   "hotcopy_io_copy_dir_recursively,", 
   "hotcopy_copy_shard_file,", 
   "hotcopy_copy_packed_shard,", 
   "hotcopy_update_current,", 
   "hotcopy_remove_rev_files,", 
   "hotcopy_incremental_check_preconditions,", 
   "hotcopy_body,", 
   "hotcopy_setup_shared_fs_data,", 
   "hotcopy_create_empty_dest): static functions taken from fs_fs.c", 
   "(svn_fs_fs__hotcopy): implement API function taken from fs_fs.c", 
   "* subversion/libsvn_fs_fs/pack.h", 
   "(): new header file", 
   "(svn_fs_fs__pack): declare API function moved from fs_fs.h", 
   "(svn_fs_fs__get_packed_offset): declare new API function", 
   "* subversion/libsvn_fs_fs/pack.c", 
   "(): new source file", 
   "(pack_baton): define data types taken from fs_fs.c", 
   "(pack_rev_shard,", 
   "pack_shard,", 
   "pack_body): static functions taken from fs_fs.c", 
   "(svn_fs_fs__pack): implement API function taken from fs_fs.c", 
   "(svn_fs_fs__get_packed_offset): implement new API function", 
   "* subversion/libsvn_fs_fs/recovery.h", 
   "(): new header file", 
   "(svn_fs_fs__find_max_ids,", 
   "svn_fs_fs__recover): declare API functions moved from fs_fs.h", 
   "* subversion/libsvn_fs_fs/recovery.c", 
   "(): new source file", 
   "(recover_read_from_file_baton,", 
   "recover_baton): define data types taken from fs_fs.c", 
   "(recover_get_largest_revision,", 
   "read_handler_recover,", 
   "recover_find_max_ids,", 
   "recover_body): static functions taken from fs_fs.c", 
   "(svn_fs_fs__find_max_ids,", 
   "svn_fs_fs__recover): implement API functions taken from fs_fs.c", 
   "* subversion/libsvn_fs_fs/transaction.h", 
   "(): new header file", 
   "(svn_fs_fs__with_write_lock,", 
   "svn_fs_fs__put_node_revision,", 
   "svn_fs_fs__txn_changes_fetch,", 
   "svn_fs_fs__paths_changed,", 
   "svn_fs_fs__create_txn,", 
   "svn_fs_fs__change_txn_prop,", 
   "svn_fs_fs__change_txn_props,", 
   "svn_fs_fs__get_txn,", 
   "svn_fs_fs__reserve_copy_id,", 
   "svn_fs_fs__create_node,", 
   "svn_fs_fs__purge_txn,", 
   "svn_fs_fs__abort_txn,", 
   "svn_fs_fs__set_entry,", 
   "svn_fs_fs__add_change,", 
   "svn_fs_fs__set_contents,", 
   "svn_fs_fs__create_successor,", 
   "svn_fs_fs__set_proplist,", 
   "svn_fs_fs__commit,", 
   "svn_fs_fs__list_transactions,", 
   "svn_fs_fs__open_txn,", 
   "svn_fs_fs__txn_proplist,", 
   "svn_fs_fs__delete_node_revision,", 
   "svn_fs_fs__get_txn_ids,", 
   "svn_fs_fs__txn_prop,", 
   "svn_fs_fs__begin_txn): declare API functions moved from fs_fs.h", 
   "* subversion/libsvn_fs_fs/transaction.c", 
   "(): new source file", 
   "(txn_vtable): static variable taken from fs_fs.c", 
   "(unlock_proto_rev_baton,", 
   "get_writable_proto_rev_baton,", 
   "get_and_increment_txn_key_baton,", 
   "rep_write_baton,", 
   "write_hash_baton,", 
   "commit_baton): define data types taken from fs_fs.c", 
   "(get_shared_txn,", 
   "free_shared_txn,", 
   "with_txnlist_lock,", 
   "get_lock_on_filesystem,", 
   "reset_lock_flag,", 
   "with_some_lock_file,", 
   "with_txn_current_lock,", 
   "get_writable_proto_rev_body,", 
   "get_writable_proto_rev,", 
   "purge_shared_txn_body,", 
   "purge_shared_txn,", 
   "get_writable_proto_rev_body,", 
   "get_writable_proto_rev,", 
   "purge_shared_txn_body,", 
   "purge_shared_txn,", 
   "store_sha1_rep_mapping,", 
   "unparse_dir_entry,", 
   "unparse_dir_entries,", 
   "fold_change,", 
   "process_changes,", 
   "create_new_txn_noderev_from_rev,", 
   "get_and_increment_txn_key_body,", 
   "create_txn_dir,", 
   "create_txn_dir_pre_1_5,", 
   "get_txn_proplist,", 
   "write_next_ids,", 
   "read_next_ids,", 
   "get_new_txn_node_id,", 
   "rep_write_contents,", 
   "choose_delta_base,", 
   "rep_write_cleanup,", 
   "rep_write_get_baton,", 
   "get_shared_rep,", 
   "rep_write_contents_close,", 
   "set_representation,", 
   "get_next_revision_ids,", 
   "write_hash_handler,", 
   "write_hash_rep,", 
   "write_hash_delta_rep,", 
   "validate_root_noderev,", 
   "write_final_rev,", 
   "write_final_changed_path_info,", 
   "write_final_current,", 
   "verify_locks,", 
   "commit_body,", 
   "write_reps_to_cache,", 
   "commit_sqlite_txn_callback): static functions taken from fs_fs.c", 
   "(svn_fs_fs__with_write_lock,", 
   "svn_fs_fs__put_node_revision,", 
   "svn_fs_fs__txn_changes_fetch,", 
   "svn_fs_fs__paths_changed,", 
   "svn_fs_fs__create_txn,", 
   "svn_fs_fs__change_txn_prop,", 
   "svn_fs_fs__change_txn_props,", 
   "svn_fs_fs__get_txn,", 
   "svn_fs_fs__reserve_copy_id,", 
   "svn_fs_fs__create_node,", 
   "svn_fs_fs__purge_txn,", 
   "svn_fs_fs__abort_txn,", 
   "svn_fs_fs__set_entry,", 
   "svn_fs_fs__add_change,", 
   "svn_fs_fs__set_contents,", 
   "svn_fs_fs__create_successor,", 
   "svn_fs_fs__set_proplist,", 
   "svn_fs_fs__commit,", 
   "svn_fs_fs__list_transactions,", 
   "svn_fs_fs__open_txn,", 
   "svn_fs_fs__txn_proplist,", 
   "svn_fs_fs__delete_node_revision,", 
   "svn_fs_fs__get_txn_ids,", 
   "svn_fs_fs__txn_prop,", 
   "svn_fs_fs__begin_txn): implement API functions taken from fs_fs.c", 
   "* subversion/libsvn_fs_fs/util.h", 
   "(read_min_unpacked_rev): take an FS instead of a path", 
   "(write_revnum_file,", 
   "write_current,", 
   "get_file_offset): publish API", 
   "* subversion/libsvn_fs_fs/util.c", 
   "(read_min_unpacked_rev): adapt implementation", 
   "(write_revnum_file,", 
   "write_current,", 
   "get_file_offset): implementation moved here from fs_fs.c", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__get_node_revision,", 
   "svn_fs_fs__rev_get_root,", 
   "svn_fs_fs__get_contents,", 
   "svn_fs_fs__try_process_file_contents,", 
   "svn_fs_fs__get_file_delta_stream,", 
   "svn_fs_fs__rep_contents_dir,", 
   "svn_fs_fs__rep_contents_dir_entry,", 
   "svn_fs_fs__get_proplist): moved to cached_data.h", 
   "(svn_fs_fs__hotcopy): moved to hotcopy.h", 
   "(svn_fs_fs__pack): moved to pack.h", 
   "(svn_fs_fs__find_max_ids,", 
   "svn_fs_fs__recover): moved to recovery.h", 
   "(svn_fs_fs__with_write_lock,", 
   "svn_fs_fs__put_node_revision,", 
   "svn_fs_fs__txn_changes_fetch,", 
   "svn_fs_fs__paths_changed,", 
   "svn_fs_fs__create_txn,", 
   "svn_fs_fs__change_txn_prop,", 
   "svn_fs_fs__change_txn_props,", 
   "svn_fs_fs__get_txn,", 
   "svn_fs_fs__reserve_copy_id,", 
   "svn_fs_fs__create_node,", 
   "svn_fs_fs__purge_txn,", 
   "svn_fs_fs__abort_txn,", 
   "svn_fs_fs__set_entry,", 
   "svn_fs_fs__add_change,", 
   "svn_fs_fs__set_contents,", 
   "svn_fs_fs__create_successor,", 
   "svn_fs_fs__set_proplist,", 
   "svn_fs_fs__commit,", 
   "svn_fs_fs__list_transactions,", 
   "svn_fs_fs__open_txn,", 
   "svn_fs_fs__txn_proplist,", 
   "svn_fs_fs__delete_node_revision,", 
   "svn_fs_fs__get_txn_ids,", 
   "svn_fs_fs__txn_prop,", 
   "svn_fs_fs__begin_txn): moved to tranaction.h", 
   "(svn_fs_fs__open_pack_or_rev_file): declare new API", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(): shorten include list", 
   "(rep_state_t,", 
   "rep_read_baton,", 
   "cache_access_wrapper_baton_t,", 
   "delta_read_baton,", 
   "open_and_seek_revision,", 
   "open_and_seek_transaction,", 
   "open_and_seek_representation,", 
   "err_dangling_id,", 
   "get_cached_node_revision_body,", 
   "set_cached_node_revision_body,", 
   "get_node_revision_body,", 
   "get_fs_id_at_offset,", 
   "create_rep_state_body,", 
   "create_rep_state,", 
   "get_window_key,", 
   "get_cached_window,", 
   "set_cached_window,", 
   "get_cached_combined_window,", 
   "set_cached_combined_window,", 
   "build_rep_list,", 
   "rep_read_get_baton,", 
   "read_delta_window,", 
   "read_plain_window,", 
   "get_combined_window,", 
   "fulltext_size_is_cachable,", 
   "rep_read_contents_close,", 
   "get_contents,", 
   "rep_read_contents,", 
   "cache_access_wrapper,", 
   "delta_read_next_window,", 
   "delta_read_md5_digest,", 
   "get_dir_contents,", 
   "parse_dir_entries,", 
   "locate_dir_cache,", 
   "svn_fs_fs__get_node_revision,", 
   "svn_fs_fs__rev_get_root,", 
   "svn_fs_fs__get_contents,", 
   "svn_fs_fs__try_process_file_contents,", 
   "svn_fs_fs__get_file_delta_stream,", 
   "svn_fs_fs__rep_contents_dir,", 
   "svn_fs_fs__rep_contents_dir_entry,", 
   "svn_fs_fs__get_proplist): moved to cached_data.c", 
   "(hotcopy_body_baton,", 
   "hotcopy_io_dir_file_copy,", 
   "entry_name_to_utf8,", 
   "hotcopy_io_copy_dir_recursively,", 
   "hotcopy_copy_shard_file,", 
   "hotcopy_copy_packed_shard,", 
   "hotcopy_update_current,", 
   "hotcopy_remove_rev_files,", 
   "hotcopy_incremental_check_preconditions,", 
   "hotcopy_body,", 
   "hotcopy_setup_shared_fs_data,", 
   "hotcopy_create_empty_dest,", 
   "svn_fs_fs__hotcopy): moved to hotcopy.c", 
   "(pack_baton,", 
   "pack_rev_shard,", 
   "pack_shard,", 
   "pack_body,", 
   "svn_fs_fs__pack): moved to pack.c", 
   "(recover_read_from_file_baton,", 
   "recover_baton,", 
   "recover_get_largest_revision,", 
   "read_handler_recover,", 
   "recover_find_max_ids,", 
   "recover_body,", 
   "svn_fs_fs__find_max_ids,", 
   "svn_fs_fs__recover): moved to recovery.c", 
   "(txn_vtable,", 
   "unlock_proto_rev_baton,", 
   "get_writable_proto_rev_baton,", 
   "get_and_increment_txn_key_baton,", 
   "rep_write_baton,", 
   "write_hash_baton,", 
   "commit_baton,", 
   "get_shared_txn,", 
   "free_shared_txn,", 
   "with_txnlist_lock,", 
   "get_lock_on_filesystem,", 
   "reset_lock_flag,", 
   "with_some_lock_file,", 
   "with_txn_current_lock,", 
   "get_writable_proto_rev_body,", 
   "get_writable_proto_rev,", 
   "purge_shared_txn_body,", 
   "purge_shared_txn,", 
   "get_writable_proto_rev_body,", 
   "get_writable_proto_rev,", 
   "purge_shared_txn_body,", 
   "purge_shared_txn,", 
   "store_sha1_rep_mapping,", 
   "unparse_dir_entry,", 
   "unparse_dir_entries,", 
   "fold_change,", 
   "process_changes,", 
   "create_new_txn_noderev_from_rev,", 
   "get_and_increment_txn_key_body,", 
   "create_txn_dir,", 
   "create_txn_dir_pre_1_5,", 
   "get_txn_proplist,", 
   "write_next_ids,", 
   "read_next_ids,", 
   "get_new_txn_node_id,", 
   "rep_write_contents,", 
   "choose_delta_base,", 
   "rep_write_cleanup,", 
   "rep_write_get_baton,", 
   "get_shared_rep,", 
   "rep_write_contents_close,", 
   "set_representation,", 
   "get_next_revision_ids,", 
   "write_hash_handler,", 
   "write_hash_rep,", 
   "write_hash_delta_rep,", 
   "validate_root_noderev,", 
   "write_final_rev,", 
   "write_final_changed_path_info,", 
   "write_final_current,", 
   "verify_locks,", 
   "commit_body,", 
   "write_reps_to_cache,", 
   "commit_sqlite_txn_callback,", 
   "svn_fs_fs__with_write_lock,", 
   "svn_fs_fs__put_node_revision,", 
   "svn_fs_fs__txn_changes_fetch,", 
   "svn_fs_fs__paths_changed,", 
   "svn_fs_fs__create_txn,", 
   "svn_fs_fs__change_txn_prop,", 
   "svn_fs_fs__change_txn_props,", 
   "svn_fs_fs__get_txn,", 
   "svn_fs_fs__reserve_copy_id,", 
   "svn_fs_fs__create_node,", 
   "svn_fs_fs__purge_txn,", 
   "svn_fs_fs__abort_txn,", 
   "svn_fs_fs__set_entry,", 
   "svn_fs_fs__add_change,", 
   "svn_fs_fs__set_contents,", 
   "svn_fs_fs__create_successor,", 
   "svn_fs_fs__set_proplist,", 
   "svn_fs_fs__commit,", 
   "svn_fs_fs__list_transactions,", 
   "svn_fs_fs__open_txn,", 
   "svn_fs_fs__txn_proplist,", 
   "svn_fs_fs__delete_node_revision,", 
   "svn_fs_fs__get_txn_ids,", 
   "svn_fs_fs__txn_prop,", 
   "svn_fs_fs__begin_txn): moved to transaction.c", 
   "(write_revnum_file,", 
   "write_current,", 
   "get_file_offset): moved to low_level.c", 
   "(write_changed_path_info): moved to low_level.c", 
   "(upgrade_body,", 
   "svn_fs_fs__create): use svn_fs_fs__write_format API intead of write_format", 
   "(svn_fs_fs__open_pack_or_rev_file): turn into API;", 
   "renamed from open_pack_or_rev_file", 
   "(verify_walker): use new svn_fs_fs__check_rep API", 
   "* subversion/libsvn_fs_fs/dag.c", 
   "(svn_fs_fs__dag_get_contents): adapt to API change", 
   "* subversion/libsvn_fs_fs/low_level.h", 
   "(write_changed_path_info): declare / publish API", 
   "* subversion/libsvn_fs_fs/low_level.c", 
   "(): add #includes to new headers", 
   "(write_changed_path_info): move implementation from fs_fs.c here", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(): add #includes to new headers", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(): add #includes to new headers", 
   "* subversion/libsvn_fs_fs/revprops.c", 
   "(): add #includes to new headers", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(): add #includes to new headers", 
   "* tools/server-side/svn-rep-sharing-stats.c", 
   "(): add #includes to new headers"
  ], 
  "revision_id": "1425472"
 }, 
 {
  "author": "simonetripodi", 
  "date": "2012-12-23T14:58:19.463786Z", 
  "msg": [
   "[ONAMI-29] Fix generics bounds for Matcher - patch submitted by Mikhail Mazursky"
  ], 
  "revision_id": "1425471"
 }, 
 {
  "author": "simonetripodi", 
  "date": "2012-12-23T14:46:24.674199Z", 
  "msg": [
   "updated commons-parent to latest released version"
  ], 
  "revision_id": "1425470"
 }, 
 {
  "author": "simonetripodi", 
  "date": "2012-12-23T14:43:48.611046Z", 
  "msg": [
   "since no objections have been shown on dev@ ML, the annotations-processor package has been dropped."
  ], 
  "revision_id": "1425469"
 }
]