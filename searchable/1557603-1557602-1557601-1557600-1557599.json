[
 {
  "author": "rgoers", 
  "date": "2014-01-12T19:44:54.551147Z", 
  "msg": [
   "Configuration was being processed twice at startup."
  ], 
  "revision_id": "1557603"
 }, 
 {
  "author": "markt", 
  "date": "2014-01-12T19:16:20.177943Z", 
  "msg": [
   "Reduce FindBugs warnings", 
   "Take defensive copies of client provided arrays"
  ], 
  "revision_id": "1557602"
 }, 
 {
  "author": "rhuijben", 
  "date": "2014-01-12T19:16:01.641156Z", 
  "msg": [
   "* subversion/libsvn_ra_serf/update.c", 
   "(body_create_baton_t): Make gcc happy by removing a duplicated typedef."
  ], 
  "revision_id": "1557601"
 }, 
 {
  "author": "markt", 
  "date": "2014-01-12T19:08:05.820298Z", 
  "msg": [
   "Remove some unused methods"
  ], 
  "revision_id": "1557600"
 }, 
 {
  "author": "rhuijben", 
  "date": "2014-01-12T19:02:47.510536Z", 
  "msg": [
   "Following up on r1555716, r1556343 and the reversion of these in r1556933,", 
   "implement yet another create body to memory spool implementation. This time", 
   "using serf buckets to allow releasing all ram when we have to switch to a", 
   "file.", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(body_create_baton_t): New typedef.", 
   "(report_context_t): Update variables.", 
   "(MAX_BODY_IN_RAM): New define.", 
   "(body_allocate_all,", 
   "serf_free_no_error", 
   "body_write_fn,", 
   "body_done_fn): New functions.", 
   "(set_path,", 
   "delete_path,", 
   "link_path): Write to stream. Once we can assume the serf bucket length", 
   "support we can probably switch to writing buckets directly.", 
   "(create_update_report_body): Implement passing body buffer.", 
   "(finish_report): Update for stream. Remove mmap specifics.", 
   "(make_update_reporter): Initialize body collector. Write to stream."
  ], 
  "revision_id": "1557599"
 }
]