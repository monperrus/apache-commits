[
 {
  "author": "nspiegelberg", 
  "date": "2011-10-11T19:13:12.212380Z", 
  "msg": [
   "alter_status shell prints sensible message at completion", 
   "Summary:", 
   "The alter_status command used to print 0/0 once an alter operation had", 
   "completed and its progress was no longer available. Now it instad", 
   "indicates that all regions were updated.", 
   "Test Plan: Tested with alter shell command on a dev cluster.", 
   "Reviewers: kannan", 
   "Reviewed By: kannan", 
   "CC: hbase-eng@lists, kannan", 
   "Differential Revision: 336201", 
   "Task ID: 693561"
  ], 
  "revision_id": "1182035"
 }, 
 {
  "author": "nspiegelberg", 
  "date": "2011-10-11T19:13:09.551209Z", 
  "msg": [
   "Per-(table, columnFamily) metrics with configurable table name inclusion", 
   "Summary:", 
   "This is based on Liyin's D326097 diff with some refactoring done to push the", 
   "table name and column family configuration to a base class, SchemaConfigured.", 
   "This was convenient as many of existing classes having these properties (HFile", 
   "readers/writers, HFile blocks, etc.) did not have a base class.", 
   "Whether to collect per-(table, columnFamily) or per-columnFamily only metrics", 
   "can be configured with the hbase.metrics.showTableName configuration key. We", 
   "don't expect this configuration to change at runtime, so we cache the setting", 
   "statically and log an error when an attempt is made to flip it once already set.", 
   "This way we don't have to pass configuration to a lot more places, e.g.", 
   "everywhere an HFile reader is instantiated.", 
   "Test Plan: Unit tests, dev cluster, dark launch. Look at what metrics are being", 
   "collected. A new unit test will be written to test both per-table and per-CF", 
   "settings.", 
   "Reviewers: liyintang, kannan, kranganathan", 
   "Reviewed By: liyintang", 
   "CC: hbase-eng@lists, puma-eng@lists, liyintang", 
   "Differential Revision: 331777", 
   "Revert Plan: OK"
  ], 
  "revision_id": "1182034"
 }, 
 {
  "author": "nspiegelberg", 
  "date": "2011-10-11T19:13:03.152626Z", 
  "msg": [
   "Added ability to move a region to a specific region server", 
   "Summary:", 
   "Added the moveRegion(regionName, regionServer) to HBaseAdmin and the", 
   "MOVE_REGION table modification type to HMaster. The HMaster handles", 
   "region moves by assigning the specified region server as the preferred", 
   "host for the specified region, then closing that region. The preferred", 
   "region server will then pick up that region at its next heartbeat. This", 
   "functionality is also exposed through the HBase shell's move_region", 
   "command.", 
   "Test Plan: Tested using HBase shell on a dev cluster.", 
   "Reviewers: kranganathan", 
   "Reviewed By: kranganathan", 
   "CC: hbase-eng@lists, kranganathan, cgist", 
   "Differential Revision: 334698", 
   "Task ID: 735411"
  ], 
  "revision_id": "1182033"
 }, 
 {
  "author": "nspiegelberg", 
  "date": "2011-10-11T19:13:00.015080Z", 
  "msg": [
   "HBASE-4469: Avoid top row seek by looking up bloomfilter", 
   "Summary:", 
   "The problem is that when seeking for the row/col in the hfile, we will go to", 
   "top of the row in order to check for row delete marker (delete family).", 
   "However, if the bloomfilter is enabled for the column family, then if a delete", 
   "family operation is done on a row, the row is already being added to", 
   "bloomfilter.", 
   "We can take advantage of this factor to avoid seeking to the top of row.", 
   "Also, Update the TestBlocksRead unit tests. since most of block read count has", 
   "dropped to a lower number.", 
   "Evaluation:", 
   "In TestSeekingOptimization, it saved 31.6% seek operation perviously.", 
   "Now it saves about 41.82% seek operation.", 
   "10% more seek operation.", 
   "======================", 
   "Before this diff:", 
   "For bloom=ROWCOL, compr=GZ total seeks without optimization: 2506, with", 
   "optimization: 1714 (68.40%), savings: 31.60%", 
   "=====================", 
   "Apply this diff:", 
   "For bloom=ROWCOL, compr=GZ total seeks without optimization: 2506, with", 
   "optimization: 1458 (58.18%), savings: 41.82%", 
   "=====================", 
   "Thanks Mikhail and Kannan's help and discussion.", 
   "Test Plan:", 
   "running all the unit tests right now.", 
   "will test in dev cluster and dark launch cluster.", 
   "Reviewers: kannan, mbautin", 
   "Reviewed By: kannan", 
   "CC: hbase@lists, hbase-eng@lists, kranganathan, liyintang, jgray, kannan", 
   "Differential Revision: 334567", 
   "Task ID: 474656"
  ], 
  "revision_id": "1182032"
 }, 
 {
  "author": "nspiegelberg", 
  "date": "2011-10-11T19:12:56.694133Z", 
  "msg": [
   "Compactions must fail if column tracker gets columns out of order", 
   "Summary:", 
   "We found this in ScanWildcardColumnTracker:", 
   "// new col < oldcol", 
   "// if (cmp < 0) {", 
   "// WARNING: This means that very likely an edit for some other family", 
   "// was incorrectly stored into the store for this one. Continue, but", 
   "// complain.", 
   "LOG.error(\"ScanWildcardColumnTracker.checkColumn ran \" +", 
   "\"into a column actually smaller than the previous column: \" +", 
   "This went under the radar in our dark launch cluster when a column family name", 
   "was misspelled first, but then was \"renamed\" by renaming directories in the", 
   "HBase storage directory tree. We ended up with inconsistent data, but", 
   "compactions still succeeded most of the time, likely discarding part of input", 
   "data.", 
   "Test Plan: Run unit tests. 5-node cluster. Dark launch.", 
   "Reviewers: kannan, liyintang", 
   "Reviewed By: kannan", 
   "CC: hbase-eng@lists, kannan, nspiegelberg", 
   "Differential Revision: 334167", 
   "Revert Plan: OK"
  ], 
  "revision_id": "1182031"
 }
]