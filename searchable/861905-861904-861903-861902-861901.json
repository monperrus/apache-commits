[
 {
  "author": "ehu", 
  "date": "2006-10-08T12:26:52.454992Z", 
  "msg": [
   "Create backport branch for r21471."
  ], 
  "revision_id": "861905"
 }, 
 {
  "author": "kfogel", 
  "date": "2006-10-08T04:47:35.515385Z", 
  "msg": [
   "Merged revisions 21817-21829 via svnmerge from", 
   "http://svn.collab.net/repos/svn/trunk to the incomplete-directories branch."
  ], 
  "revision_id": "861904"
 }, 
 {
  "author": "kfogel", 
  "date": "2006-10-08T04:45:27.566809Z", 
  "msg": [
   "On the incomplete-directories branch:", 
   "Handle default depth lower down, so that individual subcommands and", 
   "client APIs have the control they need, and give checkout/update a", 
   "depth framework.", 
   "After this change, 'checkout --depth=0' creates a working copy at", 
   "depth zero containing only the file iota, and 'checkout --depth=1'", 
   "creates a working copy at depth infinity containing everything.  These", 
   "aren't exactly the desired results, but at least they're moving in the", 
   "right direction.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_checkout3): Document handling of svn_depth_unknown.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__update_internal): Document depth behavior.", 
   "(svn_client__update_internal): Adjust prototype to take depth", 
   "parameter instead of recurse, as should have done in either", 
   "r21788 or r21760.  Definition and callers are already updated.", 
   "* subversion/libsvn_client/checkout.c", 
   "(svn_client__checkout_internal): Handle depth.  Also, mark comment", 
   "about handling externals according to depth for further research.", 
   "* subversion/libsvn_client/update.c", 
   "(svn_client__update_internal): If no depth provided, determine depth", 
   "from working copy.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_get_update_editor3): Document depth behavior.", 
   "(svn_wc_ensure_adm3): New prototype, takes depth.", 
   "(svn_wc_ensure_adm2): Deprecate.", 
   "(svn_wc_ensure_adm): Redocument against svn_wc_ensure_adm3.", 
   "* subversion/libsvn_wc/adm_files.c", 
   "(init_adm): Take depth argument, pass it along to svn_wc__entries_init.", 
   "(svn_wc_ensure_adm3): New function, takes depth.", 
   "(svn_wc_ensure_adm2): Reimplement via wrapper to svn_wc_ensure_adm3.", 
   "(svn_wc_ensure_adm2): Reimplement via wrapper to svn_wc_ensure_adm3.", 
   "* subversion/libsvn_wc/entries.h, subversion/libsvn_wc/entries.c", 
   "(svn_wc__entries_init): Take depth argument, check it, then use it", 
   "to create the new entry.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add2): Call svn_wc_ensure_adm3 now.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(make_editor): Implement conditional depth discovery.", 
   "(prep_directory): Take depth, use it to prep directory.", 
   "(add_directory): Calculate new subdir depth based on eb->depth, pass", 
   "result to prep_directory.", 
   "Undo some obstructions to present and future depth handling:", 
   "* subversion/svn/main.c", 
   "(main): Take out the default depth handling added here in r21827, as", 
   "it clobbered information that some subcommands need.", 
   "* subversion/svn/status-cmd.c", 
   "(svn_cl__status): Leave a comment about requiring depthness.", 
   "* subversion/libsvn_client/status.c", 
   "(svn_client_status2): Partially convert to depthness, leave comment", 
   "about how to go the rest of the way.", 
   "Subcommands that aren't sensitive to the working copy's existing depth", 
   "don't need to know whether opt_state->depth was explicitly set or not,", 
   "and can just default to svn_depth_infinity.  Make them do that, in", 
   "some cases adding comments about future enhancements:", 
   "* subversion/svn/add-cmd.c", 
   "(svn_cl__add): Default to svn_depth_infinity.", 
   "* subversion/svn/commit-cmd.c", 
   "(svn_cl__commit): Same.", 
   "* subversion/svn/export-cmd.c", 
   "(svn_cl__export): Same.", 
   "* subversion/svn/import-cmd.c", 
   "(svn_cl__import): Same.", 
   "* subversion/svn/info-cmd.c", 
   "(svn_cl__info): Same.", 
   "* subversion/svn/list-cmd.c", 
   "(svn_cl__list): Same.", 
   "* subversion/svn/propdel-cmd.c", 
   "(svn_cl__propdel): Same.", 
   "* subversion/svn/propget-cmd.c", 
   "(svn_cl__propget): Same.", 
   "* subversion/svn/proplist-cmd.c", 
   "(svn_cl__proplist): Same.", 
   "* subversion/svn/propset-cmd.c", 
   "(svn_cl__propset): Same.", 
   "* subversion/svn/resolved-cmd.c", 
   "(svn_cl__resolved): Same.", 
   "* subversion/svn/switch-cmd.c", 
   "(svn_cl__switch): Same.", 
   "* subversion/svn/revert-cmd.c", 
   "(svn_cl__revert): Same, but reversed from the usual default."
  ], 
  "revision_id": "861903"
 }, 
 {
  "author": "kfogel", 
  "date": "2006-10-07T20:47:35.201319Z", 
  "msg": [
   "On the incomplete-directories branch:", 
   "Match recurse->depth conversion to spec.", 
   "* subversion/include/svn_types.h", 
   "(SVN_DEPTH_FROM_RECURSE): Default to svn_depth_one, not", 
   "svn_depth_zero, to match notes/incomplete-directories.txt."
  ], 
  "revision_id": "861902"
 }, 
 {
  "author": "kfogel", 
  "date": "2006-10-07T20:37:06.010265Z", 
  "msg": [
   "On the incomplete-directories branch:", 
   "Fix default depth handling in the command line client.", 
   "* subversion/svn/cl.h", 
   "(svn_cl__opt_state_t): Clarify when depth is set to what.", 
   "* subversion/svn/main.c", 
   "(main): Set depth to the correct default based on the subcommand."
  ], 
  "revision_id": "861901"
 }
]