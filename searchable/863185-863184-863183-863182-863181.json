[
 {
  "author": "nikclayton", 
  "date": "2007-01-19T19:33:35.842758Z", 
  "msg": [
   "Introduce named/optional parameter support to the Perl bindings, starting", 
   "with SVN::Client::ls().", 
   "[in subversion/bindings/swig]", 
   "* perl/native/Client.pm: Provide a second mechanism for instantiating", 
   "methods, used for methods that take named/optional parameters.  Use", 
   "this mechanism to migrate ls() to the new functionality, where only", 
   "the 'path_or_url' argument is mandatory.  Update the documentation", 
   "to reflect this.  Use Params::Validate for argument parsing and", 
   "validation.", 
   "* perl/native/Makefile.PL.in: List Params::Validate as a pre-requisite.", 
   "If it's not present that triggers a fatal error at \"perl Makefile.PL\"", 
   "time.", 
   "* perl/native/t/3client.t: Add extra tests for ls() that verify that", 
   "using named parameters generates the same results as using positional", 
   "parameters.", 
   "* INSTALL: Note that the Perl bindings now have an external dependency on", 
   "Params::Validate"
  ], 
  "revision_id": "863185"
 }, 
 {
  "author": "nikclayton", 
  "date": "2007-01-19T19:33:16.787195Z", 
  "msg": [
   "Explicitly clear an error to avoid a coredump if built with", 
   "--enable-maintainer-mode.", 
   "* subversion/bindings/swig/perl/native/t/3client.t:  After testing to see if", 
   "an error was generated (when testing error generation), explicitly clear", 
   "the generated error.  This fixes an abort introduced in r22934 if you", 
   "run this test with --enable-maintainer-mode.  The test ran to completion", 
   "(all tests pass), but the Perl interpreter aborts at END time.  This was", 
   "not considered a test failure.", 
   "Add an additional test in the END block.  This should always succeed,", 
   "and serves to prove that the END block ran."
  ], 
  "revision_id": "863184"
 }, 
 {
  "author": "dlr", 
  "date": "2007-01-19T19:05:21.301825Z", 
  "msg": [
   "Improve locking error message.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_lock): Change the word \"has\" to \"contains\" in an error", 
   "message."
  ], 
  "revision_id": "863183"
 }, 
 {
  "author": "dlr", 
  "date": "2007-01-19T19:04:21.781734Z", 
  "msg": [
   "On the issue-2699-dev branch: Improve locking error message.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_lock_many): Change the word \"has\" to \"contains\" in an error", 
   "message."
  ], 
  "revision_id": "863182"
 }, 
 {
  "author": "cmpilato", 
  "date": "2007-01-19T17:08:17.298651Z", 
  "msg": [
   "Branch: issue-2699-dev", 
   "Adds a new svn_fs_lock_many() function, (currently implemented for the", 
   "BDB backend only), as well as a basic test for its functionality.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_lock_many): New.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(fs_vtable_t): Add 'lock_many' vtable member.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_lock_many): New.", 
   "* subversion/libsvn_fs_base/lock.h", 
   "(svn_fs_base__lock_many): New.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(fs_vtable): Add lock_many implementation.", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(lock_single_path): New, cored out from txn_body_lock().", 
   "(txn_body_lock): Now use lock_single_path() helper.", 
   "(lock_many_args, txn_body_lock_many, svn_fs_base__lock_many): New.", 
   "* subversion/libsvn_fs_fs/lock.h", 
   "(svn_fs_fs__lock_many): New.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(fs_vtable): Add lock_many implementation.", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(svn_fs_fs__lock_many): New -- NOT IMPLEMENTED!!", 
   "* subversion/tests/libsvn_fs/locks-test.c", 
   "(lock_many): New.", 
   "(test_funcs): Add reference to new lock_many() test."
  ], 
  "revision_id": "863181"
 }
]