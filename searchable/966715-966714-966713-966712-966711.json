[
 {
  "author": "rhuijben", 
  "date": "2010-07-22T15:59:03.602591Z", 
  "msg": [
   "* subversion/libsvn_client/deprecated.c", 
   "(svn_client_copy5): Following up on r966669 (nice number!), pass the right", 
   "context to svn_client_copy6."
  ], 
  "revision_id": "966715"
 }, 
 {
  "author": "edwardsmj", 
  "date": "2010-07-22T15:58:02.516419Z", 
  "msg": [
   "Fixing POM and MANIFEST to account for dependency on StAXHelper class from common-xml module"
  ], 
  "revision_id": "966714"
 }, 
 {
  "author": "rhuijben", 
  "date": "2010-07-22T15:50:53.416154Z", 
  "msg": [
   "Make the lock release code a bit less smart on finding which target a caller", 
   "might want to unlock to avoid having to ignore errors on releasing locks on", 
   "just deleted directories, or on the wrong target if it just turned from a file", 
   "into a directory, etc. etc.", 
   "The lock acquire code can now (optionally) always return the path it tried", 
   "to acquire a lock on and the unlock code must now alway pass a valid locked", 
   "target. (Except for a few specific cases for handling multi-db as single-db)", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(svn_wc__db_wclock_release): Just allow releasing locks on 'hidden'", 
   "directories, in multi db mode. Return an error if neither the node", 
   "itself exist, nor its parent.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(prep_directory): Update caller.", 
   "* subversion/libsvn_wc/lock.c", 
   "(svn_wc__acquire_write_lock): Split lock_abspath retrieval from anchor", 
   "calculation, to allow callers always access to the lock_root_abspath.", 
   "(svn_wc__release_write_lock): If the node is not locked, just unlock it", 
   "in wc_db, to allow ignoring errors on not-wcroot directories.", 
   "Ignore not-locked on subdirs, but not on the root of the operation.", 
   "(svn_wc__call_with_write_lock): Allow locking an anchor of a node. Obtain", 
   "the lock_root_abspath and release the lock on this node.", 
   "* subversion/libsvn_client/update.c", 
   "(update_internal): Don't release locks not obtained here!", 
   "(svn_client__update_internal): Store the lock-path and release the lock", 
   "on that.", 
   "* subversion/libsvn_client/switch.c", 
   "(svn_client__switch_internal): Update caller.", 
   "* subversion/libsvn_client/revert.c", 
   "(svn_client_revert2): Update caller. Lock the anchor of the operation.", 
   "* subversion/libsvn_client/prop_commands.c", 
   "(svn_client_propset3): Update caller.", 
   "* subversion/libsvn_client/patch.c", 
   "(svn_client_patch): Update caller.", 
   "* subversion/libsvn_client/merge.c", 
   "(svn_client_merge3,", 
   "svn_client_merge_reintegrate,", 
   "svn_client_merge_peg3): Update callers.", 
   "* subversion/libsvn_client/externals.c", 
   "(switch_dir_external): On relegating only obtain a lock", 
   "and don't release it.", 
   "(switch_file_external): Update caller.", 
   "(handle_external_item_change): Update caller.", 
   "* subversion/libsvn_client/delete.c", 
   "(svn_client_delete4): Update caller.", 
   "* subversion/libsvn_client/copy.c", 
   "(do_wc_to_wc_copies): Update caller.", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_commit5): Update caller.", 
   "* subversion/libsvn_client/add.c", 
   "(add_parent_dirs): Update caller.", 
   "* subversion/include/private/svn_wc_private.h", 
   "(svn_wc__acquire_write_lock): Update arguments and documentation.", 
   "(svn_wc__release_write_lock): Add new requirements to documentation.", 
   "(svn_wc__call_with_write_lock): Add lock_anchor argument."
  ], 
  "revision_id": "966713"
 }, 
 {
  "author": "dejanb", 
  "date": "2010-07-22T15:46:18.967612Z", 
  "msg": [
   "https://issues.apache.org/activemq/browse/AMQ-2843 - first stab at supporting priority for durable subs"
  ], 
  "revision_id": "966712"
 }, 
 {
  "author": "mbenson", 
  "date": "2010-07-22T15:45:49.750054Z", 
  "msg": [
   "compiler/generics warnings & a typo"
  ], 
  "revision_id": "966711"
 }
]