[
 {
  "author": "akarasulu", 
  "date": "2011-01-29T16:23:11.751255Z", 
  "msg": [
   "more test fixes"
  ], 
  "revision_id": "1065060"
 }, 
 {
  "author": "mikemccand", 
  "date": "2011-01-29T16:22:59.459067Z", 
  "msg": [
   "LUCENE-2898: fix CMS throttling to be independent of number of incoming producer threads; some defensive concurrency fixes for SegmentInfo"
  ], 
  "revision_id": "1065059"
 }, 
 {
  "author": "akarasulu", 
  "date": "2011-01-29T16:16:12.430629Z", 
  "msg": [
   "more test fixes"
  ], 
  "revision_id": "1065058"
 }, 
 {
  "author": "elecharny", 
  "date": "2011-01-29T16:14:29.206587Z", 
  "msg": [
   "Fixes for IntermediateResponse tests"
  ], 
  "revision_id": "1065057"
 }, 
 {
  "author": "jleroux", 
  "date": "2011-01-29T16:11:48.126327Z", 
  "msg": [
   "A patch from Leon \"Infinite lookup ajax calls if key enter on the page with layer lookup forms\" (https://issues.apache.org/jira/browse/OFBIZ-4156) - OFBIZ-4156", 
   "If the rendered page has one lookup field which is configured as layer mode, at first open the lookup dialog and click the empty space of the page to hide it, then, key the \"enter\", then in the console log you will find there's lookup request logged. Try to key \"enter\" serveral times, you will get more lookup requests in the backend. In particular case, even if you key one \"enter\" in, it will send hundrends lookup calls. See attached \"infinite-lookups.log\" for the log details.", 
   "Cause:", 
   "In modifySubmitButton of fieldlookup.js, it bind the keypress event to whole \"document\" to call \"lookupFormAjaxRequest\" when \"enter\" keyin. And in \"lookupFormAjaxRequest\" function, it call \"modifySubmitButton\" again after data load.", 
   "Resolution:", 
   "Move the keypress event bind operation to dialog open process and unbind it when dialog is closed.", 
   "Besides to fix what have mentioned, also make some trivial improvements to modifySubmitButton method:", 
   "1. in jquery, \"contains\" is not a valid method of String prototype, use \"indexOf(blah) != -1\" instead", 
   "2. bypass the \"javascript:...\" link in lookup result table. Although it's not a good solution, it makes more sence than \"to skip the first Entry of the row\".", 
   "JLR: I kept Leon's last point solution as anyway it's not a big deal to reassign for few rows (ie it's by page). This avoid issue if the 1st cell in the row is not the id/link", 
   "I just ketp javascript:set_ in the indexOf( instead of simply javascript:"
  ], 
  "revision_id": "1065056"
 }
]