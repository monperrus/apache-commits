[
 {
  "author": "kenney", 
  "date": "2005-09-07T14:57:24.387211Z", 
  "msg": [
   "Changed ReactorManager's api for blackList and other methods that require", 
   "an 'id' to use MavenProject instead.", 
   "In some parts of the code a DAG is constructed using a version-less key,", 
   "and in the api what the id should be is unspecified.", 
   "This could result in NPE's (it does!) because the code in plexus-utils", 
   "assumes a known id (vertex in the DAG) is supplied.", 
   "So, moved the project.getId() calls outside of ReactorManager into the", 
   "ReactorManager, so that there's just one place where the decision is made on", 
   "how to generate an id (DAG vertex label) from a project. This centralizes", 
   "that knowledge for increased maintainability and reduced chances on NPE's."
  ], 
  "revision_id": "279334"
 }, 
 {
  "author": "geirm", 
  "date": "2005-09-07T14:51:56.494756Z", 
  "msg": [
   "added link to IRC bot"
  ], 
  "revision_id": "279333"
 }, 
 {
  "author": "geirm", 
  "date": "2005-09-07T14:47:18.120413Z", 
  "msg": [
   "added devtools subproject (hence all pages change because of left nav...)", 
   "and updated front page to add note about LDAP"
  ], 
  "revision_id": "279332"
 }, 
 {
  "author": "geirm", 
  "date": "2005-09-07T14:46:40.204717Z", 
  "msg": [
   "added devtools subproject, and added note about LDAP on the front page"
  ], 
  "revision_id": "279331"
 }, 
 {
  "author": "bgoodin", 
  "date": "2005-09-07T14:37:49.556534Z", 
  "msg": [
   "IBATIS-131", 
   "I Added additional code in BaseProbe, GenericProbe. ConditionalTagHandler, IterateTagHandler to handle the conditions expressed in bug report 131.", 
   "Unit tests sql was added to DynamicAccount.xml. Test code was added to IterateTest and DynamicPrependTest  to test various index property permutations.", 
   "I had to add type checking of Arrays and Lists. I also adde index value replacement parsing for attributes.", 
   "All unit tests have passed. However, i would strongly encourage users to test existing code and make sure there are no failures. Evertyhing should be fine. But, i'd rather be safe than sorry."
  ], 
  "revision_id": "279330"
 }
]