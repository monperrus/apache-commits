[
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:53:03.570978Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017620"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:52:57.529126Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017619"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:52:39.000979Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017618"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-07T18:06:27.187755Z", 
  "msg": [
   "Renamed @ParseableEntry to @Parseable, and optionally delegate to newly created Parser interface.  Analogously, added a new @Encodeable annotation which can delegate to an EncoderDecoder interface.  Also removed @FacetFactoryClass and @FacetFactoryName, gone with simpler Class and String arrays (no need after all to wrap these up); defined new @Aggregated annotation and @Value annotation, but not yet written the facets, facet factories or tests for them.  The @Value will be reusing the work done on Parser and EncoderDecoder, however ... coming together!"
  ], 
  "revision_id": "1017617"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-07T18:06:20.001141Z", 
  "msg": [
   "Renamed @ParseableEntry to @Parseable, and optionally delegate to newly created Parser interface.  Analogously, added a new @Encodeable annotation which can delegate to an EncoderDecoder interface.  Also removed @FacetFactoryClass and @FacetFactoryName, gone with simpler Class and String arrays (no need after all to wrap these up); defined new @Aggregated annotation and @Value annotation, but not yet written the facets, facet factories or tests for them.  The @Value will be reusing the work done on Parser and EncoderDecoder, however ... coming together!"
  ], 
  "revision_id": "1017616"
 }
]