[
 {
  "author": "hillion", 
  "date": "2001-04-10T17:27:28.000000Z", 
  "msg": [
   "- enhanced CSS error messages,", 
   "- user stylesheets now works,", 
   "- added a transform history in the browser,", 
   "- JSVGComponent behavior tunings.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "199654"
 }, 
 {
  "author": "tkormann", 
  "date": "2001-04-10T15:49:49.000000Z", 
  "msg": [
   "new method added:", 
   "- ViewBox.getViewTransform", 
   "This method returns an AffineTransform according to the viewBox and", 
   "preserAspectRatio attributes which can be specified on the URI fragments, the", 
   "SVG views, or the attributes on a svg element itself.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "199653"
 }, 
 {
  "author": "deweese", 
  "date": "2001-04-10T14:48:49.000000Z", 
  "msg": [
   "1) PNGRed is a modified version of the PNGImageDecoder that uses our", 
   "AbstractRed as a base class (should let us get rid of some of the", 
   "redundant code that got pulled in to support the PNGImageDecoder", 
   "that is there currently).", 
   "2) DeferRable, RedRable.  This is a split of RasterRable into it's two", 
   "logical components. 1) It acts as a defering proxy class (you", 
   "return a RasterRable before you are done constructing the", 
   "underlying RenderedImage in another thread).", 
   "2) It turns a RenderedImage into a RenderableImage by way of", 
   "the AffineRed class.", 
   "This is a much cleaner seperation, and means that eventually", 
   "RasterRable will proably go away.", 
   "3) spi/*  This is a collection of interfaces that will become a service", 
   "provider interface, that people can use to extend the set of formats", 
   "handled by the image tag in Batik.", 
   "I have example usage of this interface for PNG and JPEG.  These", 
   "are untested (other than compiling) but the logic should be sound.", 
   "4) Base64DecodeStream - this is a rewrite of the Base64Decoder that", 
   "acts as a filter on an InputStream.  This will be the basis for", 
   "a 'data:' protocol handler that I will register with the URL class", 
   "(which means we won't have to 'tip toe' around the construction of", 
   "URL objects on the off chance that it's a 'data:' URL).  This should", 
   "also then plug very cleanly into the registy mechanism."
  ], 
  "revision_id": "199652"
 }, 
 {
  "author": "cjolif", 
  "date": "2001-04-04T13:10:02.000000Z", 
  "msg": [
   "fix a bug"
  ], 
  "revision_id": "199651"
 }, 
 {
  "author": "cjolif", 
  "date": "2001-04-03T08:28:50.000000Z", 
  "msg": [
   "fix some compilation problems +", 
   "remove some useless import statements"
  ], 
  "revision_id": "199650"
 }
]