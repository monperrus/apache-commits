[
 {
  "author": "evenisse", 
  "date": "2007-10-04T15:19:35.610978Z", 
  "msg": [
   "Fix link"
  ], 
  "revision_id": "581945"
 }, 
 {
  "author": "ridabenjelloun", 
  "date": "2007-10-04T15:14:27.792757Z", 
  "msg": [
   "ZIP extraction. Three methods has been added to ParseUtils class. getParsersFromZip() methods return a list of parsers. consult unit test class to see how it works."
  ], 
  "revision_id": "581944"
 }, 
 {
  "author": "bpendleton", 
  "date": "2007-10-04T15:13:32.432582Z", 
  "msg": [
   "DERBY-3033: NullPointerExceptions with flattening of NOT EXISTS subqueries", 
   "This patch modifies the behavior of queries which contain correlated", 
   "subqueries using a NOT EXISTS predicate. For example:", 
   "select ... from a, b where <join criteria>", 
   "and not exists (select from c where c.col = b.col)", 
   "Depending on various conditions, subqueries may be \"flattened\", which is", 
   "a term used to describe an internal rewriting process in which the", 
   "subquery is converted into a same-level join with the parent tables.", 
   "For many types of queries, such flattening results in multiple tables", 
   "equijoined together, and the optimizer may recognize, via transitive", 
   "closure of the equijoin predicates, additional opportunities for join", 
   "predicates.", 
   "However, when a NOT EXISTS table is in the join's from list, join", 
   "predicates that mention the NOT EXISTS table cannot be used for such", 
   "transitive closure, because these are not equijoin predicates, they", 
   "are equi-NON-join predicates: the join succeeds when there are NOT", 
   "matching rows in that table.", 
   "Prior to this change, Derby might incorrectly infer an equijoin predicate", 
   "in such a situation, which could lead to wrong results, or to crashes", 
   "during query execution when the join processing attempted to access the", 
   "non-existing rows. This change modifies the PredicateList processing to", 
   "note when a join predicate includes a NOT EXISTS table, and to omit", 
   "that join predicate from transitive closure processing."
  ], 
  "revision_id": "581943"
 }, 
 {
  "author": "cziegeler", 
  "date": "2007-10-04T15:04:57.016130Z", 
  "msg": [
   "Fix for COCOON-2138 - xmldb works now."
  ], 
  "revision_id": "581942"
 }, 
 {
  "author": "snoopdave", 
  "date": "2007-10-04T15:01:54.600079Z", 
  "msg": [
   "Make first-user-is-admin configurable as not all user management implementations work that way"
  ], 
  "revision_id": "581941"
 }
]