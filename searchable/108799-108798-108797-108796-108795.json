[
 {
  "author": "noel", 
  "date": "2003-06-16T03:35:07.000000Z", 
  "msg": [
   "Fixed package names from latest patch."
  ], 
  "revision_id": "108799"
 }, 
 {
  "author": "noel", 
  "date": "2003-06-16T03:21:15.000000Z", 
  "msg": [
   "Fix to handle TTL 0 records"
  ], 
  "revision_id": "108798"
 }, 
 {
  "author": "noel", 
  "date": "2003-06-16T03:16:46.000000Z", 
  "msg": [
   "Fix to handle TTL 0 records"
  ], 
  "revision_id": "108797"
 }, 
 {
  "author": "noel", 
  "date": "2003-06-15T18:44:03.000000Z", 
  "msg": [
   "1) The sender domain check now is optional, controlled by <fakeDomainCheck>, that defaults to true.", 
   "2) Some getX() values where hardcoded in AbstractNotify; now they are controlled by init parameters that default to the previous values. The parameters involved are: <prefix>, <inline>, <attachment> and <passThrough>.", 
   "3) In AbstractNotify (and subclasses) <message> and <attachError> can be used instead of <notice> and <attachStackTrace>.", 
   "4) Javadoc changed accordingly plus a few fixes.", 
   "5) AbstractRedirect and all the subclasses where causing a null pointer exception to be thrown deep in AvalonMailRepository, very hard to understand, because newName(MailImpl) was building a too long name if a configuration loop was happening.", 
   "6) Setting <debug>true</debug> in any mailet subclass of AbstractRedirect was causing a null pointer exception to be thrown during initialization under certain circumstances."
  ], 
  "revision_id": "108796"
 }, 
 {
  "author": "noel", 
  "date": "2003-06-15T18:40:20.000000Z", 
  "msg": [
   "1) The sender domain check now is optional, controlled by <fakeDomainCheck>, that defaults to true.", 
   "2) Some getX() values where hardcoded in AbstractNotify; now they are controlled by init parameters that default to the previous values. The parameters involved are: <prefix>, <inline>, <attachment> and <passThrough>.", 
   "3) In AbstractNotify (and subclasses) <message> and <attachError> can be used instead of <notice> and <attachStackTrace>.", 
   "4) Javadoc changed accordingly plus a few fixes.", 
   "5) AbstractRedirect and all the subclasses where causing a null pointer exception to be thrown deep in AvalonMailRepository, very hard to understand, because newName(MailImpl) was building a too long name if a configuration loop was happening.", 
   "6) Setting <debug>true</debug> in any mailet subclass of AbstractRedirect was causing a null pointer exception to be thrown during initialization under certain circumstances."
  ], 
  "revision_id": "108795"
 }
]