[
 {
  "author": "andyc", 
  "date": "2001-08-10T06:55:14.000000Z", 
  "msg": [
   "Forgot to include TODO, ISSUES files in source distribution."
  ], 
  "revision_id": "317449"
 }, 
 {
  "author": "", 
  "date": "2001-08-10T01:18:16.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create branch 'xerces_j_2'."
  ], 
  "revision_id": "317448"
 }, 
 {
  "author": "lehors", 
  "date": "2001-08-10T01:18:16.000000Z", 
  "msg": [
   "This new implementation supports two different DOMImplementation classes.", 
   "CoreDOMImplementationImpl, along with CoreDocumentImpl, only supports DOM", 
   "Core. DOMImplementationImpl, along with DocumentImpl, inherits from the", 
   "Core classes and adds support for optional modules (MutationEvents, Ranges,", 
   "Traversal) as well as the Deferred DOM.", 
   "Not much code has actually changed, but quite a lot of code has been moved", 
   "around. In particular, all the event code has been moved to DocumentImpl.", 
   "Instead of firing events directly, other classes now simply notify the", 
   "document of mutations. This allows us to have a core document class which", 
   "does nothing in response to these notifications, and a more complete class", 
   "which fires mutation events as well as update ranges and iterators if there", 
   "are any.", 
   "The net result is that one can make a jar which only contains the core DOM,", 
   "that is half the size of the complete DOM. The code is also cleaner", 
   "although fully backward compatible. Existing applications using the", 
   "DOMImplemenationImpl and DocumentImpl classes will keep working just fine.", 
   "In addition, although the gain can't be huge (because I already optimized", 
   "the code quite a bit ;-), the Core DOM can only be smaller in memory and", 
   "faster. At the same time memory consumption and performance remain the same", 
   "for the complete DOM. I actually noticed some small difference in", 
   "performance (~2%) but it turns out to be either a loss or a gain depending", 
   "on the jvm, so...", 
   "When we implement the DOM Level 3 Registry mechanism one will be able to", 
   "dynamically select one implementation or the other, depending on the", 
   "features it needs.", 
   "As an extra bonus the deferred DOM is a clean layer on top of the other", 
   "classes again, and can therefore be left out if desired."
  ], 
  "revision_id": "317447"
 }, 
 {
  "author": "lmartin", 
  "date": "2001-08-09T19:21:49.000000Z", 
  "msg": [
   "Applied a patch submitted by Henry Zongaro to reduce the number of temporary ElementDecl objects created.   Fixes a regression introduced by a bug fix in 1.4.2"
  ], 
  "revision_id": "317446"
 }, 
 {
  "author": "andyc", 
  "date": "2001-08-09T07:08:44.000000Z", 
  "msg": [
   "Fixed some JavaDoc warnings."
  ], 
  "revision_id": "317445"
 }
]