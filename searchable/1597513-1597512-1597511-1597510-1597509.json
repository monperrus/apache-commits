[
 {
  "author": "mattsicker", 
  "date": "2014-05-26T04:43:16.558927Z", 
  "msg": [
   "Add PluginVisitors for a few more annotations."
  ], 
  "revision_id": "1597513"
 }, 
 {
  "author": "mattsicker", 
  "date": "2014-05-26T04:42:45.514904Z", 
  "msg": [
   "Add defaultValue attribute to @SensitivePluginAttribute."
  ], 
  "revision_id": "1597512"
 }, 
 {
  "author": "mattsicker", 
  "date": "2014-05-26T04:16:21.163761Z", 
  "msg": [
   "Replace FQCN with simplified name thanks to import."
  ], 
  "revision_id": "1597511"
 }, 
 {
  "author": "mattsicker", 
  "date": "2014-05-26T04:02:12.024753Z", 
  "msg": [
   "Update how default values are handled along with @PluginAttribute.", 
   "- By using a visitor pattern combined with a registry of", 
   "annotations to visitor classes (which wouldn't be necessary if", 
   "annotations supported methods), this can help simplify the huge", 
   "if/else-if tree in PluginBuilder. This will also make it easier to", 
   "support both factory methods and builder classes concurrently", 
   "during the transition.", 
   "- @PluginDefault has been deleted and migrated to be a part of", 
   "@PluginAttribute instead.", 
   "- PluginBuilder has been simplified to use the PluginVisitor code.", 
   "- Note that one key difference is that default values can be", 
   "interpolated by the StrSubstitutor as well. This might come in handy."
  ], 
  "revision_id": "1597510"
 }, 
 {
  "author": "mattsicker", 
  "date": "2014-05-26T03:59:52.284622Z", 
  "msg": [
   "Add PluginVisitors registry class.", 
   "- Registers the PluginAttribute visitor by default.", 
   "- Will be adding other visitor implementations over time."
  ], 
  "revision_id": "1597509"
 }
]