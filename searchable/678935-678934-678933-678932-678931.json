[
 {
  "author": "jgomes", 
  "date": "2008-07-22T22:34:18.739452Z", 
  "msg": [
   "Fix XML comment."
  ], 
  "revision_id": "678935"
 }, 
 {
  "author": "vsiveton", 
  "date": "2008-07-22T22:33:24.948529Z", 
  "msg": [
   "o refactoring the internationalization with I18N component", 
   "o make DoapUtil#filterDevelopersOrContributorsByDoapRoles() private and add other methods", 
   "o fixed some javadoc"
  ], 
  "revision_id": "678934"
 }, 
 {
  "author": "jgomes", 
  "date": "2008-07-22T22:29:35.347477Z", 
  "msg": [
   "Added overloaded methods to take optional timeout parameter."
  ], 
  "revision_id": "678933"
 }, 
 {
  "author": "jgomes", 
  "date": "2008-07-22T22:24:19.795862Z", 
  "msg": [
   "Added overloaded methods to take optional timeout parameter."
  ], 
  "revision_id": "678932"
 }, 
 {
  "author": "vitek", 
  "date": "2008-07-22T22:19:28.687196Z", 
  "msg": [
   "2008-07-22  Travis Vitek  <vitek@roguewave.com>", 
   "* include/type_traits [_RWSTD_NO_ALIGN_TRAITS]: Conditionally remove", 
   "traits that deal with alignment as there is a good chance they will", 
   "be removed from the draft.", 
   "* include/rw/_defs.h: Define _RWSTD_NO_ALIGN_TRAITS if one or more of", 
   "the alignment helper macros is not provided.", 
   "* include/rw/_meta_prop.h: Stop defining _TT_ macros in workarounds.", 
   "Add fallback for alignment_of<>. Temporarily remove msvc-8.0 workarounds.", 
   "* include/rw/_meta_other.h: Simplify implementation of aligned_storage", 
   "and aligned_union traits.", 
   "* include/rw/_config-acc.h: Update comment after guard macro.", 
   "* include/rw/_config-gcc.h: Remove _RWSTD_EXT_CXX_0X macro.", 
   "* include/rw/_config-eccp.h: Disable a few built-in traits.", 
   "* include/rw/_config.h: Remove _RWSTD_EXT_CXX_0X macro.", 
   "* tests/include/rw/rw_testdefs.h: Enable strict conformance testing for", 
   "next version of EDG C++ and G++.", 
   "* tests/utilities/20.meta.trans.other.cpp (test_aligned_storage):", 
   "Disable testing aligned_storage<> and aligned_union<> if compiler", 
   "support is unavailable or disabled.", 
   "* tests/utilities/20.meta.unary.nothrow.cpp (run_test): Move test body", 
   "to new function.", 
   "(test_has_nothrow_copy): Add new function. Conditionally disable tests", 
   "for types that require rvalue-references or variadic template support.", 
   "Conditionally disable test when compiler support is unavailable.", 
   "* tests/utilities/20.meta.unary.cat.cpp (test_trait): Fix assert to", 
   "display correct line number. Update warning message.", 
   "(test_is_union): Conditionally disable test when compiler support is", 
   "unavailable.", 
   "* tests/utilities/20.meta.unary.prop.cpp: Conditionally disable parts", 
   "of tests that require compiler support. Add assertsions to several of", 
   "the test_has_trivial_* and test_has_nothrow_* tests. Expect traits", 
   "has_trivial_assign, has_trivial_copy, has_nothrow_assign and", 
   "has_nothrow_copy to fail for array types.", 
   "(test_alignment_of): Add tests for alignment_of.", 
   "* tests/utilities/20.meta.unary.rel.cpp: Append a `t' to a few", 
   "internal test class names.", 
   "(test_is_base_of): Disable portion of test if required support", 
   "is not available."
  ], 
  "revision_id": "678931"
 }
]