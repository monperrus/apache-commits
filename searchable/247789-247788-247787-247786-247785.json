[
 {
  "author": "tomj", 
  "date": "2002-08-19T17:12:10.000000Z", 
  "msg": [
   "Remove the components.bytecode package, including the Extractor", 
   "and ExtractorFactory interface.  Always use the built in bytecode", 
   "reader, which now lives in the package utils.bytecode.", 
   "This removes the dependancy on any jar file (e.g. tt-bytecode, serp, BCEL)", 
   "for reading parameter names from bytecode built with debug.", 
   "Update the build.xml files to remove tt-bytecode as a required jar file."
  ], 
  "revision_id": "247789"
 }, 
 {
  "author": "butek", 
  "date": "2002-08-19T15:35:21.000000Z", 
  "msg": [
   "There must be a way to configure the WSDD service info into the Service", 
   "Locator object.  The WSDD service's name is typically the same as the", 
   "WSDL service's port name.  But there is not necessarily a 1-1 correllation", 
   "between WSDL service's port name and WSDD service name.  A given", 
   "WSDL service port could have any number of WSDD services.  For", 
   "instance, imagine a hand-modified client-config.wsdd that has TWO", 
   "services, one that sends XSI types and one that doesn't.  Right now, one", 
   "of them would (presumably) be named after the port name and the other", 
   "would be named \"somethingElse\".  There is NO WAY to tell the AXIS", 
   "runtime to use the WSDDService named \"somethingElse\".", 
   "In order to accomplish this feat, I've added to the service Locator class", 
   "two methods per port:  get/set<portName>WSDDServiceName.  When the", 
   "service locator creates the stub, it passes this info to it.", 
   "This brought up one other issue.  Call.setTargetService seemed to be", 
   "exactly what I wanted to call, but Service is already calling", 
   "Call.setPortName to do what I'm trying to do.  setTargetService and", 
   "setPortName appear to be virtually the same thing.  Since setTargetService", 
   "wasn't being called and it wasn't documented anywhere, I removed it in", 
   "favor of setPortName.  If folks have a problem with this, let me know and I", 
   "can return setTargetService and tie it in with setPortName."
  ], 
  "revision_id": "247788"
 }, 
 {
  "author": "rubys", 
  "date": "2002-08-19T12:12:08.000000Z", 
  "msg": [
   "Check for nil consistently.  Prior to this change, only", 
   "encoding/DeserializerImpl.java did this check correctly."
  ], 
  "revision_id": "247787"
 }, 
 {
  "author": "rubys", 
  "date": "2002-08-19T03:23:23.000000Z", 
  "msg": [
   "Performance improvments, particularly when no attributes are present."
  ], 
  "revision_id": "247786"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-08-18T14:19:50.000000Z", 
  "msg": [
   "Updates to xsd:any support to handle multiple elements.", 
   "1) The bean field for any content is now an array of MessageElements.", 
   "It is called \"_any\" to avoid conflicts with any names created by", 
   "WSDL2Java (which will javaify things, so no underscores).  This", 
   "means we can now support a) multiple any elements, and b)", 
   "controlling the QName of the XML which gets emitted, both of", 
   "which are important.", 
   "See ExtensibilityQueryTestCase/Nested2BindingImpl for examples", 
   "of usage.", 
   "2) Add a (QName, Object) constructor for MessageElements with", 
   "Object values.  Before we couldn't differentiate a call like:", 
   "new MessageElement(\"ns\", \"localpart\", \"string value\") from", 
   "new MessageElement(\"ns\", \"prefix\", \"localpart\").", 
   "3) Usual bits of cleanup."
  ], 
  "revision_id": "247785"
 }
]