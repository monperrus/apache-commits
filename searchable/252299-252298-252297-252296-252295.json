[
 {
  "author": "gdaniels", 
  "date": "2001-08-22T17:01:24.000000Z", 
  "msg": [
   "First cut at EJB provider.", 
   "This provider works by looking for a \"beanJndiName\" option on the", 
   "service instead of a \"className\" one, looking that up in JNDI (it", 
   "should be your bean home object), and calling create() on it to get", 
   "your actual object.  This is quite simple for now, and only really", 
   "works with stateless session beans (no primary key).", 
   "To use it, you need four options, which may be set up EITHER on", 
   "the EJBProvider itself OR on your service (service specific values", 
   "will overrride the provider ones):", 
   "jndiURL -> the URL to your JNDI server", 
   "jndiContextClass -> the classname of the initial context factory", 
   "jndiUser -> username property for the initialContext", 
   "jndiPassword -> password for same", 
   "An example:", 
   "<handler name=\"EJBProvider\" class=\"org.apache.axis.providers.java.EJBProvider\">", 
   "<option name=\"jndiURL\" value=\"ejipt://localhost:2323\"/>", 
   "<option name=\"jndiContextClass\" value=\"allaire.ejipt.ContextFactory\"/>", 
   "<option name=\"jndiUser\" value=\"fred\"/>", 
   "<option name=\"jndiPassword\" value=\"AllYouNeedIsLove\"/>", 
   "</handler>", 
   "<service name=\"EJBService\" pivot=\"EJBProvider\">", 
   "<option name=\"beanJndiName\" value=\"myHomeJNDIName\"/>", 
   "<option name=\"allowedMethods\" value=\"*\"/>", 
   "</service>"
  ], 
  "revision_id": "252299"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-08-21T21:35:13.000000Z", 
  "msg": [
   "serviceUrn -> serviceName, remove unused code"
  ], 
  "revision_id": "252298"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-08-21T21:26:02.000000Z", 
  "msg": [
   "Fix some classpath issues.", 
   "Use the thread's context classloader in a couple places, and also", 
   "build up the full classpath when compiling JWS files."
  ], 
  "revision_id": "252297"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-08-21T05:15:35.000000Z", 
  "msg": [
   "Change for better WSDL-generation architecture.", 
   "Handler now has a generateWSDL() signature, which gets delegated", 
   "to chains just like invoke() does.  This allows arbitrary chains of", 
   "handlers to collaborate in building up information which ends up", 
   "expressed as WSDL.", 
   "This stuff is somewhat experimental at the moment, so I labelled the", 
   "source immediately prior to the change to make it easy to roll back", 
   "just in case.  It does work, and also now generates WSDL inside", 
   "the SimpleAxisServer as well.  Check it out, and please comment", 
   "on the approach.", 
   "Right now all the WSDL is getting created by the JavaProvider."
  ], 
  "revision_id": "252296"
 }, 
 {
  "author": "", 
  "date": "2001-08-19T22:50:12.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create tag", 
   "'pre-wsdl-change'."
  ], 
  "revision_id": "252295"
 }
]