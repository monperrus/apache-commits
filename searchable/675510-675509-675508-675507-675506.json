[
 {
  "author": "kristwaa", 
  "date": "2008-07-10T11:06:57.129806Z", 
  "msg": [
   "DERBY-3313: JDBC client driver statement cache.", 
   "Ported package description for am.stmtcache (revision 675508)."
  ], 
  "revision_id": "675510"
 }, 
 {
  "author": "pamarcelot", 
  "date": "2008-07-10T11:04:14.159379Z", 
  "msg": [
   "Added Solaris targets."
  ], 
  "revision_id": "675509"
 }, 
 {
  "author": "kristwaa", 
  "date": "2008-07-10T11:01:52.128644Z", 
  "msg": [
   "DERBY-3313: JDBC client driver statement cache.", 
   "Added initial package description (package.html).", 
   "Patch file: n/a"
  ], 
  "revision_id": "675508"
 }, 
 {
  "author": "acumiskey", 
  "date": "2008-07-10T10:59:39.509254Z", 
  "msg": [
   "* Created new AbstractState class that shares common properties and stack popping/pushing behaviour of and is now extended by AFPState and PDFState.", 
   "* color, resolution and bitsPerPixel moved from AFPInfo to AFPState/AbstractState resulting in a more simplified AFPInfo and AFPSVGHandler.", 
   "* Changed AFPRenderer, AFPDataStream, PresentationTextObject and PresentationTextData to use encapsulated AFPTextDataInfo instead of a chain of long parameter passing between objects.  Also provided some formatting cleanup in PresentationTextData.", 
   "* Use of X and Y offsets no longer used by AFPDataStream, setOffsets() is now deprecated and added setOrientation() accessor (which still remains relevant).", 
   "* AFPRenderer no longer uses its own bespoke ViewPortPos mechanism and now uses the more standard state stack and AffineTransform mechanism enjoyed by the postscript and PDF Renderers.  This means that there is now a proper implementation for startVParea(), endVParea(), saveGraphicsState(), restoreGraphicsState(), breakOutOfStateStack() and restoreStateStackAfterBreakOut() and it is no longer necessary to have a copy/pasted/tweaked renderBlockViewport() or renderRegionViewport(). As a result of this AFPRenderer is now much more compact (by some 500 lines) - similar work needs to be done in the PCL Renderer, any volunteers?", 
   "* Added lots of helpful toString() methods for those mere mortals wishing to step through with a debugger :)."
  ], 
  "revision_id": "675507"
 }, 
 {
  "author": "ashish", 
  "date": "2008-07-10T10:52:52.244237Z", 
  "msg": [
   "Added the GUI support for delegateReasonEnumId field in WorkEffortPartyAssignment entity."
  ], 
  "revision_id": "675506"
 }
]