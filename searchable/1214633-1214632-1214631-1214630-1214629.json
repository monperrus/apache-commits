[
 {
  "author": "rmannibucau", 
  "date": "2011-12-15T06:39:24.963667Z", 
  "msg": [
   "need tomee catalina"
  ], 
  "revision_id": "1214633"
 }, 
 {
  "author": "marvin", 
  "date": "2011-12-15T06:38:32.575252Z", 
  "msg": [
   "Purge inner Perl objects from CFC.", 
   "Use an integer refcount for CFC objects.  Wrap Perl objects around the", 
   "outside, so that the Perl DESTROY method only decrements the refcount and", 
   "thus a CFC object may be associated with more than one Perl object during its", 
   "lifetime."
  ], 
  "revision_id": "1214632"
 }, 
 {
  "author": "marvin", 
  "date": "2011-12-15T06:38:29.932764Z", 
  "msg": [
   "Prepare tests for new binding strategy.", 
   "Some tests have been assuming that a CFC object will always be associated with", 
   "one and only one Perl object.  That will soon no longer be the case, so test", 
   "using inner CFC objects rather than the Perl wrapper object."
  ], 
  "revision_id": "1214631"
 }, 
 {
  "author": "marvin", 
  "date": "2011-12-15T06:38:26.969323Z", 
  "msg": [
   "Use a basic metaclass struct for CFC objects.", 
   "In order to get rid of the Perl objects currently at the center of CFC's core,", 
   "we need to implement polymorphic destructors in our C code.  We may as well", 
   "use metaclass/vtable structs to store shared info like destructor pointers,", 
   "class names, etc."
  ], 
  "revision_id": "1214630"
 }, 
 {
  "author": "marvin", 
  "date": "2011-12-15T06:38:21.594099Z", 
  "msg": [
   "Add accessor for CFC refcount."
  ], 
  "revision_id": "1214629"
 }
]