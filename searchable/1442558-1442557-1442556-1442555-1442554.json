[
 {
  "author": "gpetracek", 
  "date": "2013-02-05T12:16:21.573973Z", 
  "msg": [
   "EXTVAL-150 improved delegation check - thx to Martin Maier"
  ], 
  "revision_id": "1442558"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-02-05T12:07:54.427978Z", 
  "msg": [
   "* subversion/libsvn_client/merge.c", 
   "(do_directory_merge): Following up on r1442556, fix compilation after", 
   "last second before commit edit."
  ], 
  "revision_id": "1442557"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-02-05T12:06:26.334386Z", 
  "msg": [
   "In libsvn_client's merge: Pass the children_with_mergeinfo array as argument", 
   "instead of hidden in the baton. This allows using constness to describe", 
   "functions behavior on this array.", 
   "Keep a const pointer in the baton for notify processing.", 
   "* subversion/libsvn_client/merge.c", 
   "(merge_cmd_baton_t): Constify children_with_mergeinfo.", 
   "(do_mergeinfo_unaware_dir_merge,", 
   "flag_subtrees_needing_mergeinfo,", 
   "record_mergeinfo_for_dir_merge,", 
   "record_mergeinfo_for_added_subtrees,", 
   "do_mergeinfo_aware_dir_merge): Add children_with_mergeinfo argument and", 
   "use this array instead of the one in the baton.", 
   "(do_directory_merge): Create array. Initialize and clear in baton."
  ], 
  "revision_id": "1442556"
 }, 
 {
  "author": "ivan", 
  "date": "2013-02-05T11:55:17.290211Z", 
  "msg": [
   "Do not send empty text-delta for equal files in update reporter.", 
   "* subversion/libsvn_repos/reporter.c", 
   "(delta_files): Always use svn_repos__compare_files() function to check", 
   "that file content is changed regardless of IGNORE_ANCESTRY flag.", 
   "IGNORE_ANCESTRY flag is already handled on caller side in update_entry()", 
   "function."
  ], 
  "revision_id": "1442555"
 }, 
 {
  "author": "kahatlen", 
  "date": "2013-02-05T11:48:28.876055Z", 
  "msg": [
   "DERBY-6011: Prefer unique index when accessing a small number of rows", 
   "If there is a choice between accessing a table with a unique index scan", 
   "that is guaranteed to return at most one row, and some other non-covering", 
   "index scan that might return multiple rows, adjust the cost of the other", 
   "scan so that it includes the cost of fetching at least one row from the", 
   "base table.", 
   "This change makes it more likely that the unique index is chosen if both", 
   "of the index scans are believed to return no more than one row on average.", 
   "The unique index is the safer choice since it is guaranteed to return at", 
   "most one row. The other index may in the worst case return many rows,", 
   "which requires more locking and increases the likelihood of deadlocks."
  ], 
  "revision_id": "1442554"
 }
]