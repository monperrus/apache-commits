[
 {
  "author": "rooneg", 
  "date": "2005-03-08T03:18:43.189105Z", 
  "msg": [
   "If there are any 'must' clauses in a boolean query then the 'should'", 
   "clauses are pointless, so don't even bother running them.  This fixes", 
   "boolean queries that contain some must and some should queries.", 
   "* src/search/scorer.c", 
   "(lcn_boolean_scorer_create): drop should scorers if we have any must", 
   "scorers.", 
   "* test/search/scorer_test.c", 
   "(test_boolean_scorer): add a test for a search with one must and one", 
   "should query."
  ], 
  "revision_id": "156489"
 }, 
 {
  "author": "rooneg", 
  "date": "2005-03-08T03:16:16.836571Z", 
  "msg": [
   "* src/query_parser/parser.c", 
   "(check_occur): remove debugging printfs."
  ], 
  "revision_id": "156488"
 }, 
 {
  "author": "joes", 
  "date": "2005-03-08T03:15:51.397593Z", 
  "msg": [
   "mp detection logic split into require_mod_perl()", 
   "and require_mod_perl2(), matching mod_perl2.pm rename."
  ], 
  "revision_id": "156487"
 }, 
 {
  "author": "rooneg", 
  "date": "2005-03-08T03:11:44.497053Z", 
  "msg": [
   "Extend the query parser so that it handles +term and -term.  Now that", 
   "we have that support change the default occur for 'lcn search' to must,", 
   "since that's what Java Lucene does.", 
   "* src/query_parser/parser.c", 
   "(check_occur): new helper function.", 
   "(lcn_query_parser_parse): handle +term and -term.", 
   "* src/cmdline/main.c", 
   "(lcn_search_cmd): s/LCN_MUST/LCN_SHOULD/"
  ], 
  "revision_id": "156486"
 }, 
 {
  "author": "gregor", 
  "date": "2005-03-08T02:55:20.386343Z", 
  "msg": [
   "Added \"successfully built\" message to trunk build"
  ], 
  "revision_id": "156485"
 }
]