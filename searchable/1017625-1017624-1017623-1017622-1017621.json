[
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:54:13.885804Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017625"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:54:06.828790Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017624"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:53:52.771166Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017623"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:53:41.250438Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017622"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2008-02-08T11:53:15.321787Z", 
  "msg": [
   "Further work on values.  The AbstractValueAdapter class now implements Parser and EncoderDecoder rather than ParseableFacet and EncodeableFacet directly.  It then creates ParseableFacetUsingParser and EncodeableFacetUsingEncoderDecoder to do the work.  This is a simpler API because we don't have to talk about NakedObjects, just vanilla Objects.  Still in progress, though: need to introduce a TitleProvider, IconNameProvider and TypicalLengthProvider likewise.  Meanwhile the ValueFacetAnnotation stuff is also installing ParseableFacets and EncodeableFacets; more still to do here likewise."
  ], 
  "revision_id": "1017621"
 }
]