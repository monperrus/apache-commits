[
 {
  "author": "chrish", 
  "date": "2015-09-08T11:11:02.314891Z", 
  "msg": [
   "CMS commit to olingo by chrish"
  ], 
  "revision_id": "1701773"
 }, 
 {
  "author": "jim", 
  "date": "2015-09-08T11:10:16.354363Z", 
  "msg": [
   "Merge r1700317, r1700318, r1700319, r1700320, r1700321, r1700322, r1700326, r1700328, r1700330, r1700331, r1700332, r1700334, r1700336, r1700338 from trunk:", 
   "Fix some spurious ident spotted by sparse", 
   "Silence a sparse warning about inconsistent indenting", 
   "Silence a sparse warning about inconsistent indenting", 
   "Silence a sparse warning about inconsistent indenting", 
   "Silence a sparse warning about inconsistent indenting", 
   "Silence a sparse warning about inconsistent indenting", 
   "Silence a sparse warning about inconsistent indenting + some minor style issues", 
   "Remove useless line", 
   "Silence a sparse warning about inconsistent indenting + some minor style issues", 
   "Silence a sparse warning about inconsistent indenting + some minor style issues", 
   "Silence a sparse warning about inconsistent indenting + some minor style issues", 
   "Fix some spurious ident spotted by sparse", 
   "Silence a sparse warning about inconsistent indenting + some minor style issues", 
   "Silence a sparse warning about inconsistent indenting + some minor style issues", 
   "Submitted by: jailletc36", 
   "Reviewed/backported by: jim"
  ], 
  "revision_id": "1701772"
 }, 
 {
  "author": "jim", 
  "date": "2015-09-08T11:07:37.516199Z", 
  "msg": [
   "Merge r1696105, r1700418 from trunk:", 
   "With the current implementation, it is likely to connect/close a socket with the memcache server for each command sent.", 
   "The root cause is a too small idle timeout (600 microseconds).", 
   "Add a new directive, 'MemcacheConnTTL',  to control this idle connection timeout with the memcache server(s).", 
   "Change the default value from 600 usec (!) to 15 sec as per Yann suggestion.", 
   "I've limited accepted values from 1 to 1800 seconds (half an hour) because internaly, the value passed to 'apr_memcache_server_create' is still in mirco-seconds.", 
   "PR 58091", 
   "~~~~~~~~~~~~~~~~~~~_", 
   "Homemade measurement (on a slighly modified version of httpd) shows a +30% in number of processed requests using memcache to cache /index.html.", 
   "Comparison made between the 600 usec and 15 sec TTL.", 
   "Memcache config:", 
   "default", 
   "httpd Config:", 
   "CacheEnable socache /", 
   "CacheSocache memcache:127.0.0.1", 
   "LoadModule mpm_event_module modules/mod_mpm_event.so", 
   "httpd compiled with:", 
   "./configure --enable-mpms-shared=all --with-included-apr --with-mysql --with-libxml2 --enable-modules=reallyall --enable-ssl-ct=no --enable-maintainer-mode --prefix=$HOME/httpd-2.5", 
   "httpd and memcache running on the same VM running under Ubuntu 15.04", 
   "Load tested using:", 
   "ab -n 20000 http://127.0.0.1/index.html", 
   "Creation/closing of connections beetween httpd and memcache confirmed using the telnet connection to memcache and the stats command", 
   "Allow 0 as a valid value (never close idle connections)", 
   "Increased maximum allowed value to 3600 s (1 hour)", 
   "Use 'ap_timeout_parameter_parse' to allow more flexible configuration (i.e. h, min, s, ms suffixes)", 
   "Use 'apr_time_from_sec' when applicable.", 
   "Submitted by: jailletc36", 
   "Reviewed/backported by: jim"
  ], 
  "revision_id": "1701771"
 }, 
 {
  "author": "nick", 
  "date": "2015-09-08T11:04:46.123895Z", 
  "msg": [
   "Republish javadocs"
  ], 
  "revision_id": "1701770"
 }, 
 {
  "author": "markt", 
  "date": "2015-09-08T11:00:51.005664Z", 
  "msg": [
   "More preparation for implementing parallel class loading.", 
   "Replace the use of the (non-parallel capable) StandardClassLoader with the (parallel capable if using the right JRE) URLClassLoader."
  ], 
  "revision_id": "1701769"
 }
]