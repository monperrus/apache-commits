[
 {
  "author": "dkulp", 
  "date": "2012-02-01T18:05:06.764224Z", 
  "msg": [
   "Fix checkstyle issues"
  ], 
  "revision_id": "1239243"
 }, 
 {
  "author": "jmsnell", 
  "date": "2012-02-01T18:04:48.202914Z", 
  "msg": [
   "Moving the security filters to the server package since that's where they're generally used... we can reevaluate later whether any of these need to be in the core or not.. but I doubt it."
  ], 
  "revision_id": "1239242"
 }, 
 {
  "author": "tedyu", 
  "date": "2012-02-01T18:04:06.531153Z", 
  "msg": [
   "HBASE-5295 Improve the Thrift API to switch on/off writing to wal for Mutations (Dhruba)"
  ], 
  "revision_id": "1239241"
 }, 
 {
  "author": "arobinson74", 
  "date": "2012-02-01T18:03:19.423214Z", 
  "msg": [
   "TRINIDAD-2203 - Add checks with exceptions to UIXComponent that is only performed while the project stage is in unit testing mode to validate that components enter visiting and encoding context only once. Includes code to check the stack trace of the initial call to make it easier to debug when calls are incorrectly made"
  ], 
  "revision_id": "1239240"
 }, 
 {
  "author": "mikem", 
  "date": "2012-02-01T18:01:33.400570Z", 
  "msg": [
   "DERBY-5406 Intermittent failures in CompressTableTest and TruncateTableTest", 
   "backported #1175785 #1176256 #1187204 #1189067 #1190220 #1234776 changes from", 
   "trunk to 10.8 line.  Here is final comment from last change.", 
   "Retry compilation if it fails because a conglomerate has disappeared.", 
   "This may happen if DDL, compress, truncate or similar operations happen", 
   "while the statement is being compiled. When trying again, the compilation", 
   "should find the new conglomerate if one exists, or fail with a proper", 
   "error message if the SQL object has been removed.", 
   "This is a workaround for a race condition in the dependency management.", 
   "When binding a statement, the compiler typically builds descriptor", 
   "objects (like a TableDescriptor) from the system tables and then registers", 
   "the statement as a dependent on that descriptor. However, another thread", 
   "may at the same time be invalidating all dependents of that descriptor.", 
   "It is possible that this happens right before the current statement has", 
   "been registered as a dependent, and it will never see the invalidation", 
   "request. Once it actually tries to access the conglomerate associated with", 
   "the descriptor, it will fail with a \"conglomerate does not exist\" error,", 
   "and since the statement did not see the invalidation request, the compiler", 
   "doesn't know that it should retry the compilation.", 
   "This fix also backs out the changes made in revision 1187204, as they", 
   "addressed a subset of the cases handled by this broader fix, and are not", 
   "needed any more."
  ], 
  "revision_id": "1239239"
 }
]