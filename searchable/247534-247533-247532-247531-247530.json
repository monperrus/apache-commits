[
 {
  "author": "glyn", 
  "date": "2002-07-22T11:16:28.000000Z", 
  "msg": [
   "Back-port some java serialization changes to ease migration from Apache", 
   "SOAP to Axis beta 2."
  ], 
  "revision_id": "247534"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-07-22T06:23:02.000000Z", 
  "msg": [
   "Support polymorphic types, which wasn't working.  Fixes:", 
   "http://nagoya.apache.org/bugzilla/show_bug.cgi?id=9818", 
   "* In SerializationContextImpl, two changes to setTypeAttribute().  First,", 
   "all calls to this are now wrapped with \"if (sendType)\", so assume if", 
   "we're being called at all, we need the type - remove check for", 
   "shouldSendXSIType().  Second, the type is an attribute QName, and", 
   "should thus always be qualified - use attributeQName2String().", 
   "* In RPCParam, don't override the javaType of the actual value unless", 
   "it's null - we want to serialize as the actual type whenever", 
   "possible.  When serializing something that's not an exact match", 
   "for the ParamDesc javaType, *always* send xsi:type, since it's", 
   "a polymorphic overload.", 
   "* Add polymorphism test case (needs a bit of fleshing out, see TODO)", 
   "* Fix ExtensibilityQuery test a bit; we now deserialize without passing", 
   "through an Element stage - don't know why this was the other way,", 
   "but it works now.  This test should be cleaned up and documented.", 
   "* A little cleanup (remove unused imports, etc)", 
   "TODOs for Monday :", 
   "1) Confirm that sendType option works in all cases", 
   "2) Make sure we can serialize child types as the parent type if", 
   "there is NO specific mapping for the child type.", 
   "3) Remove \"deserialize any\" option completely - this functionality", 
   "should just work", 
   "4) Remove dead superclass-walking code in BeanDeserializer"
  ], 
  "revision_id": "247533"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-07-20T19:46:15.000000Z", 
  "msg": [
   "Fix broken compiler message..."
  ], 
  "revision_id": "247532"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-07-20T19:41:02.000000Z", 
  "msg": [
   "Return 404's when the URL points to a non-existent service."
  ], 
  "revision_id": "247531"
 }, 
 {
  "author": "scheu", 
  "date": "2002-07-20T00:30:20.000000Z", 
  "msg": [
   "Changes to the implementation of the <element maxOccurs=\"unbounded\">", 
   "due to:", 
   "a) Problems with ServiceDesc sync'ing up the operation.", 
   "b) Glen did not like the post-combining of the RPCParams", 
   "c) I want to eliminate the generation of Collection QNames.", 
   "(i.e. The Stubs/Skeleton/Deploy generators will never", 
   "generate QNames like the following \"xsd:string[unbounded]\".)", 
   "Instead the QName of the component type is used...the type", 
   "actually flowed across the wire.)", 
   "So if you have a wrapped operation and you want to flow foo Strings like:", 
   "<method>", 
   "<foo>1</foo>", 
   "<foo>2</foo>", 
   "</method>", 
   "then use:", 
   "call.addParameter(<foo QName>, <xsd:string QName>, String[], IN)", 
   "Likewise the skeleton and deploy.wsdd will use <xsd:string> as the", 
   "the typeQName.", 
   "The following changes are made:", 
   "1) Removed the parts of the implementation that offended Glen.", 
   "2) Changed JavaUtils.convert(arg, destClass).  If the", 
   "destClass is an array, and the argument is a suitable", 
   "component, the convert method will return an array", 
   "containing the arg.", 
   "** Note this is necessary to automatically have", 
   "a String argument converted into a String[] for", 
   "<element maxOccurs=\"unbounded\"> situations.", 
   "3) Similar change to JavaUtils.isConvertable().", 
   "4) Changed RPCParam.  The value field is now private", 
   "and the deserializer updates the field via the", 
   "new set method.  This is necessary to support", 
   "an RPCParam with multiple values", 
   "(like the <element maxOccurs=\"unbounded\"> case.", 
   "The RPCParam value is converted into an ArrayList", 
   "(as necessary) to keep track of multiple values.", 
   "5) RPCHandler is changed to use the same RPCParam", 
   "object if the new child has the same QName as the", 
   "last child.  This will cause multiple set(Object)", 
   "calls on the RPCParam...see (4).", 
   "Added a startElement method to properly reset", 
   "the currentParam variable to avoid corruption when the", 
   "RPCHandler is re-used.", 
   "6) Changed Stub/Skeleton/Deploy generators to use", 
   "the component QName in all places where the", 
   "Collection QName was being generated.", 
   "7) No logical change to ServiceDesc.  The ServiceDesc", 
   "may see a ParameterDesc that has \"xsd:string\"", 
   "as the type QName.  It will successfully match", 
   "this with an actual parameter that has javaType String[]", 
   "(due to (3)).  Thus the collection processing will", 
   "automatically occur without relying on special", 
   "Collection QNames.  Very Cool and useful.", 
   "Note that I added some developer notes to ServiceDesc", 
   "to help explain the various sync scenarios.  I also", 
   "moved two setJavaType assignments outside the conditional", 
   "bodies to improve the flow.", 
   "8) Added a few more tests to the City_BBB test that", 
   "test the same kind of things as the TCK.", 
   "9) Verified this processing with the JAXRPC TCK doc/lit tests.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "247530"
 }
]