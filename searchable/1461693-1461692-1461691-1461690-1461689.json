[
 {
  "author": "danielsh", 
  "date": "2013-03-27T16:23:15.090857Z", 
  "msg": [
   "No functional change.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(svn_fs_fs__verify_root):", 
   "Refactor code a bit to make it easier to extend into being a non-no-op", 
   "for txn roots."
  ], 
  "revision_id": "1461693"
 }, 
 {
  "author": "challngr", 
  "date": "2013-03-27T16:21:18.875041Z", 
  "msg": [
   "UIMA-2772", 
   "Rebuild state from OR publications on all restarts.  Wait for init stability", 
   "even on rebuilt state if ducc.rm.fast.restart property is false."
  ], 
  "revision_id": "1461692"
 }, 
 {
  "author": "davsclaus", 
  "date": "2013-03-27T16:20:30.842434Z", 
  "msg": [
   "CAMEL-6042: Aggregate with optimistick locking enable should wait a little between retry attempts to avoid clashing. Existing unit tests needs to be improved."
  ], 
  "revision_id": "1461691"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-03-27T16:19:11.780595Z", 
  "msg": [
   "* subversion/libsvn_subr/cmdline.c", 
   "(svn_cmdline_init): Hook a few more error types to stderr in debug mode."
  ], 
  "revision_id": "1461690"
 }, 
 {
  "author": "danielsh", 
  "date": "2013-03-27T16:19:11.763739Z", 
  "msg": [
   "Allow to disable all svn_cache__t in maintainer mode via an envvar.  I need", 
   "this sometimes when debugging segfaults inside FSFS.", 
   "Currently, cache writes are not affected; only cache reads are intercepted.", 
   "* notes/knobs", 
   "(SVN_X_DOES_NOT_MARK_THE_SPOT): New envvar.", 
   "* subversion/libsvn_subr/cache.c", 
   "(svn_cache__get, svn_cache__get_partial, svn_cache__iter):", 
   "If SVN_DEBUG and SVN_X_DOES_NOT_MARK_THE_SPOT, pretend the cache is empty."
  ], 
  "revision_id": "1461689"
 }
]