[
 {
  "author": "costin", 
  "date": "2002-05-24T04:35:17.000000Z", 
  "msg": [
   "Added the dispatch code for mutex.", 
   "As mentioned in the comment, a dynamic mechanism to handle IDs and", 
   "allow use of names must be added ( someday ). Unless we switch to", 
   "XPCOM or a similar object model first.", 
   "At this moment I don't have any urge to compile IDLs, and the", 
   "overhead seems too big, we can still keep it simple."
  ], 
  "revision_id": "297344"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-24T04:30:07.000000Z", 
  "msg": [
   "Remove the mutex code ( move to a separate jk component ).", 
   "Add few extra checks."
  ], 
  "revision_id": "297343"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-24T04:29:22.000000Z", 
  "msg": [
   "Use APR to load the DLL ( rather than adding another case for hpux ).", 
   "The major problem is Netware - the code in APR for dlopen is _very_", 
   "different from what we have in jk. If someone who uses that platform", 
   "can check if apr dlopen works fine, we can remove the commented code.", 
   "I assume the windows and standard dlopen cases are well tested, so", 
   "we'll get rid of all this platform-specific code soon."
  ], 
  "revision_id": "297342"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-24T04:26:00.000000Z", 
  "msg": [
   "Moved the common code in jk_env. Many components need an aprPool, and assuming", 
   "that jk_pool wraps an aprPool is not the cleanest solution."
  ], 
  "revision_id": "297341"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-24T04:24:51.000000Z", 
  "msg": [
   "Moved the mutex code from jni to it's own separate component.", 
   "JNI can call it using 'normal' dispatch.", 
   "This looks more and more like (XP)COM/XPConnect/blackwood - that may", 
   "only mean that we are on the good path :-)"
  ], 
  "revision_id": "297340"
 }
]