[
 {
  "author": "elecharny", 
  "date": "2015-09-17T14:17:23.733182Z", 
  "msg": [
   "Removal of a String, replaced by a constant"
  ], 
  "revision_id": "1703633"
 }, 
 {
  "author": "thomasm", 
  "date": "2015-09-17T14:14:00.711160Z", 
  "msg": [
   "OAK-3416 Query: join on different property types fails"
  ], 
  "revision_id": "1703632"
 }, 
 {
  "author": "jwross", 
  "date": "2015-09-17T14:12:21.167215Z", 
  "msg": [
   "ARIES-1387 Make equals and hashCode comparisons within the header, clause, and parameter hierarchies based on equivalency rather than string equals.", 
   "This commit is a rebasing of two commits made by Cristiano Gavi\u00e3o <cvgaviao@gmail.com> with modifications.", 
   "This closes #27", 
   "https://github.com/apache/aries/pull/27", 
   "https://github.com/cvgaviao/aries ARIES-1387", 
   "https://github.com/apache/aries/pull/27.patch", 
   "commit 0a825a12f7b503a49c36cc16daa6c5fbb017d87d", 
   "Author: Cristiano Gavi\u00e3o <cvgaviao@gmail.com>", 
   "Date:   Tue Sep 1 07:28:02 2015 -0300", 
   "added missed class", 
   "commit dceab1743016c08e68922c1971b6ab34c98b6db8", 
   "Author: Cristiano Gavi\u00e3o <cvgaviao@gmail.com>", 
   "Date:   Sat Aug 29 08:29:20 2015 -0300", 
   "factored headers and clauses classes and added equals() and hashCode()", 
   "issue #ARIES-1387", 
   "Plus the following modifications.", 
   "Reinforce the immutablity and safe publication of the header, clause, and parameter hierarchies: (1) no default constructors; (2) all fields are final; (3) no subclass methods are called in the constructor; (4) synchronize access to mutable fields that are visible to subclasses (for example, the Provide-Capability header does its own parameter parsing and modifies the clause collection after it has been published).", 
   "Pull out more common functionality within the header, clause, and parameter hierarchies.", 
   "Do not use the original header value as part of the equals and hashCode methods; otherwise, it basically amounts to a string equals comparison.", 
   "Remove unnecessary implementations of equals and hashCode and rely on implementations in the abstract classes as much as possible. Currently, the only exception is the filter directive so that the filter comparison is not string equals.", 
   "Rewrite equals and hashCode in a format more familiar to this committer. There may have been nothing wrong with the original implementations.", 
   "Support equivalent filter comparisons rather than just string equals:", 
   "(1) Cache a simple filter and override equals/hashCode in the filter directive rather than rely on a string comparison in the abstract parameter.", 
   "(2) Override equals/hashCode in the simple filter rather than rely on an identity comparison.", 
   "(3) Use sets rather than lists in the simple filter so that equivalent filters are equal and have the same hashCode. For example, the following two filters are equal: (&(a=b)(y=z)) and (&(y=z)(a=b)).", 
   "In the equality test:", 
   "(1) Ensure that equivalent versions and clauses are equal.", 
   "(2) Include default values for the effective directive.", 
   "(3) Use the correct version range attribute name (i.e. \"bundle-version\" instead of \"version\") for the Require-Bundle header.", 
   "(4) Make the subsystem manifest equality check more robust so that default values and equivalent orderings are included.", 
   "(5) Use valid clause syntax. For example, the path must come first.", 
   "(6) Remove unnecessary references to header names. The header name is implied based on which header class is instantiated and is ignored as part of processing the value.", 
   "Add Subsystem-Type to the abstract header hierarchy.", 
   "Convert constructors taking a Requirement argument into static valueOf methods which translate requirements back into their respective manifest headers. Implement unfinished functionality, particularly with regard to extracting attributes from filters and creating filters from attributes.", 
   "Fix Subsystem-ImportService header and tests. Previously, the osgi.service requirement namespace was used for the path, whereas the correct path is the value of the namespace attribute.", 
   "Fix the filter generation within OsgiExecutionEnvironmentRequirement and tests. Previously, the filter would contain unnecessary operators for unary attributes. This broke ManifestHeaderProce", 
   "Support both \"version\" and \"bundle-version\" as version range attribute names.", 
   "Add default value for version range attribute to Require-Bundle and convert versions into ranges.", 
   "Add resolution directive default value to the Import-Package header."
  ], 
  "revision_id": "1703631"
 }, 
 {
  "author": "stsp", 
  "date": "2015-09-17T14:09:48.187416Z", 
  "msg": [
   "Remove svn_client_conflict_walk() again. It is unused.", 
   "Clients are now expected to implement their own walker, as 'svn' does.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_conflict_walk_func_t, svn_client_conflict_walk): Remove.", 
   "* subversion/libsvn_client/resolved.c", 
   "(conflict_resolver_baton_t, conflict_resolver_func,", 
   "svn_client_conflict_walk): Remove."
  ], 
  "revision_id": "1703630"
 }, 
 {
  "author": "radu", 
  "date": "2015-09-17T14:07:19.802759Z", 
  "msg": [
   "SLING-5036 - Optimise the ModelsFactoryUseProvider to fail as early as possible if it cannot provide an object", 
   "* renamed ModelsFactoryUseProvider to SlingModelsUseProvider", 
   "* delayed all bindings retrievals until they're absolutely necessary", 
   "* removed bindings merging - models can get their arguments through request attributes if they're adaptable from SlingHttpServletRequest", 
   "* updated the test setup to take into account the SlingModelsUseProvider (both IT and performance)"
  ], 
  "revision_id": "1703629"
 }
]