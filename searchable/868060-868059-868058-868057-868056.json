[
 {
  "author": "stsp", 
  "date": "2007-11-23T10:22:22.262997Z", 
  "msg": [
   "* COMMITTERS: Adding myself as partial committer (tree conflicts branch)"
  ], 
  "revision_id": "868060"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-11-23T10:13:01.856227Z", 
  "msg": [
   "Fix compilation error with old serf.", 
   "* subversion/include/private/svn_dep_compat.h", 
   "(): Change the idempotency guard to 'SVN_DEP_COMPAT_H' from 'SVN_COMPAT_H'.", 
   "* subversion/libsvn_ra_serf/serf.c", 
   "(): Include private/svn_dep_compat.h"
  ], 
  "revision_id": "868059"
 }, 
 {
  "author": "kfogel", 
  "date": "2007-11-23T03:40:30.595726Z", 
  "msg": [
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c", 
   "(get_mergeinfo_for_path): Redocument, and fix an internal comment.", 
   "Review by: kameshj"
  ], 
  "revision_id": "868058"
 }, 
 {
  "author": "glasser", 
  "date": "2007-11-22T22:46:08.220863Z", 
  "msg": [
   "STATUS: Yet another reason you should vote for r27256."
  ], 
  "revision_id": "868057"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-11-22T19:35:07.448602Z", 
  "msg": [
   "On issue-2897 branch: Fix issue #2897 (\"reflective merges are faulty\").", 
   "Fix involves 3 changes.", 
   "- Schema change to track what revisions of merge source got merged in a", 
   "given commit in 'mergeinfo_changed' table.", 
   "- Implement 'get_commit_revs_for_merge_ranges' API to get the commit revs", 
   "for the reflective merge.", 
   "- Negate the reflective revision from the requested merge range.", 
   "* subversion/libsvn_fs_util/sqlite-util.c", 
   "(schema_create_sql): Make the following change to the schema of", 
   "'mergeinfo_changed' table.", 
   "Rename column 'path' -> 'mergedto'", 
   "New column 'mergedfrom' to track the 'merge source canonical path'.", 
   "New columns 'mergedrevstart', 'mergedrevend' and 'inheritable' to track", 
   "the merge revision range for this commit.", 
   "Drop the indices mi_c_revpath_idx, mi_c_path_idx, mi_c_revision_idx.", 
   "New index 'mi_c_merge_source_target_revstart_end_commit_rev_idx'.", 
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c: Include svn_sorts.h.", 
   "(get_mergeinfo): Forward declaration, so that 'index_txn_mergeinfo' can also", 
   "make use of this function.", 
   "(index_path_mergeinfo): Change signature to accept hashes 'curr_mergeinfo',", 
   "'orig_mergeinfo', 'added_mergeinfo' instead of 'mergeinfo_str' (which is a", 
   "mergeinfo as of this commit). Record full details about the merge for the", 
   "given commit in 'mergeinfo_changed' table.", 
   "(index_txn_mergeinfo): Call 'index_path_mergeinfo' with necessary arguments", 
   "as per new signature.", 
   "(get_mergeinfo_for_path, get_mergeinfo_for_children): Adjust the query for", 
   "the new schema change.", 
   "(get_parent_target_path_having_mergeinfo,", 
   "get_commit_revs_for_merge_ranges,", 
   "svn_fs_mergeinfo__get_commit_revs_for_merge_ranges): New functions.", 
   "* subversion/include/private/svn_fs_mergeinfo.h", 
   "(svn_fs_mergeinfo__get_commit_revs_for_merge_ranges): New prototype.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(root_vtable_t): Introduce new member 'get_commit_revs_for_merge_ranges'.", 
   "* subversion/libsvn_fs_base/tree.c", 
   "subversion/libsvn_fs_fs/tree.c", 
   "(root_vtable): Use 'svn_fs_mergeinfo__get_commit_revs_for_merge_ranges' as", 
   "the above new member to root_vtable_t.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_get_commit_revs_for_merge_ranges): Implement FS stub of this new", 
   "functionality.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_get_commit_revs_for_merge_ranges): New prototype.", 
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(svn_repos_get_commit_revs_for_merge_ranges): Implement REPOS stub of this", 
   "new functionality.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_get_commit_revs_for_merge_ranges): New prototype.", 
   "* subversion/include/private/svn_dav_protocol.h", 
   "(SVN_DAV__COMMIT_REVS_FOR_MERGE_RANGES_REPORT,", 
   "SVN_DAV__MAX_COMMIT_REVISION,", 
   "SVN_DAV__MIN_COMMIT_REVISION,", 
   "SVN_DAV__MERGE_SOURCE,", 
   "SVN_DAV__MERGE_TARGET,", 
   "SVN_DAV__MERGE_RANGES): New macros.", 
   "* subversion/mod_dav_svn/dav_svn.h", 
   "(dav_svn__get_commit_revs_for_merge_ranges_report): New prototype.", 
   "* subversion/mod_dav_svn/reports/mergeinfo.c: Include svn_mergeinfo.h.", 
   "(dav_svn__get_commit_revs_for_merge_ranges_report): New function, that", 
   "stubs the MOD_DAV_SVN part of this functionality.", 
   "* subversion/mod_dav_svn/version.c", 
   "(deliver_report): Invokes this new functionality", 
   "'dav_svn__get_commit_revs_for_merge_ranges_report' via the DAV report.", 
   "* subversion/svnserve/serve.c", 
   "(main_commands):  Add new report 'commit-revs-for-merge-ranges'.", 
   "(get_commit_revs_for_merge_ranges): Implementation of new report.", 
   "* subversion/libsvn_ra/ra_loader.h", 
   "(svn_ra__vtable_t): Add new member 'get_commit_revs_for_merge_ranges'", 
   "for ra_layers to define relevant functions to.", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__get_commit_revs_for_merge_ranges): Implement ra_local plugin", 
   "for this new functionality.", 
   "(ra_local_vtable): Set the new member with", 
   "svn_ra_local__get_commit_revs_for_merge_ranges.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_get_commit_revs_for_merge_ranges): Implement ra_svn plugin", 
   "for this new functionality.", 
   "(ra_svn_vtable): Set the new member with", 
   "ra_svn_get_commit_revs_for_merge_ranges.", 
   "* subversion/libsvn_ra_neon/ra_neon.h", 
   "(svn_ra_neon__get_commit_revs_for_merge_ranges): New prototype.", 
   "* subversion/libsvn_ra_neon/mergeinfo.c", 
   "(mergeinfo_report_elements): Make mergeinfo parser aware of new report.", 
   "(svn_ra_neon__get_commit_revs_for_merge_ranges): New function.", 
   "* subversion/libsvn_ra_neon/session.c", 
   "(neon_vtable): Set the new member with", 
   "'svn_ra_neon__get_commit_revs_for_merge_ranges'.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(svn_ra_serf__get_commit_revs_for_merge_ranges): New prototype.", 
   "* subversion/libsvn_ra_serf/mergeinfo.c", 
   "(mergeinfo_context_t):  Add member 'merge_target', 'merge_source'", 
   "'min_commit_rev', 'max_commit_rev', 'merge_rangelist_str'.", 
   "(start_element, end_element): Make the parser knowledegable about", 
   "new commit-revs report.", 
   "(create_commit_revs_for_merge_ranges_body): New function.", 
   "(svn_ra_serf__get_commit_revs_for_merge_ranges): New function.", 
   "* subversion/libsvn_ra_serf/serf.c", 
   "(serf_vtable): Set the new member with", 
   "'svn_ra_serf__get_commit_revs_for_merge_ranges'.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_commit_revs_for_merge_ranges): New prototype.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "(svn_ra_get_commit_revs_for_merge_ranges): New function.", 
   "* subversion/tests/cmdline/merge_tests.py", 
   "(test_list): Remove XFail marker from 'avoid_reflected_revs'.", 
   "* subversion/libsvn_client/merge.c", 
   "(filter_reflected_revisions): Get the reflected revision range and remove", 
   "it from the requested merge range."
  ], 
  "revision_id": "868056"
 }
]