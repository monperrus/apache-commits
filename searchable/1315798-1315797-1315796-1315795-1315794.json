[
 {
  "author": "", 
  "date": "2012-03-28T20:36:19.803731Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 20463", 
   "Author:   tierney@adobe.com", 
   "Date:     2011-02-25T00:44:47.069160Z", 
   "Log Message:", 
   "-----------", 
   "Fix SDK-29657 - Intermittent compiler errors claiming a type X cannot be assigned to type X", 
   "ASC has a data structure called userDefined, which allows ASC to re-use the same java instance of a TypeValue when it recompiles a class. This is important, because other compilation units may contain direct pointers to the TypeValue - so if the same instance is not used, then all those other compilation units would have to be recompiled to update their pointers to the new TypeValue.", 
   "To support this, the flex compiler will seed the userDefined structure with all the Types from a previous compile that have not been updated. However, if a type has been updated with a stable signature, then it was not being added to the userDefined data structure. So when ASC went to recompile that class, it did not reuse the TypeValue instance, and instead created a new one. ASC compares types by identity, so this is the source of the errors.", 
   "The fix is to add the Types that were updated with a stable signature to ASCs userDefined data structure. This way, the same TypeValue instance will be reused, and all the compilation units will be pointing at that one TypeValue, and there will be no errors.", 
   "This does not need to be done for files that were updated with a non-stable signature change - those changes will force their dependents to be recompiled, so everything will work ok.", 
   "QE notes:  none", 
   "Doc notes: none", 
   "Bugs: SDK-29657", 
   "Reviewer: Chris Brichford", 
   "Tests run: checkintests, cyclone", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java"
  ], 
  "revision_id": "1315798"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:36:17.805628Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19843", 
   "Author:   pfarland@adobe.com", 
   "Date:     2011-01-20T21:40:15.316198Z", 
   "Log Message:", 
   "-----------", 
   "Modifying PreLink to fix SDK-28758.", 
   "The problem was that PreLink was only checking whether the number of Sources had changed after running PreLink. This is true the first time we run because we generate a new source for the CSS selectors that matched any type dependencies found in all compilation units. However, when one of those CSS selectors introduced a new type dependency, say a Skin ClassReference(), the new generated source would just replace the old one and while it would get compiled, pre-link would not run again to pick up yet more matching CSS selectors for that new type.", 
   "This change tries to determine whether a new source was actually generated for the matching CSS selectors rather than rely on the generated source count.", 
   "It's not pretty, but it's the least invasive change without re-architecting PreLink and CSS.", 
   "QE notes: Please add a test case that has a class -> style -> skin class -> style -> skin class dependency chain to show that arbitrary dependency chains solely via styles work.", 
   "Doc notes: N/A", 
   "Bugs: SDK-28758", 
   "Reviewer: chris b", 
   "Tests run: checkintests, cyclone", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/CompcPreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/PreLink.java</path>"
  ], 
  "revision_id": "1315797"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:36:15.794405Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19102", 
   "Author:   scai@adobe.com", 
   "Date:     2010-12-07T18:21:02.475131Z", 
   "Log Message:", 
   "-----------", 
   "1. Add -compiler.compress option to switch on/off SWF compression.", 
   "2. Change compiler so that by default debugging SWF is not compressed and release SWF is compressed, unless override by -compiler.compress", 
   "3. For compressed SWF, always to BestCompression so that SWC digest of osfm and textlayout doesn't break.", 
   "4. library.swf in a SWC is still compressed for the same reason in #3.", 
   "QE notes: Need tests for combinations of -compiler.debug and -compiler.compress", 
   "Doc notes: Add -compiler.compress and behavior change in -compiler.debug to docs.", 
   "Bugs: http://bugs.adobe.com/jira/browse/SDK-27110", 
   "Reviewer: Peter Farland", 
   "Tests run: checkintests, mustella, mxunit", 
   "Is noteworthy for integration: Yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/swfutils/src/java/flash/swf/MovieEncoder.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/swfutils/src/java/flash/swf/SwfEncoder.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/swc/Swc.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/Optimizer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/flexbuilder/BuilderConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/common/CompilerConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/internal/OEMConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/flex-config.xml</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/Configuration.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/PersistenceStore.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/swfutils/src/java/flash/swf/TagEncoder.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/internal/ConfigurationConstants.java</path>"
  ], 
  "revision_id": "1315796"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:36:13.768167Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 18836", 
   "Author:   tierney@adobe.com", 
   "Date:     2010-11-29T18:50:53.943907Z", 
   "Log Message:", 
   "-----------", 
   "Submit patch from paul reilly for SDK-26338, reviewed by me - fix implicit coercion error in an active incremental compile.", 
   "QE notes:  none", 
   "Doc notes: none", 
   "Bugs: SDK-26338", 
   "Reviewer: Erik Tierney", 
   "Tests run: cyclone, checkintests", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/Compc.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/Fcsh.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/Application.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/FileSpec.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/asdoc/AsDocAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler_en.properties</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/webtier/j2ee/servlet/src/java/flex/webtier/server/j2ee/IncrementalCompileFilter.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/WebTierAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/Mxmlc.java</path>"
  ], 
  "revision_id": "1315795"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:36:11.961355Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 18448", 
   "Author:   preilly@adobe.com", 
   "Date:     2010-11-04T18:43:44.977403Z", 
   "Log Message:", 
   "-----------", 
   "* Resubmit the application cache fixes with a few minor tweaks.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs: SDK-28193, SDK-28125, SDK-27128, SDK-28383", 
   "Reviewer: Erik", 
   "Tests run: full cyclone, tested out changes in FB with framework projects", 
   "Is noteworthy for integration: YES, fixes issues seen from FB", 
   "Code-level description of changes:", 
   "tools/oem/Application.java", 
   "Modified ApplicationCache usage to include the ResourceContainer,", 
   "so that dependent generated sources can be in the cache.  This", 
   "fixes SDK-28193.", 
   "Modified each application cache usage to wrapped in a", 
   "isConsistent() check.  If not consistent, we clear the application", 
   "cache.", 
   "tools/oem/Library.java", 
   "Modified recompile() to remove the target library from the SWC", 
   "cache if full recompilation is necessary.  This fixes SDK-28125.", 
   "tools/oem/ApplicationCache.java", 
   "Moved contextStatics variable and accessors to super class.", 
   "Added isConsistent() and equals().", 
   "tools/oem/LibraryCache.java", 
   "Moved contextStatics variable and accessors to super class.", 
   "tools/oem/CacheBase.java", 
   "Moved isConsistent(), equals(), getConfiguration(), and", 
   "setConfiguration() back down into ApplicationCache, because they", 
   "are not used for libraries.", 
   "compiler/ResourceContainer.java", 
   "Added applicationCache variable and setter.", 
   "Modified findSource() to look in the ApplicationCache if not null.", 
   "Modified sources() to return a Map instead of a Set, so the", 
   "ApplicationCache can use the class names.", 
   "compiler/PersistenceStore.java", 
   "Updated to reflect change to ResourceContainer.sources() return type.", 
   "compiler/CompilerAPI.java", 
   "Updated to reflect change to ResourceContainer.sources() return type.", 
   "Added constructClassName(), so we could remove the copy in", 
   "SourceList, SourcePath, and ResourceContainer.", 
   "compiler/common/CompilerConfiguration.java", 
   "Added initial value to configVars.", 
   "compiler/swc/SwcCache.java", 
   "Added remove().", 
   "compiler/SourcePath.java", 
   "compiler/SourceList.java", 
   "Updated to use CompilerAPI.constructClassName().", 
   "compiler/SymbolTable.java", 
   "Modified constructor to always set omitTrace, even when false.", 
   "This should fix SDK-28383.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/Application.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/ResourceContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/common/CompilerConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/SourceList.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/swc/SwcCache.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/SourcePath.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/SymbolTable.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/ApplicationCache.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/LibraryCache.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/PersistenceStore.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/oem/CacheBase.java</path>"
  ], 
  "revision_id": "1315794"
 }
]