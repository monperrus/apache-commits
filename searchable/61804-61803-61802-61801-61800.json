[
 {
  "author": "jwoolley", 
  "date": "2001-06-27T19:40:53.000000Z", 
  "msg": [
   "*) Add apr_file_flags_get() which returns the flags that were originally", 
   "passed in to apr_file_open().", 
   "*) Added APR_HAS_XTHREAD_FILES macro that indicates whether or not the", 
   "platform handles files opened in APR_XTHREAD mode natively.  Currently", 
   "only Win32 has such native support."
  ], 
  "revision_id": "61804"
 }, 
 {
  "author": "wrowe", 
  "date": "2001-06-27T19:08:33.000000Z", 
  "msg": [
   "what libapr?  tests link to the static lib"
  ], 
  "revision_id": "61803"
 }, 
 {
  "author": "trawick", 
  "date": "2001-06-27T16:44:40.000000Z", 
  "msg": [
   "clean up the generation of APR_HAS_foo_SERIALIZE just a bit by using", 
   "APR_IFALLYES() in a smarter manner"
  ], 
  "revision_id": "61802"
 }, 
 {
  "author": "trawick", 
  "date": "2001-06-26T17:15:51.000000Z", 
  "msg": [
   "get flock() mechanism child init working for APR_LOCK_ALL+APR_HAS_THREADS;", 
   "previously, we didn't copy the pthread mutex or the intra process", 
   "lock methods, leading to segfaults in a child process using the", 
   "flock() mechanism"
  ], 
  "revision_id": "61801"
 }, 
 {
  "author": "trawick", 
  "date": "2001-06-26T15:33:01.000000Z", 
  "msg": [
   "tighten up the checking for when we have pthread process serialization;", 
   "if the system doesn't have pthread_mutexattr_setpshared() then it won't", 
   "build"
  ], 
  "revision_id": "61800"
 }
]