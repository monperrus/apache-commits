[
 {
  "author": "cmpilato", 
  "date": "2003-11-13T05:51:57.050558Z", 
  "msg": [
   "Some deltification-related fixes.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(skip_deltas): Hard to test the skip-deltas if no deltification is", 
   "occuring.  Remedy that.", 
   "* subversion/svnadmin/main.c", 
   "(subcommand_deltify): Make this subcommand enforce X <= Y when -rX:Y", 
   "is used.  The enforcement was Greg Stein's idea -- the choice of", 
   "direction was dictated by Greg Hudson and shown valuable by Philip", 
   "Martin."
  ], 
  "revision_id": "847795"
 }, 
 {
  "author": "sussman", 
  "date": "2003-11-13T03:55:17.467806Z", 
  "msg": [
   "Fix brain-o in parsing base-64-encoded propvals.", 
   "* libsvn_ra_dav/fetch.c (end_element):  send the *decoded* propval", 
   "into the editor, not the original value."
  ], 
  "revision_id": "847794"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-11-13T01:03:05.525066Z", 
  "msg": [
   "Finish issue #1595 - unscalable transaction removals.  This introduces", 
   "a new transaction state -- \"dead\" -- which is the only type of", 
   "transaction that is allowed to be purged.  Hm.  That gives me an idea...", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_TRANSACTION_DEAD, SVN_ERR_FS_TRANSACTION_NOT_DEAD): New", 
   "errors.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_commit_txn, svn_fs_abort_txn): Stop lying about returning", 
   "errors that don't exist.", 
   "(svn_fs_cleanup_dead_txn): New.", 
   "* subversion/libsvn_fs/fs.h", 
   "(svn_fs__transaction_t): New.", 
   "(svn_fs__transaction_t): Now includes a 'kind' member.", 
   "* subversion/libsvn_fs/dag.h", 
   "(svn_fs__dag_remove_node): New.", 
   "(svn_fs__dag_delete_if_mutable): Update the docstring.", 
   "* subversion/libsvn_fs/bdb/txn-table.c", 
   "(is_committed): Update the meaning of \"is committed\".", 
   "(svn_fs__bdb_create_txn): Populate the new 'kind' member of the", 
   "svn_fs__transaction_t object.", 
   "(svn_fs__bdb_delete_txn): Update a comment.", 
   "* subversion/libsvn_fs/bdb/copies-table.c", 
   "(svn_fs__bdb_delete_copy): Make this thing return a specific \"not", 
   "found\" error if you try to delete a non-existant copy.", 
   "* subversion/libsvn_fs/bdb/copies-table.h", 
   "(svn_fs__bdb_delete_copy, svn_fs__bdb_get_copy): Update docstring to", 
   "describe a specific \"not found\" error.", 
   "* subversion/libsvn_fs/notes/structure", 
   "Update descriptions of transaction skels to note the new \"dead\"", 
   "transaction kind.", 
   "* subversion/libsvn_fs/dag.c", 
   "(svn_fs__dag_commit_txn): Remove some unnecessary code.", 
   "(svn_fs__dag_remove_node): New, made from code pulled from", 
   "svn_fs__dag_delete_if_mutable().", 
   "(svn_fs__dag_delete_if_mutable): Donate code to new", 
   "svn_fs__dag_remove_node(), and call it.", 
   "* subversion/libsvn_fs/util/fs_skels.c", 
   "(is_valid_transaction_skel): Learn to recognize the new \"dead\"", 
   "transaction type, and return the transaction kind.", 
   "(svn_fs__parse_transaction_skel, svn_fs__unparse_transaction_skel):", 
   "Update calls to is_valid_transaction_skel(), and handle the new", 
   "transaction kind.", 
   "* subversion/libsvn_fs/revs-txns.c", 
   "(get_txn, put_txn): New.", 
   "(is_committed): Buh-bye.", 
   "(get_rev_txn, svn_fs__txn_make_committed, svn_fs__txn_get_revision,", 
   "svn_fs__set_txn_root, svn_fs__set_txn_base, svn_fs__add_txn_copy,", 
   "txn_body_txn_proplist, svn_fs__set_txn_prop, svn_fs__get_txn_ids):", 
   "Stop using is_committed(), and call get_txn() and put_txn() instead", 
   "of the BDB layer.", 
   "(svn_fs_abort_txn, txn_body_abort_txn): Rework to just change the", 
   "transaction to \"dead\".", 
   "(txn_body_open_txn): Um... could we not hit the database twice as", 
   "many times as necessary to do this work?", 
   "(struct cleanup_txn_get_args, txn_body_cleanup_txn_get, struct", 
   "cleanup_txn_copy_args, txn_body_cleanup_txn_copy, struct", 
   "cleanup_txn_changes_args, txn_body_cleanup_txn_changes, struct", 
   "get_dirents_args, txn_body_get_dirents, struct remove_node_args,", 
   "txn_body_remove_node, delete_txn_tree, struct delete_txn_args,", 
   "txn_body_delete_txn, svn_fs_cleanup_dead_txn): New.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(berkeley_error_handler): Whitespace mods."
  ], 
  "revision_id": "847793"
 }, 
 {
  "author": "philip", 
  "date": "2003-11-12T23:15:42.284649Z", 
  "msg": [
   "Issue 1579, there is no point creating and destroying a shared lock", 
   "before running recover.", 
   "* subversion/libsvn_repos/repos.c", 
   "(svn_repos_recover): Remove the shared lock code."
  ], 
  "revision_id": "847792"
 }, 
 {
  "author": "philip", 
  "date": "2003-11-12T22:56:57.415054Z", 
  "msg": [
   "* tools/client-side/bash_completion (_svnadmin): Add deltify, remove lscr."
  ], 
  "revision_id": "847791"
 }
]