[
 {
  "author": "dreiss", 
  "date": "2008-06-10T22:54:56.787759Z", 
  "msg": [
   "FunctionRunner Utility Class.", 
   "Runs arbitrary functions of form 'void(void)' and 'void*(void*)'", 
   "without need to create custom Runnable classes."
  ], 
  "revision_id": "666360"
 }, 
 {
  "author": "dreiss", 
  "date": "2008-06-10T22:54:49.027137Z", 
  "msg": [
   "Forking Python server.", 
   "The python threading model does not provide concurrency for CPU-bound", 
   "processes.  Process forking is the current recommended way of writing", 
   "scalable Python servers.", 
   "Harry Wang ran the [elided] backend with this change for 3 days and observed", 
   "no errors.  The threaded backend caused unexplained lockups under this load", 
   "after 24 hours.", 
   "I also ran a CPU-bound load test against this server with 32 concurrent", 
   "clients.  It completed 5X faster than the threaded implementation."
  ], 
  "revision_id": "666359"
 }, 
 {
  "author": "dreiss", 
  "date": "2008-06-10T22:54:40.948239Z", 
  "msg": [
   "Add ProfilerRegisterThead() to PosixThread.", 
   "Adds an #ifdef'd block that calls ProfilerRegisterThread() if", 
   "\"REGISTER_THREAD_GOOGLE_PERFTOOLS\" is set.  Apparently, this makes the", 
   "Google perftools CPU profiler work much better on x86-64."
  ], 
  "revision_id": "666358"
 }, 
 {
  "author": "dreiss", 
  "date": "2008-06-10T22:54:32.629959Z", 
  "msg": [
   "Make sure list<byte> is List<Byte> in Java gen'd code.", 
   "Reviewed By: dreiss", 
   "Test Plan: Generate list<byte> into Java"
  ], 
  "revision_id": "666357"
 }, 
 {
  "author": "stack", 
  "date": "2008-06-10T22:53:41.136509Z", 
  "msg": [
   "HBASE-669 MultiRegion transactions with Optimistic Concurrency Control; Fix silly copy in get"
  ], 
  "revision_id": "666356"
 }
]