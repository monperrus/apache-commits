[
 {
  "author": "rcm", 
  "date": "2005-01-14T17:04:55.000000Z", 
  "msg": [
   "Lookup fields now reflect the state of the state of the about method for their field.  If the about indicates they cannot be modified then the trianagle is not drawn fully."
  ], 
  "revision_id": "1006540"
 }, 
 {
  "author": "rcm", 
  "date": "2005-01-14T13:26:08.000000Z", 
  "msg": [
   "Simple refactoring"
  ], 
  "revision_id": "1006539"
 }, 
 {
  "author": "rcm", 
  "date": "2005-01-14T13:24:28.000000Z", 
  "msg": [
   "Moved the moving between fields out of the text fields and up to the interaction handler allowing both fields and objects to be tabbed to.", 
   "Fixed two problems with drawing outside of the views areas.  This particularly affected tables where text fields where extending into the next columns, and scrolling views where the content was not kept to within the scroll area."
  ], 
  "revision_id": "1006538"
 }, 
 {
  "author": "rcm", 
  "date": "2004-12-20T18:04:05.000000Z", 
  "msg": [
   "Drop-downs (lookup) on already set fields now replace the current selection with the new selection.", 
   "Programmatically updated references within objects are now updated on screen.", 
   "Value parameter fields in action dialogs are now accepting default values, and allowing the user to change them.  Previously the fields would default to their NakedValue type's default just before the method was executed.", 
   "Fixed bug in debug view for the overlay view, which prevented the debug from displaying.", 
   "Removed the drop-down arrow from the drop-down selection list.", 
   "Adjusted the position of the drop-down arrow so it wasn't on the border of the empty/icon field", 
   "Fixed the painting so that only the damaged area of the UI is repainted, saving from the expenses of repainting the entire screen everytime the mouse moved."
  ], 
  "revision_id": "1006537"
 }, 
 {
  "author": "rcm", 
  "date": "2004-12-20T17:55:16.000000Z", 
  "msg": [
   "Added an error dialog box that is to be displayed when exceptions occur in reflectively called code.", 
   "All reflection methods in the Java reflection now, by default, will display the error dialog when reflectively called method fails with an exception."
  ], 
  "revision_id": "1006536"
 }
]