[
 {
  "author": "dag", 
  "date": "2014-05-07T20:06:20.208301Z", 
  "msg": [
   "Typo fixes"
  ], 
  "revision_id": "1593128"
 }, 
 {
  "author": "dag", 
  "date": "2014-05-07T19:58:20.832136Z", 
  "msg": [
   "Javadoc and typo fixes."
  ], 
  "revision_id": "1593127"
 }, 
 {
  "author": "dag", 
  "date": "2014-05-07T19:42:21.860156Z", 
  "msg": [
   "Fix typos and add some Javadoc and @Override tags"
  ], 
  "revision_id": "1593126"
 }, 
 {
  "author": "ggregory", 
  "date": "2014-05-07T19:35:45.861424Z", 
  "msg": [
   "ThreadContext.ContextStack is already (conceptually) a collection of Strings so it should be a Collection<String> instead of it's sub-interface ThreadContextStack being a Collection<String>. What's the value of ThreadContextStack now? Should we keep it as a placeholder? It is not documented in its Javadoc. Note that all implementations of ContextStack are implementations of ThreadContextStack, so this change has no effect on implementors. Note that Log4jLogEvent holds a ContextStack so this makes it a Collection<String> which happens to save a lot of work for XML and JSON IO for the Jackson based receivers and layouts I am working on."
  ], 
  "revision_id": "1593125"
 }, 
 {
  "author": "dag", 
  "date": "2014-05-07T19:31:05.317245Z", 
  "msg": [
   "Fix typo"
  ], 
  "revision_id": "1593124"
 }
]