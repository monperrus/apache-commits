[
 {
  "author": "jycli", 
  "date": "2004-02-10T22:28:04.000000Z", 
  "msg": [
   "Fix for bugzilla bug report 24111.", 
   "The string values for both positive and nagative zero are 0. However,", 
   "a number div 0 returns Infinity, a number div -0 returns -Infinity."
  ], 
  "revision_id": "337839"
 }, 
 {
  "author": "jycli", 
  "date": "2004-02-09T21:16:00.000000Z", 
  "msg": [
   "Applying Joanne Tone's (joannet@ca.ibm.com) patch for", 
   "bugzilla bug report 26030.", 
   "Do not suppress Xalan specified extension element namespace, unless they", 
   "are declared as extension element namespaces by users"
  ], 
  "revision_id": "337838"
 }, 
 {
  "author": "igorh", 
  "date": "2004-02-06T22:47:13.000000Z", 
  "msg": [
   "Fix for Bugzilla Bug 25416."
  ], 
  "revision_id": "337837"
 }, 
 {
  "author": "igorh", 
  "date": "2004-02-05T23:59:22.000000Z", 
  "msg": [
   "Fix for Bugzilla Bug 26075."
  ], 
  "revision_id": "337836"
 }, 
 {
  "author": "santiagopg", 
  "date": "2004-02-05T22:53:42.000000Z", 
  "msg": [
   "Patch for Bugzilla 19194. I've made the following changes: (i) re-wrote Predicate.typeCheck() (ii) the predicate optimizations are turned off for FilterExpr, as they don't apply in all cases (iii) sync up Step, StepPattern and FilterExpr to accomodate the new changes. The interaction between these classes is non-trivial, and the code for some optimizations is brittle, to say the least. As part of this patch, I rolled back a patch to FilterExpr and fixed Bugzilla 25783 which wasn't really related despite what the bug report states. For the 2.0 work, it would be nice to place optimization code in separate classes so that it can be easily maintained and also easily deactivated via a command-line flag."
  ], 
  "revision_id": "337835"
 }
]