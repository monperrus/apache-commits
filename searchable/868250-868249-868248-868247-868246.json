[
 {
  "author": "dlr", 
  "date": "2007-12-01T03:28:30.206003Z", 
  "msg": [
   "A follow-up to r28172, fixing the build on Windows.", 
   "* build.conf", 
   "(libsvn_ra): Add the header file private\\svn_ra_private.h to the", 
   "\"msvc-export\" field.", 
   "Found by: markphip"
  ], 
  "revision_id": "868250"
 }, 
 {
  "author": "dlr", 
  "date": "2007-11-30T23:21:06.843617Z", 
  "msg": [
   "JavaHL: Regenerate Subversion error codes as of r28174.", 
   "* subversion/bindings/javahl/src/org/tigris/subversion/javahl/ErrorCodes.java", 
   "(badRelativePath, fsNoSuchNodeOrigin, fsSqliteReadonly,", 
   "raSerfSspiInitialisationFailed): Add new error codes."
  ], 
  "revision_id": "868249"
 }, 
 {
  "author": "dlr", 
  "date": "2007-11-30T23:06:08.184922Z", 
  "msg": [
   "Make 'svn mergeinfo' and its underlying APIs error out when talking to", 
   "a pre-1.5 repository.", 
   "This change includes tests capable of being run against either a 1.4", 
   "or 1.5 server (and was run against both).", 
   "[ Note: All but subversion/libsvn_ra/util.c was committed in r28172. ]", 
   "* TODO-1.5-branch", 
   "Remove TODO item completed by this commit.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_mergeinfo_get_merged, svn_client_mergeinfo_get_available):", 
   "Document that an error with the code SVN_ERR_UNSUPPORTED_FEATURE is", 
   "returned when the server doesn't support Merge Tracking.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_mergeinfo): Ditto, with note about inapplicability to", 
   "ra_local.", 
   "* subversion/include/private/svn_ra_private.h", 
   "Add new Subversion-private header file, which currently declares", 
   "only the svn_ra__assert_mergeinfo_capable_server() API.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__get_repos_mergeinfo): Add SQUELCH_INCAPABLE parameter, used", 
   "to ignore a SVN_ERR_UNSUPPORTED_FEATURE returned by a server that", 
   "doesn't support Merge Tracking.", 
   "* subversion/libsvn_client/mergeinfo.c", 
   "Include private/svn_ra_private.h.", 
   "(svn_client__get_repos_mergeinfo): Add SQUELCH_INCAPABLE parameter, used", 
   "to ignore a SVN_ERR_UNSUPPORTED_FEATURE returned by a server that", 
   "doesn't support Merge Tracking.", 
   "(svn_client__get_wc_or_repos_mergeinfo): Adjust for", 
   "svn_client__get_repos_mergeinfo() API change.", 
   "(get_mergeinfo): Return an error if the server doesn't support Merge", 
   "Tracking.  Improve APR pool usage.", 
   "(svn_client_mergeinfo_get_available): Call get_mergeinfo() first to", 
   "leverage its new server Merge Tracking capabilities check.", 
   "* subversion/libsvn_client/copy.c", 
   "(calculate_target_mergeinfo): Adjust for svn_client__get_repos_mergeinfo()", 
   "API change", 
   "* subversion/libsvn_client/merge.c", 
   "(filter_reflected_revisions): Ditto.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "Include private/svn_ra_private.h.", 
   "(svn_ra_get_mergeinfo): Return an error if the server doesn't", 
   "support Merge Tracking.", 
   "* subversion/libsvn_ra/util.c", 
   "Add new Subversion-private header file, which currently defines", 
   "only the svn_ra__assert_mergeinfo_capable_server() API.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_get_mergeinfo): Remove SVN_RA_SVN_CAP_MERGEINFO capabilities", 
   "check, which is now handled by ra_loader.c.", 
   "* subversion/libsvn_ra_neon/mergeinfo.c", 
   "(svn_ra_neon__get_mergeinfo)))): Don't squelch a 501 HTTP status", 
   "code (which is otherwise subsequently converted into an", 
   "svn_error_t) encountered while making a mergeinfo REPORT request.", 
   "* subversion/libsvn_ra_serf/mergeinfo.c", 
   "(svn_ra_serf__get_mergeinfo): Don't squelch an SVN_ERR_UNSUPPORTED_FEATURE", 
   "error encountered while making a mergeinfo REPORT request.", 
   "* subversion/tests/cmdline/mergeinfo_tests.py", 
   "Import the server_has_mergeinfo() function.", 
   "(adjust_error_for_server_version): Add a new function that returns", 
   "the expected error regexp appropriate for the server version used by", 
   "the test suite.", 
   "(no_mergeinfo): Leverage adjust_error_for_server_version(), and", 
   "adjust for run_and_verify_mergeinfo() API changes.", 
   "(mergeinfo): Provide a very basic implementation of the test.", 
   "* subversion/tests/cmdline/svntest/actions.py", 
   "(run_and_verify_mergeinfo): Replace EXPECTED_PATHS, EXPECTED_SOURCE_PATHS,", 
   "and EXPECTED_ELIGIBLE_REVS parameters with EXPECTED_OUTPUT, which is a", 
   "dict of the format:", 
   "{ path : { source path : (merged ranges, eligible ranges) } }", 
   "Correct/add parser expectations, adjust for parser API changes, and", 
   "re-implement function accordingly.  Be sure to bail out early if a", 
   "1.4 server is detected.", 
   "* subversion/tests/cmdline/svntest/parsers.py", 
   "(MergeinfoReportParser): Add a comment showing some sample output.", 
   "(MergeinfoReportParser.STATE_MERGED_RANGES,", 
   "MergeinfoReportParser.STATE_ELIGIBLE_RANGES): Add new constants,", 
   "the latter a replacement for STATE_ELIGIBLE_REVS.", 
   "(MergeinfoReportParser.STATE_TRANSITIONS): Correct/add possible", 
   "state transitions.", 
   "(MergeinfoReportParser.STATE_TOKENS): Correct/add tokens present in", 
   "the output.", 
   "(MergeinfoReportParser.__init__): Replace \"paths\", \"source_paths\",", 
   "and \"eligible_revs\" instance members with \"report\" dict.  Add", 
   "\"cur_target_path\" and \"cur_source_path\" members to maintain some", 
   "necessary parser state.  Replace \"state_to_storage\" dict with", 
   "\"parser_callbacks\" dict of callback functions.", 
   "(parsed_target_path, parsed_source_path, parsed_merged_ranges,", 
   "parsed_eligible_ranges): Add parser callback functions invoked from", 
   "the \"parser_callbacks\" dict.", 
   "(parse): Replace use of \"state_to_storage\" with \"parser_callbacks\"."
  ], 
  "revision_id": "868248"
 }, 
 {
  "author": "dlr", 
  "date": "2007-11-30T23:00:21.973760Z", 
  "msg": [
   "Stylistic tweak, follow-up to r28172, and output fix in case an error", 
   "occurs.", 
   "* subversion/svn/mergeinfo-cmd.c", 
   "(svn_cl__mergeinfo): Check for NULL explicitly, rather than using", 
   "the \"not\" operator when not in a boolean context.  Update comment", 
   "to account for r28172.  Improve output when an error is encountered."
  ], 
  "revision_id": "868247"
 }, 
 {
  "author": "dlr", 
  "date": "2007-11-30T22:55:57.750758Z", 
  "msg": [
   "Make 'svn mergeinfo' and its underlying APIs error out when talking to", 
   "a pre-1.5 repository.", 
   "This change includes tests capable of being run against either a 1.4", 
   "or 1.5 server (and was run against both).", 
   "[ Note: subversion/libsvn_ra/util.c was missed in r28172, and", 
   "subsequently committed in r28174. ]", 
   "* TODO-1.5-branch", 
   "Remove TODO item completed by this commit.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_mergeinfo_get_merged, svn_client_mergeinfo_get_available):", 
   "Document that an error with the code SVN_ERR_UNSUPPORTED_FEATURE is", 
   "returned when the server doesn't support Merge Tracking.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_mergeinfo): Ditto, with note about inapplicability to", 
   "ra_local.", 
   "* subversion/include/private/svn_ra_private.h", 
   "Add new Subversion-private header file, which currently declares", 
   "only the svn_ra__assert_mergeinfo_capable_server() API.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__get_repos_mergeinfo): Add SQUELCH_INCAPABLE parameter, used", 
   "to ignore a SVN_ERR_UNSUPPORTED_FEATURE returned by a server that", 
   "doesn't support Merge Tracking.", 
   "* subversion/libsvn_client/mergeinfo.c", 
   "Include private/svn_ra_private.h.", 
   "(svn_client__get_repos_mergeinfo): Add SQUELCH_INCAPABLE parameter, used", 
   "to ignore a SVN_ERR_UNSUPPORTED_FEATURE returned by a server that", 
   "doesn't support Merge Tracking.", 
   "(svn_client__get_wc_or_repos_mergeinfo): Adjust for", 
   "svn_client__get_repos_mergeinfo() API change.", 
   "(get_mergeinfo): Return an error if the server doesn't support Merge", 
   "Tracking.  Improve APR pool usage.", 
   "(svn_client_mergeinfo_get_available): Call get_mergeinfo() first to", 
   "leverage its new server Merge Tracking capabilities check.", 
   "* subversion/libsvn_client/copy.c", 
   "(calculate_target_mergeinfo): Adjust for svn_client__get_repos_mergeinfo()", 
   "API change", 
   "* subversion/libsvn_client/merge.c", 
   "(filter_reflected_revisions): Ditto.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "Include private/svn_ra_private.h.", 
   "(svn_ra_get_mergeinfo): Return an error if the server doesn't", 
   "support Merge Tracking.", 
   "* subversion/libsvn_ra/util.c", 
   "Add new Subversion-private header file, which currently defines", 
   "only the svn_ra__assert_mergeinfo_capable_server() API.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_get_mergeinfo): Remove SVN_RA_SVN_CAP_MERGEINFO capabilities", 
   "check, which is now handled by ra_loader.c.", 
   "* subversion/libsvn_ra_neon/mergeinfo.c", 
   "(svn_ra_neon__get_mergeinfo)))): Don't squelch a 501 HTTP status", 
   "code (which is otherwise subsequently converted into an", 
   "svn_error_t) encountered while making a mergeinfo REPORT request.", 
   "* subversion/libsvn_ra_serf/mergeinfo.c", 
   "(svn_ra_serf__get_mergeinfo): Don't squelch an SVN_ERR_UNSUPPORTED_FEATURE", 
   "error encountered while making a mergeinfo REPORT request.", 
   "* subversion/tests/cmdline/mergeinfo_tests.py", 
   "Import the server_has_mergeinfo() function.", 
   "(adjust_error_for_server_version): Add a new function that returns", 
   "the expected error regexp appropriate for the server version used by", 
   "the test suite.", 
   "(no_mergeinfo): Leverage adjust_error_for_server_version(), and", 
   "adjust for run_and_verify_mergeinfo() API changes.", 
   "(mergeinfo): Provide a very basic implementation of the test.", 
   "* subversion/tests/cmdline/svntest/actions.py", 
   "(run_and_verify_mergeinfo): Replace EXPECTED_PATHS, EXPECTED_SOURCE_PATHS,", 
   "and EXPECTED_ELIGIBLE_REVS parameters with EXPECTED_OUTPUT, which is a", 
   "dict of the format:", 
   "{ path : { source path : (merged ranges, eligible ranges) } }", 
   "Correct/add parser expectations, adjust for parser API changes, and", 
   "re-implement function accordingly.  Be sure to bail out early if a", 
   "1.4 server is detected.", 
   "* subversion/tests/cmdline/svntest/parsers.py", 
   "(MergeinfoReportParser): Add a comment showing some sample output.", 
   "(MergeinfoReportParser.STATE_MERGED_RANGES,", 
   "MergeinfoReportParser.STATE_ELIGIBLE_RANGES): Add new constants,", 
   "the latter a replacement for STATE_ELIGIBLE_REVS.", 
   "(MergeinfoReportParser.STATE_TRANSITIONS): Correct/add possible", 
   "state transitions.", 
   "(MergeinfoReportParser.STATE_TOKENS): Correct/add tokens present in", 
   "the output.", 
   "(MergeinfoReportParser.__init__): Replace \"paths\", \"source_paths\",", 
   "and \"eligible_revs\" instance members with \"report\" dict.  Add", 
   "\"cur_target_path\" and \"cur_source_path\" members to maintain some", 
   "necessary parser state.  Replace \"state_to_storage\" dict with", 
   "\"parser_callbacks\" dict of callback functions.", 
   "(parsed_target_path, parsed_source_path, parsed_merged_ranges,", 
   "parsed_eligible_ranges): Add parser callback functions invoked from", 
   "the \"parser_callbacks\" dict.", 
   "(parse): Replace use of \"state_to_storage\" with \"parser_callbacks\"."
  ], 
  "revision_id": "868246"
 }
]