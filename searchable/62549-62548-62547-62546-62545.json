[
 {
  "author": "jwoolley", 
  "date": "2001-11-26T18:22:41.000000Z", 
  "msg": [
   "Um, Brain?  :)"
  ], 
  "revision_id": "62549"
 }, 
 {
  "author": "aaron", 
  "date": "2001-11-26T16:34:36.000000Z", 
  "msg": [
   "Fix minor typo in last patch: the pool has a different name."
  ], 
  "revision_id": "62548"
 }, 
 {
  "author": "ianh", 
  "date": "2001-11-26T16:25:52.000000Z", 
  "msg": [
   "Speed up table operations.", 
   "This patch adds a cache to each element in an apr_table_t.", 
   "The cache consists of a 32-bit int containing the first 4 bytes", 
   "of the element's key, converted to uppercase.", 
   "This makes it possible to replace strcasecmp calls with inline", 
   "integer comparisons.  If the integer comparison fails, we can skip", 
   "the strcasecmp.  If the integer comparison succeeds, we can at", 
   "least skip the first 4 bytes of the strcmp.", 
   "In the httpd, this roughly doubles the speed of the", 
   "apr_table_get and apr_table_setn operations.", 
   "* A rewrite of apr_table_overlap() that uses a red-black tree", 
   "instead of qsort", 
   "* Cliff's faster version of the prefix computation macro", 
   "* apr_palloc instead of apr_pcalloc for creating the", 
   "array inside a table", 
   "an important note:", 
   "* This patch increases the size of the apr_table_entry_t struct,", 
   "so it requires a \"make clean.\"", 
   "Submitted by:\t Brian Pane <bpane@pacbell.net>", 
   "Reviewed by:\t Ian Holsman, Cliff Woolley"
  ], 
  "revision_id": "62547"
 }, 
 {
  "author": "bnicholes", 
  "date": "2001-11-26T15:53:37.000000Z", 
  "msg": [
   "Fixed a memory leak in apr_accept.  Prevents memory from continually", 
   "being allocated and never freed until the process goes down."
  ], 
  "revision_id": "62546"
 }, 
 {
  "author": "wrowe", 
  "date": "2001-11-24T21:15:43.000000Z", 
  "msg": [
   "The missing Win32 apr_get_groupid, brings Win32 back to par with Unix."
  ], 
  "revision_id": "62545"
 }
]