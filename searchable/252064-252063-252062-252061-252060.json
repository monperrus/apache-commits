[
 {
  "author": "gdaniels", 
  "date": "2001-06-22T13:05:23.000000Z", 
  "msg": [
   "Don't save the registry on every deployment at init() time.  Might", 
   "be cleaner to have private internalDeploy() methods instead, but", 
   "this works for now.", 
   "Also allow controlling debugging to a file log via the .properties."
  ], 
  "revision_id": "252064"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-22T13:03:31.000000Z", 
  "msg": [
   "Fix another deployment bug."
  ], 
  "revision_id": "252063"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-21T17:15:47.000000Z", 
  "msg": [
   "A couple more..."
  ], 
  "revision_id": "252062"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-21T17:14:04.000000Z", 
  "msg": [
   "Clean out debugging printlns."
  ], 
  "revision_id": "252061"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-21T17:03:10.000000Z", 
  "msg": [
   "Rework the registries to be a) persisted as XML, and b) accessed through", 
   "the AxisEngine APIs instead of directly.", 
   "The Admin class is now a bunch of static utility methods which know how", 
   "to rip apart XML and turn it into calls to deploy things into AxisEngines.", 
   "As a result, the output of the Admin.list() routine is now in a much more", 
   "suitable form to store/run back through the admin process (and in fact", 
   "this is how we store stuff now).", 
   "Part of the above was adding accessors for getting/setting a Handler's", 
   "name (i.e. the name its registered under).", 
   "The Default* registries are gone, replaced by the AxisClient and", 
   "AxisServer having knowledge about their appropriate defaults, and", 
   "deploying them if there's a problem reading the registry files.", 
   "AxisEngine now init()s itself at construction time.", 
   "Notes:", 
   "* The Supplier pattern isn't really getting used right now.  Since we've", 
   "decided to make Handlers stateless in most/all cases, this doesn't", 
   "affect much at the moment, but it might warrant some more thought.", 
   "* TypeMappings still need working out.  Right now we're not serializing", 
   "service-specific type mappings at all, and still using Java", 
   "serialization for the engine mappings.  Also, we need a way of", 
   "expressing non-bean mappings.  All this is slated to come in the next", 
   "few days."
  ], 
  "revision_id": "252060"
 }
]