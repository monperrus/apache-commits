[
 {
  "author": "not", 
  "date": "2010-03-01T22:52:49.566794Z", 
  "msg": [
   "Backlevel OBR from 1.5.0-SNAPSHOT to 1.4.3 which still seems to work, and allows the build to work."
  ], 
  "revision_id": "917775"
 }, 
 {
  "author": "antelder", 
  "date": "2010-03-01T22:52:43.280824Z", 
  "msg": [
   "TUSCANY-3479, take out this part of the tests for now"
  ], 
  "revision_id": "917774"
 }, 
 {
  "author": "veithen", 
  "date": "2010-03-01T22:48:04.771566Z", 
  "msg": [
   "Setting up svn:ignore for Eclipse."
  ], 
  "revision_id": "917773"
 }, 
 {
  "author": "hwright", 
  "date": "2010-03-01T22:46:45.771608Z", 
  "msg": [
   "JavaHL: Return properties as byte[] throughout the callback interfaces.", 
   "We use byte[] in place of String because there could be binary data in the", 
   "property, and the conversion to String would truncate the property at any", 
   "NULL bytes.", 
   "[ in subversion/bindings/javahl/ ]", 
   "* tests/org/apache/subversion/javahl/BasicTests.java", 
   "(testBasicProperties, getMergeinfoRevisions, testCommitRevprops,", 
   "MyProplistCallback, collectProperties, collectLogMessages,", 
   "BlameCallbackImpl):", 
   "Update for byte[] property values.", 
   "* native/ProplistCallback.cpp", 
   "(makeMapFromHash): Put the byte array into the Map.", 
   "* src/org/apache/subversion/javahl/callback/LogMessageCallback.java", 
   "(LogMessageCallback): Change the interface to return byte[].", 
   "* src/org/apache/subversion/javahl/callback/ProplistCallback.java", 
   "(singlePath): Same.", 
   "* src/org/apache/subversion/javahl/callback/BlameCallback.java", 
   "(singleLine): Same.", 
   "* src/org/tigris/subversion/javahl/SVNClient.java", 
   "(logMessages, properties, blame): Update wrappers for the byte[] switch.", 
   "* src/org/tigris/subversion/javahl/ProplistCallbackImpl.java", 
   "(ProplistCallback): Wrap the byte[] for backward compat."
  ], 
  "revision_id": "917772"
 }, 
 {
  "author": "mamta", 
  "date": "2010-03-01T22:46:40.277484Z", 
  "msg": [
   "DERBY-4538", 
   "Committing patch DERBY4538_NoReferencingClause_diff_v2.txt attached to jira DERBY-4538(removed redundant ; as pointed by Knut).", 
   "This changes the UPDATE and DELETE statement codes to be little bit smarter when they decide what columns should be part of the read map. Currently, as soon as these 2 nodes find that there are relevant triggers on the table, we decide to read all the columns from the table. With the patch, we will check if all the relevant tiggers have missing REFERENCING clause. If yes, then do not need to read all the columns. Just the columns needed by the UPDATE/DELETE statement. This will get rid of OOM we run into when the table has LOB columns BUT only in the case when the UPDATE/DELETE statement does not reference the LOB column and all the triggers defined on them have missing REFERENCING clause. I have enabled the TriggerTests in lowmem suite with the missing REFERENCING clause cases enabled. For all the other test cases, I simply return from those test cases without actually testing it because we do not have fix for those cases yet. The lowmem suite does not get run regularly and when it is run, as the name indicates, it runs with limited heap. I wanted us to be able to run these tests with default heap as well. To achieve that, I am including the TriggerTests in lang suite too.", 
   "The INSERT table with INSERT triggers work fine already without my changes as long as the INSERT statement does not reference the LOB column."
  ], 
  "revision_id": "917771"
 }
]