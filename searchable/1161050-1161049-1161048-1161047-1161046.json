[
 {
  "author": "rbircher", 
  "date": "2011-08-24T11:11:35.159177Z", 
  "msg": [
   "Adding de part 1"
  ], 
  "revision_id": "1161050"
 }, 
 {
  "author": "mduerig", 
  "date": "2011-08-24T11:08:25.470418Z", 
  "msg": [
   "typo"
  ], 
  "revision_id": "1161049"
 }, 
 {
  "author": "ningjiang", 
  "date": "2011-08-24T11:06:37.300509Z", 
  "msg": [
   "Add git ignore entry for the IntellijIDEA project files"
  ], 
  "revision_id": "1161048"
 }, 
 {
  "author": "gpetracek", 
  "date": "2011-08-24T11:05:00.012741Z", 
  "msg": [
   "updated myfaces test dependency"
  ], 
  "revision_id": "1161047"
 }, 
 {
  "author": "stsp", 
  "date": "2011-08-24T10:58:57.686298Z", 
  "msg": [
   "Auto-resolve 'local move vs. incoming edit' conflicts for files during update.", 
   "Redirect content and prop edits which affect WORKING to the moved-to", 
   "location of moved-away files. This transforms the tree-conflict into", 
   "text and/or property conflicts.", 
   "New BASE information (last changed rev, pristine checksum, etc.) is first", 
   "installed at the original location and is then copied to the moved-to node.", 
   "After the update, the moved-to node appears as a copy of the new BASE and", 
   "any local changes at the moved-to location appear relative to the new BASE.", 
   "This is different from how normal copies behave.", 
   "* subversion/libsvn_wc/wc-queries.sql", 
   "(STMT_INSERT_NODE): Add a new parameter for tweaking the moved_here column.", 
   "Needed to avoid losing the moved_here information during the update.", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(insert_working_node): Set the moved_here column based on the", 
   "insert_working_baton's IS_MOVE member.", 
   "(svn_wc__db_op_copy_file): Add new parameter IS_MOVE which indicates", 
   "that the file copy is part of a move. Passed on to insert_working_node()", 
   "via its baton.", 
   "* subversion/libsvn_wc/wc_db.h", 
   "(svn_wc__db_op_copy_file): Update declaration for new IS_MOVE parameter.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(file_baton): Add MOVED_TO_ABSPATH member. For moved-away nodes the", 
   "LOCAL_ABSPATH points at the original location.", 
   "(make_file_baton): Put moved-to info into the file baton.", 
   "(check_tree_conflict): New parameter MOVED_TO_ABSPATH. If the caller", 
   "specifies this, assume the node has been moved away and do not flag", 
   "a tree conflict in a \"local delete vs. incoming edit\" situation.", 
   "(delete_entry, add_directory, open_directory, add_file): Update callers", 
   "of check_tree_conflict(), passing NULL for MOVED_TO_ABSPATH.", 
   "(open_file): Pass the MOVED_TO_ABSPATH from the file baton to", 
   "check_tree_conflict to avoid a \"local delete vs. incoming edit\" conflict", 
   "n case the file was moved away.", 
   "(merge_file): Apply incoming changes for moved-away nodes at the new", 
   "location.", 
   "(close_file): As previous. Also update the BASE node at the original", 
   "location of moved-away nodes, and copy of the new BASE info to the", 
   "working node at the moved-to location. Use the new location of moved-away", 
   "nodes during notification.", 
   "(svn_wc_add_repos_file4): Update svn_wc__db_op_copy_file() caller.", 
   "* subversion/tests/cmdline/tree_conflict_tests.py", 
   "(f_dels): Split the move part of this set out into ...", 
   "(f_moves): ... this new set.", 
   "(up_sw_file_mod_onto_del): Do not expect a tree conflict for nodes", 
   "in the f_moves set. Adjust test description.", 
   "(up_sw_file_del_onto_mod, up_sw_dir_add_onto_add,", 
   "merge_file_mod_onto_not_file, merge_file_del_onto_not_same,", 
   "merge_file_del_onto_not_file): Add the f_moves set to expected tree", 
   "conflicts. No functional change."
  ], 
  "revision_id": "1161046"
 }
]