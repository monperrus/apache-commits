[
 {
  "author": "", 
  "date": "2012-01-31T20:19:17.571984Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12968", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-15T21:04:27.972261Z", 
   "Log Message:", 
   "-----------", 
   "When measuring in one dimension, the RET doesn\u2019t scroll when it should since there was no scroll rect due to premature return in RichEditableTextContainerManager.drawBackgroundAndSetScrollRect.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs: SDK-24728", 
   "Reviewer:", 
   "Tests run: checkintests, TextArea, TextInput, NumericStepper, ComboBox", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/RichEditableTextContainerManager.as"
  ], 
  "revision_id": "1282513"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:19:15.562958Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12709", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-09T13:54:43.569815Z", 
   "Log Message:", 
   "-----------", 
   "Add support for custom context menus for RichEditableText. There are limitations to this support since it needs additional API for TextArea, TextInput, and RichEditableText to do it correctly and we need better support from TLF as well.  We should plan to do this in the next release.", 
   "For this release you can add a custom context menu to RichEditableText if it is done before the first mouse over, mouse hover or focusIn event on the RichEditableText field.  TLF will enable/disable the clipboard properties based on the editing mode and the selection.  These will show in the menu if the clipboardMenu is enabled.", 
   "You can only remove the context menu once the component is using a flowComposer rather than a factory, which means it has had focus.", 
   "The contextMenu must be set on RichEditableText, not on TextArea or TextInput.  So for TextArea this is ta.textDisplay.contextMenu or for TextInput this is ti.textDisplay.contextMenu.  If it is set on TextArea or TextInput you won't see it since the RichEditableText menu will be displayed instead.", 
   "QE notes:", 
   "Doc notes: see above", 
   "Bugs: partial fix for SDK-23926", 
   "Reviewer:", 
   "Tests run: checkintests", 
   "Is noteworthy for integration:  yes - perhaps?  custom menu support for RichEditableText with severe limitations", 
   "Modified Paths:", 
   "--------------", 
   "/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/RichEditableTextContainerManager.as"
  ], 
  "revision_id": "1282512"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:19:13.558341Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12433", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-03T15:01:54.719958Z", 
   "Log Message:", 
   "-----------", 
   "Finish reverting the part of rev 12322 which added custom menu support since it only works on the player and not on AIR.  SDK-23926 has been reopened.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs: SDK-23926", 
   "Reviewer:", 
   "Tests run: checkintests, TextArea", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/RichEditableTextContainerManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1282511"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:19:11.701326Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12322", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-01T14:50:07.041950Z", 
   "Log Message:", 
   "-----------", 
   "Add support for custom context menus to TextArea, TextInput and RichEditableText.  TLF has a context menu but we now allow it to be modified, or a totally different one (or none) to be used instead.", 
   "When pasting text into a field with multiline equal to false, strip the newlines from the pasted text.", 
   "For composite operations, the RET changing event is now dispatched only at the beginning of the composite operation, rather than at the beginning of each individual operation in the composite operation.  It is not possible to a composite operation as it is for individual operations.", 
   "The RET change event is now dispatched at flow operation complete rather than flow operation end.  At this point the text flow is no longer in an intermediary state and it can be modified if desired in the user's event handler.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs: SDK-23950, SDK-23926, SDK-24263", 
   "Reviewer: Gordon", 
   "Tests run: checkintests", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/RichEditableTextContainerManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1282510"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:19:07.278591Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 11934", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-11-18T15:01:08.366461Z", 
   "Log Message:", 
   "-----------", 
   "Remove dependencies RichEditableText api calls had on using an interactionManager.  API calls can be done regardless of the values of editable and selectable which just apply to interactive editing.", 
   "The api calls are: insertText, appendText, selectRange, selectAll, setFormatOfRange, getFormatOfRange.  The first 4 methods can change the selection and when that occurs, a selectionChange event will be dispatched.", 
   "The editingMode should not be changed any event handler while in the middle of a text operation.  This includes the selectionChange event.", 
   "I may make a few more tweaks to this code as I continue to test and find edge conditions.", 
   "QE notes:", 
   "Doc notes: editingMode should not be changed by any event handler while in the middle of a text operation", 
   "Bugs: SDK-23638", 
   "Reviewer: Gordon", 
   "Tests run: checkintests, TextArea, TextInput, NumericStepper, ComboBox", 
   "Is noteworthy for integration: yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/RichEditableTextContainerManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1282509"
 }
]