[
 {
  "author": "jvs", 
  "date": "2010-06-23T01:23:42.927309Z", 
  "msg": [
   "Fix CHANGES.txt to move backported fixes from Trunk to Release 0.6.0"
  ], 
  "revision_id": "957095"
 }, 
 {
  "author": "cmpilato", 
  "date": "2010-06-23T01:22:00.939419Z", 
  "msg": [
   "Finish issue #3661: RA get-locks inefficiencies.", 
   "Add depth support to the process of querying repository locks in the", 
   "repository and RA layers for the sake of performance.  Prior to this", 
   "change, 'svn ls -v SOME_PATH' (non-recursive) asked the repository for", 
   "the locks on all paths in and under SOME_PATH (fully recursive),", 
   "resulting in potentially far more information being transmitted across", 
   "the network than is necessary.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_get_locks2): New.", 
   "(svn_fs_get_locks): Deprecate this.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(fs_vtable_t): Add 'depth' to get_locks() vtable function.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_get_locks2): New.", 
   "(svn_fs_get_locks): Make this just a wrapper around svn_fs_get_locks2().", 
   "* subversion/libsvn_fs_base/lock.h", 
   "(svn_fs_base__get_locks): Add 'depth' parameter.", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(struct locks_get_args): Add 'depth' member.", 
   "(svn_fs_base__allow_locked_operation, txn_body_get_locks): Update", 
   "call to svn_fs_bdb__locks_get().", 
   "(svn_fs_base__get_locks): Add 'depth' parameter, used to populate", 
   "new baton member.", 
   "* subversion/libsvn_fs_base/bdb/locks-table.h", 
   "(svn_fs_bdb__locks_get): Add 'depth' parameter.", 
   "* subversion/libsvn_fs_base/bdb/locks-table.c", 
   "(svn_fs_bdb__locks_get): Add 'depth' parameter, and use it to filter", 
   "the reported depths.", 
   "* subversion/libsvn_fs_fs/lock.h", 
   "(svn_fs_fs__get_locks): Add 'depth' paramater.", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(get_locks_filter_baton_t): New baton structure.", 
   "(get_locks_filter_func): New callback wrapper function.", 
   "(svn_fs_fs__get_locks): Add 'depth' paramater, and employ the", 
   "get_locks_filter_func and baton when calling walk_digest_files().", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_fs_get_locks2): New revision of svn_repos_fs_get_locks()", 
   "which adds support for a specified 'depth'.", 
   "(svn_repos_fs_get_locks): Deprecate this.", 
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(svn_repos_fs_get_locks2): Was svn_repos_fs_get_locks().  Now calls", 
   "svn_fs_get_locks2().", 
   "(svn_repos_fs_get_locks): Make this just a wrapper around", 
   "svn_repos_fs_get_locks2(), now.", 
   "* subversion/mod_dav_svn/reports/get-locks.c", 
   "(dav_svn__get_locks_report): Look for new (optional) depth", 
   "parameter, and use it to drive what's now a call to", 
   "svn_repos_fs_get_locks2().", 
   "* build.conf", 
   "(svnserve): Add dependency on libsvn_ra.", 
   "* subversion/svnserve/serve.c", 
   "(get_locks): Look for optional depth in the get-locks request, and", 
   "use it in what is now a call to svn_repos_fs_get_locks2().", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_locks2): New flavor of svn_ra_get_lock(), this time with", 
   "depth support.", 
   "(svn_ra_get_lock): Deprecate.", 
   "* subversion/libsvn_ra/ra_loader.h", 
   "(svn_ra__vtable_t): Add 'depth' parameter to 'get_locks' function.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "(svn_ra_get_locks2): New.", 
   "(svn_ra_get_locks): Make this just a wrapper around", 
   "svn_ra_get_locks2().", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__get_locks): Add 'depth' parameter, and now use", 
   "svn_repos_fs_get_locks2().", 
   "* subversion/libsvn_ra_neon/ra_neon.h", 
   "(svn_ra_neon__get_locks): Add 'depth' parameter.", 
   "* subversion/libsvn_ra_neon/get_locks.c", 
   "(get_locks_baton_t): Add 'path' and 'requested_depth' members.", 
   "(getlocks_end_element): Filter unwanted locks out of the hash.", 
   "(svn_ra_neon__get_locks): Add 'depth' parameter, embed it into the", 
   "get-locks request, and populate the new baton members.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(svn_ra_serf__get_locks): Add 'depth' parameter.", 
   "* subversion/libsvn_ra_serf/getlocks.c", 
   "(lock_context_t): Add 'path' and 'requested_depth' members.", 
   "(end_getlocks): Filter unwanted locks out of the hash.", 
   "(create_getlocks_body): Stuff depth value from baton into the", 
   "request body.", 
   "(svn_ra_serf__get_locks): Add 'depth' parameter,", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_get_locks): Add 'depth' parameter, and pass it to the server", 
   "in case the server can make use of it.  Also, filter out unwanted", 
   "locks (returned by servers that *can't* make use of it).", 
   "* subversion/libsvn_client/list.c", 
   "(svn_client_list2): Now use svn_ra_get_locks2(), passing depth along."
  ], 
  "revision_id": "957094"
 }, 
 {
  "author": "dkulp", 
  "date": "2010-06-23T01:00:11.087729Z", 
  "msg": [
   "Fix some issues where BindingProvider interface might not be loadable", 
   "from the classloader of the other interface."
  ], 
  "revision_id": "957093"
 }, 
 {
  "author": "sebb", 
  "date": "2010-06-23T00:54:03.068967Z", 
  "msg": [
   "Support basic MapMessage generation"
  ], 
  "revision_id": "957092"
 }, 
 {
  "author": "sebb", 
  "date": "2010-06-23T00:52:41.684262Z", 
  "msg": [
   "Use commas as output separator"
  ], 
  "revision_id": "957091"
 }
]