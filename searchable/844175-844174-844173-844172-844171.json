[
 {
  "author": "rooneg", 
  "date": "2002-12-12T03:22:11.120202Z", 
  "msg": [
   "* README", 
   "(Repository Access): add libsvn_ra_svn to the discussion and example."
  ], 
  "revision_id": "844175"
 }, 
 {
  "author": "gstein", 
  "date": "2002-12-12T01:57:40.921124Z", 
  "msg": [
   "Continued work on using the dependency graph to build SWIG bindings.", 
   "The code now generates lines for compilation of the wrappers and", 
   "linking them, but there is more work for actually running SWIG to", 
   "generate the .c files, then defining all the right stuff in", 
   "Makefile.in.", 
   "* build/gen_base.py", 
   "(GeneratorBase.__init__): construct a new Config object for holding", 
   "config data. Primarily, this is to avoid reference loops between", 
   "the generator and the objects in the dependency graph; now they", 
   "all refer to a common config object. The SWIG languages and the", 
   "version number are stored in the config.", 
   "Stop passing the build.conf \"type\" to the Target instantiation, as", 
   "this is entirely emboded in the target subclass now. Also, pass", 
   "the config object rather than the version.", 
   "Remove the code to add a dependency between the install area and", 
   "the (new) target object. We'll rely on the target object to add", 
   "the appropriate dependencies (e.g. SWIG targets insert multiple", 
   "dependencies).", 
   "For the intra-library dependency generation, use the dependency", 
   "graph rather than self.targets[]. The former is complete, while", 
   "self.targets really only contains the build.conf sections. Rather", 
   "than testing types specifically, only look for targets which are", 
   "an instance of a subclass of TargetLinked.", 
   "(GeneratorBase.compute_hdr_deps): don't try to compute deps for the", 
   "SWIG-generated .c files.", 
   "(MsvcProjectGenerator._extension_map): remove the 'script' mappings", 
   "as the TargetScript class handles that type now.", 
   "(DependencyGraph.get_all_sources): get all the sources for a", 
   "particular dependency arc type.", 
   "(class SWIGLibrary): new node type for SWIG library targets.", 
   "(lang_abbrev {}): define some \"standard\" abbreviations for the", 
   "languages", 
   "(class Target, class TargetExe, class TargetScript, class TargetLib,", 
   "class TargetDoc): dropped the leading underscore on these", 
   "classes so they are \"public\" which makes them available to the", 
   "generator subclasses (e.g. in gen_make.py)", 
   "(class TargetLinked): new Target subclass used as the superclass for", 
   "TargetExe and TargetLib, meaning the target is linked by libtool.", 
   "(Target.__init__): change params to take a config rather than a", 
   "version, and to drop the \"type\". shift all the type-specific tests", 
   "into their respective subclasses. change the error message to use", 
   "the class name rather than the type name.", 
   "(Target.find_sources): change the error message to use the class", 
   "name rather than the type name.", 
   "(Target.add_dependencies): add a dependency between the install area", 
   "and this target object.", 
   "(Target.write_dsp): small tweak to drop .type checking and use the", 
   "class of the target to determine the template.", 
   "(Target.__cmp__): compare two targets based on their names. if the", 
   "other object is not a target, then compare it to the name of this", 
   "target. This allows for a test like: target == 'some-string'", 
   "(TargetExe.__init__, TargetLib.__init__): new constructor to set", 
   ".objext and to override the default .output value.", 
   "(TargetScript.add_dependencies): add a dependency so the script gets", 
   "installed into the appropriate area.", 
   "(TargetSWIG.__init__): new constructor to set .objext and .libext", 
   "for later computation of build targets.", 
   "(TargetSWIG.add_dependencies): add dependencies to the graph for", 
   "building the wrapper .c files for each language, for compiling", 
   "them, and for linking them into language-specific extensions. Then", 
   "add a dependency for the linked extension to the particular", 
   "installation area.", 
   "(class Config): new class to hold config data.", 
   "[whew]", 
   "* build/gen_make.py", 
   "(MakefileGenerator._extension_map): remove the 'script' mappings", 
   "(MakefileGenerator.write_symbols): renamed from write_ra_modules, as", 
   "we want to write out arbitrary sets of symbols before generating", 
   "the dependency lines. the one caller was changed.", 
   "Revamp to scan the dependency graph rather than the .targets (and", 
   ".target_names) structures, since the graph is more complete.", 
   "Collect up the SWIG wrapper libraries, organized by language. The", 
   "use of this data is disabled for now, as I'm not sure we really", 
   "need it (at first, I thought it would be needed for installation,", 
   "but we may already have this data in the swig-$LANG targets).", 
   "(MakefileGenerator.write): use the dependency graph rather than", 
   ".targets/.target_names for scanning for items to build.", 
   "Change the target_ob.type checks to test for particular subclasses", 
   "instead.", 
   "Remove the special tests and output for 'custom == \"apache-mod\"'", 
   "because we'll generate custom compilation code at the point where", 
   "we write out the dependency lines.", 
   "Update references to gen_base.Target and its subclasses to remove", 
   "the leading underscore.", 
   "Update reference to self.version to grab it from self.cfg now.", 
   "When generating the shortcut Make targets, use the graph instead", 
   "of self.targets. Also, skip any SWIG libraries (for now) as we", 
   "don't have a good name to refer to them by.", 
   "Change the code which writes out object file dependency", 
   "information to also generate custom compilation blocks."
  ], 
  "revision_id": "844174"
 }, 
 {
  "author": "blair", 
  "date": "2002-12-12T01:41:50.047184Z", 
  "msg": [
   "More Swig/Python improvements from Brandon Ehle.", 
   "* Makefile.in:", 
   "Add the ability for package maintainers to provide a --prefix=", 
   "command or for users to provide --home=~ if they don't have write", 
   "permissions to lib/python2.2/site-packages.", 
   "* subversion/bindings/swig/INSTALL:", 
   "Corrected documentation for swig-py-ext and install-swig-py-ext.", 
   "* subversion/bindings/swig/python/setup.py:", 
   "Documentation corrections and removed unused code."
  ], 
  "revision_id": "844173"
 }, 
 {
  "author": "sussman", 
  "date": "2002-12-12T00:07:38.887924Z", 
  "msg": [
   "Followup to r4094 (issue #714), thanks to Peter Davis: if attempting", 
   "to revert a missing dir that's also scheduled for addition, don't", 
   "refuse.  Let it happen, lest the user be encouraged to run 'svn up'", 
   "and screw the wc.", 
   "Note that we're still not preventing wc lossage yet.  \"svn mkdir foo;", 
   "rm -rf foo; svn up foo\" still puts the wc into an unrecoverable state.", 
   "* adm_ops.c (svn_wc_revert): only send failed-revert notification is", 
   "dir is missing and *not* scheduled for addition."
  ], 
  "revision_id": "844172"
 }, 
 {
  "author": "dlr", 
  "date": "2002-12-11T23:19:58.269011Z", 
  "msg": [
   "* Makefile.in:", 
   "(PYTHON_DISTUTIL): Committed the rest of the fix by Brandon Ehle for", 
   "the out-of-directory compile problem.  I merged that chunk by hand", 
   "and missed the first line -- thanks to Nicholas Riley for pointing", 
   "that out."
  ], 
  "revision_id": "844171"
 }
]