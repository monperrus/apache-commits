[
 {
  "author": "jcompagner", 
  "date": "2006-01-23T14:02:59.000000Z", 
  "msg": [
   "not final", 
   "So that i can overwrite the lastModified() because that returns 0 if the file was deleted... (then i want to return Time.now() don't know if this can be default behaviour)"
  ], 
  "revision_id": "458805"
 }, 
 {
  "author": "jcompagner", 
  "date": "2006-01-23T14:00:38.000000Z", 
  "msg": [
   "use concurrent map"
  ], 
  "revision_id": "458804"
 }, 
 {
  "author": "jcompagner", 
  "date": "2006-01-23T14:00:19.000000Z", 
  "msg": [
   "class cast exception fix in remove"
  ], 
  "revision_id": "458803"
 }, 
 {
  "author": "jdonnerstag", 
  "date": "2006-01-23T11:46:56.000000Z", 
  "msg": [
   "fixed little reload bug in MarkupParser"
  ], 
  "revision_id": "458802"
 }, 
 {
  "author": "jdonnerstag", 
  "date": "2006-01-23T07:15:54.000000Z", 
  "msg": [
   "An Ajax example based on Dojo which", 
   "a) does NOT use AjaxHandler and IMO is easier to understand (less magic)", 
   "b) introduces InterfaceRequestTarget to define a request target based on an Interface which must implement only one method. The component must implement the interface", 
   "c) It defines an IAjaxListener (event listener) and IAjaxResponder (request target) which define the necessary listener/render pair", 
   "d) Either by means of extending InterfaceRequestTarget or directly in the IAjaxResponder method it now very easy to put an envelope around the response as required by e.g. Rico"
  ], 
  "revision_id": "458801"
 }
]