[
 {
  "author": "jsong", 
  "date": "2005-02-17T00:22:41.996287Z", 
  "msg": [
   "Update controls/infra/tch to make tch distributable."
  ], 
  "revision_id": "154099"
 }, 
 {
  "author": "kylem", 
  "date": "2005-02-16T23:03:55.599009Z", 
  "msg": [
   "Added new 'optional' attribute to the @PropertySet annotation type for declaring control property sets.  An 'optional' property set is one that may/may not be associated with a control.  Its presence (or absence) may imply semantics that aren't usefully represented by having PropertySet default values.   If a PropertySet is optional, none of the contained properties can be exposed to client via getters, because there is no appropriate property value representation for an 'unset' property.  A Control Implementation class can tell if a PropertySet is set for a given instance using the ControlBeanContext.getXXXPropertySet APIs.  These methods will now return 'null' for optional properties that have not been set, whereas they return a 'default' value for the PropertySet if it is not optional (the current behavior).  The optional attribute is 'false' by default, so @PropertySet semantics are", 
   "behaviorally back compat with previous usage if optional attribute is unspecified.", 
   "This resolves BEEHIVE JIRA-179."
  ], 
  "revision_id": "154098"
 }, 
 {
  "author": "djd", 
  "date": "2005-02-16T22:59:35.980600Z", 
  "msg": [
   "Create a single get connection method for the internal system procedures", 
   "as a step to not using DriverManager for support under JSR 169."
  ], 
  "revision_id": "154097"
 }, 
 {
  "author": "djd", 
  "date": "2005-02-16T22:55:11.440263Z", 
  "msg": [
   "New all DECIMAL DataValueDescriptor instances indirectly to", 
   "handle different implementations for JSR 169 and J2SE."
  ], 
  "revision_id": "154096"
 }, 
 {
  "author": "mss", 
  "date": "2005-02-16T22:50:58.769154Z", 
  "msg": [
   "*grrr* of course we need the B_SCRIPTDIR variant as we would break DESTDIR", 
   "else."
  ], 
  "revision_id": "154095"
 }
]