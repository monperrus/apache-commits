[
 {
  "author": "cmpilato", 
  "date": "2003-03-24T03:37:36.122886Z", 
  "msg": [
   "* subversion/libsvn_client/cat.c", 
   "(svn_client_cat): Fix a minor spacing issue."
  ], 
  "revision_id": "845515"
 }, 
 {
  "author": "gstein", 
  "date": "2003-03-24T03:26:17.937060Z", 
  "msg": [
   "Brane pointed out that omitting the class name from the exception", 
   "arguments prevents an \"EXCEPTION\" line from being printed. Correct", 
   "that by changing how we decide to print exception information.", 
   "* tests/clients/cmdline/svntest/testcase.py (TestCase.run): change the", 
   "logic for deciding how to print exception information."
  ], 
  "revision_id": "845514"
 }, 
 {
  "author": "fitz", 
  "date": "2003-03-23T21:58:45.047512Z", 
  "msg": [
   "More work on Issue 1192: Add a couple of exception classes and a", 
   "helper function to svntest.  Converted basic_tests.py and", 
   "prop_tests.py to the new model and tested over ra_local.  Please", 
   "review and comment.", 
   "* subversion/tests/clients/cmdline/basic_tests.py: Converted all", 
   "functions to raise instead of return 1 or 0.  Converted all 'if foo:", 
   "return 1' tests to use the new exception model.", 
   "* subversion/tests/clients/cmdline/prop_tests.py: Converted all", 
   "functions to raise instead of return 1 or 0.  Converted all 'if foo:", 
   "return 1' tests to use the new exception model.", 
   "* subversion/tests/clients/cmdline/svntest/__init__.py: New class", 
   "SVNAnyOutput", 
   "* subversion/tests/clients/cmdline/svntest/actions.py: New exception", 
   "classes SVNUnexpectedOutput, SVNUnexpectedStdout,", 
   "SVNUnexpectedStderr, SVNExpectedStdout, SVNExpectedStderr.", 
   "(run_and_verify_svn): New function to run svn and do various output", 
   "checks.", 
   "* subversion/tests/clients/cmdline/svntest/main.py: doco augmento."
  ], 
  "revision_id": "845513"
 }, 
 {
  "author": "bdenny", 
  "date": "2003-03-23T18:37:04.980963Z", 
  "msg": [
   "Resolves Issue #1076:", 
   "- print 'I' (not '?') for ignored files when named explicitly on the", 
   "command line, or when --no-ignores is used.", 
   "- print nothing for nonexistent files (unversioned and do not exist on disk)", 
   "* subversion/include/svn_wc.h", 
   "(enum svn_wc_status_kind): Add status kind svn_wc_status_ignored.", 
   "* subversion/libsvn_wc/status.c", 
   "(assemble_status): Set text_status to svn_wc_status_ignored", 
   "for ignored files.", 
   "(collect_ignore_patterns): New function, extracted from", 
   "add_unversioned_items.", 
   "(add_unversioned_item): New function, extracted from", 
   "add_unversioned_items.", 
   "(add_unversioned_items): Extract helper functions mentioned above.", 
   "(svn_wc_statuses): If there is no entry for PATH, handle it", 
   "correctly as an unversioned item.", 
   "* subversion/clients/cmdline/status.c", 
   "(generate_status_code): Return 'I' for svn_wc_status_ignored.", 
   "(svn_cl__print_status_list): Skip printing items whose status is", 
   "svn_wc_status_none.", 
   "* subversion/clients/cmdline/main.c", 
   "(svn_cl__cmd_table): Add 'I' to output of 'svn help status'.", 
   "* subversion/tests/clients/cmdline/stat_tests.py", 
   "(status_for_unignored_file)", 
   "[renamed from status_blank_for_unignored_file]: Check that text", 
   "status is 'I' for a file marked ignored, if specified explicitly", 
   "or --no-ignores is given.", 
   "(status_for_nonexistent_file): Check that no output is given for a", 
   "file that is not versioned and does not exist.", 
   "* doc/book/book/ch06.xml", 
   "Give example of using 'svn status --no-ignore'", 
   "* doc/book/book/ch08.xml", 
   "Add explanation of 'I' to 'svn status' reference"
  ], 
  "revision_id": "845512"
 }, 
 {
  "author": "kraai", 
  "date": "2003-03-23T13:55:02.271209Z", 
  "msg": [
   "Patch from Mason Thomas.", 
   "* doc/book/book/ch00.xml: Correct English usage."
  ], 
  "revision_id": "845511"
 }
]