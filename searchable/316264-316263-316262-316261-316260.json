[
 {
  "author": "andyc", 
  "date": "2000-10-11T22:22:52.000000Z", 
  "msg": [
   "Modified architecture overview of DTD pipeline. The change", 
   "makes it easy to create a parser configuration with no", 
   "validation and without compilation dependcies on the", 
   "validation system as well! In the new model, the validator", 
   "would act as a \"tee\" to both propagate the events as well", 
   "as build the DTD grammar object."
  ], 
  "revision_id": "316264"
 }, 
 {
  "author": "andyc", 
  "date": "2000-10-11T21:44:54.000000Z", 
  "msg": [
   "Updated calls into the dtd scanner to pass the right things for", 
   "scanDTDInternalSubset. This required keeping track if the", 
   "document is standalone, which was an easy fix after the XMLDecl", 
   "was scanned."
  ], 
  "revision_id": "316263"
 }, 
 {
  "author": "lehors", 
  "date": "2000-10-11T21:41:23.000000Z", 
  "msg": [
   "fixed start and end callbacks"
  ], 
  "revision_id": "316262"
 }, 
 {
  "author": "andyc", 
  "date": "2000-10-11T21:34:31.000000Z", 
  "msg": [
   "The entity handler has to be set to the dtd scanner for the", 
   "internal subset, as well. Oops! My fault."
  ], 
  "revision_id": "316261"
 }, 
 {
  "author": "andyc", 
  "date": "2000-10-11T21:31:39.000000Z", 
  "msg": [
   "The DTD scanner wasn't being set as the entity handler before", 
   "calling XMLEntityManager#startEntity by the document scanner.", 
   "There is an open issue here, though: with the dtd scanner", 
   "being the entity handler, that means that the document scanner", 
   "can't propogate startEntity events for the dtd entity and", 
   "parameter entities to the document handler. However, if we", 
   "keep the document scanner as the entity handler with the", 
   "assumption that it would propogate the event to the dtd", 
   "scanner, then we could get multiple startEntity calls for", 
   "the same entity in classes that are sinks for both document", 
   "and dtd events. An interesting problem, eh?"
  ], 
  "revision_id": "316260"
 }
]