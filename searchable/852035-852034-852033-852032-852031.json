[
 {
  "author": "kfogel", 
  "date": "2004-11-20T03:08:46.713358Z", 
  "msg": [
   "* www/propaganda.html: Put trailing slashes on URLs where appropriate.", 
   "Followed up by r12028."
  ], 
  "revision_id": "852035"
 }, 
 {
  "author": "kfogel", 
  "date": "2004-11-20T03:03:46.756467Z", 
  "msg": [
   "* www/propaganda.html: Add Netfilter and TWiki as projects using SVN,", 
   "Patch by: Kenneth Porter <shiva@sewingwitch.com>", 
   "From issue #2130."
  ], 
  "revision_id": "852034"
 }, 
 {
  "author": "kfogel", 
  "date": "2004-11-20T02:51:57.903832Z", 
  "msg": [
   "Move a shared function from a command-specific file to util.c:", 
   "* subversion/clients/cmdline/delete-cmd.c", 
   "(svn_cl__may_need_force): Move from here...", 
   "* subversion/clients/cmdline/util.c", 
   "(svn_cl__may_need_force): ...to here, with a new comment.", 
   "The problem was that other commands, in other source files, would call", 
   "this, and it would return a wrapped error, but that error's FILE/LINE", 
   "info would be from the wrong source file.  So you could run a merge,", 
   "but get an error from delete-cmd.c, which was slightly confusing."
  ], 
  "revision_id": "852033"
 }, 
 {
  "author": "kfogel", 
  "date": "2004-11-20T02:37:17.442766Z", 
  "msg": [
   "Properly handle the merging of property changes into a deleted file.", 
   "Patch by: Peter S. Housel <housel@acm.org>", 
   "me", 
   "From issue #2132.", 
   "* subversion/libsvn_client/diff.c", 
   "(merge_props_changed): Filter SVN_ERR_UNVERSIONED_RESOURCE errors", 
   "as well as SVN_ERR_ENTRY_NOT_FOUND errors.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_merge_prop_diffs): Document when SVN_ERR_UNVERSIONED_RESOURCE", 
   "is returned, since we depend on it now.", 
   "* subversion/tests/clients/cmdline/merge_tests.py: Import SVNAnyOutput.", 
   "(merge_prop_change_to_deleted_target): New test.", 
   "(test_list): Run it."
  ], 
  "revision_id": "852032"
 }, 
 {
  "author": "sussman", 
  "date": "2004-11-20T01:21:40.349081Z", 
  "msg": [
   "Locking branch:  new fs tests to check locking abilities.  one more to come.", 
   "* libsvn_fs_base/tree.c, tree.h", 
   "(svn_fs_base__get_path_kind):  return svn_node_none if path doesn't exist.", 
   "* libsvn_fs_base/lock.c", 
   "(txn_body_lock):  allow reservations on non-existent paths.  store", 
   "them in the lock-table as if they were files.", 
   "* libsvn_fs_base/err.c", 
   "(svn_fs_base__err_lock_expired):  whoops, return proper error code.", 
   "guess these tests are useful!", 
   "* tests/libsvn_fs_base/fs-test.c", 
   "(test_funcs):             list new tests.", 
   "(basic_lock):             new fs test.", 
   "(lock_credentials):       new fs test.", 
   "(final_lock_check):       new fs test.", 
   "(lock_dir_propchange):    new fs test.", 
   "(lock_name_reservation):  new fs test.", 
   "(lock_expiration):        new fs test."
  ], 
  "revision_id": "852031"
 }
]