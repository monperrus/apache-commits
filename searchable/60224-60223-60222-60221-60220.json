[
 {
  "author": "trawick", 
  "date": "2000-06-19T00:45:40.000000Z", 
  "msg": [
   "Repair C++ compatibility in ap_config.h, apr_file_io.h,", 
   "apr_network_io.h, and apr_thread_proc.h.", 
   "Submitted by:\tTyler J. Brooks <tylerjbrooks@home.com>"
  ], 
  "revision_id": "60224"
 }, 
 {
  "author": "trawick", 
  "date": "2000-06-18T16:28:55.000000Z", 
  "msg": [
   "make a tiny cleanup in ap_unix_file_cleanup();", 
   "add a comment about possible code reuse in ap_open_stderr();"
  ], 
  "revision_id": "60223"
 }, 
 {
  "author": "dreid", 
  "date": "2000-06-18T10:58:21.000000Z", 
  "msg": [
   "Tidy up the debugging documentation."
  ], 
  "revision_id": "60222"
 }, 
 {
  "author": "trawick", 
  "date": "2000-06-18T02:38:51.000000Z", 
  "msg": [
   "ap_dupfile():", 
   "If the file being duped was buffered, existing code marked the new", 
   "handle as buffered too.  However, it neglected to allocate a buffer", 
   "or lock for it."
  ], 
  "revision_id": "60221"
 }, 
 {
  "author": "trawick", 
  "date": "2000-06-17T21:14:09.000000Z", 
  "msg": [
   "Win32 changes to ap_read() and ap_fgets():", 
   ". ap_read() wasn't checking for *nbytes <= 0 on entry; it now handles", 
   "it like the Unix code", 
   ". the buffering logic in ap_read() started \"while (lasterror == 0...\"", 
   "but didn't initialize lasterror", 
   ". ap_read() returns APR_EOF if it hits eof before giving the caller any", 
   "data", 
   ". if ap_read() hits an error after reading data, error reporting is", 
   "deferred to the next call", 
   ". ap_fgets() clobbered the '\\n'"
  ], 
  "revision_id": "60220"
 }
]