[
 {
  "author": "kfogel", 
  "date": "2008-02-09T17:15:03.598951Z", 
  "msg": [
   "Say \"full\" instead of \"all\" for the interactive conflict resolution", 
   "behavior in which the entirety of a file is chosen, since users might", 
   "have wrongly inferred that \"all\" meant \"all of the remaining files\".", 
   "This follows up to r29189 and r29228.", 
   "Found by: glasser", 
   "(He pointed out the problem with \"all\", I proposed \"full\", no one objected.)", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_conflict_choice_t): svn_wc_conflict_choose_mine_full and", 
   "svn_wc_conflict_choose_theirs_full replace", 
   "svn_wc_conflict_choose_mine_all and svn_wc_conflict_choose_theirs_all.", 
   "(svn_wc_resolved_conflict3): Adjust doc string.", 
   "* subversion/svn/cl.h", 
   "(svn_cl__accept_t): svn_cl__accept_mine_full and svn_cl__accept_theirs_full", 
   "replace svn_cl__accept_mine_all and svn_cl__accept_theirs_all.", 
   "(SVN_CL__ACCEPT_MINE_FULL, SVN_CL__ACCEPT_THEIRS_FULL): New names for", 
   "SVN_CL__ACCEPT_MINE_ALL and SVN_CL__ACCEPT_THEIRS_ALL.", 
   "* subversion/svn/main.c", 
   "(svn_cl__options, svn_cl__cmd_table): Adjust", 
   "* subversion/svn/conflict-callbacks.c", 
   "(svn_cl__accept_from_word, svn_cl__conflict_handler): Adjust.", 
   "* subversion/svn/resolved-cmd.c", 
   "(svn_cl__resolved): Adjust.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_resolved2): Adjust doc string.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc__merge_internal): Adjust.", 
   "* subversion/libsvn_wc/props.c", 
   "(maybe_generate_propconflict): Adjust.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(resolve_conflict_on_entry): Adjust.", 
   "* subversion/tests/cmdline/basic_tests.py", 
   "(automatic_conflict_resolution): Adjust.", 
   "* subversion/tests/cmdline/update_tests.py", 
   "(update_accept_conflicts): Adjust.", 
   "* subversion/tests/cmdline/getopt_tests_data/svn_help_log_switch_stdout:", 
   "Adjust."
  ], 
  "revision_id": "869325"
 }, 
 {
  "author": "glasser", 
  "date": "2008-02-08T23:47:56.183499Z", 
  "msg": [
   "Yet another node-origins-cache-for-FSFS implementation!  This one", 
   "hopefully is the best of all worlds: create a new style of node", 
   "IDs which encode the origin revision directly into the node ID, but", 
   "continue to have an on-disk cache for old node IDs, but save disk", 
   "space by using cmpilato's patch to store up to 36 IDs in each file.", 
   "Note that because new node IDs don't need to be cached, we can remove", 
   "the \"gather new node IDs during commit and cache them in bulk\" code,", 
   "which in fact even removes the need for any bulk-cache-writing code at", 
   "all.", 
   "Also, properly handle node-IDs that have never been committed.", 
   "* subversion/libsvn_fs_fs/fs.h", 
   "(SVN_FS_FS__MIN_NO_GLOBAL_IDS_FORMAT): New.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(path_node_origin): Tweak to calculate the path to a node-origins", 
   "file based on the node-id minus its last character.", 
   "(write_final_rev): Depending on FS format, make new IDs either from", 
   "revnum or from counter.  Remove node_origins hash parameter.", 
   "(write_current, write_final_current): Only write out node/copy IDs", 
   "for old formats.", 
   "(struct commit_baton): Remove node_origins hash.", 
   "(commit_body): Only read in node/copy IDs for old formats.  Don't", 
   "pass node_origins hash to write_final_rev.", 
   "(svn_fs_fs__commit): Remove post-commit node origins cache update.", 
   "(svn_fs_fs__create): Don't write initial values of node/copy ID", 
   "counters for new file format.", 
   "(recover_body): Only calculate maximum node/copy IDs in the", 
   "repository for old formats.", 
   "(get_node_origins_from_file, set_node_origins_for_file): New helper", 
   "functions.", 
   "(svn_fs_fs__get_node_origin): Now use get_node_origins_from_file()", 
   "to get a hash of node origins, and find what it seeks in the hash.", 
   "(svn_fs_fs__set_node_origin): Now use set_node_origins_for_file(),", 
   "fiddling with data as necessary to do so.", 
   "(svn_fs_fs__set_node_origins): Remove.", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__set_node_origins): Remove.", 
   "* subversion/libsvn_fs_fs/structure", 
   "Change description of node-ID cache to mention hash files.  Describe", 
   "new node-ID structure.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(fs_node_origin_rev): Handle uncommitted ('_') node IDs properly.", 
   "If the node-ID contains a '-', return the number after it.", 
   "Patch by: cmpilato", 
   "me"
  ], 
  "revision_id": "869324"
 }, 
 {
  "author": "hwright", 
  "date": "2008-02-08T22:14:18.699532Z", 
  "msg": [
   "Followup to r29129: Add revisions to svnmerge-integrated which were", 
   "backported previous to initializing the branch with 'svnmerge init'.", 
   "Suggested by: glasser"
  ], 
  "revision_id": "869323"
 }, 
 {
  "author": "hwright", 
  "date": "2008-02-08T22:07:15.393061Z", 
  "msg": [
   "Merge r29218 from trunk: Fix some Ruby tests failures caused by a", 
   "sequencing bug in libsvn_fs_base/fs.c:base_open().", 
   "Approved by: +1: cmpilato, epg"
  ], 
  "revision_id": "869322"
 }, 
 {
  "author": "epg", 
  "date": "2008-02-08T22:02:43.464929Z", 
  "msg": [
   "Note that r29243 depends on r29242."
  ], 
  "revision_id": "869321"
 }
]