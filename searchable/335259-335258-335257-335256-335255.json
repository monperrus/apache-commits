[
 {
  "author": "morten", 
  "date": "2001-07-27T08:33:20.000000Z", 
  "msg": [
   "Integrated fix for problem with count() function for certain iterators.", 
   "PR:\t\tBugzilla 1407", 
   "Obtained from:\tn/a", 
   "Submitted by:\tJohn Howard <johnh@schemasoft.com>", 
   "Reviewed by:\tMorten Jorgensen <morten@xml.apache.org>"
  ], 
  "revision_id": "335259"
 }, 
 {
  "author": "sboag", 
  "date": "2001-07-27T02:35:55.000000Z", 
  "msg": [
   "Commented out NumberFormat m_formatter = NumberFormat.getNumberInstance();.", 
   "Mukund reported:", 
   "a minor improvement for alphabetize.xsl is to comment out the line", 
   "//NumberFormat m_formatter = NumberFormat.getNumberInstance();", 
   "in NodeSorter.java. The variable m_formatter does not seem to be used anywhere, and the performance difference is:", 
   "Before: alphabetize         10    90    5108   196       156       34.58     OK", 
   "After    : alphabetize         10    70    4316   196       156       40.93     OK"
  ], 
  "revision_id": "335258"
 }, 
 {
  "author": "dleslie", 
  "date": "2001-07-26T14:04:37.000000Z", 
  "msg": [
   "Added placeholder for using native API."
  ], 
  "revision_id": "335257"
 }, 
 {
  "author": "garyp", 
  "date": "2001-07-26T06:28:55.000000Z", 
  "msg": [
   "Fix bugzilla bug 2639 (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2639) where buffer was overflowing because the expansion of the Unicode characters into multiple UTF8 characters was not being properly taken into account.  Many thanks to Gunnlaugur Thor Briem for his \"multiply by three\" trick."
  ], 
  "revision_id": "335256"
 }, 
 {
  "author": "garyp", 
  "date": "2001-07-25T06:22:40.000000Z", 
  "msg": [
   "Fix bug 2727 (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2727).  Attributes which contain a namespace prefix are indicated by placing a negative number in the appropriate entry in the m_dataOrQName array.  The absolute value of this number is an entry in m_data.  However, in this example, there were no text nodes before the first namespaced attribute so the entry in m_data had an array index of 0.  This resulted in an entry of zero, not a negative number, in m_dataOrQName.  This situation got several routines which tested for < 0 confused.  I looked at several ways of fixing this but decided to just always allocate m_data.elementAt(0) entry to a dummy entry.  The other solutions involved runtime checking which could slow down this piece of code and I felt that wasting one entry was worth it to not slow down the run time."
  ], 
  "revision_id": "335255"
 }
]