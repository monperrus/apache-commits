[
 {
  "author": "dlr", 
  "date": "2006-12-08T00:29:34.955435Z", 
  "msg": [
   "Merge the javahl-diff-summarize branch into trunk, adding JavaHL", 
   "bindings for the svn_client_diff_summarize() API.", 
   "[ in subversion/bindings/java/javahl/ ]", 
   "* native/SVNClient.h", 
   "Forward declare the DiffSummaryReceiver class.", 
   "(diffSummarize): Declare new method.", 
   "* native/SVNClient.cpp", 
   "Add include of DiffSummarReceiver.h.", 
   "(SVNClient::diffSummarize): Add new method which invokes", 
   "svn_client_diff_summarize().", 
   "* native/DiffSummaryReceiver.h", 
   "* native/DiffSummaryReceiver.cpp", 
   "Add DiffSummaryReceiver class.", 
   "* native/org_tigris_subversion_javahl_SVNClient.cpp", 
   "Include DiffSummaryReceiver.h.", 
   "(Java_org_tigris_subversion_javahl_SVNClient_diffSummarize): Add JNI", 
   "binding.", 
   "* src/org/tigris/subversion/javahl/SVNClientInterface.java", 
   "* src/org/tigris/subversion/javahl/SVNClient.java", 
   "* src/org/tigris/subversion/javahl/SVNClientSynchronized.java", 
   "(diffSummarize): Add new API", 
   "* src/org/tigris/subversion/javahl/DiffSummaryReceiver.java", 
   "A new Subversion diff summarization interface.", 
   "* src/org/tigris/subversion/javahl/DiffSummary.java", 
   "A new data object for use with the DiffSummaryReceiver interface.", 
   "* src/org/tigris/subversion/javahl/tests/BasicTests.java", 
   "Import java.util.HashMap.", 
   "(testDiffSummarize): New test for SVNClientInterface.diffSummarize(),", 
   "which performs a recursive diff summary, ignoring ancestry.  This", 
   "test is currently failing, causing a JVM segfault.", 
   "(DiffSummaries): Basic implementation of the DiffSummaryReceiver", 
   "interface, for testDiffSummarize()."
  ], 
  "revision_id": "862675"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-08T00:21:09.625076Z", 
  "msg": [
   "On the javahl-diff-summarize branch: Fix bindings for the", 
   "svn_client_diff_summarize() API, removing the bug mentioned in r22599.", 
   "Improve test case and API.", 
   "[ in subversion/bindings/java/javahl/ ]", 
   "* native/DiffSummaryReceiver.cpp", 
   "(onSummary): Remove FIXME comment (now fixed).", 
   "* native/org_tigris_subversion_javahl_SVNClient.cpp", 
   "(Java_org_tigris_subversion_javahl_SVNClient_diffSummarize): Pass", 
   "jdiffSummaryReceiver parameter to C++ DiffSummaryReceiver", 
   "constructor, rather than jthis, fixing the but mentioned in r22599.", 
   "* src/org/tigris/subversion/javahl/DiffSummary.java", 
   "(propsChanged): Rename from isPropsChanged().", 
   "(toString): Return the path.", 
   "(DiffKind.equals): Implement to compare kind.", 
   "(DiffKind.hashCode): Implement to match equals().", 
   "(DiffKind.toString): Return text corresponding to diff kind.", 
   "* src/org/tigris/subversion/javahl/tests/BasicTests.java", 
   "Change import of java.util.ArrayList to java.util.HashMap.", 
   "(testDiffSummarize): Expect an accurate number of diff summary", 
   "notifications, and rigorously inspect one of them for validity.", 
   "(DiffSummaries): Extend HashMap instead of ArrayList.", 
   "(DiffSummaries.onSummary): Add DiffSummary paramter to storage keyed", 
   "by path name."
  ], 
  "revision_id": "862674"
 }, 
 {
  "author": "hwright", 
  "date": "2006-12-07T18:53:16.883808Z", 
  "msg": [
   "On the multiple moves branch:", 
   "Merge the svn_client_[copy,move] and svn_client_[copy,move]_into APIs.  The", 
   "idea of the new APIs is to Do The Right Thing when given a list of source paths", 
   "and a destination path.  The new APIs also have a flag to preserve compatibility", 
   "with the changes introduced in r18315 to fix issue 2188.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_copy4): Add the copy_as_child flag, and merge functionality from", 
   "svn_client_copy_into().", 
   "(svn_client_move5): Add the move_as_child flag, and merge functionality from", 
   "svn_client_move_into().", 
   "(svn_client_copy3, svn_client_move4): Deprecate.", 
   "(svn_client_copy_into, svn_client_move_into):  Removed.", 
   "* subversion/libsvn_client/copy.c", 
   "(svn_client_copy4): New, with multiple copy support merged from", 
   "svn_client_copy_into().  If the copy_as_child flag is set, attempt to recover", 
   "from SVN_ERR_ENTRY_EXISTS and SVN_ERR_FS_ALREADY_EXISTS errors by copying", 
   "as children of the destination.", 
   "(svn_client_move3): New, with multiple move support merged from", 
   "svn_client_move_into().  If the move_as_child flag is set, attempt to recover", 
   "from SVN_ERR_ENTRY_EXISTS and SVN_ERR_FS_ALREADY_EXISTS errors by moving", 
   "as children of the destination.", 
   "(svn_client_copy3, svn_client_move4): Call the new API.", 
   "(svn_client_copy_into, svn_client_move_into):  Removed.", 
   "* subversion/svn/move-cmd.c", 
   "(svn_cl__move): Use the new svn_client_move5() API.", 
   "* subversion/svn/copy-cmd.c", 
   "(svn_cl__copy): Use the new svn_client_copy4() API."
  ], 
  "revision_id": "862673"
 }, 
 {
  "author": "pburba", 
  "date": "2006-12-07T17:58:28.442424Z", 
  "msg": [
   "Merged revisions 22365-22597 via svnmerge from svn/trunk."
  ], 
  "revision_id": "862672"
 }, 
 {
  "author": "hwright", 
  "date": "2006-12-07T00:21:45.242235Z", 
  "msg": [
   "On the multiple moves branch:", 
   "Check for cancellation between successive wc->wc moves and copies.", 
   "* subversion/libsvn_client/copy.c", 
   "(wc_to_wc_copy): Add cancellation check."
  ], 
  "revision_id": "862671"
 }
]