[
 {
  "author": "gstein", 
  "date": "2002-02-02T00:35:01.107716Z", 
  "msg": [
   "With all the fancy revision stuff going on, we need to ensure that", 
   "this function actually *fails*. The previous stub should have done an", 
   "abort or something. We can return an error for this.", 
   "* fetch.c (svn_ra_dav__get_dated_revision): stub this properly."
  ], 
  "revision_id": "841215"
 }, 
 {
  "author": "sussman", 
  "date": "2002-02-01T23:56:45.338214Z", 
  "msg": [
   "Rewrite/optimize our post-update (and post-switch) wc processing.", 
   "It was quite terrifying to see how inefficiently we were bumping", 
   "working revs after an update finished!  Maybe updates will finish", 
   "faster now...", 
   "* wc.h, adm_ops.c (svn_wc__do_update_cleanup):  new function which is", 
   "able to recursively rewrite urls *and* set working revisions.  Works", 
   "nonrecursively on single files or dirs, too.", 
   "(recursively_tweak_entries): the recursive entry-walker.", 
   "* wc.h, entries.c (svn_wc__tweak_entry): new factorized helper func", 
   "for svn_wc__do_update_cleanup.  Makes use of fold_entry, which is a", 
   "static routine in entries.c.", 
   "* get_editor.c (close_edit):  actually use the new cleanup routine", 
   "after an update or switch."
  ], 
  "revision_id": "841214"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-02-01T22:10:17.226920Z", 
  "msg": [
   "Have clients parse dates and revisions into `svn_client_revision_t'", 
   "form, pass that along to libsvn_client.", 
   "This is part of work on issue #422; it is preliminary to making diff", 
   "(and later merge) capable of taking two paths at arbitrary revisions.", 
   "More complete error checking on revision arguments is needed in some", 
   "of the libsvn_client functions; that will be done in a second sweep", 
   "after this commit.  Mucho thanks to Greg Stein for review, tips on", 
   "constifying, etc.  And to Philip Martin for proposing", 
   "svn_client_revision_t in the first place, iirc.", 
   "* subversion/libsvn_client/client.h (svn_client__get_revision_number):", 
   "New prototype.", 
   "* subversion/libsvn_client/revisions.c", 
   "(svn_client__get_revision_number): New file, new func.", 
   "* subversion/include/svn_client.h (svn_client_revision_kind): Add", 
   "svn_client_revision_working kind.  Change svn_client_revision_current", 
   "to svn_client_revision_base, all references changed.  Doc tweaks.", 
   "(svn_client_diff): Change prototype to use two new", 
   "svn_client_revision_t start and end parameters, instead of separate", 
   "start_revision, start_date, end_revision, end_date params.  Also, move", 
   "`target' parameter to be immediately after revision params.", 
   "(svn_client_checkout, svn_client_update): Change type of `revision'", 
   "parameter to svn_client_revision_t, remove `tm' param.  Doc fixes.", 
   "(svn_client_switch): Same, and change `switch_url' to just `url'.", 
   "(svn_client_import): Doc rewrite, but leave the revision parameter", 
   "alone, it's only for the xml case.", 
   "(svn_client_log): Change type of `revision' parameter to", 
   "svn_client_revision_t.", 
   "(svn_client_move, svn_client_copy): Rename `src_rev' parameter to", 
   "`src_revision', change its type to svn_client_revision_t.", 
   "* subversion/libsvn_client/diff.c (svn_client_diff): Adjust.", 
   "* subversion/libsvn_client/log.c (svn_client_log): Adjust.  If no end", 
   "revision is given, default to the oldest commit.", 
   "* subversion/libsvn_client/copy.c (svn_client_move, svn_client_copy):", 
   "Adjust prototypes.", 
   "(setup_copy): Rename `src_rev' parameter to `src_revision', change its", 
   "type to svn_client_revision_t, adjust logic accordingly.", 
   "(repos_to_repos_copy, repos_to_wc_copy): Rename `src_rev' parameter to", 
   "`src_revision', change its type to svn_client_revision_t, adjust", 
   "revision handling accordingly.", 
   "* subversion/libsvn_client/checkout.c (svn_client_checkout): Adjust", 
   "prototype, remove revision vs date logic, and instead just call", 
   "svn_client__get_revision_number.  But also attempt an early manual", 
   "conversion of the revision, for svn_wc_get_checkout_editor et al.", 
   "* subversion/libsvn_client/switch.c (svn_client_switch): Same.", 
   "* subversion/libsvn_client/update.c (svn_client_update): Same.", 
   "* subversion/clients/cmdline/cl.h (svn_cl__opt_state_t): Fields", 
   "start_revision and end_revision become svn_client_revision_t,", 
   "replacing themselves and also start_date and end_date.", 
   "* subversion/clients/cmdline/main.c (main): Adjust initializations of", 
   "start_revision and end_revision.", 
   "(revision_from_word): New func.", 
   "(valid_revision_number): Replaces validate_revision, just handle", 
   "numbers, not words.", 
   "(parse_revision, parse_date): Rewrite, redocument.", 
   "* subversion/clients/cmdline/diff-cmd.c (svn_cl__diff): Don't pass", 
   "dates to svn_client_diff.  Set up revisions correctly.", 
   "* subversion/clients/cmdline/switch-cmd.c (svn_cl__switch): Don't pass", 
   "date to svn_client_switch.", 
   "* subversion/clients/cmdline/update-cmd.c (svn_cl__update): Don't pass", 
   "date to svn_client_update.", 
   "* subversion/clients/cmdline/commit-cmd.c (svn_cl__commit): Attempt an", 
   "early manual conversion of revision, for the xml case.", 
   "* subversion/clients/cmdline/import-cmd.c (svn_cl__import): Same.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_CLIENT_RA_ACCESS_REQUIRED, SVN_ERR_CLIENT_BAD_REVISION", 
   "SVN_ERR_CLIENT_VERSIONED_PATH_REQUIRED): New error codes.", 
   "* subversion/tests/clients/cmdline/diff_tests.py", 
   "(diff_pure_repository_update_a_file): Use \"head\" for head revision now.", 
   "Unrelated cleanups:", 
   "* subversion/libsvn_client/commit.c (send_to_repos): Change `base_dir'", 
   "param to `base_path', this matches both doc string and semantics."
  ], 
  "revision_id": "841213"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-02-01T20:58:32.430017Z", 
  "msg": [
   "Sick of svnadmin looking like the Ugly Code Once Forgetten.", 
   "* subversion/svnadmin/main.c", 
   "(svnadmin_cmd_t): New enum for subcommands.", 
   "(parse_command): New helper.", 
   "(INT_ERR): Macro for error handling.", 
   "(main): Rework the logic in this function to use the new command", 
   "enum, and the new INT_ERR macro for handling errors.  *** There were no", 
   "significant changes to the actual subcommands themselves ***."
  ], 
  "revision_id": "841212"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-02-01T19:10:25.199125Z", 
  "msg": [
   "Reworking gstein's feedback notification functions into a single", 
   "function with an action command.  He seemed to be in compliance with", 
   "this change on IRC ... hope that's still the case.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_notify_action_t): New enum for notification actions.", 
   "(svn_wc_notify_func_t): Added 'action' parameter.", 
   "(svn_wc_copy): Renamed notify_copied to notify_func.", 
   "(svn_wc_delete): Renamed notify_delete to notify_func.", 
   "(svn_wc_add): Renamed notify_added to notify_func.", 
   "(svn_wc_crawl_revisions): Renamed notify_restore to notify_func.", 
   "(svn_wc_revert): Renamed notify_revert to notify_func.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(report_revisions, svn_wc_crawl_revisions): Renamed notify_restore", 
   "to notify_func.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(mark_tree, svn_wc_delete): Renamed notify_delete to notify_func.", 
   "(svn_wc_add): Renamed notify_added to notify_func.", 
   "(svn_wc_revert): Renamed notify_revert to notify_func.", 
   "* subversion/libsvn_wc/copy.c", 
   "(svn_wc_copy): Renamed notify_copied to notify_func.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_update, svn_client_switch): Renamed notify_restore to", 
   "notify_func.", 
   "(svn_client_add, svn_client_mkdir, svn_client_copy): Renamed", 
   "notify_added to notify_func.", 
   "(svn_client_delete): Renamed notify_deleted to notify_func.", 
   "(svn_client_revert): Renamed notify_revert to notify_func.", 
   "(svn_client_move): Removed add and delete notify funcs/batons, and now", 
   "just use the one notify_func parameter.", 
   "* subversion/libsvn_client/add.c", 
   "(svn_client_add, svn_client_mkdir): Renamed notify_added to notify_func.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_wc_copy, svn_client_copy): Renamed notify_added to", 
   "notify_func.", 
   "(wc_to_wc_copy, setup_copy, svn_client_move): Removed add and delete", 
   "notify funcs/batons, and now just use the one notify_func parameter.", 
   "* subversion/libsvn_client/revert.c", 
   "(svn_client_revert): Renamed notify_revert to notify_func.", 
   "* subversion/libsvn_client/delete.c", 
   "(svn_client_delete): Renamed notify_deleted to notify_func.", 
   "* subversion/libsvn_client/update.c", 
   "(svn_client_update): Renamed notify_restore to notify_func.", 
   "* subversion/libsvn_client/switch.c", 
   "(svn_client_switch): Renamed notify_restore to notify_func.", 
   "* subversion/clients/cmdline/cl.h", 
   "(svn_cl__notify_unversioned, svn_cl__notify_added,", 
   "svn_cl__notify_deleted, svn_cl__notify_restored,", 
   "svn_cl__notify_reverted): Removed obsolete prototypes.", 
   "(svn_cl__notify_func, svn_cl__make_notify_baton): New functions.", 
   "(SVN_CL_NOTIFY): Updated macro.", 
   "* subversion/clients/cmdline/feedback.c", 
   "(svn_cl__notify_unversioned): Removed.  We don't print unversioned", 
   "items during updates like CVS.  The community has spoken (and", 
   "silence is assent).", 
   "(notify_added, notify_deleted, notify_restored, notify_reverted):", 
   "Was svn_cl__notify_added, svn_cl__notify_deleted,", 
   "svn_cl__notify_restored, and svn_cl__notify_reverted, respectively.", 
   "(svn_cl__notify_func): New single notification entry point that forks off", 
   "of the action type to various helpers.", 
   "(svn_cl__make_notify_baton): New function for generating a notify", 
   "baton (currently unexciting).", 
   "* subversion/clients/cmdline/add-cmd.c", 
   "(svn_cl__add): Actually use the SVN_CL_NOTIFY macro.  And use new", 
   "svn_cl__make_notify_baton function, too.", 
   "* subversion/clients/cmdline/delete-cmd.c", 
   "(svn_cl__delete): Same as above here.", 
   "* subversion/clients/cmdline/copy-cmd.c", 
   "(svn_cl__copy): And here.", 
   "* subversion/clients/cmdline/revert-cmd.c", 
   "(svn_cl__revert): Here, too.", 
   "* subversion/clients/cmdline/update-cmd.c", 
   "(svn_cl__update): And here.", 
   "* subversion/clients/cmdline/mkdir-cmd.c", 
   "(svn_cl__mkdir): Yep, more of the same.", 
   "* subversion/clients/cmdline/switch-cmd.c", 
   "(svn_cl__switch): Uh huh...you guessed it.", 
   "* subversion/clients/cmdline/move-cmd.c", 
   "(svn_cl__move): Same here, but also remove the second set of", 
   "notify_func/baton parameters to svn_client_move."
  ], 
  "revision_id": "841211"
 }
]