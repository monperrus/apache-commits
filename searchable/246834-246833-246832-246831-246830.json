[
 {
  "author": "gdaniels", 
  "date": "2002-04-02T18:46:24.000000Z", 
  "msg": [
   "Fix bug where we were looking at localPart where we meant namespaceURI"
  ], 
  "revision_id": "246834"
 }, 
 {
  "author": "scheu", 
  "date": "2002-04-02T14:22:11.000000Z", 
  "msg": [
   "Fix to the bean serializer submitted by Ravi Kumar.  Thanks Ravi!", 
   "The collectionIndex was not being reset properly."
  ], 
  "revision_id": "246833"
 }, 
 {
  "author": "butek", 
  "date": "2002-04-02T00:29:36.000000Z", 
  "msg": [
   "Clean up multithread test case.  It depends on the address book sample,", 
   "but the server was created from AddressBook.wsdl in the multithread", 
   "directory.  I think this was done because at one point the sample services", 
   "were undeployed before the functional-tests were run.  Since that's not", 
   "the case anymore, there's no need for the multithread test to generate its", 
   "service from WSDL; it can depend completely on the address book sample."
  ], 
  "revision_id": "246832"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-04-01T20:29:40.000000Z", 
  "msg": [
   "This should be a little better, though perhaps", 
   "still not perfect."
  ], 
  "revision_id": "246831"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-04-01T20:12:17.000000Z", 
  "msg": [
   "* Most of the switchover for the Java2WSDL Emitter to use org.apache.axis.", 
   "description.* metadata has been done and works.", 
   "* Skeletons are now emitted using org.apache.axis.description.* metadata,", 
   "and the runtime updated to use that information if available.", 
   "* Added FaultDesc for faults, disallowedMethods, SOAPAction, and stopClasses to", 
   "metadata.", 
   "* When we're using an implementation class, all the methods that could possibly", 
   "be available will be in ancestor classes (since they must implement all the", 
   "appropriate interfaces).  If we're using Java2WSDL to point at an Interface,", 
   "however, we need to walk the interface's interfaces to correctly catch all", 
   "the parental methods.  Revamp the inheritance code to handle this, as well as", 
   "being more correct about superclasses.", 
   "* We need the ServiceDesc to \"resolve\" completely at various points, for", 
   "instance:", 
   "1) When a listing of ServiceDescs is requested from an EngineConfiguration", 
   "2) When a service is instantiated in the engine, either for a call or", 
   "for automatic WSDL generation", 
   "3) When Java2WSDL is used", 
   "Basically the only variable in these situations is what classloader to use", 
   "to resolve the class name.  I'd like to have a single place where we do this,", 
   "but it should be the RIGHT place.", 
   "WARNING : Right now the Class.forName() call in WSDDService is probably NOT", 
   "going to work in servlet engines.  I'd like to get this resolved ASAP.", 
   "* Clean up various JavaDoc inconsistencies (go IDEA!)", 
   "* Print TypeMapping, not SerializationContextImpl, in debug message", 
   "* Count successful invocations for the multi-threaded test case, so we can see", 
   "what's going on.  Also put the number of threads into a variable to make it", 
   "easier to tweak.  I think the very low # of successes (for me anyway)", 
   "warrants some investigation."
  ], 
  "revision_id": "246830"
 }
]