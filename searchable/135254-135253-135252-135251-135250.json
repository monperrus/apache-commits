[
 {
  "author": "jstrachan", 
  "date": "2002-09-30T17:46:59.000000Z", 
  "msg": [
   "Removed some unnecessary debugging code and patched to make use of the new getAttributeType() method of DynaTag so that a DynaTag can work with native Expression objects and perform its own coercion."
  ], 
  "revision_id": "135254"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-30T17:40:16.000000Z", 
  "msg": [
   "Improved the reusability of the <useBean> tag so that it can be subclassed and default to a regular implementation class. This makes derivations of UseBeanTag easier to write.", 
   "Also added a simple <useList> tag which simplifies the creation and use of Lists. For example to create a new List from some arbitarary collection/enumeration/array/iterator you can do things like", 
   "<useList var=\"mylist\" values=\"${foo.iterator()}\"/>", 
   "${mylist[2]}", 
   "etc."
  ], 
  "revision_id": "135253"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-30T17:38:16.000000Z", 
  "msg": [
   "Minor patch so that DynaTag objects can declare the types of their dynamic properties to facilitate better expression type coercion.", 
   "For example a DynaTag might have an attribute which is of type Expression which the DynaTag wishes to evaluate however it wishes without it just being turned into an Object.", 
   "So this method allows DynaTag objects to return, for example, that an attribute is of type Expression.class allowing them to coerce the Expression themselves."
  ], 
  "revision_id": "135252"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-30T17:36:16.000000Z", 
  "msg": [
   "Added some extra debugging code so that the toString() correctly reports the expression text"
  ], 
  "revision_id": "135251"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-30T17:35:20.000000Z", 
  "msg": [
   "commented out the DTD so that this unit test will work in offline mode"
  ], 
  "revision_id": "135250"
 }
]