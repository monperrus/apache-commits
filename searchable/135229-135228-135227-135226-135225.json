[
 {
  "author": "jstrachan", 
  "date": "2002-09-25T08:37:51.000000Z", 
  "msg": [
   "Applied Robert Leftwich's excellent patches to add full support for <x:transform> for executing XSLT on some XML.", 
   "The XML or the XSLT can come from the tags body just like the <x:transform> tag in JSTL.", 
   "Ultimately this tag can be used to implement sophisticated XSLT pipelining such as...", 
   "<x:transform xslt=\"a.xsl\">", 
   "<x:transform xslt=\"b.xsl\">", 
   "<foo>", 
   "<bar name=\"${some.expression}\"/>", 
   "</foo>", 
   "</x:transform>", 
   "</x:transform>", 
   "which can then be used in association with servlet engines, SOAP services or just generating static content.", 
   "It'd be nice to optimize the implementation at some point so that it can work totally on SAX in the above example. But this is an awesome start.", 
   "Also do check out the groovy unit test cases such as the Schematron examples. It'd be nice to maybe generate a native Jelly implementaiton of Schematron..."
  ], 
  "revision_id": "135229"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-25T06:41:12.000000Z", 
  "msg": [
   "tidied up the cvsignore file..."
  ], 
  "revision_id": "135228"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-24T17:30:33.000000Z", 
  "msg": [
   "Added support for <border> tags via an abstract base class that we can use to implement all the various different kinds of borders.", 
   "Right now I've implemented the <titledBorder> but the others should be fairly simple also, implemented along a similar pattern."
  ], 
  "revision_id": "135227"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-24T16:49:40.000000Z", 
  "msg": [
   "Minor refactor to add the String -> File converter to the standard Jelly libraries rather than leaving it in the Ant tag library."
  ], 
  "revision_id": "135226"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-24T16:48:54.000000Z", 
  "msg": [
   "Refactored some of the code for JellySwing to reuse the new UseBeanTag which simplifies the code quite a bit.", 
   "This also allows JellySwing widgets to be customized such as", 
   "<table class=\"com.acme.MyTable\" model=\"${mymodel}\"/>", 
   "Cleaned up the code so that either widgets/models are created and added to the parent widget, or they are just exported as a variable if the 'var' attribute is specified.", 
   "Also added an introductory <font> implementation. Though the createFont() factory method doesn't seem to work very well :-("
  ], 
  "revision_id": "135225"
 }
]