[
 {
  "author": "hwright", 
  "date": "2007-07-31T15:16:57.406111Z", 
  "msg": [
   "* subversion/mod_dav_svn/reports/log.c", 
   "(log_receiver): Docstring fix."
  ], 
  "revision_id": "865970"
 }, 
 {
  "author": "hwright", 
  "date": "2007-07-31T15:00:21.325347Z", 
  "msg": [
   "On the merge-sensitive-blame branch:", 
   "Add a test for simple 'svn blame -g' functionality.", 
   "* subversion/tests/cmdline/blame_tests.py", 
   "(parse_and_verify_blame): New function.", 
   "(blame_merge_info): New test.", 
   "(test_list): Run the new test as XFail."
  ], 
  "revision_id": "865969"
 }, 
 {
  "author": "vgeorgescu", 
  "date": "2007-07-31T07:13:22.307435Z", 
  "msg": [
   "Don't convert svn_depth_unknown to svn_depth_infinity for switch and diff.", 
   "svn_depth_unknown is now a legal value for the requested depth of these", 
   "operations.  Also, using svn_depth_infinity in a depth < infinity working copy", 
   "produces incorrect results, because it is interpreted as a depth upgrade.", 
   "* subversion/svn/diff-cmd.c", 
   "(svn_cl__diff): Remove svn_depth_unknown->svn_depth_infinity conversion.", 
   "* subversion/svn/switch-cmd.c", 
   "(svn_cl__switch): Remove svn_depth_unknown->svn_depth_infinity conversion.", 
   "* subversion/libsvn_wc/diff.c", 
   "(directory_elements_diff): Recurse when depth is svn_depth_unknown."
  ], 
  "revision_id": "865968"
 }, 
 {
  "author": "cacknin", 
  "date": "2007-07-31T01:52:55.015479Z", 
  "msg": [
   "Move svnpatch generation from libsvn_client to libsvn_wc and get 'svn", 
   "diff --svnpatch' up and running for wc/wc diff.", 
   "What happens now in a wc/wc diff is libsvn_client opens an apr file", 
   "handler it passes to libsvn_wc to get filled up with ra_svn editor", 
   "commands, in clear-text.  It is libsvn_client's responsibility to", 
   "compute the temp file, that is, compress and base64'encode before", 
   "dumping to the outfile, likely stdout.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_diff4): provide with svnpatch facility", 
   "(svn_wc_diff3): deprecate", 
   "(svn_wc_write_number, svn_wc_write_string, svn_wc_write_cstring,", 
   "svn_wc_write_word, svn_wc_write_proplist, svn_wc_start_list,", 
   "svn_wc_end_list, svn_wc_write_tuple, svn_wc_write_cmd): svnpatch", 
   "marshalling functions moved from libsvn_client (see below).", 
   "* subversion/include/svn_client.h", 
   "(svn_client_write_number, svn_client_write_string,", 
   "svn_client_write_cstring, svn_client_write_word,", 
   "svn_client_write_proplist, svn_client_start_list, svn_client_end_list,", 
   "svn_client_write_tuple, svn_client_write_cmd): move and tweak those", 
   "functions into libsvn_wc (see above).", 
   "* subversion/libsvn_wc/diff.c", 
   "(edit_baton, make_editor_baton): provide structure with a stream", 
   "handler to an svnpatch_file, a list of diffables, and a token holder.", 
   "(file_baton, dir_baton): provide structure with a token field.", 
   "(make_token): new function to create tokens from edit_baton token.", 
   "(make_dir_baton, make_file_baton): provide with token arg.", 
   "(file_diff, dir_diff, directory_elements_diff): add some lines to fill", 
   "our 'diffables' array.", 
   "(svnpatch_open_root, svnpatch_open_directory,", 
   "svnpatch_close_directory, svnpatch_add_directory,", 
   "svnpatch_change_dir_prop, svnpatch_open_file, svnpatch_add_file,", 
   "svnpatch_close_file, svnpatch_change_file_prop,", 
   "svnpatch_delete_entry,svnpatch_apply_textdelta, svnpatch_close_edit):", 
   "add svnpatch-specific editor functions.", 
   "(get_svnpatch_diff_editor): initiate an svnpatch diff editor against", 
   "static callbacks.", 
   "(open_root, delete_entry, add_directory, open_directory, add_file,", 
   "open_file, close_edit): disable token facility of", 
   "make_{dir,file}_baton().", 
   "(path_driver_cb_baton): new struct, baton to the callback func", 
   "(path_driver_cb_func): new function, implements", 
   "svn_delta_path_driver_cb_func_t to drive the editor.", 
   "(svn_wc_diff4): new version deprecating svn_wc_diff3 with svnpatch", 
   "support.", 
   "(svn_wc_diff3): now calls svn_wc_diff4 with svnpatch disabled.", 
   "* subversion/libsvn_wc/util.c", 
   "(svn_wc_write_number, svn_wc_write_string, svn_wc_write_cstring,", 
   "svn_wc_write_word, svn_wc_write_proplist, svn_wc_start_list,", 
   "svn_wc_end_list, svn_wc_write_tuple, svn_wc_write_cmd):", 
   "move implementations from libsvn_client, and tweak to fit with a", 
   "stream use.", 
   "* subversion/libsvn_client/util.c:", 
   "(svn_client_write_number, svn_client_write_string,", 
   "svn_client_write_cstring, svn_client_write_word,", 
   "svn_client_write_proplist, svn_client_start_list, svn_client_end_list,", 
   "svn_client_write_tuple, svn_client_write_cmd): move to libsvn_wc.", 
   "* subversion/libsvn_client/diff.c:", 
   "(display_prop_diffs, diff_cmd_baton, diff_props_changed,", 
   "diff_content_changed, diff_file_added, diff_file_deleted_with_diff,", 
   "diff_file_deleted_no_diff, diff_dir_added, diff_dir_deleted): take", 
   "away svnpatch-buffer generation.  We're now doing this directly from", 
   "libsvn_wc.", 
   "(dump_svnpatch): new function", 
   "(diff_wc_wc): switch to the use of svn_wc_diff4.", 
   "(do_diff): invoke dump_svnpatch() before exit.", 
   "(svn_client_diff4, svn_client_diff_peg4): open a unique svnpatch temp", 
   "file before passing the handler to do_diff()"
  ], 
  "revision_id": "865967"
 }, 
 {
  "author": "dlr", 
  "date": "2007-07-30T22:38:33.911480Z", 
  "msg": [
   "A follow-up to r25891, refactoring some code introduced to fix issue", 
   "#2853.", 
   "* subversion/libsvn_client/merge.c", 
   "(single_file_merge_notify): New function to send a notification", 
   "specific to a single-file merge.", 
   "(do_single_file_merge): Replace inline code with calls to the new", 
   "single_file_merge_notify() function."
  ], 
  "revision_id": "865966"
 }
]