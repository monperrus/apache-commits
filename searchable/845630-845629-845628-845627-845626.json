[
 {
  "author": "gstein", 
  "date": "2003-04-04T23:02:07.391977Z", 
  "msg": [
   "some servlets are very expensive, and search engines which crawl the", 
   "site can trigger them (this has caused at least some of the recent 500", 
   "errors). use the standard robots.txt to prevent well behaved robots", 
   "from causing trouble.", 
   "* www/robots.txt: new file.", 
   "Patch by: Ed Korthof <edk@collab.net>"
  ], 
  "revision_id": "845630"
 }, 
 {
  "author": "dws", 
  "date": "2003-04-04T22:27:49.626415Z", 
  "msg": [
   "* packages/rpm/redhat-7.x/subversion.spec,", 
   "packages/rpm/redhat-8.x/subversion.spec : Updated to the required", 
   "apache 2.0.45 and took out libsvn_auth library."
  ], 
  "revision_id": "845629"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-04-04T21:22:22.830090Z", 
  "msg": [
   "First part of issue #1100 (\"imports need to do checksumming\").", 
   "Move the result checksum from apply_textdelta to close_file:", 
   "* subversion/include/svn_delta.h: Include apr_md5.h.", 
   "(svn_delta_editor_t): Remove result_checksum from from", 
   "apply_textdelta, and add text_checksum to close_file.", 
   "(svn_txdelta_apply): Change result_checksum to result_digest, now", 
   "an outgoing parameter instead of incoming.", 
   "Deal with the fallout:", 
   "* subversion/libsvn_delta/text_delta.c", 
   "(struct apply_baton): Convert result_checksum to result_digest,", 
   "reflecting the corresponding change to svn_txdelta_apply.", 
   "(svn_txdelta_apply): Change result_checksum to result_digest, now", 
   "an outgoing parameter instead of incoming.  Initialize accordingly", 
   "and stash in the apply_baton.", 
   "(apply_window): Don't compare the result checksum, just store it.", 
   "* subversion/libsvn_delta/cancel.c", 
   "(apply_textdelta): Lose the result_checksum argument.", 
   "(close_file): Take new text_checksum argument.", 
   "* subversion/libsvn_delta/default_editor.c", 
   "(apply_textdelta): Lose the result_checksum argument.", 
   "(close_file): Take new text_checksum argument.", 
   "(default_editor): Use close_file instead of the generic", 
   "single_baton_func.", 
   "* subversion/libsvn_repos/checkout.c: Include apr_md5.h and svn_md5.h.", 
   "(send_file_contents): Don't pass null result_checksum argument to", 
   "editor->apply_textdelta.", 
   "(walk_tree): Pass text checksum to editor->close_file.", 
   "* subversion/libsvn_repos/commit.c: Include apr_md5.h and svn_md5.h.", 
   "(apply_textdelta): Lose result_checksum argument, pass NULL for the", 
   "result_checksum to svn_fs_apply_textdelta.", 
   "(close_file): New function, just compares given checksum against", 
   "the checksum of the file in the txn.", 
   "(svn_repos_get_commit_editor): Set the editor's close_file function.", 
   "* subversion/libsvn_repos/delta.c", 
   "(send_text_delta): Lose result_checksum argument, stop passing it", 
   "to editor->apply_textdelta.", 
   "(add_file_or_dir, replace_file_or_dir): Pass text checksum to", 
   "editor->close_file.", 
   "(delta_files): Don't calculate target checksum, don't pass it to", 
   "send_text_delta.", 
   "* subversion/libsvn_repos/node_tree.c", 
   "(apply_textdelta): Lose result_checksum argument.", 
   "* subversion/libsvn_client/commit.c", 
   "(send_file_contents): Don't pass result_checksum to", 
   "editor->apply_textdelta.", 
   "(import_file): Pass null for text_checksum to editor->close_file,", 
   "and leave a comment indicating that more work will be done here.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(apply_textdelta): Don't take result_checksum argument, don't pass", 
   "it to real_editor->apply_textdelta.", 
   "(close_file): Take text_checksum argument, pass it to", 
   "real_editor->close_file.", 
   "(do_item_commit): Pass null for the text_checksum argument when", 
   "calling editor->close_file on file batons that have no text mods.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_repos_copy): Pass null text_checksum to editor->close_file.", 
   "* subversion/libsvn_client/repos_diff.c", 
   "(apply_textdelta): Lose the result_checksum argument.", 
   "(close_file): Take text_checksum argument, ignore it.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(svn_wc_transmit_text_deltas): Don't pass result_checksum to", 
   "editor->apply_textdelta.  Pass null text_checksum to", 
   "editor->close_file when no window handler, otherwise pass the", 
   "digest of the tmp_base.", 
   "* subversion/libsvn_wc/diff.c", 
   "(apply_textdelta): Lose the result_checksum argument.", 
   "(close_file): Take text_checksum argument, ignore it.", 
   "* subversion/libsvn_wc/status_editor.c", 
   "(apply_textdelta): Lose the result_checksum argument.", 
   "(close_file): Take text_checksum argument, ignore it.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(struct file_baton): Add new digest field.", 
   "(make_file_baton): Add a comment about how digest is initialized for", 
   "free by pcalloc.", 
   "(apply_textdelta): Lose the result_checksum argument, adjust call", 
   "to svn_txdelta_apply to receive a checksum instead of giving one.", 
   "(close_file): Take text_checksum argument, compare it against the", 
   "calculated checksum in the file baton.", 
   "* subversion/libsvn_ra_dav/commit.c", 
   "(struct put_baton_t): Lose the `file' field, there's no longer any", 
   "need to store the file baton here.", 
   "(struct resource_baton_t): New put_baton field.", 
   "(commit_stream_close): Remove, since this work is done in", 
   "commit_close_file now.", 
   "(commit_apply_txdelta): Lose result_checksum argument, don't", 
   "initialize a result_checksum in the baton.  Don't set a close", 
   "function on the stream anymore, since commit_close_file will take", 
   "care of it.", 
   "(commit_close_file): Construct the PUT request, since this is where", 
   "we have both the base_checksum and text_checksum now.", 
   "* subversion/libsvn_ra_svn/editor.c", 
   "(ra_svn_apply_textdelta): Lose result_checksum argument, and", 
   "don't send it over the wire in the \"apply-textdelta\" command.", 
   "(ra_svn_close_file): Take text_checksum argument, send it over the", 
   "wire as an optional tuple.", 
   "(ra_svn_handle_apply_textdelta): Don't handle result_checksum.", 
   "(ra_svn_handle_close_file): Handle text_checksum.", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(simple_fetch_file): Lose result_checksum parameter, and don't", 
   "pass it to editor->apply_textdelta.", 
   "(start_element): Don't pass result_checksum to simple_fetch_file.", 
   "Initialize rb->result_checksum to NULL in ELEM_open_file, and to", 
   "the found checksum or NULL in ELEM_add_file and ELEM_fetch_file.", 
   "(end_element): Pass rb->result_checksum to editor->close_file", 
   "instead of to editor->apply_textdelta.", 
   "(fetch_file): Pass checksum to editor->close_file instead of to", 
   "simple_fetch_file.", 
   "* subversion/mod_dav_svn/merge.c", 
   "(mr_close_file): Take new text_checksum argument, ignore it.", 
   "* subversion/mod_dav_svn/update.c", 
   "(struct item_baton_t): New text_changed boolean field.", 
   "(upd_apply_textdelta): Don't send the \"fetch-file\" xml here, just", 
   "store the base_checksum in the item baton and set text_changed.", 
   "(upd_close_file): Send the \"fetch-file\" xml here instead of in", 
   "upd_apply_textdelta.", 
   "* subversion/tests/svn_test_editor.c", 
   "(test_apply_textdelta): Lose the result_checksum argument.", 
   "(test_close_file): Take new text_checksum argument, ignore it.", 
   "* subversion/tests/libsvn_repos/dir-delta-editor.c", 
   "(test_apply_textdelta): Lose the result_checksum argument, pass NULL", 
   "for the result_checksum to svn_fs_apply_textdelta.", 
   "* subversion/bindings/swig/swigutil_py.c", 
   "(thunk_apply_textdelta): Lose the result_checksum argument.", 
   "(thunk_close_file): Take new text_checksum argument, invoke the", 
   "appropriate method manually, instead of factoring out to", 
   "close_baton like the other close functions."
  ], 
  "revision_id": "845628"
 }, 
 {
  "author": "sussman", 
  "date": "2003-04-04T19:36:25.018735Z", 
  "msg": [
   "Fix issue #1220:  'svn diff' should only show local mods on", 
   "schedule-add-with-history files, not the entire file.", 
   "* diff.c (file_diff):  if entry is 'copied',  then don't show whole", 
   "thing as added by comparing to empty file;  instead, do the usual", 
   "comparsion between working and text-base files."
  ], 
  "revision_id": "845627"
 }, 
 {
  "author": "sussman", 
  "date": "2003-04-04T18:07:26.875792Z", 
  "msg": [
   "Followup to issue #1087 (\"store auth creds in ~/.subversion\").", 
   "Make ~/.subversion/auth/ area safe for win32.", 
   "* svn_auth.h (SVN_AUTH_CRED_SIMPLE, SVN_AUTH_CRED_USERNAME,", 
   "SVN_AUTH_CRED_CLIENT_SSL, SVN_AUTH_CRED_CLIENT_PASS_SSL,", 
   "SVN_AUTH_CRED_SERVER_SSL): redefine these cred_kind constants to use", 
   "'.' as a namespace separator, rather than ':'.  The problem is that", 
   "we're using these constants as subdirectory names within", 
   "~/.subversion/auth/, and ':' is an illegal filename character on win32."
  ], 
  "revision_id": "845626"
 }
]