[
 {
  "author": "dreiss", 
  "date": "2010-03-09T05:20:14.832723Z", 
  "msg": [
   "cpp: Add setLowRTO to TSocket", 
   "low tcp RTO might mitigate TCP incast problems. Adding the setLowRTO", 
   "function to TSocket allows us to experiment with a solution."
  ], 
  "revision_id": "920685"
 }, 
 {
  "author": "dreiss", 
  "date": "2010-03-09T05:20:12.374898Z", 
  "msg": [
   "cpp: Fix memory corruption bug in TBufferedTransport::borrowSlow()", 
   "On one code path, the code would read data past the end of its buffer."
  ], 
  "revision_id": "920684"
 }, 
 {
  "author": "dreiss", 
  "date": "2010-03-09T05:20:10.275780Z", 
  "msg": [
   "cpp: Disable IPV6_V6ONLY only if the socket is an AF_INET6 socket", 
   "Some systems may disable IPV6 completely.  Ensure that we only disable", 
   "IPV6_V6ONLY if the socket is AF_INET6", 
   "No longer see the warning:", 
   "Thrift: Wed Jul 22 18:08:36 2009 TServerSocket::listen() IPV6_V6ONLY Protocol not available"
  ], 
  "revision_id": "920683"
 }, 
 {
  "author": "dreiss", 
  "date": "2010-03-09T05:20:07.787866Z", 
  "msg": [
   "cpp: Eliminate circular dependency between thrift libraries", 
   "Previously, Thrift.cpp contained TApplicationException, which was using", 
   "TProtocol methods, defined in TProtocol.h.  This caused a circular", 
   "dependency since libprotocol depends on Thrift.h.  This change moves", 
   "TApplicationException into its own file."
  ], 
  "revision_id": "920682"
 }, 
 {
  "author": "dreiss", 
  "date": "2010-03-09T05:20:04.105516Z", 
  "msg": [
   "cpp: Add profiling hooks to Mutex, ReadWriteMutex() classes", 
   "Extend the Thrift C++ Concurrency library by allowing a user to register", 
   "a callback and a sample rate for lock primitive contention profiling.", 
   "The callback will be invoked approximately once every sampleRate calls", 
   "to Mutex::lock(), Mutex::timedlock(), ReadWriteLock::acquireRead(), or", 
   "ReadWriteLock::acquireWrite().", 
   "The callback receives a pointer to the mutex responsible and the time", 
   "waited on the lock in micros (whether the lock was successfuly acquire", 
   "or not).  The user can then implement a registry of his choice to", 
   "log/collect this data as needed.", 
   "This can all be easily compiled out if it harms performance.  By", 
   "default, there is no profiling callback, so the overhead is minimal", 
   "(one branch)."
  ], 
  "revision_id": "920681"
 }
]