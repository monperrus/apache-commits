[
 {
  "author": "lgo", 
  "date": "2013-06-05T08:40:11.939289Z", 
  "msg": [
   "On the multiple_ssl_impls branch:", 
   "Update test ssl server to return the list of acceptable CA's for the client", 
   "certificate.", 
   "* test/server/test_sslserver.c", 
   "(init_ssl_context): Reuse the list of CA's - needed to validate the server", 
   "certificate - as list of acceptable CA's for the client certificate."
  ], 
  "revision_id": "1699448"
 }, 
 {
  "author": "gstein", 
  "date": "2013-06-05T04:57:21.468708Z", 
  "msg": [
   "Start sketching out a new two-layer connection system:", 
   "1) a \"connection type\" that can be a plain or encrypted socket, with", 
   "read/write APIs", 
   "2) a \"protocol type\" that performs protocol-specific parsing and", 
   "bucket stacking and protocol-specific callbacks to the app", 
   "This is merely a DRAFT for comments.", 
   "* serf.h;", 
   "(serf_connection_type_t, serf_protocol_t, serf_protocol_type_t): new", 
   "typedefs for the two layers", 
   "(struct serf_connection_type_t, struct serf_protocol_type_t): public", 
   "struct for defining types", 
   "(serf_connection_switch_protocol): example for dynamically switching", 
   "protocols on a connection (eg. HTTP -> SPDY)", 
   "(serf_begin_response_t, serf_handler_t): new application callbacks", 
   "(serf_http_protocol_create, serf_https_protocol_create): new", 
   "examples for creating a specific protocol/connection pair", 
   "(serf_http_request_create): example for queuing a new HTTP request"
  ], 
  "revision_id": "1699447"
 }, 
 {
  "author": "lgo", 
  "date": "2013-06-04T19:49:58.431694Z", 
  "msg": [
   "On the multiple_ssl_impls branch:", 
   "Make build without OpenSSL possible.", 
   "* buckets/bucket_private.h", 
   "(serf_bucket_type_openssl_encrypt,", 
   "serf_bucket_type_openssl_decrypt,", 
   "serf_bucket_type_sectrans_encrypt,", 
   "serf_bucket_type_sectrans_decrypt): Move to ...", 
   "* serf_bucket_types.h", 
   "(serf_bucket_type_openssl_encrypt,", 
   "serf_bucket_type_openssl_decrypt,", 
   "serf_bucket_type_sectrans_encrypt,", 
   "serf_bucket_type_sectrans_decrypt): ... here, types have to be public to be", 
   "used in the SERF_BUCKET_IS_xxx macro's.", 
   "* buckets/openssl_buckets.c", 
   "(serf_bucket_type_openssl_encrypt,", 
   "serf_bucket_type_openssl_decrypt): Define placeholders when not built with", 
   "OpenSSL.", 
   "* buckets/sectrans_buckets.c", 
   "(serf_bucket_type_sectrans_encrypt,", 
   "serf_bucket_type_sectrans_decrypt): Define placeholders when not built", 
   "with Secure Transport.", 
   "*"
  ], 
  "revision_id": "1699446"
 }, 
 {
  "author": "ivan", 
  "date": "2013-06-04T08:15:56.654807Z", 
  "msg": [
   "Follow-up to r1907.", 
   "* serf.mak", 
   "(LIB32_OBJS): Add copy_buckets.obj."
  ], 
  "revision_id": "1699445"
 }, 
 {
  "author": "gstein", 
  "date": "2013-06-04T01:06:15.087975Z", 
  "msg": [
   "Merge the 'copy_bucket' branch into trunk.", 
   "Some minor changes were made to get trunk to build, post-merge.", 
   "* buckets/copy_buckets.c: new file", 
   "(serf_copy_read): fix return value", 
   "(serf_copy_read_for_sendfile, serf_copy_read_bucket): add static", 
   "* serf_bucket_types.h:", 
   "(serf_bucket_type_copy, SERF_BUCKET_IS_COPY,", 
   "serf_bucket_copy_create): new symbols"
  ], 
  "revision_id": "1699444"
 }
]