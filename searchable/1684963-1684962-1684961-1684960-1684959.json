[
 {
  "author": "davidb", 
  "date": "2015-06-11T19:13:17.266398Z", 
  "msg": [
   "FELIX-4866 Improve Service Registry", 
   "The previous code that was contributed as part of FELIX-4866 could cause ungetService() on a Service Factory to be called with a null service object. This change fixes that."
  ], 
  "revision_id": "1684963"
 }, 
 {
  "author": "pwendell", 
  "date": "2015-06-11T19:07:24.054151Z", 
  "msg": [
   "Bug fix in classpath script (SPARK-6511)"
  ], 
  "revision_id": "1684962"
 }, 
 {
  "author": "tilman", 
  "date": "2015-06-11T18:30:05.646955Z", 
  "msg": [
   "PDFBOX-2576: make field that have accessors private; make field private that isn't used outside"
  ], 
  "revision_id": "1684961"
 }, 
 {
  "author": "rwhitcomb", 
  "date": "2015-06-11T18:26:36.428736Z", 
  "msg": [
   "PIVOT-969: Fix the broken build because the concrete instances of ApplicationContext", 
   "don't actually implement the UncaughtExceptionHandler interface.  So, fix this by", 
   "implementing in ApplicationContext itself.  Also rearrange the exception handling", 
   "there.  Make an override of \"handleUncaughtException\" to handle either with or without", 
   "the thread.  Then modify the \"catch\" statements in the ApplicationContext subclasses", 
   "to catch \"Throwable\" instead of \"Exception\".  Make a \"finally\" clause in a couple of", 
   "places to remove the application at the end, no matter if an exception is thrown.", 
   "Note: this still doesn't address how to set the uncaught exception handler in threads", 
   "we create (such as for Task).  Still working that out."
  ], 
  "revision_id": "1684960"
 }, 
 {
  "author": "tilman", 
  "date": "2015-06-11T18:25:53.422801Z", 
  "msg": [
   "PDFBOX-2576: throws specific exception"
  ], 
  "revision_id": "1684959"
 }
]