[
 {
  "author": "lundblad", 
  "date": "2006-03-05T00:06:15.022275Z", 
  "msg": [
   "Add the capability to ignore whitespace and eol-style to svn merge.", 
   "This commit adds the '-x' option to the merge command, which has the side", 
   "effect of allowing extra arguments to be passed to an external diff3 program.", 
   "If there are no options, '-mE' is passes as before; if there are options,", 
   "'-m' is passed anyway, but '-E' is removed.", 
   "* subversion/include/svn_io.h (svn_io_run_diff3_2): New version of this", 
   "API, with a new user_args argument.", 
   "(svn_io_run_diff2): Deprecate.", 
   "* subversion/include/svn_wc.h (svn_wc_merge2): New version of the API with", 
   "a new merge_options argument.", 
   "(svn_wc_merge): Deprecate.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_merge2, svn_client_merge_peg2): New version of these APIs,", 
   "adding the merge_options argument.", 
   "(svn_client_merge, svn_client_merge): Deprecate.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge2): Implement new API.  Pass merge_options to the merge", 
   "code/process.", 
   "(svn_wc_merge): Wrap new API.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(merge_file): Use svn_wc_merge2().", 
   "* subversion/libsvn_wc/log.c", 
   "(log_do_merge): Use svn_wc_merge2().", 
   "* subversion/libsvn_subr/io.c", 
   "(svn_io_run_diff3_2): Implement new API.  Pass user_args to the called", 
   "program.", 
   "(svn_io_run_diff3): Wrap new API.", 
   "* subversion/libsvn_client/diff.c", 
   "(merge_cmd_baton): Add merge_options field.", 
   "(merge_file_changed): Call svn_wc_merge2(), passing the merge options.", 
   "(svn_client_merge2, svn_client_merge_peg2): Implement new APIs.", 
   "(svn_client_merge, svn_client_merge_peg): Wrap new APIs.", 
   "* subversion/svn/merge-cmd.c (svn_cl__merge): Use new merge APIs, passing", 
   "extensions option as merge options.", 
   "* subversion/svn/main.c", 
   "(svn_cl__cmd_table): Add 'x' option to merge command."
  ], 
  "revision_id": "858790"
 }, 
 {
  "author": "xsteve", 
  "date": "2006-03-04T20:40:01.144873Z", 
  "msg": [
   "Ensure buffers are saved before committing, improved svn-status-base-dir", 
   "Patch by: Bill Wohler <wohler@newt.com>", 
   "* trunk/contrib/client-side/psvn/psvn.el:", 
   "(svn-status-commit),(svn-log-edit-done): Call save-some-buffers to ensure", 
   "that all files are saved", 
   "(svn-status-base-dir): Handle a .svn directory in the / directory correct."
  ], 
  "revision_id": "858789"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2006-03-04T04:25:28.043319Z", 
  "msg": [
   "ra_serf: Support Basic authentication.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(ra_serf_connection_t): Add in last_status_code, auth_header, and auth_value.", 
   "(ra_serf_session_t): Cache our realm, auth_header, auth_value, svn auth", 
   "state, and the number of attempts we've tried to authenticate.", 
   "(serf_bucket_propfind_create): Take in connection instead of host name.", 
   "* subversion/libsvn_ra_serf/util.c", 
   "(setup_serf_req): Provide any connection-level auth credentials in request.", 
   "(handle_auth): New function to implement authentication parsing.", 
   "(handler_default): If we just saw a 401 and now we see a success (<400),", 
   "then assume the credentials worked and save them; store our last HTTP", 
   "status code so we know when we'd need to save; call handle_auth when we", 
   "see a 401, otherwise call the normal response_handler.", 
   "* subversion/libsvn_ra_serf/serf.c:", 
   "(svn_ra_serf__open): Use calloc to init connection rather than explicitly", 
   "NULLing fields.", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(finish_report): Pass along any credentials to our new connections if", 
   "we know of them.", 
   "* subversion/libsvn_ra_serf/property.c", 
   "(setup_propfind): Give bucket the connection instead of only hostname.", 
   "* subversion/libsvn_ra_serf/propfind_buckets.c", 
   "(prop_context_t): Store the ra_serf_connection_t instead of the host name.", 
   "(serf_bucket_propfind_create): Take in connection.", 
   "(create_propfind_body): Use connection info to get hostname and provide", 
   "any connection-level authentication credentials."
  ], 
  "revision_id": "858788"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2006-03-04T03:37:45.295671Z", 
  "msg": [
   "ra_serf: Adjust for recent serf API changes such that we can remove most custom", 
   "handlers and setup routines in favor of using one default handler that is", 
   "much smarter about things.", 
   "There are no major functionality changes here - just reshuffling of the decks.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(handler_default): Declare new default handler.", 
   "(request_body_delegate_t, request_header_delegate_t, response_error_t):", 
   "Callbacks that can be called during processing of the request/response.", 
   "(ra_serf_request_create): New helper that queues a request.", 
   "(ra_serf_handler_t): New structure that encapsulates all of the info", 
   "needed by handler_default to invoke or re-queue a request.", 
   "(ra_serf_xml_parser_t): New structure for parsing XML functions.", 
   "(handle_xml_parser): Change prototype to be invoked as a serf handler.", 
   "(handle_status_only, handle_status_xml_parser): Remove.", 
   "* subversion/libsvn_ra_serf/util.c", 
   "(serf_bucket_types.h): Include.", 
   "(handle_status_xml_parser, handle_xml_parser, handle_status_only): Remove.", 
   "(handler_default): New handler that invokes per ra_serf_handler_t and", 
   "handles requeuing.", 
   "(setup_default): Appropriately set up the request based on ra_serf_handler_t.", 
   "(ra_serf_request_create): Queue a request based on our ra_serf_handler_t.", 
   "* subversion/libsvn_ra_serf/merge.c", 
   "(merge_context_t): Remove conn, xmlp, acceptor, acceptor_baton, handler.", 
   "(create_merge_body): Add delegate to construct the MERGE request body.", 
   "(setup_merge, handle_merge): Remove.", 
   "(merge_create_req): Use ra_serf_handler_t and ra_serf_xml_parser_t", 
   "* subversion/libsvn_ra_serf/blame.c", 
   "(blame_context_t): Remove session, conn, xmlp, buckets, acceptor, handler.", 
   "(setup_blame, handle_blame): Remove.", 
   "(svn_ra_serf__get_file_revs): Use ra_serf_handler_t and ra_serf_xml_parser_t", 
   "* subversion/libsvn_ra_serf/log.c", 
   "(log_context_t): Remove xmlp, session, conn, path, buckets, acceptor, handler.", 
   "(setup_log, handle_log): Remove.", 
   "(svn_ra_serf__get_log): Use ra_serf_handler_t and ra_serf_xml_parser_t", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(report_fetch_t, report_context_t): Remove acceptor, handler", 
   "(setup_fetch): Remove.", 
   "(headers_fetch): New delegate to set headers for our GET requests.", 
   "(error_fetch): New delegate to reset our file stream when we lose our conn.", 
   "(handle_fetch): Assume our headers are ready when we're invoked; return", 
   "EAGAIN when we're not ready to do more; don't do the is_conn_closing check", 
   "here.", 
   "(fetch_file): Use ra_serf_handler_t.", 
   "(setup_report, handle_report): Remove.", 
   "(finish_report): Use ra_serf_handler_t and ra_serf_xml_parser_t", 
   "(svn_ra_serf__do_update): Don't create an XML parser here.", 
   "* subversion/libsvn_ra_serf/property.c", 
   "(propfind_context_t): Store our handler (new type) and remove acceptor and", 
   "parser.", 
   "(setup_propfind): Use ra_serf_xml_parser_t.", 
   "(handle_propfind): Remove.", 
   "(deliver_props): Use ra_serf_handler_t.", 
   "* subversion/libsvn_ra_serf/options.c", 
   "(setup_options, handle_options): Remove.", 
   "(create_options_body): Add delegate to create an body for our OPTIONS.", 
   "(create_options_req): Use ra_serf_handler_t and ra_serf_xml_parser_t.", 
   "* subversion/libsvn_ra_serf/getloc.c", 
   "(loc_context_t): Remove parser, done, session, conn, path, buckets, acceptor,", 
   "and handler.", 
   "(setup_getloc, handle_getloc): Remove.", 
   "(svn_ra_serf__get_locations): Use ra_serf_handler_t and ra_serf_xml_parser_t.", 
   "* subversion/libsvn_ra_serf/commit.c", 
   "(handle_status_only): Move helper here to read through a body and return", 
   "the status code.  (May go away really soon.)", 
   "(handle_mkactivity, handle_checkout, handle_put, handle_delete,", 
   "handle_head): Have handlers take request argument and pass request to", 
   "handle_status_only function."
  ], 
  "revision_id": "858787"
 }, 
 {
  "author": "rooneg", 
  "date": "2006-03-04T00:00:24.317902Z", 
  "msg": [
   "* STATUS: Vote for r18665 and r18668."
  ], 
  "revision_id": "858786"
 }
]