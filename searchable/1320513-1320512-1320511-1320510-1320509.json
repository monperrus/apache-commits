[
 {
  "author": "", 
  "date": "2012-03-29T06:56:30.989648Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 2930", 
   "Author:   preilly@adobe.com", 
   "Date:     2008-08-20T20:27:50.711251Z", 
   "Log Message:", 
   "-----------", 
   "Fixed up some remaining issues with precompile and postcompile", 
   "benchmarking.  Now we should get numbers even when", 
   "CompilerAPI.compile() is skipped.", 
   "tests Passed: checkintests", 
   "Needs QA: YES", 
   "Needs DOC: NO", 
   "API Change: NO", 
   "Reviewer: gauravj", 
   "Code-level description of changes:", 
   "tools/Compc.java", 
   "tools/Fcsh.java", 
   "tools/Mxmlc.java", 
   "tools/oem/Application.java", 
   "tools/oem/Library.java", 
   "Updated benchmarking to call stopTime(Benchmark.PRECOMPILE) and", 
   "startTime(Benchmark.POSTCOMPILE) as soon as we know", 
   "CompilerAPI.compile() will be skipped.", 
   "Also, added a check for", 
   "benchmark.hasStarted(Benchmark.POSTCOMPILE) before calling", 
   "stopTime(Benchmark.POSTCOMPILE).", 
   "compiler/util/Benchmark.java", 
   "Divided times Map into startTimes and duration to better handle", 
   "the case when an exception is thrown such that startTime() is", 
   "jumped over.", 
   "Added hasStarted().", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Mxmlc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/util/Benchmark.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Compc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Fcsh.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Application.java</path>"
  ], 
  "revision_id": "1320513"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T06:56:26.243284Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 2870", 
   "Author:   preilly@adobe.com", 
   "Date:     2008-08-18T16:05:57.833613Z", 
   "Log Message:", 
   "-----------", 
   "Fixed issue with benchmarking when an error occurs and another issue", 
   "with capturing benchmark data from a project with more than one", 
   "application and/or library.", 
   "tests Passed: checkintests", 
   "Needs QA: YES", 
   "Needs DOC: NO", 
   "API Change: NO", 
   "Reviewer: gauravj", 
   "Code-level description of changes:", 
   "oem/Application.java", 
   "oem/Library.java", 
   "oem/Builder.java", 
   "Added getBenchmark() support.", 
   "Compc.java", 
   "Mxmlc.java", 
   "Fcsh.java", 
   "Only call Benchmark.stopTime() in finally blocks if the error", 
   "count is zero.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Builder.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Mxmlc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Compc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Fcsh.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Application.java</path>"
  ], 
  "revision_id": "1320512"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T06:56:22.194009Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 2849", 
   "Author:   preilly@adobe.com", 
   "Date:     2008-08-15T14:30:02.497010Z", 
   "Log Message:", 
   "-----------", 
   "Added new benchmarking for capturing the time spent before and after", 
   "CompilerAPI.compile().  It's not perfect, because it has to wait until", 
   "the configuration is processed to know whether benchmarking is", 
   "enabled, but it should be good for tracking improvements to", 
   "incremental compilation.", 
   "Here is how it can be used from a OEM Compiler API client:", 
   "Benchmark benchmark = ThreadLocalToolkit.getBenchmark();", 
   "System.out.println(\"precompile: \" + benchmark.getTime(Benchmark.PRECOMPILE));", 
   "System.out.println(\"postcompile: \" + benchmark.getTime(Benchmark.POSTCOMPILE));", 
   "tests Passed: checkintests", 
   "Needs QA: YES", 
   "Needs DOC: NO", 
   "API Change: NO", 
   "Reviewer: dloverin", 
   "Code-level description of changes:", 
   "tools/oem/Application.java", 
   "tools/oem/Library.java", 
   "tools/Compc.java", 
   "tools/Mxmlc.java", 
   "tools/Fcsh.java", 
   "At each entry point, Benchmark.startTime(Benchmark.PRECOMPILE) is", 
   "called.  Just before CompilerAPI.compile() is called,", 
   "Benchmark.stopTime(Benchmark.PRECOMPILE) is called.  Just after", 
   "CompilerAPI.compile(), Benchmark.startTime(Benchmark.POSTCOMPILE)", 
   "is called.  Before finishing up,", 
   "Benchmark.stopTime(Benchmark.POSTCOMPILE) is called.", 
   "compiler/CompilerAPI.java", 
   "Modified runBenchmark() to return the new Benchmark object.", 
   "compiler/util/ThreadLocalToolkit.java", 
   "Modified log(ILocalizableMessage) and log(ILocalizableMessage,", 
   "String) to check for a null logger.  OEMUtil.clean() nulls out the", 
   "logger and Benchmark uses logging, so the last stopTime() call", 
   "requires this check to avoid a NPE.", 
   "compiler/util/Benchmark.java", 
   "Added PRECOMPILE and POSTCOMPILE constants.", 
   "Added getTime() and a new version of stopTime() that allows the", 
   "duration reset to be skipped.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Configuration.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/util/ThreadLocalToolkit.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Mxmlc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/util/Benchmark.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Compc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Fcsh.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Application.java</path>"
  ], 
  "revision_id": "1320511"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T06:56:18.522050Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 2842", 
   "Author:   preilly@adobe.com", 
   "Date:     2008-08-14T13:55:38.704551Z", 
   "Log Message:", 
   "-----------", 
   "More whitespace normalization and removed qualification from names", 
   "that were already imported.  For example flex2.compiler.CompilerAPI", 
   "was changed to CompilerAPI.  This should make the code less verbose.", 
   "tests Passed: checkintests", 
   "Needs QA: NO", 
   "Needs DOC: NO", 
   "API Change: NO", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Mxmlc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Compc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Fcsh.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Application.java</path>"
  ], 
  "revision_id": "1320510"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T06:56:15.277988Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 2001", 
   "Author:   jspiro@adobe.com", 
   "Date:     2008-06-09T18:26:10.473506Z", 
   "Log Message:", 
   "-----------", 
   "modules: Converting instances of the characters 'ff' with 'ild' -- which improves framework compiling performance by approx 15% and dorado approx 3%.", 
   "* Replaced all \"StringBuffer\" with \"StringBuilder\" -- the unsynchronized version which was introduced in Java 1.5. Compiler code is not threadsafe as it is, so this is 100% safe.", 
   "* The bulk of speedup comes from Parser.java and Scanner.java (easily the 99% case) -- when parsing AS3.", 
   "* Makes IO more consistent, we no longer have any instances of StringBuffer, and no longer need to think about whether there is a perf benefit of using one or the other. Always use StringBuilder.", 
   "* As Sun improves the JREs, synchronization overhead will decrease, and the benefit of this change will become less apparent. However, this is not the case with Java 1.5, our target JRE.", 
   "Modified Paths:", 
   "--------------", 
   "119 paths were modified"
  ], 
  "revision_id": "1320509"
 }
]