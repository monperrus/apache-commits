[
 {
  "author": "brianp", 
  "date": "2002-01-27T01:54:54.000000Z", 
  "msg": [
   "Added new functions ap_add_input_filter_handle() and", 
   "ap_add_output_filter_handle()", 
   "There are many places in the core modules where we do", 
   "ap_add_input_filter() or ap_add_output_filter() on a", 
   "hardcoded filter name (e.g., \"CORE\" or \"BYTERANGE\").", 
   "This requires a string-to-filter mapping that wastes", 
   "CPU time.  (Even though the string lookup uses a trie", 
   "for speed, it still ranks as a big consumer of CPU time", 
   "because of the large number of filters added per request.)", 
   "The new ap_add_*_filter_handle() functions will allow", 
   "us to skip the string-to-filter mapping in cases where", 
   "the module adding the filter happens to have the", 
   "ap_filter_rec_t* for the registered filter (e.g., because", 
   "it's the same module that registered the filter in the", 
   "first place)."
  ], 
  "revision_id": "93039"
 }, 
 {
  "author": "trawick", 
  "date": "2002-01-26T23:05:10.000000Z", 
  "msg": [
   "avoid a palloc of zero bytes so memory debuggers don't barf"
  ], 
  "revision_id": "93038"
 }, 
 {
  "author": "trawick", 
  "date": "2002-01-26T23:01:31.000000Z", 
  "msg": [
   "ap_rgetline(): completely ignore an empty bucket...  previously the logic", 
   "generally worked but with a memory debug build it could", 
   "crash since some memory debuggers don't like an alloc of", 
   "zero bytes"
  ], 
  "revision_id": "93037"
 }, 
 {
  "author": "gregames", 
  "date": "2002-01-26T20:25:27.000000Z", 
  "msg": [
   "remove one showstopper and add the next"
  ], 
  "revision_id": "93036"
 }, 
 {
  "author": "gregames", 
  "date": "2002-01-26T20:16:01.000000Z", 
  "msg": [
   "ap_sub_req_lookup_dirent: fix mod_negotiation loop with near infinite", 
   "subrequests", 
   "this function has been creating bogus subrequest URIs when there is", 
   "path_info for a long time.  They didn't matter until fixup_dir started", 
   "using them for URI subrequests, which led to a loop with ever growing", 
   "bogus internal URIs and filenames."
  ], 
  "revision_id": "93035"
 }
]