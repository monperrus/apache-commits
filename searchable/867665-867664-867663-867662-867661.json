[
 {
  "author": "joeswatosh", 
  "date": "2007-11-05T14:21:52.228961Z", 
  "msg": [
   "Provide a simple way for test writers to create a Greek tree for testing, plus", 
   "some helper methods to access the files and directories in the working copy", 
   "and the repository.", 
   "* subversion/bindings/swig/ruby/test/util.rb", 
   "(SvnTestUtil#setup_basic): Define constants for the greek tree.", 
   "(SvnTestUtil::GreekTree): New constant", 
   "(SvnTestUtil#setup_greek_tree, SvnTestUtil.greek_constants_defined?,", 
   "SvnTestUtil.define_greek_constants, SvnTestUtil#wc_path_for,", 
   "SvnTestUtil#uri_for): New methods", 
   "Reviewed by: kou"
  ], 
  "revision_id": "867665"
 }, 
 {
  "author": "kfogel", 
  "date": "2007-11-05T09:04:31.648113Z", 
  "msg": [
   "#########################################################################", 
   "###      PATCH IN PROGRESS -- REVIEW WELCOME ON GENERAL APPROACH      ###", 
   "###                                                                   ###", 
   "### You can review it with:                                           ###", 
   "###                                                                   ###", 
   "### 'svn diff http://svn.collab.net/repos/svn/trunk@27589 \\           ###", 
   "###    http://svn.collab.net/repos/svn/branches/issue-2991-dev@27590  ###", 
   "###                                                                   ###", 
   "#########################################################################", 
   "Issue #2991: client should announce mergeinfo capability to server.", 
   "(This change actually introduces the capability bidirectionally.)", 
   "Remaining: pass the new capability to the start-commit hook, as", 
   "described in the issue.", 
   "* subversion/include/svn_ra.h", 
   "(SVN_RA_CAPABILITY_MERGEINFO): New capability.", 
   "* subversion/include/svn_dav.h", 
   "(SVN_DAV_PROP_NS_DAV_SVN_MERGEINFO): New header for options response.", 
   "[Note that ra_svn already had its equivalent of this.]", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__has_capability): Confirm new capability.", 
   "* subversion/libsvn_ra_serf/serf.c", 
   "(capabilities_headers_iterator_callback,", 
   "capabilities_response_handler): Receive new capability from server.", 
   "* subversion/libsvn_ra_neon/session.c", 
   "(parse_capabilities): Receive new capability from server.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_has_capability): Receive new capability from server.", 
   "(open_session): Send new capabilities to server.", 
   "[Note that server already has code to receive them.]", 
   "* subversion/mod_dav_svn/version.c", 
   "(get_vsn_options): Put the new capability into the response headers.", 
   "* subversion/mod_dav_svn/dav_svn.h", 
   "(struct dav_svn_repos): Add new capabilities hash.", 
   "* subversion/mod_dav_svn/repos.c: Include svn_ra.h, oddly enough.", 
   "(get_parentpath_resource): Initialize new repos->capabilities hash.", 
   "(capability_yes, capability_no): New static placeholder ints.", 
   "(get_resource): Same, and receive capabilities from client.", 
   "* subversion/libsvn_ra_neon/util.c", 
   "(svn_ra_neon__request_dispatch): Send capabilities headers, with", 
   "thoroughly-commented trepidation.", 
   "* subversion/libsvn_ra_serf/propfind_buckets.c", 
   "(become_request): Send capabilities headers."
  ], 
  "revision_id": "867664"
 }, 
 {
  "author": "joeswatosh", 
  "date": "2007-11-05T05:56:39.580479Z", 
  "msg": [
   "Make the control of the test svnserve service more reliable in the face of my", 
   "impatience (control-c) and the occasional seg-fault when testing.  Basically,", 
   "make sure the service is created for every run of the tests by using a class", 
   "variable instead of the existance of the service as the test to decide if it", 
   "needs to be installed.", 
   "* subversion/bindings/swig/ruby/test/windows_util.rb", 
   "(SvnTestUtil::Windows::Svnserve#service_control): Return the state of the", 
   "service when querying.", 
   "(SvnTestUtil::Windows::Svnserve#service_stopped): New method", 
   "(SvnTestUtil::Windows::Svnserve#setup_svnserve): Use a class variable", 
   "instead of the existance of the service to decide whether or not to setup", 
   "the service.  Make sure prior installations of the service are stopped and", 
   "uninstalled.  During winddown, make sure the service is stopped before", 
   "trying to remove it.  Trap Control-C so the service can be shutdown and", 
   "uninstalled.", 
   "(SvnTestUtil::Windows::Svnserve#teardown_svnserve): Use the service_stopped?", 
   "predicate instead of the service_exists? to control if the service should be", 
   "stopped."
  ], 
  "revision_id": "867663"
 }, 
 {
  "author": "niqueco", 
  "date": "2007-11-05T03:18:24.419917Z", 
  "msg": [
   "Spanish translation updated.", 
   "* subversion/po/es.po:", 
   "Some translation updates."
  ], 
  "revision_id": "867662"
 }, 
 {
  "author": "lgo", 
  "date": "2007-11-04T20:33:37.427261Z", 
  "msg": [
   "Expand the functionality of svn_ra_replay_range: make it provide the revision", 
   "properties together with the actual content.", 
   "In ra_serf we can now handle the PROPFIND requests asynchronously together with", 
   "the replay REPORT requests, which should result in better network usage.", 
   "This also removes the extra session again, which we needed to get the rev props", 
   "from the master server (added in r27541).", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_replay_revstart_callback_t):", 
   "(svn_ra_replay_revfinish_callback_t): Add rev_props parameter.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "(svn_ra_replay_range): Fetch the revision properties for each revision and", 
   "pass them to the replay callback handlers.", 
   "* subversion/libsvn_ra_serf/replay.c", 
   "(global): update copyright date.", 
   "(struct replay_context_t): Add extra fields for the revision properties and", 
   "to keep track of when a request is completely handled.", 
   "(start_replay): copy the rev. properties in a dedicated list and pass them", 
   "to the replay callback. Make sure to push the xml state on the stack before", 
   "an error can occur.", 
   "(end_replay): Pass the rev. properties to the replay callback.", 
   "(MAX_OUTSTANDING_REQUESTS): Defines the maximum number of requests", 
   "outstanding at any time.", 
   "(svn_ra_serf__replay): Request for the revision properties before we send the", 
   "report request. Keep track of active report requests so we know when to stop", 
   "the loop. Limit the nr. of simultanuous open requests to limit memory usage.", 
   "* subversion/svnsync/main.c", 
   "(open_source_session, replay_baton_t,", 
   "make_replay_baton, do_synchronize,", 
   "do_copy_revprops): Remove the from_rp_session, not needed anymore.", 
   "(replay_rev_started): Add rev_props parameter. Add all non 'svn:' properties", 
   "to the newly opened editor.", 
   "(replay_rev_finished): Add rev_props parameter. Also copy the 'svn:'", 
   "properties to the target repository. Remove any revision properties in the", 
   "target repositories not in the source repository. We can't use copy_revprops", 
   "here because we already copied part of the rev. properties."
  ], 
  "revision_id": "867661"
 }
]