[
 {
  "author": "gstein", 
  "date": "2009-02-23T18:04:33.912841Z", 
  "msg": [
   "Remove the 'id' column from several tables. We don't need it.", 
   "* subversion/libsvn_wc/wc-metadata.sql:", 
   "(WCROOT.local_abspath): the index enforces uniqueness on this column,", 
   "but let's do it explicitly in the column definition.", 
   "(BASE_NODE): remove 'id' column. declare a primary key.", 
   "(WORKING_NODE): remove 'id' column. declare a primary key.", 
   "(ACTUAL_NODE): remove 'id' column. declare a primary key.", 
   "(I_PATH, I_WORKING_PATH, I_ACTUAL_PATH): remove these indexes", 
   "* subversion/libsvn_wc/entries.c:", 
   "(statements): don't select the 'id' column from the *_NODE tables", 
   "(db_base_node_t, db_working_node_t, db_actual_node_t): remove the ID", 
   "member from these structures.", 
   "(fetch_base_nodes, fetch_working_nodes, fetch_actual_nodes): renumber", 
   "column indexes when retrieving row results.", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(statements): don't fetch 'id', 'parent_relpath', 'last_mod_time',", 
   "'properties', or 'incomplete_children' when fetching BASE_NODE rows", 
   "(scan_upwards_for_repos, svn_wc__db_base_get_info): renumber column", 
   "indexes when retrieving row results.", 
   "* subversion/tests/libsvn_wc/db-test.c:", 
   "(data_loading_sql): remove 'id' values. change parent_id values over to", 
   "parent_relpath values (missed in r36080). add a note about keeping", 
   "this style of INSERT."
  ], 
  "revision_id": "876155"
 }, 
 {
  "author": "gstein", 
  "date": "2009-02-23T17:12:50.031208Z", 
  "msg": [
   "Implement the svn_wc__db_base_add_* functions.", 
   "The bulk of the new functionality is handled by insert_base_node() along", 
   "with the insert_base_baton.", 
   "Some schema changes were made to enforce NOT NULL on all 'wc_id' columns,", 
   "to fix some indexes, and to replace 'parent_id' with 'parent_relpath'. The", 
   "latter was used for WORKING_NODE and ACTUAL_NODE because those nodes'", 
   "parents might not exist in those tables. This revision makes BASE_NODE", 
   "operate the same way: it avoids an ID lookup at insertion time and it", 
   "avoids potentially unstable ID values on the parent (due to an \"insert or", 
   "replace\" operation).", 
   "Lastly, a unit test is provided for the base_add functionality.", 
   "* subversion/libsvn_wc/wc-metadata.sql:", 
   "(BASE_NODE.wc_id): made this NOT NULL. we always want a WCROOT row, and", 
   "*that* can specify the \"metadata-in-wcroot\" concept.", 
   "(BASE_NODE.parent_id): removed in favor of ...", 
   "(BASE_NODE.parent_relpath): ... this. see above for why it changed.", 
   "(I_PARENT): switch away from parent_id, which also means we must bring", 
   "in the wc_id as part of the index.", 
   "(WORKING_NODE.wc_id): make this NOT NULL.", 
   "(ACTUAL_NODE.wc_id): make this NOT NULL.", 
   "(I_ACTUAL_PATH, I_ACTUAL_PARENT): new indexes on ACTUAL_NODE", 
   "* subversion/libsvn_wc/entries.c:", 
   "(statements, db_base_node_t, fetch_base_nodes, insert_base_node): track", 
   "parent_id -> parent_relpath rename", 
   "* subversion/libsvn_wc/wc_db.h:", 
   "(svn_wc__db_base_add_file): add TRANSLATED_SIZE parameter", 
   "(svn_wc__db_base_get_info, svn_wc__db_read_info): remove const from the", 
   "checksum OUT param. the may want to play with it.", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(enum statement_keys, statements): new SQL statements", 
   "(insert_base_baton_t): all the necessary data for inserting a new row", 
   "into BASE_NODE.", 
   "(kind_to_word): use SVN_ERR_MALFUNCTION_NO_RETURN", 
   "(word_to_presence, presence_to_word): new functions for simple", 
   "conversions of the 'presence' column values", 
   "(fetch_repos_info): declare the DB to be corrupt (rather than simply", 
   "throwing a random error) when a REPOSITORY row is missing.", 
   "(scan_upwards_for_repos): use column_int64() to fetch the repos_id since", 
   "we're using 64-bit variables for this id.", 
   "(parse_local_abspath): revamp to scan up through the local filesystem to", 
   "find our database. use column_int64() when fetching wc_id.", 
   "(create_repos_id): new function to look up or to create rows in the", 
   "REPOSITORY table.", 
   "(insert_base_node): heavy lifter function for the base_add_* functions.", 
   "this inserts a row for the node, and possibly child nodes for dirs.", 
   "(svn_wc__db_base_add_directory, svn_wc__db_base_add_file,", 
   "svn_wc__db_base_add_symlink, svn_wc__db_base_add_absent_node):", 
   "implement these functions. note that add_directory uses a transaction", 
   "to insert the directory node and all its children.", 
   "(svn_wc__db_base_remove, svn_wc__db_base_get_props,", 
   "svn_wc__db_base_get_children, svn_wc__db_base_get_symlink_target):", 
   "add calls to parse_local_abspath() for basic processing. tho these", 
   "functions will still bail out.", 
   "(svn_wc__db_base_get_info): use new word_to_presence() function, and the", 
   "new svn_sqlite__column_checksum() function. remove the const from the", 
   "checksum OUT parameter. use column_int64() when retrieving repos_id", 
   "and translated_size from the row results.", 
   "(svn_wc__db_base_get_prop): implement in terms of base_get_props().", 
   "(svn_wc__db_read_info): remove const from the checksum OUT param", 
   "* subversion/tests/libsvn_wc/db-test.c:", 
   "(data_loading_sql): mark the 'G' node as created in r2", 
   "(create_fake_wc): enable a fake_wc/SUBDIR/.svn/wc.db dir structure", 
   "(set_prop): helper function to set properties in a hash structure", 
   "(test_getting_info): remove const from the checksum. pass our test name", 
   "as the subdir when creating the fake wc. align with r2 for 'G'", 
   "(validate_node): helper function to validate that a node exists where we", 
   "expect it, and that its kind/status are proper. not yet, but", 
   "eventually check the properties, too.", 
   "(test_inserting_nodes): new function to test a bunch of insertions.", 
   "(test_funcs): add the new test_inserting_nodes."
  ], 
  "revision_id": "876154"
 }, 
 {
  "author": "gstein", 
  "date": "2009-02-23T16:36:27.387933Z", 
  "msg": [
   "Simple function to get a database that is cached in an access baton.", 
   "* subversion/libsvn_wc/lock.h:", 
   "(svn_wc__adm_get_db): new declaration", 
   "* subversion/libsvn_wc/lock.c:", 
   "(svn_wc__adm_get_db): new implementation"
  ], 
  "revision_id": "876153"
 }, 
 {
  "author": "gstein", 
  "date": "2009-02-23T16:34:29.704848Z", 
  "msg": [
   "Add new binding/retrieval functions to our sqlite interface to deal with", 
   "svn datatypes.", 
   "Also, expand/clarify some docstrings and tweak column_text() for usability.", 
   "* subversion/include/private/svn_sqlite.h:", 
   "(svn_sqlite__bind_properties, svn_sqlite__bind_checksum,", 
   "svn_sqlite__column_properties, svn_sqlite__column_checksum): new", 
   "declarations.", 
   "* subversion/libsvn_subr/sqlite.c:", 
   "(svn_sqlite__bind_properties, svn_sqlite__bind_checksum,", 
   "svn_sqlite__column_properties, svn_sqlite__column_checksum): new", 
   "function implementations.", 
   "(svn_sqlite__column_text): return NULL if the column is null; which", 
   "means don't try to pstrdup when that happens.", 
   "(svn_sqlite__column_boolean): remove superfluous parens."
  ], 
  "revision_id": "876152"
 }, 
 {
  "author": "gstein", 
  "date": "2009-02-23T16:26:48.928122Z", 
  "msg": [
   "Fix a poorly-named error code.", 
   "* subversion/include/svn_error_codes.h:", 
   "(SVN_ERR_WC_NOT_WORKING_COPY): new", 
   "(SVN_ERR_WC_NOT_DIRECTORY): deprecated"
  ], 
  "revision_id": "876151"
 }
]