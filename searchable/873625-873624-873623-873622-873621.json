[
 {
  "author": "lgo", 
  "date": "2008-10-08T15:41:58.135103Z", 
  "msg": [
   "ra_serf: Simplify use of REQS_PER_CONN constant.", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(open_connection_if_needed): Define REQS_PER_CONN as 8 directly instead of", 
   "using power of two math."
  ], 
  "revision_id": "873625"
 }, 
 {
  "author": "danielsh", 
  "date": "2008-10-08T14:48:19.460324Z", 
  "msg": [
   "* tools/client-side/change-svn-wc-format.py", 
   "(WCFormatConverter.write_dir_format):", 
   "Fix the check whether `get_adm_dir()` is in 'paths'.", 
   "Don't use a loop to check a condition we know is true."
  ], 
  "revision_id": "873624"
 }, 
 {
  "author": "julianfoad", 
  "date": "2008-10-08T14:37:37.190029Z", 
  "msg": [
   "Remove a duplicate (redundant) tree conflict detection call.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(add_file_with_history): Remove tree conflict detection from here, as it", 
   "is done in this case by add_file()."
  ], 
  "revision_id": "873623"
 }, 
 {
  "author": "gstein", 
  "date": "2008-10-08T14:34:53.382375Z", 
  "msg": [
   "Various cleanups and simplifications.", 
   "Of particular note was the ridiculous svn_client_commit_item_create() that", 
   "created a *const* result, meaning that callers couldn't actually store", 
   "values into their newly-created item. Instead, they'd cast a const in", 
   "there on *every* invocation (didn't somebody see *all* those casts as an", 
   "indication of a problem!?). Also tossed the error result -- our other", 
   "constructors don't do that, and there is no reasonable expectation for an", 
   "error result in the future.", 
   "This change also completely deprecates all of the svn_wc_process_committed()", 
   "functions. They depend upon one part of the code dropping a file with a", 
   "specific name into a specific location, and then this code swings by and", 
   "picks it up. The coupling means we have *very* little flexibility in", 
   "changing the implementation. We don't use this function any more, in favor", 
   "of the commit queue functions, so these are now completely deprecated with", 
   "the hope that the queue can solve the coupling problem. It is so bad that", 
   "I've simply removed the documentation to discourage any possible use.", 
   "* subversion/include/svn_wc.h:", 
   "(svn_wc_queue_committed2): new version of the function with a draft set", 
   "of arguments. This function has not (yet) been implemented.", 
   "(svn_wc_queue_committed, svn_wc_process_committed4,", 
   "svn_wc_process_committed3, svn_wc_process_committed2,", 
   "svn_wc_process_committed): deprecated", 
   "* subversion/include/svn_client.h:", 
   "(svn_client_commit_item_create2): new constructor", 
   "(svn_client_commit_item_create): deprecated", 
   "* subversion/libsvn_wc/adm_ops.c:", 
   "(remove_revert_file): renamed into ...", 
   "(remove_revert_files): ... this. This function was called twice in a", 
   "row, with a FALSE then TRUE value for is_prop. And the function", 
   "basically has two code paths keyed off that value. (buh...)  So, I", 
   "just unraveled the if-block, removed the parameter, and had one", 
   "invocation do both tasks. Simple.", 
   "(process_committed_leaf): change parameter from a digest to the new", 
   "checksum type. change the call to remove_revert_files().", 
   "(process_committed_internal): convert the incoming digest into a", 
   "checksum, and pass that to process_committed_leaf().", 
   "(struct svn_wc_committed_queue_t): keep a running flag on whether we've", 
   "seen any \"recurse\" items in the queue (simplifies our later tests to", 
   "remove duplicate commit items).", 
   "(svn_wc_committed_queue_create): initialize have_recursive.", 
   "(svn_wc_queue_committed): update the have_recursive flag in the queue.", 
   "(have_recursive_parent): don't worry about testing for recurse-presence", 
   "since we do that on insertion.", 
   "(svn_wc_process_committed_queue): switch to the queue-level", 
   "have_recursive flag.", 
   "(svn_wc_remove_from_revision_control): fix call to svn_wc__text_base_path.", 
   "* subversion/libsvn_wc/adm_crawler.c:", 
   "(svn_wc_transmit_text_deltas2): remove unneeded fetch of a timestamp", 
   "* subversion/libsvn_client/delete.c:", 
   "(delete_urls): switch to svn_client_commit_item_create2", 
   "* subversion/libsvn_client/util.c:", 
   "(svn_client_commit_item_create2): new function", 
   "(svn_client_commit_item_create): revamp in terms of the new", 
   "svn_client_commit_item_create2 function.", 
   "* subversion/libsvn_client/prop_commands.c:", 
   "(propset_on_url): switch to svn_client_commit_item_create2", 
   "* subversion/libsvn_client/copy.c:", 
   "(repos_to_repos_copy, wc_to_repos_copy): switch to", 
   "svn_client_commit_item_create2", 
   "* subversion/libsvn_client/commit_util.c:", 
   "(add_committable): switch to svn_client_commit_item_create2", 
   "(struct path_driver_cb_baton): remove unused tempfiles field", 
   "(svn_client__do_commit): don't set tempfiles field in the baton. renamed", 
   "subpool to iterpool for clarity.", 
   "* subversion/libsvn_client/add.c:", 
   "(mkdir_urls): switch to svn_client_commit_item_create2", 
   "* subversion/libsvn_client/commit.c:", 
   "(send_file_contents): combine file_open and from_aprfile2 calls into a", 
   "single svn_stream_open_readonly() call. leave some comments for", 
   "additional, future work.", 
   "(get_ra_editor): remove latest_rev argument.", 
   "(svn_client_import3): switch to svn_client_commit_item_create2 and update", 
   "call to get_ra_editor.", 
   "(svn_client_commit4): update call to get_ra_editor."
  ], 
  "revision_id": "873622"
 }, 
 {
  "author": "danielsh", 
  "date": "2008-10-08T14:32:04.178383Z", 
  "msg": [
   "Support wc format 10 in 'change-svn-wc-format.py':", 
   "* tools/client-side/change-svn-wc-format.py", 
   "(LATEST_FORMATS):  Add format 10 for Subversion 1.6.", 
   "(Entries.entry_fields):", 
   "Add 'tree-conflicts' and 'file-externals' fields.", 
   "(Entry.must_retain_fields):", 
   "Convert to hash of tuples.  Extend for format 10.", 
   "Along the way, remove the assumption that all format numbers are one byte", 
   "long:", 
   "* tools/client-side/change-svn-wc-format.py", 
   "(Entries.format_nbr, Entries.format_nbr_bytes):  New.", 
   "(Entries.parse):", 
   "Promote 'format_nbr' to class member (from local variable).", 
   "Initialise 'format_nbr_bytes'.", 
   "(Entries.write_format):", 
   "Overwrite all bytes of the old format number.  (Without this,", 
   "overwriting format 10 by format 9 would leave format 90.)"
  ], 
  "revision_id": "873621"
 }
]