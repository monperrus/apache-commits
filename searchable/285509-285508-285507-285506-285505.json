[
 {
  "author": "craigmcc", 
  "date": "2000-12-22T22:13:08.000000Z", 
  "msg": [
   "Extend the unit testing framework with wrappers for the request and", 
   "response objects that can be configurably added with a Filter defined", 
   "in the web.xml file.  Now, where it makes sense, we can run the wrapped", 
   "and unwrapped version of the same test, to ensure that introducing", 
   "wrappers does not cause any functional problems.", 
   "In addition, a logger that uses static methods has been added to allow", 
   "messages from various components of a test (such as filters and wrappers)", 
   "to be accumulated and added to the response message.", 
   "TODO:  TesterHttpServletRequestWrapper needs to be written, and", 
   "WrapperFilter needs to use it if so configured.  This will allow the", 
   "wrapped version of the GetQueryString01 test to be uncommented.", 
   "TODO:  Golden file support needs to be added to the test client, so that", 
   "the entire response can be validated (not just the first line, as is done", 
   "on \"outContent\".  This will be needed to validate information added to the", 
   "response from the static logger."
  ], 
  "revision_id": "285509"
 }, 
 {
  "author": "pierred", 
  "date": "2000-12-22T20:34:56.000000Z", 
  "msg": [
   "Removed debug statement.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "285508"
 }, 
 {
  "author": "craigmcc", 
  "date": "2000-12-22T18:58:00.000000Z", 
  "msg": [
   "Fix spec compliance bug.  The new ServletRequest.setCharacterEncoding()", 
   "method should throw UnsupportedEncodingException immediately on an invalid", 
   "encoding, rather than waiting for the servlet to call getReader().", 
   "Fixes test failure on Watchdog test ServletRequestSetCharacterEncoding_1Test."
  ], 
  "revision_id": "285507"
 }, 
 {
  "author": "pierred", 
  "date": "2000-12-22T18:37:39.000000Z", 
  "msg": [
   "Fix for Bug #55.", 
   "-----", 
   "Synopsis:", 
   "Default for included files is 8859_1, with no option to set otherwise.", 
   "Report Description:", 
   "The default for reading an included file is ISO_8859_1. We can,", 
   "of course, set pageConent to read UTF-8 (which is what we need it", 
   "to be to support international", 
   "code). Unfortunately, when there are two or more levels of", 
   "encoding (or the pageContent type ins't set), the encoding that", 
   "the JspReader gets set to a hard-coded", 
   "\"ISO_8859_1\", and doesn't allow this to be set to anything else", 
   "via the runtime system properties. In:", 
   "org.apache.jasper.compiler.JspReader JspReader.java line", 
   "158, encoding ALWAYS defaults to 8859_1, and the file.encoding,", 
   "when set from the System properties. This is an easy fix, to set", 
   "encoding to: encoding =", 
   "System.getPropert(\"file.encoding\",\"8859_1\") ; The result,", 
   "typically, is that the file will flake out and convert all of the", 
   "non-UTF-8 characters to US-ASCII, @%, etc.", 
   "-----", 
   "I'm not sure I fully understand what's described there,", 
   "so here is what I believe should be done.", 
   "The \"encoding\" for a JSP file is currently handled as follows:", 
   "1. In Compiler.java, we create a JspReader for the top-level", 
   "(\"including\") jsp file using the 8859_1 encoding.", 
   "2. Using that JspReader, we check if there is a page directive", 
   "with 'contentType' specified. If there is, then", 
   "a new JspReader for the page is created with the encoding set to the", 
   "\"charset\" specified in the contentType value of the page", 
   "directive; otherwise we stick with the default 8859_1 encoding.", 
   "3. When a page is included, JspReader.pushFile() is called,", 
   "and the encoding passed as argument appears to always", 
   "be null (since no encoding attribute can be specified in", 
   "the \"include\" directive, reading 'encoding' off of the", 
   "attributes appears to be a bug in JspParseEventListener).", 
   "Because it is null, it always defaults to 8859_1.", 
   "If I understand well the intent of the bug report, we'd need the", 
   "following modifications:", 
   "- In step 2, if contentType is not specified in the \"including\" page,", 
   "set the encoding to be:", 
   "encoding = System.getProperty(\"file.encoding\", \"8859_1\");", 
   "This means that the default encoding of all JSP files at a site could", 
   "be defined globally using system property \"file.encoding\".", 
   "I don't think this is spec-compliant, and would be reluctant", 
   "to make that change.", 
   "--> Change not done", 
   "Comments from Hans Bergsten", 
   "\"I agree that using \"file.encoding\" as the ultimate default is not", 
   "spec compliant. I suggest you stick to the current behavior, with", 
   "\"8859_1\" if contentType doesn't specify a charset.\"", 
   "- In step 3, use the encoding of the \"including\" page.", 
   "This would fix what I believe is a bug in the current implementation.", 
   "--> Change done", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:\tnathan.dunn@tenzing.com", 
   "Reviewed by:"
  ], 
  "revision_id": "285506"
 }, 
 {
  "author": "craigmcc", 
  "date": "2000-12-22T01:54:33.000000Z", 
  "msg": [
   "Cause the random number to be initialized when a webapp first starts,", 
   "rather than waiting for the first call to request.getSession().", 
   "Actually use the calculated seed value to initialize the random number", 
   "generator, rather than just calculating it :-(.  On at least Linux and", 
   "Win98, this totally eliminates the multi-second seeding delay --", 
   "apparently, the default seeding algorithm is the one that is", 
   "computationally expensive."
  ], 
  "revision_id": "285505"
 }
]