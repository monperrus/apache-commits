[
 {
  "author": "rooneg", 
  "date": "2002-05-21T02:51:00.920386Z", 
  "msg": [
   "* subversion/libsvn_subr/README.errors: note that the proper way to throw", 
   "an svn_error_t * you receive up the call stack is to use the SVN_ERR()", 
   "macro, so that a newbie doesn't get the impression that they should really", 
   "be doing if (err) return err; all over the place."
  ], 
  "revision_id": "842060"
 }, 
 {
  "author": "sussman", 
  "date": "2002-05-20T23:47:26.273591Z", 
  "msg": [
   "Fix issue #704:  for 'switch' commands over DAV, make sure the all of the", 
   "vsn-rsc-urls within switched directory are rewritten with new values.", 
   "The solution I'm using:", 
   "- on the server side, we get a free fs 'walk' from dir_delta by", 
   "comparing the switched tree against revision 0.  dir_delta is", 
   "driving the xml-output editor in a secondary <resource-walk> mode,", 
   "which produces a *flat* list of <resource> elements that contain", 
   "just relative paths and vsn-rsc-urls.", 
   "- on the client side, we've expanded the parser's knowledge of the", 
   "two new xml elements.  when it sees a <resource>, it simply calls", 
   "the set_wc_prop callback on the full path.", 
   "* mod_dav_svn/update.c", 
   "(update_cxt_t):  add 'resource-walk' flag.", 
   "(item_baton_t):  add path3 telescoping arg, which is a 'relative'", 
   "version of dst_path.  (path2 is an absolute version of dst_path)", 
   "(make_child_baton):  telescope 3rd path.", 
   "(upd_close_edit): remove this routine, we'll send </D:update-report>", 
   "at the end of the main function instead.", 
   "(dav_svn__update_report): after first editor drive, possibly call", 
   "svn_repos_dir_delta for a 2nd drive of the same editor in", 
   "'resource-walk' mode.  Then send </D:update-report> at the very end.", 
   "(upd_set_target_revision, close_helper): don't send any xml if doing", 
   "a resource_walk.", 
   "(add_helper, upd_open_root): if in resource-walk mode, send", 
   "<S:resource path=\"fullpath\">...vsn-rsc-url...</S:resource>", 
   "* libsvn_ra_dav/ra_dav.h:  add ELEM_resource_walk and ELEM_resource enums.", 
   "* libsvn_ra_dav/fetch.c", 
   "(report_elements): add 'resource-walk' and 'resource' xml elements.", 
   "(validate_element): an update-report can contain a resource-walk,", 
   "which can contain a resource, which can contain a checked-in.", 
   "(report_baton_t):  add 'current_wcprop_path' field.", 
   "(start_element): store resource tag's path element in new field.", 
   "(end_element): if within a resource, grab the href's cdata and push", 
   "it at the set_wc_prop callback directly.", 
   "* switch.c (svn_client_switch):  what the heck?  why on earth was this", 
   "function calling svn_client__ra_session with \"read_only_wc = TRUE\"?!", 
   "This was installing a NULL set_wc_prop callback in the ra session!"
  ], 
  "revision_id": "842059"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-20T21:49:55.518622Z", 
  "msg": [
   "* subversion/libsvn_fs/id.c", 
   "* subversion/libsvn_fs/id.h", 
   "(svn_fs__id_predecessor): Remove.", 
   "* subversion/libsvn_fs/deltify.c", 
   "* subversion/libsvn_fs/node-rev.h", 
   "(svn_fs__stable_node): Remove.", 
   "* subversion/libsvn_fs/dag.c", 
   "(txn_body_dag_init_fs): No longer call svn_fs__stable_node, as it no", 
   "longer exists, and did nothing of interest in this case even when", 
   "it did exist."
  ], 
  "revision_id": "842058"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-20T19:03:50.962907Z", 
  "msg": [
   "Merge r1968 from trunk into this branch, so I can reap the benefits."
  ], 
  "revision_id": "842057"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-20T18:48:05.362996Z", 
  "msg": [
   "Convert REVISION and TRANSACTION structures/skels to the new system.", 
   "* subversion/libsvn_fs/fs.h", 
   "(svn_fs__revision_t): Add `txn' and `copies' members.  Rename", 
   "`base_root_id' to just `base_id'.", 
   "(svn_fs__transaction_t): Add `revision' member, and modify comments.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_TRANSACTION_NOT_MUTABLE): New error code.", 
   "* subversion/libsvn_fs/err.h", 
   "(svn_fs__err_txn_not_mutable): New.", 
   "* subversion/libsvn_fs/fs_skels.c", 
   "(is_valid_transaction_skel, svn_fs__parse_transaction_skel,", 
   "svn_fs__unparse_transaction_skel): Handle new committed transaction skel.", 
   "(is_valid_revision_skel, svn_fs__parse_revision_skel,", 
   "svn_fs__unparse_revision_skel): Update to handle new svn_fs__revision_t.", 
   "* subversion/libsvn_fs/txn-table.c", 
   "(is_committed, svn_fs__commit_txn): New.", 
   "(svn_fs__create_txn): Update to new svn_fs__transaction_t type.", 
   "(svn_fs__delete_txn, svn_fs__set_txn_root, svn_fs__set_txn_base,", 
   "txn_body_txn_prop, txn_body_txn_proplist, svn_fs__set_txn_prop,", 
   "svn_fs__get_txn_ids): Don't operate on committed transactions.", 
   "(svn_fs__get_txn_list): Make this filter out committed transactions.", 
   "* subversion/libsvn_fs/err.c", 
   "(svn_fs__err_txn_not_mutable): New.", 
   "* subversion/libsvn_fs/txn-table.h", 
   "(svn_fs__get_txn_list): Modify promise.", 
   "(svn_fs__set_txn_prop, svn_fs__set_txn_base, svn_fs__set_txn_root,", 
   "svn_fs__get_txn_ids, svn_fs__delete_txn): Edit promise.", 
   "(svn_fs__commit_txn): New.", 
   "* subversion/libsvn_fs/txn.c", 
   "(txn_body_abort_txn): Clean up any copies that were made in the", 
   "transaction, too.", 
   "* subversion/libsvn_fs/dag.c", 
   "(txn_body_dag_init_fs): Use new revision and transaction types", 
   "during DAG initialization.", 
   "(svn_fs__dag_commit_txn): Rather than delete the committed", 
   "transaction, promote it as such.", 
   "* subversion/libsvn_fs/dag.h", 
   "(svn_fs__dag_clone_root): Change promise."
  ], 
  "revision_id": "842056"
 }
]