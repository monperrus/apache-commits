[
 {
  "author": "jboynes", 
  "date": "2005-01-20T06:11:12.415667Z", 
  "msg": [
   "javadoc and stick with naming conventions"
  ], 
  "revision_id": "125724"
 }, 
 {
  "author": "crossley", 
  "date": "2005-01-20T06:08:34.576411Z", 
  "msg": [
   "Fix nagoya => mail-archives, and wiki URLs."
  ], 
  "revision_id": "125723"
 }, 
 {
  "author": "jm", 
  "date": "2005-01-20T06:03:05.755521Z", 
  "msg": [
   "removed description-length limits entirely, and set new rule-name length", 
   "limit of 50 characters.  Instead, implemented some sensible wrapping", 
   "code to deal with it at the report-generation step.   Added test script", 
   "for wrapping code."
  ], 
  "revision_id": "125722"
 }, 
 {
  "author": "rich", 
  "date": "2005-01-20T06:02:16.725561Z", 
  "msg": [
   "- Added warnings when:", 
   "- there is a @Jpf.ValidateRequired annotation on a form bean getter which returns a primitive type (which will never be null, and thus will never fail validation", 
   "- there is a @Jpf.ValidateType annotation on a form bean getter which returns the same type (which can never fail validation).", 
   "- Fixed an NPE that occurred in AutoRegisterActionServlet when a parse error occurred during auto-registration of a Struts module.", 
   "DRT: netui (WinXP)", 
   "BB: self (linux)"
  ], 
  "revision_id": "125721"
 }, 
 {
  "author": "kylem", 
  "date": "2005-01-20T05:59:35.180539Z", 
  "msg": [
   "Add a new SPI (org.apache.beehive.controls.spi.bean.ControlFactory) to the Controls runtime that enables control instantation to be hooked and delegated out to an external JavaBean instantiation/configuration framework, such as Hivemind or Spring.", 
   "The SPI provider impl is found using Apache Commons Discovery resouce mechanisms, the most useful probably being to simply include a jar in the application classpath that defines an implementation of the SPI interface using the JDK META-INF/services conventions.", 
   "THIS DOES INTRODUCE A RUNTIME DEPENDENCY ON THE APACHE COMMONS DISCOVERY JAR.   The standard import/build target has been updated so the jar will be automatically included by the webapp build ant target.", 
   "All control instantations within the Beehive framework, whether done programmatically via Controls.instantiate() API or declaratively from a web service, page flow, or control implementation, are routed through this SPI, so a provider impl can participate in the instantation of all Controls within a Beehive application.", 
   "A default provider is included (org.apache.beehive.controls.spi.bean.JavaControlFactory) that simply uses Java reflection (the existing mechanism pre-SPI).  It will be transparently configured if no other SPI implementation is found.", 
   "This is an initial step towards having integration between Beehive Controls (which offers a strong programming model and runtime services for JavaBeans) and other bean-oriented frameworks supporting instantation/configuration/wrapper services for JavaBeans."
  ], 
  "revision_id": "125720"
 }
]