[
 {
  "author": "costin", 
  "date": "2003-04-03T00:53:51.000000Z", 
  "msg": [
   "jk2.properties is not required.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "298539"
 }, 
 {
  "author": "costin", 
  "date": "2003-04-03T00:52:26.000000Z", 
  "msg": [
   "All code moved to parent - but we need to keep this around for", 
   "backward compat.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "298538"
 }, 
 {
  "author": "costin", 
  "date": "2003-04-03T00:51:44.000000Z", 
  "msg": [
   "Few changes - hopefully no backward incompatibilities.", 
   "The most important is the use of the \"threadData\" property in", 
   "ThreadWithAttribute.  Previously - we created a simple thread, and", 
   "used Runnable - however this mechanism is more powerfull and allows", 
   "us to share info that was usually private.", 
   "In particular we need the thread data exposed so we can use the", 
   "ObjectName and unregister the connector and components.", 
   "I also added support for Runnable - it's a long time since I wanted to", 
   "do this. The reason we used ThreadPoolRunnable was the lack of ThreadData", 
   "in JDK1.1. However ThreadWithAttributes provide the same functionality", 
   "and is much cleaner. Now it would be possible to run more stuff in", 
   "thread pools.", 
   "Finally - I moved the code that gets info from ThreadPoolMX - there is no", 
   "need and no dependency on JMX, the registration happens in the listener."
  ], 
  "revision_id": "298537"
 }, 
 {
  "author": "costin", 
  "date": "2003-04-03T00:45:21.000000Z", 
  "msg": [
   "Add a \"threadData\" attribute. This can simplify the init and allow", 
   "the thread pool to run simple Runnable.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "298536"
 }, 
 {
  "author": "glenn", 
  "date": "2003-04-02T22:48:01.000000Z", 
  "msg": [
   "Fix possible seg fault when LogLevel is debug"
  ], 
  "revision_id": "298535"
 }
]