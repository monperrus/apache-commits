[
 {
  "author": "rfeng", 
  "date": "2007-06-05T16:08:39.468231Z", 
  "msg": [
   "Rename packages to have .sca."
  ], 
  "revision_id": "544535"
 }, 
 {
  "author": "elecharny", 
  "date": "2007-06-05T16:03:59.797760Z", 
  "msg": [
   "Added a cache for the parent which are known to not be aliases. The gain", 
   "is great when adding entries, as we avoid a lookup for their", 
   "parent for each addition."
  ], 
  "revision_id": "544534"
 }, 
 {
  "author": "enolan", 
  "date": "2007-06-05T16:03:09.251047Z", 
  "msg": [
   "Yoko-378 wsdltoidl tool can't create exception when complextype has no name."
  ], 
  "revision_id": "544533"
 }, 
 {
  "author": "bpendleton", 
  "date": "2007-06-05T16:02:30.971870Z", 
  "msg": [
   "DERBY-2459: Ordering on a CASE expression causes NPE when using UNION", 
   "When an order by clause involves a CASE-expression, in a situation when", 
   "two or more select statements are combined in a union (or union all),", 
   "a NullPointerException is thrown.", 
   "In the original problem report, the CASE expression included qualified", 
   "column references:", 
   "CASE WHEN t2.value IS NOT NULL THEN t2.value ELSE t1.value END", 
   "This is invalid, because the \"t1\" and \"t2\" references are not applicable", 
   "to the result of the UNION operator. So an error message should have been", 
   "issued for the query from the DERBY-2459 description, due to the qualified", 
   "column references.", 
   "However, with the current implementation, CASE expressions as a whole are", 
   "not allowed in the ORDER BY clause of a *UNION* select. CASE expressions seem", 
   "to work correctly for a non-UNION select. I believe that Derby's current", 
   "behavior here is too restrictive; I think that there are valid CASE", 
   "expressions for a UNION select that *ought* to work (such as those which", 
   "use only unqualified column references to valid columns in the UNION's target", 
   "list), but the current implementation is lacking.", 
   "For the original query posted in the problem description, since the intent", 
   "was to order the results of the union by the second column in the union,", 
   "a column position expression can be used successfully: ORDER BY 2.", 
   "This patch causes Derby to issue a comprehensible error message which", 
   "reflects reality accurately, as this is preferable to crashing with an NPE.", 
   "The patch also adds a number of additional ORDER BY test cases to the", 
   "ORDER BY test, demonstrating various query constructions, both those which", 
   "currently work, and those which currently do not work."
  ], 
  "revision_id": "544532"
 }, 
 {
  "author": "almaw", 
  "date": "2007-06-05T16:01:45.133021Z", 
  "msg": [
   "Ditch the WeakReferences - causing Serialization issues. Use the name instead."
  ], 
  "revision_id": "544531"
 }
]