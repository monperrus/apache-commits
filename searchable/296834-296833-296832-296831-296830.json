[
 {
  "author": "remm", 
  "date": "2002-04-16T19:26:31.000000Z", 
  "msg": [
   "- Log the attributes which are set."
  ], 
  "revision_id": "296834"
 }, 
 {
  "author": "costin", 
  "date": "2002-04-16T00:21:37.000000Z", 
  "msg": [
   "Gracefully deal with wrong LD_LIBRARY_PATH or unavailable libs. If", 
   "libapr.so and libjkjni.so are found in the path ( or /usr/lib or ld.so.conf ) - the", 
   "unix channel will be enabled. If not - we'll just report and go on."
  ], 
  "revision_id": "296833"
 }, 
 {
  "author": "costin", 
  "date": "2002-04-16T00:14:12.000000Z", 
  "msg": [
   "Add the JNI channel to the default config ( need to check on other", 
   "platforms and make sure it's a no-op if we're not in jni mode ).", 
   "The current configuration seem to work with both 3.3 and 4.0 in JNI mode", 
   "( at least on Linux, IBM-JDK-1.3.1, Apache2.0 - with LD_LIBRARY set corectly )", 
   "This is not a supported feature for jk2.0 - just making sure the code is in a decent", 
   "shape."
  ], 
  "revision_id": "296832"
 }, 
 {
  "author": "costin", 
  "date": "2002-04-16T00:10:52.000000Z", 
  "msg": [
   "Create a separate jar with the jni code.", 
   "The problem is that lib/container/tomcat-jk2 ( or server/lib/... ) will", 
   "end up in a deep class loader - and the JNI code will not be able to find", 
   "it ( without complex code to deal with class loaders in C ).", 
   "The solution is to put the jni code in the main loader ( but only the", 
   "jni code ).", 
   "We need to review it and make sure we don't mess with the security ( probably", 
   "we'll have to add some code to check the Priviledges of the caller ) - at", 
   "the moment the native interfaces are very experimental, after we get", 
   "everything functional most methods will be private and the access", 
   "controled much tightly."
  ], 
  "revision_id": "296831"
 }, 
 {
  "author": "costin", 
  "date": "2002-04-16T00:04:42.000000Z", 
  "msg": [
   "Singleton use."
  ], 
  "revision_id": "296830"
 }
]