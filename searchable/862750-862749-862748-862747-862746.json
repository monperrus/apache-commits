[
 {
  "author": "dlr", 
  "date": "2006-12-13T00:17:05.100104Z", 
  "msg": [
   "Rev the svn_client_commit_item2_t (and thus the svn_client_get_commit_log2_t)", 
   "API, creating API revision 3.", 
   "This change will make it easier to modify the svn_client_commit_item3_t", 
   "structure in the future, in preparation for adding fields to support", 
   "client -> repos transfer of properties not stored in the WC.  This", 
   "facility may turn out to be generally useful, but will immediately be", 
   "consumed on the merge-tracking branch.  (Only repos -> WC was", 
   "previously supported, by way of the", 
   "svn_client_commit_item2_t.wcprop_changes field.)", 
   "This change will also bring the bindings up to date with the log", 
   "message retrieval APIs.  Some bindings were using the first", 
   "incarnation of the API, which involves extra overhead (roughly 2x as", 
   "much memory per commit item, plus processing to perform data type", 
   "conversions).", 
   "This change will be broken into several distinct commits:", 
   "1) Change the libsvn_client library and svn_client.h header (r22674).", 
   "2) Propogate the changes to the 'svn' command-line client (r22675).", 
   "3) Propogate the changes to the JavaHL bindings (r22676).", 
   "4) Propogate the changes and SWIG Perl/Python/Ruby bindings.  This is", 
   "likely a backwards-incompatible change for consumers which supply", 
   "their own svn_client_ctx_t.log_msg_func (r22677).", 
   "* subversion/bindings/java/javahl/native/SVNClient.h", 
   "(SVNClient::getCommitMessage): Make COMMIT_ITEMS parameter const and", 
   "add a doc string.", 
   "* subversion/bindings/java/javahl/native/SVNClient.cpp", 
   "(SVNClient::getContext): Initialize ctx->log_msg_func3 and", 
   "ctx->log_msg_baton3, rather than the initial incarnation of the API.", 
   "(SVNClient::getCommitMessage): Make COMMIT_ITEMS parameter const.", 
   "* subversion/bindings/java/javahl/native/CommitMessage.h", 
   "(CommitMessage::getCommitMessage): Make COMMIT_ITEMS parameter const.", 
   "* subversion/bindings/java/javahl/native/CommitMessage.cpp", 
   "(CommitMessage::getCommitMessage): Make COMMIT_ITEMS parameter", 
   "const.  Refer to svn_client_commit_item3_t internally."
  ], 
  "revision_id": "862750"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-13T00:15:37.714631Z", 
  "msg": [
   "Rev the svn_client_commit_item2_t (and thus the svn_client_get_commit_log2_t)", 
   "API, creating API revision 3.", 
   "This change will make it easier to modify the svn_client_commit_item3_t", 
   "structure in the future, in preparation for adding fields to support", 
   "client -> repos transfer of properties not stored in the WC.  This", 
   "facility may turn out to be generally useful, but will immediately be", 
   "consumed on the merge-tracking branch.  (Only repos -> WC was", 
   "previously supported, by way of the", 
   "svn_client_commit_item2_t.wcprop_changes field.)", 
   "This change will also bring the bindings up to date with the log", 
   "message retrieval APIs.  Some bindings were using the first", 
   "incarnation of the API, which involves extra overhead (roughly 2x as", 
   "much memory per commit item, plus processing to perform data type", 
   "conversions).", 
   "This change will be broken into several distinct commits:", 
   "1) Change the libsvn_client library and svn_client.h header (r22674).", 
   "2) Propogate the changes to the 'svn' command-line client (r22675).", 
   "3) Propogate the changes to the JavaHL bindings (r22676).", 
   "4) Propogate the changes and SWIG Perl/Python/Ruby bindings.  This is", 
   "likely a backwards-incompatible change for consumers which supply", 
   "their own svn_client_ctx_t.log_msg_func (r22677).", 
   "* subversion/svn/cl.h", 
   "(svn_cl__get_log_message): Adjust doc string to indicate that this", 
   "function implements the svn_client_get_commit_log3_t API.", 
   "* subversion/svn/util.c", 
   "(struct log_msg_baton): Adjust doc string to indicate that this", 
   "structure is to be used with svn_cl__make_log_msg_baton().", 
   "(svn_cl__get_log_message): Remove doc string duplicated in cl.h.", 
   "Refer to svn_client_commit_item3_t internally.", 
   "* subversion/svn/main.c", 
   "(main): Initialize ctx->log_msg_func3 instead of log_msg_func2.", 
   "* subversion/svn/move-cmd.c", 
   "(svn_cl__move): Use ctx->log_msg_baton3 instead of log_msg_func2.", 
   "* subversion/svn/mkdir-cmd.c", 
   "(svn_cl__mkdir): Ditto.", 
   "* subversion/svn/copy-cmd.c", 
   "(svn_cl__copy): Ditto.", 
   "* subversion/svn/commit-cmd.c", 
   "(svn_cl__commit): Ditto.", 
   "* subversion/svn/delete-cmd.c", 
   "(svn_cl__delete): Ditto.", 
   "* subversion/svn/import-cmd.c", 
   "(svn_cl__import): Ditto.", 
   "* subversion/svn/propedit-cmd.c", 
   "(svn_cl__propedit): Ditto."
  ], 
  "revision_id": "862749"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-13T00:13:50.473749Z", 
  "msg": [
   "Rev the svn_client_commit_item2_t (and thus the svn_client_get_commit_log2_t)", 
   "API, creating API revision 3.", 
   "This change will make it easier to modify the svn_client_commit_item3_t", 
   "structure in the future, in preparation for adding fields to support", 
   "client -> repos transfer of properties not stored in the WC.  This", 
   "facility may turn out to be generally useful, but will immediately be", 
   "consumed on the merge-tracking branch.  (Only repos -> WC was", 
   "previously supported, by way of the", 
   "svn_client_commit_item2_t.wcprop_changes field.)", 
   "This change will also bring the bindings up to date with the log", 
   "message retrieval APIs.  Some bindings were using the first", 
   "incarnation of the API, which involves extra overhead (roughly 2x as", 
   "much memory per commit item, plus processing to perform data type", 
   "conversions).", 
   "This change will be broken into several distinct commits:", 
   "1) Change the libsvn_client library and svn_client.h header (r22674).", 
   "2) Propogate the changes to the 'svn' command-line client (r22675).", 
   "3) Propogate the changes to the JavaHL bindings (r22676).", 
   "4) Propogate the changes and SWIG Perl/Python/Ruby bindings.  This is", 
   "likely a backwards-incompatible change for consumers which supply", 
   "their own svn_client_ctx_t.log_msg_func (r22677).", 
   "* subversion/include/svn_client.h", 
   "(Commit state flags): Refer to the svn_client_commit_item3_t data type.", 
   "(svn_client_commit_item3_t): New commit candidate data type.  Should", 
   "be used in conjunction with the svn_client_commit_item_create()", 
   "constructor function.  No differences from svn_client_commit_item2_t", 
   "yet.", 
   "(svn_client_commit_item2_t): Deprecate.", 
   "(svn_client_commit_item_create): New constructor function used to", 
   "create an svn_client_commit_item3_t.", 
   "(svn_client_commit_item3_dup): New duplication function.", 
   "(svn_client_commit_item2_dup): Deprecate.", 
   "(svn_client_get_commit_log3_t): New callback interface.", 
   "(svn_client_get_commit_log2_t): Deprecate.", 
   "(svn_client_ctx_t): Add log_msg_func3 and log_msg_baton3 fields.", 
   "(svn_client_mkdir2, svn_client_delete2, svn_client_import2,", 
   "svn_client_commit4, svn_client_copy3, svn_client_move4,", 
   "svn_client_propset3): Refer to log_msg_func3/log_msg_baton3.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__callback_baton_t.commit_items): Refer to", 
   "svn_client_commit_item3_t in the field's doc string.", 
   "(svn_client__get_log_msg): Document that the API handles", 
   "log_msg_func3.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(add_committable, look_up_committable, svn_client__sort_commit_item_urls,", 
   "svn_client__condense_commit_items): Use svn_client_commit_item3_t", 
   "and its constructor API.", 
   "(struct file_mod_t, do_item_commit, svn_client__do_commit): Refer to", 
   "svn_client_commit_item3_t.", 
   "(svn_client__get_log_msg): Re-implement function to handle log_msg_func3.", 
   "* subversion/libsvn_client/util.c", 
   "(svn_client_commit_item_create): Implement function.", 
   "(svn_client_commit_item3_dup): Implement function.", 
   "* subversion/libsvn_client/delete.c", 
   "(delete_urls): Consider log_msg_func3 when deciding whether to get a", 
   "log message for the operation.  Use svn_client_commit_item3_t and", 
   "its constructor API.", 
   "* subversion/libsvn_client/prop_commands.c", 
   "(propset_on_url): Ditto.", 
   "* subversion/libsvn_client/ra.c", 
   "(get_wc_prop): Use svn_client_commit_item3_t and its constructor API.", 
   "* subversion/libsvn_client/copy.c", 
   "(wc_to_repos_copy, repos_to_repos_copy): Consider log_msg_func3 when", 
   "deciding whether to get a log message for the operation.  Use", 
   "svn_client_commit_item3_t and its constructor API.", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_import2, svn_client_commit4): Consider log_msg_func3", 
   "when deciding whether to get a log message for the operation.  Use", 
   "svn_client_commit_item3_t and its constructor API.", 
   "* subversion/libsvn_client/add.c", 
   "(mkdir_urls): Ditto."
  ], 
  "revision_id": "862748"
 }, 
 {
  "author": "ehu", 
  "date": "2006-12-12T22:52:32.992404Z", 
  "msg": [
   "ra_dav-refactoring: svn_ra_dav__convert_error only applies to", 
   "return values from Neon-request-generating functions.", 
   "* subversion/libsvn_ra_dav/lock.c (do_unlock):", 
   "Don't use svn_ra_dav__convert_error() to generate an error."
  ], 
  "revision_id": "862747"
 }, 
 {
  "author": "ehu", 
  "date": "2006-12-12T22:43:59.324856Z", 
  "msg": [
   "ra_dav-refactoring: Prefer our svn_ra_dav__* routines over the Neon ones", 
   "in part because ours return our errors.", 
   "* subversion/libsvn_ra_dav/commit.c", 
   "(apply_log_message): Use svn_ra_dav__do_proppatch instead of the", 
   "- more complex - ne_proppatch()."
  ], 
  "revision_id": "862746"
 }
]