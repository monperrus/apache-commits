[
 {
  "author": "idus", 
  "date": "2007-04-24T21:21:49.001219Z", 
  "msg": [
   "preliminary menu item for admin page"
  ], 
  "revision_id": "532085"
 }, 
 {
  "author": "bommel", 
  "date": "2007-04-24T21:17:30.781749Z", 
  "msg": [
   "added security support for menu command"
  ], 
  "revision_id": "532084"
 }, 
 {
  "author": "cutting", 
  "date": "2007-04-24T21:13:08.553770Z", 
  "msg": [
   "HADOOP-1282.  Omnibus HBase patch.  Improved tests and configuration.  Contributed by Jim Kellerman."
  ], 
  "revision_id": "532083"
 }, 
 {
  "author": "mamta", 
  "date": "2007-04-24T21:06:22.006382Z", 
  "msg": [
   "DERBY-2583 This commit mainly addresses how code generation should account for collation type when generating DVDs for character types. In", 
   "the past, there was one to one correspondance between a character DTD and the corresponding DVD that got generated for it. Starting", 
   "Derby 10.3, a DTD associated with a character type can generate one of the 2 different kinds of DVDs and the DVD chosen will depend on the", 
   "collation type of the DTD. Note that this applies only to character types.", 
   "Character types that will have a collation of UCS_BASIC associated with them will continue to generate what was generated in Derby 10.2 ie", 
   "SQLChar/SQLVarchar/SQLLongvarchar/SQLClob. But the character types that will have collation type of territory based associated with them", 
   "will now generate CollatorSQLChar/CollatorSQLVarchar/CollatorSQLLongvarchar/CollatorSQLClob. This dependency of DVD type on collation type", 
   "will be handled in classes ExpressionClassBuilder and in TypeCompiler implementations.", 
   "CastNode, ConstantNode, NotNode, ResultColumn, SpecialFunctionNode, JavaToSQLValueNode, UnaryComparisonOperatorNode, UserTypeConstantNode,", 
   "CurrentDatetimeOperatorNode, CurrentRowLocationNode, CoalesceFunctionNode, ConcatenationOperatorNode, ResultColumnList : All of", 
   "these compile time classes require code generation of DVDs. These classes now need to pass the collation type of the DTD for which a DVD", 
   "needs to be generated. This collation type will be used to generate code for correct DVD.", 
   "The actual changes for generating the correct DVD went into CLOBTypeCompiler and CharTypeCompiler. These 2 classes will first generate a", 
   "DVD for character types w/o taking the collation type into consideration. Then it will call a new method which is defined on the base class", 
   "BaseTypeCompiler and that new method is called generateCollationSensitiveDataValue. This new method will check if the collation type is", 
   "UCS_BASIC and if yes, then it will simply return because we have already generated code for DVD with collation type of UCS_BASIC. But if", 
   "the collation type is territory based, then it will generate the additional code of", 
   "DVDwithUCS_BASIC.getValue(DVF.getCharacterCollator(collationType));", 
   "This generated code will make sure that the DVD generated has territory based collator associated with it and the new DVD class will be of", 
   "type CollatorSQLChar/CollatorSQLVarchar/CollatorSQLLongvarchar/CollatorSQLClob. In order to generate the additional code above, we need to", 
   "have DVF on the stack. This pusing of DVF on stack will be done by the private method pushDataValueFactory defined on BaseTypeCompiler"
  ], 
  "revision_id": "532082"
 }, 
 {
  "author": "dennisl", 
  "date": "2007-04-24T21:05:32.041562Z", 
  "msg": [
   "[MIDEA-75] mvn idea:idea fails with StringIndexOutOfBoundsException (toRelative method) when adding resource to base project"
  ], 
  "revision_id": "532081"
 }
]