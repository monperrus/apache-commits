[
 {
  "author": "", 
  "date": "2012-03-28T20:34:54.925598Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8682", 
   "Author:   preilly@adobe.com", 
   "Date:     2009-07-20T14:05:56.543743Z", 
   "Log Message:", 
   "-----------", 
   "* Made compile time metadata inheritable and made Bindable inherited.", 
   "This means it's no longer necessary to copy Bindable metadata down", 
   "to overridden variables and properties.", 
   "tests Passed: checkintests, mxunit databinding", 
   "Needs QA: YES", 
   "Needs DOC: YES", 
   "Bug fixes: SDK-14251", 
   "API Change: NO", 
   "Reviewer: Peter D.", 
   "Is noteworthy for integration: YES", 
   "Code-level description of changes:", 
   "abc/Assignable.java", 
   "as3/reflect/Assignable.java", 
   "Initial checkin.", 
   "CompilerAPI.java", 
   "Modified compile() by removing cleanClassTable() call.", 
   "abc/Method.java", 
   "abc/Variable.java", 
   "Modified interface to extend Assignable and removed getQName(),", 
   "getDeclaringClass(), getAttributes(), getMetaData(), and", 
   "getMetaData(String).", 
   "abc/AbcCompiler.java", 
   "Modified analyze4() to no longer set the typeTable of the AbcClass", 
   "since we no longer null it out in CompilerAPI.compile().", 
   "as3/reflect/Method.java", 
   "as3/reflect/Variable.java", 
   "Modified class to extend Assignable.", 
   "Removed getQName(), getDeclaringClass(), getAttributes(),", 
   "getMetaData(), and getMetaData(String).", 
   "Added getOverridden().", 
   "as3/reflect/TypeTable.java", 
   "Made createMethod() and createVariable() non-static.", 
   "as3/reflect/As3Class.java", 
   "Updated to reflect TypeTable changes.", 
   "as3/AbstractSyntaxTreeUtil.java", 
   "Updated generateApplyTypeExpr() to include \"*\".", 
   "Modified generateTypeExpression() by adding includeAnyType parameter.", 
   "as3/binding/DataBindingFirstPassEvaluator.java", 
   "as3/binding/TypeAnalyzer.java", 
   "mxml/reflect/TypeTable.java", 
   "Modified all getMetaData() calls to include inherited metadata.", 
   "SymbolTable.java", 
   "Removed cleanClassTable().", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/abc/Variable.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/reflect/Method.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/mxml/reflect/TypeTable.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/SymbolTable.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/abc/Assignable.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/AbstractSyntaxTreeUtil.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/reflect/Variable.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/reflect/Assignable.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/reflect/TypeTable.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/abc/AbcCompiler.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/abc/Method.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/binding/DataBindingFirstPassEvaluator.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/reflect/As3Class.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/binding/TypeAnalyzer.java</path>"
  ], 
  "revision_id": "1315763"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:34:52.212337Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8503", 
   "Author:   preilly@adobe.com", 
   "Date:     2009-07-10T14:58:17.212008Z", 
   "Log Message:", 
   "-----------", 
   "* Updated license.jar, with the Perforce build number in the manifest,", 
   "and the code in CompilerAPI, which calls into it.", 
   "tests Passed: checkintests", 
   "Needs QA: YES", 
   "Needs DOC: NO", 
   "API Change: NO", 
   "Is noteworthy for integration: Yes, the automation team should be able", 
   "to test licensing.", 
   "Code-level description of changes:", 
   "modules/compiler/src/java/flex2/compiler/CompilerAPI.java", 
   "Modified hasValidLicense() to call isFlashBuilderPremiumValid().", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/lib/license.jar</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>"
  ], 
  "revision_id": "1315762"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:34:49.330623Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8165", 
   "Author:   preilly@adobe.com", 
   "Date:     2009-06-24T14:02:59.253699Z", 
   "Log Message:", 
   "-----------", 
   "* Customer patch for compiler extension support.", 
   "tests Passed: checkintests, junit", 
   "Needs QA: YES, there are some customer unit tests that need to be", 
   "integrated into our automated builds.", 
   "Needs DOC: YES", 
   "Bug fixes: SDK-18718", 
   "API Change: Yes, adds new API for compiler extensions", 
   "Reviewer: Me", 
   "Cycloner: Gaurav", 
   "Code-level description of changes:", 
   "tools/oem/Application.java", 
   "tools/oem/Library.java", 
   "Added runExtensions() and modified build() to call it.", 
   "tools/oem/Configuration.java", 
   "Added setExtensionLibraries() and addExtensionLibraries().", 
   "tools/oem/internal/ConfigurationConstants.java", 
   "Added COMPILER_EXTENSIONS constant.", 
   "tools/oem/internal/OEMConfiguration.java", 
   "Changed args, defaults, more, linker_args, and linker_more from a", 
   "TreeMapAdapter to a Map<String, Object>.", 
   "Removed TreeMapAdapter inner class.", 
   "Added getExtensions(), setExtensionLibraries(), clone().", 
   "tools/Compc.java", 
   "Refactored compc(String[] args) by moving the bulk of the logic", 
   "into compc(ConfigurationBuffer cfgbuf, CompcConfiguration", 
   "configuration).", 
   "tools/PreLink.java", 
   "Modified run() to call run() on each extension.", 
   "tools/flexbuilder/BuilderConfiguration.java", 
   "Added addExtensionLibraries() and setExtensionLibraries().", 
   "tools/CompcConfiguration.java", 
   "Added setIncludeSources().", 
   "tools/Mxmlc.java", 
   "Modified mxmlc() to call run() on each extension.", 
   "compiler/CompilerAPI.java", 
   "Modified compile() to call run() on each extension.", 
   "compiler/common/CompilerConfiguration.java", 
   "Added extensionsConfig and getter.", 
   "compiler/common/Configuration.java", 
   "Added clone().", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Configuration.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/CompcConfiguration.java</path>", 
   "<path kind=\"dir\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/extensions_en.properties</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/IExtension.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/IMxmlcExtension.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/util/ListMap.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/internal/ConfigurationConstants.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/ExtensionsConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Compc.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/internal/OEMConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/common/CompilerConfiguration.java</path>", 
   "<path kind=\"dir\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/util</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/common/Configuration.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/IPreCompileExtension.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/IConfigurableExtension.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/ICompcExtension.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/ExtensionManager.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/Mxmlc.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/IApplicationExtension.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/IPreLinkExtension.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/extensions/ILibraryExtension.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/flexbuilder/BuilderConfiguration.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Application.java</path>"
  ], 
  "revision_id": "1315761"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:34:46.759030Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8060", 
   "Author:   preilly@adobe.com", 
   "Date:     2009-06-22T20:38:01.385962Z", 
   "Log Message:", 
   "-----------", 
   "* Fixed global SWC cache issue with frameworks projects and fcsh issue", 
   "with compiling too many files.", 
   "tests Passed: checkintests", 
   "Needs QA: YES", 
   "Needs DOC: NO", 
   "Bug fixes: SDK-21824, SDK-21870", 
   "API Change: NO", 
   "Reviewer: Pete F.", 
   "Code-level description of changes:", 
   "CompilerAPI.java", 
   "Modified validateCompilationUnits() to use the qName instead of", 
   "the dependentName.", 
   "io/InMemoryFile.java", 
   "Modified equals() and hashCode() to use the lastModified and", 
   "bytes.length in addition to the name, so that defaults.css files", 
   "from different SWC's don't overlap in Set's and Map's.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/io/InMemoryFile.java</path>"
  ], 
  "revision_id": "1315760"
 }, 
 {
  "author": "", 
  "date": "2012-03-28T20:34:44.732369Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7782", 
   "Author:   preilly@adobe.com", 
   "Date:     2009-06-12T14:18:35.205871Z", 
   "Log Message:", 
   "-----------", 
   "* Fixed some particularly tricky issues with the global swc cache.", 
   "tests Passed: checkintests", 
   "Needs QA: NO, already cycloned.", 
   "Needs DOC: NO", 
   "Bug fixes: SDK-21460, SDK-21164", 
   "API Change: NO", 
   "Reviewer: Pete F., Peter D.", 
   "Cycloner: Gaurav", 
   "Code-level description of changes:", 
   "compiler/src/java/flex2/tools/oem/Library.java", 
   "Modified processInputs() to favor CompilerSwcContext sources over", 
   "SourcePath sources when the CompilerSwcContext source is cached", 
   "and the timestamps are the same.  This matches logic in", 
   "CompilerAPI.findDefinition().", 
   "compiler/src/java/flex2/compiler/Source.java", 
   "Modified removeCompilationUnit() to only remove the type", 
   "information for SwcScript based CompilationUnits, because these", 
   "can't easily be recreated without recreating the Source.  Another", 
   "alternative is to factor out the CompilationUnit creation from", 
   "CompilerSwcContext.createSource() and modify AbcCompiler.parse1()", 
   "to call it when the CompilationUnit is null.  This option seemed", 
   "the easiest and should minimize object creation.", 
   "Renamed copyMetaData() to copyCompilationUnit() and modified it to", 
   "directly copy the dependencies before copying the dependency", 
   "histories.  This is necessary, because SwcScript based", 
   "CompilationUnit's get there dependencies from catalog.xml.", 
   "compiler/src/java/flex2/compiler/CompilerSwcContext.java", 
   "Modified getSource() to populate def2source with all of the", 
   "SwcScript's definitions, so that they can all share one Source and", 
   "CompilationUnit.  Otherwise, we have separate", 
   "Source/CompilationUnit pairs for all the definitions in the player", 
   "which are defined in files with multiple definitions, like Object,", 
   "Array, Clipboard, etc.", 
   "Updated updateObsoletedSources() to reflect change to SwcScript.", 
   "Removed cachedSources variable, modified getCachedScript() to have", 
   "a QName parameter, and modified cachedSources() to no longer cache", 
   "the result, since getCachedScript() uses def2script directly.", 
   "compiler/src/java/flex2/compiler/CompilerAPI.java", 
   "Modified validateCompilationUnits() to check for instances of", 
   "MultiName when validating dependencies.  Dependencies are", 
   "MultiNames when they are read in from a cache file.  Also added", 
   "call to removeVectorTypes().", 
   "Modified logReasonAndRemoveCompilationUnit() to use the", 
   "topLevelDefinitions when cleaning up the SwcScript cached", 
   "CompilationUnits.", 
   "Added removeVectorTypes() to clean up all the Vector based types", 
   "created in the previous compilation.  These types are created on", 
   "the fly by ReferenceValue.bindToTypeParamSlot() and they don't fit", 
   "into the Flex Compiler design, because there isn't a Source and/or", 
   "CompilationUnit for them.  As a result, there is no way to", 
   "invalidate them or swap them out when things like playerglobal.swc", 
   "or airglobal.swc is swapped in or out of the library or external", 
   "library path.  This is what was causing the following error:", 
   "Implicit coercion of a value of type flash.display:GraphicsStroke to an unrelated type flash.display:IGraphicsData. Line.as flex4/flex4/src/spark/primitives line 264 Flex Problem", 
   "The reason was Line was passing a playerglobal.swc based", 
   "Vector.<flash.display.IGraphicsData> into a function that was", 
   "expecting an airglobal.swc based", 
   "Vector.<flash.display.IGraphicsData>.  Both Vector and", 
   "flash.display.IGraphicsData had been properly swapped out, but the", 
   "airglobal.swc based Vector.<flash.display.IGraphicsData> was", 
   "spilling over from the airframework project compilation.", 
   "compiler/src/java/flex2/compiler/swc/SwcGroup.java", 
   "Modified updateMaps() to reflect the SwcScript changes.", 
   "compiler/src/java/flex2/compiler/swc/SwcScript.java", 
   "Replaced the compilationUnits variable with compilationUnit now", 
   "that all the SwcScript definitions share a single", 
   "Source/CompilationUnit pair.  Updated the related accessors.", 
   "Modified toString() to make it easier to see that SwcScript's can", 
   "contain multiple definitions.", 
   "compiler/src/java/flex2/compiler/swc/Swc.java", 
   "Modified buildLibrary() to reflect the SwcScript changes.", 
   "swfutils/src/java/flash/swf/tools/SyntaxTreeDumper.java", 
   "Modified evaluate(Context cx, ParameterNode node) to also dump the", 
   "init field.", 
   "compiler/src/java/flex2/compiler/as3/binding/BindableSecondPassEvaluator.java", 
   "Modified moveMetaDataToNewDefinition() to check that", 
   "fromDefinition is not null before using it.  This should fix", 
   "SDK-21164.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/oem/Library.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/swfutils/src/java/flash/swf/tools/SyntaxTreeDumper.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerSwcContext.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/swc/SwcScript.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/Source.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/swc/SwcGroup.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/as3/binding/BindableSecondPassEvaluator.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/swc/Swc.java</path>"
  ], 
  "revision_id": "1315759"
 }
]