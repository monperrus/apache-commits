[
 {
  "author": "andy_seaborne", 
  "date": "2010-12-03T12:39:17.000000Z", 
  "msg": [
   "*** empty log message ***"
  ], 
  "revision_id": "1114035"
 }, 
 {
  "author": "andy_seaborne", 
  "date": "2010-11-26T19:58:47.000000Z", 
  "msg": [
   "Add rawtypes to @SupressWarnings for maximum warning supression."
  ], 
  "revision_id": "1114034"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2010-11-12T16:02:21.000000Z", 
  "msg": [
   "revised LiteralLabelImpl(Object value) to create new AdhocDatatype if value.getClass() doesn't already have a datatype. Adhoc types don't do very much -- in particular, they don't parse lexical forms to values, and assume that toString() is a good enough unparser -- but it's enough to support ad-hoc use during development.", 
   "May replace this with \"throw if no datatype\" when we've worked out if the consequent test failures are relevant."
  ], 
  "revision_id": "1114033"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2010-11-12T12:21:00.000000Z", 
  "msg": [
   "Moved the aforementioned conversion model to be a local of validate -- saves worrying about long-term crud staying in the node cache since the model evaporates when the report is delivered."
  ], 
  "revision_id": "1114032"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2010-11-12T12:16:34.000000Z", 
  "msg": [
   "simplified the conversion of Node culpritN to RDFNode culprit by delegating it to Model.asRDFNode() and introducing a model for that purpose. This avoids the conversion of Triples in literals going via datatype code that wants to unparse and re-parse the lexical form, but since that datatype will be an ad-hoc datatype that can't parse anything, it turned out to be bad news. Hence this change to avoid issues."
  ], 
  "revision_id": "1114031"
 }
]