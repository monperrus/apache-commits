[
 {
  "author": "philip", 
  "date": "2003-02-14T17:31:29.870070Z", 
  "msg": [
   "Test three way merge where some of the original-to-modifed1 changes", 
   "exactly match some of the original-to-modified2 changes.", 
   "* subversion/tests/libsvn_delta/diff-diff3-test.c", 
   "(merge_with_part_already_present): New test.", 
   "(random_three_way_merge): Remove combined file."
  ], 
  "revision_id": "844975"
 }, 
 {
  "author": "striker", 
  "date": "2003-02-14T14:57:08.451998Z", 
  "msg": [
   "First pass at implementing using the internal diff lib for doing diffs, with", 
   "an opt-out by either setting [helpers] diff-cmd or passing --diff-cmd on the", 
   "commandline.  The latter is still broken, since the client context doesn't", 
   "go as deep as svn_io_run_diff.  So, instead of using the argument passed to", 
   "--diff-cmd, it uses what is in the config file or SVN_CLIENT_DIFF.", 
   "* subversion/libsvn_client/diff.c", 
   "(diff_cmd_baton): Add 'cmd' field, a placeholder for a path to an external", 
   "diff command.", 
   "(diff_file_changed): If there was no external diff command specified, use", 
   "the internal diff lib to generate the output.  Else, fall back to", 
   "svn_io_run_diff.", 
   "(svn_client_diff): Initialize the new 'cmd' field of the diff_cmd_baton.", 
   "* subversion/clients/cmdline/cl.h", 
   "(svn_cl__longopt_t, svn_cl__opt_state_t): Add diff-cmd option and placeholder", 
   "for argument.", 
   "* subversion/clients/cmdline/main.c", 
   "(svn_cl__option, svn_cl__cmd_table): Add 'diff-cmd'.", 
   "(main): Add 'diff-cmd' processing.  Also override the value of diff-cmd", 
   "in the config if it was passed on the commandline."
  ], 
  "revision_id": "844974"
 }, 
 {
  "author": "striker", 
  "date": "2003-02-14T14:30:48.867887Z", 
  "msg": [
   "Merge changes from trunk."
  ], 
  "revision_id": "844973"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-02-14T06:39:01.628942Z", 
  "msg": [
   "Create some #defines so that other clients have a chance in the world", 
   "of overriding the values in their svn_config_t's.", 
   "* subversion/include/svn_config.h", 
   "(SVN_CONFIG_SECTION_GROUPS, SVN_CONFIG_SECTION_DEFAULT,", 
   "SVN_CONFIG_OPTION_HTTP_PROXY_HOST, SVN_CONFIG_OPTION_HTTP_PROXY_PORT,", 
   "SVN_CONFIG_OPTION_HTTP_PROXY_USERNAME, SVN_CONFIG_OPTION_HTTP_TIMEOUT,", 
   "SVN_CONFIG_OPTION_HTTP_PROXY_PASSWORD, SVN_CONFIG_OPTION_NEON_DEBUG_MASK,", 
   "SVN_CONFIG_OPTION_HTTP_COMPRESSION, SVN_CONFIG_OPTION_SVN_TUNNEL_AGENT,", 
   "SVN_CONFIG_OPTION_STORE_PASSWORD, SVN_CONFIG_SECTION_HELPERS,", 
   "SVN_CONFIG_OPTION_EDITOR_CMD, SVN_CONFIG_OPTION_DIFF_CMD,", 
   "SVN_CONFIG_OPTION_DIFF3_CMD, SVN_CONFIG_SECTION_AUTH,", 
   "SVN_CONFIG_OPTION_DIFF3_HAS_PROGRAM_ARG, SVN_CONFIG_OPTION_TEMPLATE_ROOT", 
   "SVN_CONFIG_SECTION_MISCELLANY, SVN_CONFIG_OPTION_GLOBAL_IGNORES,", 
   "SVN_CONFIG_OPTION_HTTP_PROXY_EXCEPTIONS): New.", 
   "* subversion/libsvn_subr/config_impl.h", 
   "(SVN_REGISTRY_SYS_CONFIG_PATH, SVN_REGISTRY_USR_CONFIG_PATH): Fix", 
   "these that I broke (thanks to Patrick Mayweg <mayweg@qint.de> for the", 
   "catch).", 
   "(SVN_REGISTRY_SYS_CONFIG_CONFIG_PATH, SVN_REGISTRY_USR_CONFIG_CONFIG_PATH):", 
   "Remove.", 
   "* subversion/libsvn_ra_dav/session.c", 
   "(get_server_settings): Fix some bugs I introduced, and use the new #defines.", 
   "Use the new config #defines in these places, too:", 
   "* subversion/clients/cmdline/util.c (svn_cl__edit_externally)", 
   "* subversion/libsvn_client/auth.c (maybe_store_password)", 
   "* subversion/libsvn_subr/io.c (svn_io_run_diff, svn_io_run_diff3)", 
   "* subversion/libsvn_wc/status.c (svn_wc_get_default_ignores)", 
   "* subversion/libsvn_ra_svn/client.c (find_tunnel_agent)", 
   "* subversion/libsvn_repos/repos.c (svn_repos_create)"
  ], 
  "revision_id": "844972"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-02-14T04:32:10.560150Z", 
  "msg": [
   "Simplify the config interface a bit.  This is part of Issue #1004.", 
   "* subversion/libsvn_subr/config_impl.h", 
   "(SVN_REGISTRY_SYS_CONFIG_SERVERS_PATH, SVN_REGISTRY_USR_CONFIG_SERVERS_PATH,", 
   "SVN_REGISTRY_SYS_CONFIG_CONFIG_PATH, SVN_REGISTRY_USR_CONFIG_CONFIG_PATH,", 
   "SVN_REGISTRY_CONFIG_CONFIG_KEY, SVN_REGISTRY_CONFIG_SERVERS_KEY):", 
   "Remove.", 
   "(SVN_REGISTRY_SYS_CONFIG_PATH, SVN_REGISTRY_USR_CONFIG_PATH): New.", 
   "* subversion/libsvn_subr/config.c", 
   "(get_category_config, svn_config_get_config): New.", 
   "(svn_config_read_config, svn_config_read_servers): Remove.", 
   "* subversion/include/svn_config.h", 
   "(svn_config_get_config): New.", 
   "(svn_config_read_config, svn_config_read_servers): Remove.", 
   "* subversion/include/svn_io.h", 
   "(svn_io_run_diff, svn_io_run_diff3): Add 'config' parameter.", 
   "* subversion/libsvn_subr/io.c", 
   "(svn_io_run_diff, svn_io_run_diff3): Add 'config' parameter.", 
   "* subversion/libsvn_repos/repos.c", 
   "(svn_repos_create): Add 'config', and use it.", 
   "* subversion/clients/cmdline/cl.h", 
   "(svn_cl__edit_externally, svn_cl__make_log_msg_baton): Add 'config'.", 
   "* subversion/clients/cmdline/util.c", 
   "(svn_cl__edit_externally): Add 'config' and use it.", 
   "(svn_cl__get_log_message): Update call to svn_cl__edit_externally().", 
   "(struct log_msg_baton, svn_cl__make_log_msg_baton): Add 'config'.", 
   "* subversion/clients/cmdline/propedit-cmd.c", 
   "(svn_cl__propedit): Update call to svn_cl__edit_externally().", 
   "* subversion/clients/cmdline/commit-cmd.c", 
   "(svn_cl__commit): Update call to svn_cl__make_log_msg_baton().", 
   "* subversion/clients/cmdline/main.c", 
   "(main): Update call to svn_cl__make_log_msg_baton().", 
   "* subversion/libsvn_client/diff.c", 
   "(diff_cmd_baton): Add 'config'.", 
   "(svn_client_diff): Put the client config into the diff_cmd_baton.", 
   "(diff_file_changed): Update call to svn_io_run_diff().", 
   "(merge_file_changed, merge_file_added): Update call to svn_wc_merge().", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge): Add 'config'.  Update call to svn_io_run_diff3().", 
   "* subversion/svnlook/main.c", 
   "(print_diff_tree): Add 'config' and use it.  Update call to", 
   "svn_io_run_diff(), and recursive calls to self.", 
   "(do_diff): Parse the config and update call to print_diff_tree().", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_merge): Add 'config'.", 
   "* subversion/svnadmin/main.c", 
   "(subcommand_create): Read the config, and pass it to svn_repos_create().", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_create): Add 'config'.", 
   "* subversion/libsvn_wc/log.c", 
   "(log_do_merge): Update to new config parser interface.", 
   "* subversion/tests/fs-helpers.c", 
   "(svn_test__create_repos): Update call to svn_repos_create().", 
   "* subversion/libsvn_wc/status.c", 
   "(svn_wc_get_default_ignores): Protect against NULL config hash.", 
   "* subversion/libsvn_client/auth.c", 
   "(maybe_store_password): Protect against NULL config hash.", 
   "* subversion/libsvn_ra_dav/session.c", 
   "(get_server_settings): Protect against NULL config hash.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(find_tunnel_agent): Protect against NULL config hash."
  ], 
  "revision_id": "844971"
 }
]