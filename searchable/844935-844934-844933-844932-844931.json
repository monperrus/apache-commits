[
 {
  "author": "cmpilato", 
  "date": "2003-02-12T21:33:26.701066Z", 
  "msg": [
   "* subversion/libsvn_ra_dav/props.c", 
   "(svn_ra_dav__get_baseline_props): Put 'relative_path_old' inside", 
   "#ifdef conditional to prevent compiler warning."
  ], 
  "revision_id": "844935"
 }, 
 {
  "author": "philip", 
  "date": "2003-02-12T20:35:40.893750Z", 
  "msg": [
   "Pass the access baton into prop_path_internal and use it to avoid", 
   "accessing the physical filesystem.  This reduces the number of system", 
   "calls made by the client by about 25-30% on checkout and update and", 
   "as much as 50% on status.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_has_binary_prop, svn_wc_prop_list, svn_wc_prop_get,", 
   "svn_wc_transmit_prop_deltas): Add access baton parameter.", 
   "(svn_wc_adm_wc_format): New function.", 
   "* subversion/libsvn_wc/adm_files.h (svn_wc__wcprop_path, svn_wc__prop_path,", 
   "svn_wc__prop_base_path): Add access baton parameter.", 
   "* subversion/libsvn_wc/adm_files.c", 
   "(prop_path_internal): Add access baton parameter.  Use access baton", 
   "information instead of accessing the physical filesystem.", 
   "(svn_wc__wcprop_path, svn_wc__prop_path, svn_wc__prop_base_path): Add", 
   "access baton parameter.", 
   "* subversion/libsvn_wc/lock.c", 
   "(struct svn_wc_adm_access_t): Add wc_format member.", 
   "(probe): Add wc_format parameter.", 
   "(adm_access_alloc): Initialise wc_format member.", 
   "(svn_wc_adm_probe_open, svn_wc_adm_probe_retrieve): Add format handling.", 
   "(svn_wc_adm_wc_format): New function.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(restore_file): Pass access baton to svn_wc__get_eol_style and", 
   "svn_wc__maybe_set_executable.", 
   "(report_revisions): Pass access baton to svn_wc_prop_get.", 
   "(svn_wc_transmit_prop_deltas): Add access baton parameter.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add, revert_admin_things, svn_wc_remove_from_revision_control):", 
   "Pass access baton to svn_wc__prop_path et.al.", 
   "* subversion/libsvn_wc/copy.c", 
   "(svn_wc__remove_wcprops): Pass access baton to svn_wc__wcprop_path,", 
   "svn_wc__prop_path and svn_wc__prop_base_path.", 
   "* subversion/libsvn_wc/diff.c", 
   "(file_diff, directory_elements_diff): Pass access baton to", 
   "svn_wc_get_prop_diffs", 
   "(change_file_prop, change_dir_prop): Pass access baton to svn_wc_prop_list.", 
   "* subversion/libsvn_wc/log.c", 
   "(file_xfer_under_path, install_committed_file): Pass access baton to", 
   "svn_wc__get_eol_style and svn_wc__maybe_set_executable.", 
   "(log_do_modify_entry): Pass access baton to svn_wc__prop_path.", 
   "(log_do_committed): Pass access baton to svn_wc__prop_path,", 
   "svn_wc__prop_base_path and svn_wc_get_prop_diffs.", 
   "(log_do_modify_wcprop): Pass access baton to svn_wc__wcprop_set.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge): Pass access baton to svn_wc_has_binary_prop,", 
   "svn_wc__get_eol_style and svn_wc__maybe_set_executable.", 
   "* subversion/libsvn_wc/props.h (svn_wc__has_props, svn_wc__wcprop_get,", 
   "svn_wc__wcprop_set): Add access baton parameter.", 
   "* subversion/libsvn_wc/props.c", 
   "(svn_wc__merge_prop_diffs, svn_wc_props_modified_p, svn_wc_get_prop_diffs):", 
   "Pass access baton to svn_wc__prop_path and svn_wc__prop_base_path.", 
   "(wcprop_list, svn_wc__wcprop_set, svn_wc_prop_list, svn_wc_prop_get,", 
   "validate_eol_prop_against_file, svn_wc__has_props, svn_wc_get_prop_diffs):", 
   "Add access baton parameter.", 
   "(svn_wc_prop_set): Pass access baton to svn_wc__wcprop_set,", 
   "validate_eol_prop_against_file and svn_wc_prop_list.", 
   "* subversion/libsvn_wc/questions.c", 
   "(svn_wc__timestamps_equal_p): Pass access baton to svn_wc__prop_path.", 
   "(svn_wc_has_binary_prop): Add access baton parameter.", 
   "* subversion/libsvn_wc/status.c", 
   "(add_ignore_patterns): Change const char* parameter to an access baton.", 
   "(assemble_status): Do the check for an obstructed versioned directory", 
   "earlier.  Pass access baton to svn_wc__has_props.", 
   "(add_unversioned_items, get_dir_status): Remove const char * parameter", 
   "and get path from access baton.", 
   "(svn_wc_statuses): Don't pass path to get_dir_status.", 
   "* subversion/libsvn_wc/translate.c", 
   "(svn_wc_translated_file): Pass access baton to svn_wc__get_eol_style.", 
   "(svn_wc__get_eol_style, svn_wc__maybe_set_executable): Add access baton", 
   "parameter.", 
   "(svn_wc__get_keywords): Pass access baton to svn_wc_prop_get.", 
   "* subversion/libsvn_wc/translate.h", 
   "(svn_wc_translated_file): Pass access baton to svn_wc__get_eol_style.", 
   "(svn_wc__get_eol_style, svn_wc__maybe_set_executable): Add access batoni", 
   "parameter.", 
   "(svn_wc__get_keywords): Pass access baton to svn_wc_prop_get.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(change_dir_prop): Pass access baton to svn_wc__wcprop_set.", 
   "(close_directory): Pass access baton to svn_wc_prop_get.", 
   "(svn_wc_install_file): Pass access baton to svn_wc__wcprop_set and", 
   "svn_wc__prop_base_path.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(check_prop_mods): Pass access baton to svn_wc_get_prop_diffs.", 
   "(do_item_commit): Pass access baton to svn_wc_prop_get and", 
   "svn_wc_transmit_prop_deltas.", 
   "* subversion/libsvn_client/ra.c (get_wc_prop): Pass access baton to", 
   "svn_wc_prop_get.", 
   "* subversion/libsvn_client/prop_commands.c", 
   "(pristine_or_working_props, pristine_or_working_propval, add_to_proplist):", 
   "Add access baton parameter.", 
   "(recursive_propget, svn_client_propget): Pass access baton to", 
   "pristine_or_working_propval.", 
   "(recursive_proplist, svn_client_proplist): Pass access baton to", 
   "add_to_proplist."
  ], 
  "revision_id": "844934"
 }, 
 {
  "author": "dlr", 
  "date": "2003-02-12T19:16:34.000559Z", 
  "msg": [
   "* subversion/bindings/swig/java/README", 
   "Noted support for JDK version 1.2 and higher"
  ], 
  "revision_id": "844933"
 }, 
 {
  "author": "striker", 
  "date": "2003-02-12T17:44:48.495972Z", 
  "msg": [
   "* subversion/tests/libsvn_delta/diff-diff3-test.c", 
   "Move all tests to PASS.  Add more tests.", 
   "* subversion/libsvn_delta/diff.c", 
   "(svn_diff3): Fix core dumps exposed by the tests in diff-diff3-test.", 
   "Fix loop tested for in test_three_way_merge_no_overlap/7."
  ], 
  "revision_id": "844932"
 }, 
 {
  "author": "striker", 
  "date": "2003-02-12T16:57:30.702005Z", 
  "msg": [
   "* subversion/bindings/swig/apr.i: Revert change from r4788 which made", 
   "OUTPUT parameter conversion for apr_time_t a Java-specific change.", 
   "Pythons need lovin' too...", 
   "Patch by: Edward S. Marshall <esm@logic.net>"
  ], 
  "revision_id": "844931"
 }
]