[
 {
  "author": "danielsh", 
  "date": "2011-07-09T19:21:46.828908Z", 
  "msg": [
   "Document a quick way to block 'svnrdump load'.", 
   "Via use of 'svnrdump load' anyone with commit access could create thousands of", 
   "revisions of history arbitrarily; consequently, server administrators may want", 
   "to prevent its unintentional or uncoordinated use.  (This problem doesn't exist", 
   "with svnsync, since the latter refuses to write to a non-empty repository.)", 
   "Suggested by: gstein", 
   "me", 
   "* docs/release-notes/1.7.html", 
   "(svnrdump): Add a hook script to block non-custom-compiled svnrdump instances.", 
   "[ As an aside, we could in theory use the *_client_string API's for that,", 
   "but that requires more invasive code changes. ]"
  ], 
  "revision_id": "1144720"
 }, 
 {
  "author": "smarru", 
  "date": "2011-07-09T19:21:43.691421Z", 
  "msg": [
   "reorganizing svn"
  ], 
  "revision_id": "1144719"
 }, 
 {
  "author": "danielsh", 
  "date": "2011-07-09T19:04:47.022008Z", 
  "msg": [
   "Nominate r1144717."
  ], 
  "revision_id": "1144718"
 }, 
 {
  "author": "danielsh", 
  "date": "2011-07-09T19:00:52.792186Z", 
  "msg": [
   "Fix issue #3949.  This patch causes lock_tests to pass on all RA layers and, if", 
   "backported, against 1.6 svnserve as well.  It doesn't change the semantics of", 
   "the test (whether to expect a warning with zero exit code or an error with", 
   "non-zero exit code; currently it expects the former).", 
   "I'm not sure whether SVN_ERR_IS_UNLOCK_ERROR() should get the same treatment,", 
   "as it doesn't presently look for SVN_ERR_FS_OUT_OF_DATE either.  It should", 
   "probably check for both of them?", 
   "* subversion/include/svn_error.h", 
   "(SVN_ERR_IS_LOCK_ERROR):", 
   "Include SVN_ERR_FS_NOT_FOUND.", 
   "Fix preprocessor whitespace continuation."
  ], 
  "revision_id": "1144717"
 }, 
 {
  "author": "sarowe", 
  "date": "2011-07-09T18:55:21.187855Z", 
  "msg": [
   "Merged with trunk up to r1144715"
  ], 
  "revision_id": "1144716"
 }
]