[
 {
  "author": "andy", 
  "date": "2014-02-13T19:21:30.213900Z", 
  "msg": [
   "Upgrade to httpclient 4.2.6, Lucene/solr 4.6.1, spatial4j 0.4"
  ], 
  "revision_id": "1568013"
 }, 
 {
  "author": "andy", 
  "date": "2014-02-13T19:19:10.905416Z", 
  "msg": [
   "Install tests jar"
  ], 
  "revision_id": "1568012"
 }, 
 {
  "author": "liyin", 
  "date": "2014-02-13T19:18:38.380452Z", 
  "msg": [
   "[HBASE-10437] Adding HTable API function to get histogram information from all the regions of a table.", 
   "Author: manukranthk", 
   "Summary: Adds a getHistogramForAllRegions to HTable which concurrently acquires the Histogram data from all the regions and returns the results back to the client in the ascending order of the regions. This also adjusts the start and end row of the last buckets to the region boundaries so that its easier for the users while using the feature.", 
   "Test Plan: Added unit tests", 
   "Reviewers: adela, liyintang, aaiyer, gauravm", 
   "Reviewed By: liyintang", 
   "CC: hbase-eng@, daviddeng", 
   "Differential Revision: https://phabricator.fb.com/D1148039", 
   "Task ID: 3588805"
  ], 
  "revision_id": "1568011"
 }, 
 {
  "author": "liyin", 
  "date": "2014-02-13T19:18:33.883656Z", 
  "msg": [
   "[HBASE-10512] Fix a race problem when using HTable in the TestHRegionServerFileSystemFailure", 
   "Author: daviddeng", 
   "Summary: Since HTable is not thread-safe, Create a HTable instance for each thread.", 
   "Test Plan: Run TestHRegionServerFileSystemFailure", 
   "Reviewers: liyintang, gauravm, manukranthk", 
   "Reviewed By: liyintang", 
   "CC: hbase-eng@, fan", 
   "Differential Revision: https://phabricator.fb.com/D1170920", 
   "Task ID: 3269413"
  ], 
  "revision_id": "1568010"
 }, 
 {
  "author": "stefan2", 
  "date": "2014-02-13T19:16:41.714841Z", 
  "msg": [
   "Follow-up to r1567996:  Lost updates will be more common with the", 
   "global hit counters than the per-entry counters since the latter", 
   "are less busy.", 
   "That allows us to put a lower limit of 0 on the global counter", 
   "because in the long run, the sum of the entry hit counters will", 
   "always grow faster than the global hit value.", 
   "* subversion/libsvn_subr/cache-membuffer.c", 
   "(): Explain the mechanics behind the race hit counters.", 
   "(svn_membuffer_t): Switch back to an unsigned hit counter.", 
   "(drop_entry,", 
   "let_entry_age): Prevent global hit counter underflows."
  ], 
  "revision_id": "1568009"
 }
]