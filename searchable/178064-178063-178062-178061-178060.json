[
 {
  "author": "skitching", 
  "date": "2005-05-24T02:46:49.211983Z", 
  "msg": [
   "factory/logger combination for use in unit tests."
  ], 
  "revision_id": "178064"
 }, 
 {
  "author": "skitching", 
  "date": "2005-05-24T02:43:20.739156Z", 
  "msg": [
   "General updates."
  ], 
  "revision_id": "178063"
 }, 
 {
  "author": "skitching", 
  "date": "2005-05-24T02:41:04.158760Z", 
  "msg": [
   "Initial testcase stuff."
  ], 
  "revision_id": "178062"
 }, 
 {
  "author": "bandaram", 
  "date": "2005-05-24T02:33:37.247185Z", 
  "msg": [
   "Derby-81: Add support for JDBC escape functions timestampAdd and timestampDiff.", 
   "The syntax is of TIMESTAMPADD and TIMESTAMPDIFF is", 
   "{fn TIMESTAMPADD( interval, count, ts1)}", 
   "{fn TIMESTAMPDIFF( interval, ts1, ts2)}", 
   "where interval is one of SQL_TSI_FRAC_SECOND, SQL_TSI_SECOND, SQL_TSI_MINUTE, SQL_TSI_HOUR, SQL_TSI_DAY, SQL_TSI_WEEK, SQL_TSI_MONTH, SQL_TSI_QUARTER, or SQL_TSI_YEAR; count is a numeric expression; and ts1 and ts2 are datetime expressions (date, time, or timestamp). If a date is used in ts1 or ts2 it is converted to a timestamp by using time 00:00:00. If a time is used in ts1 or ts2 it is converted to a timestamp by using the current date.", 
   "SQL_TSI_FRAC_SECOND indicates nanoseconds. The other interval names are self-explanatory.", 
   "TIMESTAMPADD produces a new timestamp by adding count intervals to ts1. For example", 
   "VALUES( {fn TIMESTAMPADD( SQL_TSI_DAY, 1, CURRENT_TIMESTAMP)})", 
   "produces the timestamp for one day from now.", 
   "TIMESTAMPDIFF returns the number of intervals by which ts2 exceeds ts2. It is approximately ts2 - ts1. TIMESTAMPDIFF produces an integer. If the actual difference is too large to fit in an integer then an SQLException is thrown. If the actual difference is not an integral number of intervals then TIMESTAMPDIFF rounds to 0. For example", 
   "VALUES( {fn TIMESTAMPDIFF( SQL_TSI_HOUR, {t '12:00:00'}, {t '13:50:00'})},", 
   "{fn TIMESTAMPDIFF( SQL_TSI_HOUR, {t '13:50:00'}, {t '12:00:00'})}", 
   "produces the row (1, -1).", 
   "More examples:", 
   "SELECT * FROM t WHERE {fn TIMESTAMPDIFF( SQL_TSI_DAY, CURRENT_DAY, promisedDate)} <= 1", 
   "Selects all rows from t with promisedDate at most one day from now. (It also selects rows with a promisedDate in the past). Note that this is probably not the optimal way to express the query. If promisedDate is indexed the Derby optimizer will not use the index. Better is", 
   "SELECT * FROM t WHERE promisedDate <= {fn TIMESTAMPADD( SQL_TSI_DAY, 1, CURRENT_DAY)", 
   "Submitted by Jack Klebanoff (klebanoff-derby@sbcglobal.net)"
  ], 
  "revision_id": "178061"
 }, 
 {
  "author": "roberto", 
  "date": "2005-05-24T02:05:40.898210Z", 
  "msg": [
   "~Updated C# DataMapper Guide: added text for CTH (from the .NET Wiki FAQ); updated inline parameters text (example); edited inheritance (change example title from Formula to TypeHandler); other minor edits to working.xml; minor edits to dotnet.xml"
  ], 
  "revision_id": "178060"
 }
]