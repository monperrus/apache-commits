[
 {
  "author": "", 
  "date": "2012-01-31T18:15:59.547950Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7525", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-03T16:22:06.250492Z", 
   "Log Message:", 
   "-----------", 
   "- Change TextInputSkin to verticalAlign=\"middle\".  Numeric stepper already does this as do most of the test apps.", 
   "- In getSelectionFormat(), if an unknown format is requested, ignore it, rather than RTE.  Returned object will contain only the known formats.", 
   "- In setSelectionFormat(), in unknown format is specified, ignore it rather than RTE.", 
   "QA Notes: A few TextInput tests need to be updated because of the skin change.  TextArea margin tests need to be updated.  marginTop, marginBottom, marginLeft and marginRight formats have been renamed to paragraphSpaceBefore, paragraphSpaceAfter, paragraphStartIndent and paragraphEndIndent respectively", 
   "Doc Notes:", 
   "Bugs: SDK-19565", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/skins/default/TextInputSkin.mxml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>"
  ], 
  "revision_id": "1280118"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:15:56.529308Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7514", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-03T11:43:00.820430Z", 
   "Log Message:", 
   "-----------", 
   "When you set the 'text' property of RichEditableText to a String that has line-ending sequences such as LF or CR+LF, a TextFlow with multiple paragraph is now produced as the 'content'. The splitting is done using TLF's importer for PLAIN_TEXT_FORMAT if the 'text' is found to contain \\r or \\n.  See rev 7480 for more detail.", 
   "Fix bug in importToFlow() which I thought I had already fixed.  The config param should be passed in the call to TextFilter.getImporter().  This impacts whiteSpace processing in content that is a markup string.", 
   "QA Notes:", 
   "Doc Notes:", 
   "Bugs:", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as"
  ], 
  "revision_id": "1280117"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:15:53.930215Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7491", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-02T16:22:03.123279Z", 
   "Log Message:", 
   "-----------", 
   "Rename inputManager to textContainerManager and fix spelling mistake in [RichTextContent] comment.", 
   "Make RichEditableTextContainerManager private for docs.", 
   "QA Notes:", 
   "Doc Notes:", 
   "Bugs:", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/TextArea.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>"
  ], 
  "revision_id": "1280116"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:15:49.673664Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7487", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-02T15:10:21.029844Z", 
   "Log Message:", 
   "-----------", 
   "Scrolling work.  Fix scrolling delta code.  Override RichEditableTextContainerManager.keyDownHandler() so we can call event.preventDefault() which will tell our scroller, if there is one, that it doesn't need to respond to the key.  Ideally, TLF will do this, rather than our override.", 
   "QA Notes:", 
   "Doc Notes:", 
   "Bugs: SDK-18486", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>"
  ], 
  "revision_id": "1280115"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:15:46.559850Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7415", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-05-29T15:09:31.703572Z", 
   "Log Message:", 
   "-----------", 
   "The new Vellum build has tcm.scrollToPosition() and factory.isTruncated so use them.", 
   "QA Notes:", 
   "Doc Notes:", 
   "Bugs:", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichText.as</path>"
  ], 
  "revision_id": "1280114"
 }
]