[
 {
  "author": "matzew", 
  "date": "2008-07-04T08:54:50.594814Z", 
  "msg": [
   "TRINIDAD-1126 - Contention at java.util.regex.Pattern.matcher", 
   "Problem is, String.replace(CharSeq, CharSeq) uses internally Pattern.matcher, which has a (serious) bug, b/c it does synchronized(this), which causes PERF issues.", 
   "JDK bug is known, already:", 
   "http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6436458", 
   "Not sure if it is fixed in an update of Java5 or 6, but it is fixed in Java7.", 
   "For what it's worth, Apache Harmony, doesn't have that problem.", 
   "Fix:", 
   "-Introduced a StringUtils.replace(String, String, String), taken from Commons LANG.", 
   "-used this static util, instead of \"nativ\" java language feature(the String.replace(CharSq, CharSq)).", 
   "-In StyleUtils we got rid of Pattern.matcher().replaceAll. This is exactly, what the String.replace() in question does. Using the \"new\", borrowed, utility here as well"
  ], 
  "revision_id": "673965"
 }, 
 {
  "author": "matzew", 
  "date": "2008-07-04T08:54:26.310641Z", 
  "msg": [
   "TRINIDAD-1126 - Contention at java.util.regex.Pattern.matcher", 
   "Problem is, String.replace(CharSeq, CharSeq) uses internally Pattern.matcher, which has a (serious) bug, b/c it does synchronized(this), which causes PERF issues.", 
   "JDK bug is known, already:", 
   "http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6436458", 
   "Not sure if it is fixed in an update of Java5 or 6, but it is fixed in Java7.", 
   "For what it's worth, Apache Harmony, doesn't have that problem.", 
   "Fix:", 
   "-Introduced a StringUtils.replace(String, String, String), taken from Commons LANG.", 
   "-used this static util, instead of \"nativ\" java language feature(the String.replace(CharSq, CharSq)).", 
   "-In StyleUtils we got rid of Pattern.matcher().replaceAll. This is exactly, what the String.replace() in question does. Using the \"new\", borrowed, utility here as well", 
   "ported the fix to the 1.2.8.1 branch as well"
  ], 
  "revision_id": "673964"
 }, 
 {
  "author": "matzew", 
  "date": "2008-07-04T08:53:46.247640Z", 
  "msg": [
   "TRINIDAD-1126 - Contention at java.util.regex.Pattern.matcher", 
   "Problem is, String.replace(CharSeq, CharSeq) uses internally Pattern.matcher, which has a (serious) bug, b/c it does synchronized(this), which causes PERF issues.", 
   "JDK bug is known, already:", 
   "http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6436458", 
   "Not sure if it is fixed in an update of Java5 or 6, but it is fixed in Java7.", 
   "For what it's worth, Apache Harmony, doesn't have that problem.", 
   "Fix:", 
   "-Introduced a StringUtils.replace(String, String, String), taken from Commons LANG.", 
   "-used this static util, instead of \"nativ\" java language feature(the String.replace(CharSq, CharSq)).", 
   "-In StyleUtils we got rid of Pattern.matcher().replaceAll. This is exactly, what the String.replace() in question does. Using the \"new\", borrowed, utility here as well"
  ], 
  "revision_id": "673963"
 }, 
 {
  "author": "pamarcelot", 
  "date": "2008-07-04T08:51:33.619984Z", 
  "msg": [
   "Fixed various ClassCastException found in the logs at startup of the Apache DS plugin."
  ], 
  "revision_id": "673962"
 }, 
 {
  "author": "jm", 
  "date": "2008-07-04T08:51:04.631302Z", 
  "msg": [
   "promotions validated"
  ], 
  "revision_id": "673961"
 }
]