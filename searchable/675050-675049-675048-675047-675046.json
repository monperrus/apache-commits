[
 {
  "author": "vitek", 
  "date": "2008-07-08T23:25:19.440750Z", 
  "msg": [
   "2008-07-09  Travis Vitek  <vitek@roguewave.com>", 
   "STDCXX-916", 
   "* include/rw/_meta_help.h: Remove doxygen tags from comments.", 
   "* include/rw/_meta_prop.h: Reduce lines to 76 characters or", 
   "less where necessary.", 
   "[_MSC_VER]: Simplify workaround for broken __is_pod() and", 
   "__is_empty().", 
   "[!_RWSTD_TT_IS_STANDARD_LAYOUT]: Change fallback for the", 
   "__rw_is_standard_layout<> trait to be more reliable.", 
   "[!_RWSTD_TT_IS_EMPTY]: Change fallback for __rw_is_empty<>", 
   "trait to be more reliable.", 
   "[!_RWSTD_TT_IS_POLYMORPHIC]: Add fallback to detect polymorphic", 
   "class types when compiler support is not available.", 
   "[!_RWSTD_TT_IS_ABSTRACT]: Add fallback to detect abstract", 
   "class types when compiler support is not available.", 
   "[!_RWSTD_TT_HAS_TRIVIAL_CTOR]: Add fallback to detect types", 
   "that have a trivial constructor when compiler support is not", 
   "available.", 
   "[!_RWSTD_TT_HAS_TRIVIAL_COPY]: Add fallback to detect types", 
   "that have a trivial copy constructor when compiler support is", 
   "not available.", 
   "[!_RWSTD_TT_HAS_TRIVIAL_ASSIGN]: Add fallback to detect types", 
   "that have a trivial assignment operator when compiler support", 
   "is not available.", 
   "[!_RWSTD_TT_HAS_TRIVIAL_DTOR]: Add fallback to detect types", 
   "that have a trivial destructor when compiler support is not", 
   "available.", 
   "[!_RWSTD_TT_HAS_NOTHROW_CTOR]: Add fallback to detect types", 
   "that have a nothrow constructor when compiler support is not", 
   "available.", 
   "[!_RWSTD_TT_HAS_NOTHROW_COPY]: Add fallback to detect types", 
   "that have a nothrow copy constructor when compiler support is", 
   "not available.", 
   "[!_RWSTD_TT_HAS_NOTHROW_ASSIGN]: Add fallback to detect types", 
   "that have a nothrow assignment operator when compiler support", 
   "is not available.", 
   "[!_RWSTD_TT_HAS_VIRTUAL_DTOR]: Add fallback to detect types", 
   "that have a virtual destructor when compiler support is not", 
   "available. Currently tests that the type is polymorphic, which", 
   "may not be entirely accurate.", 
   "* include/rw/_meta_other.h [__GNUG__]: Use simpler implementation for", 
   "__rw_aligned_storage<>. Reorder union members to make most strictly", 
   "aligned member first.", 
   "[_RWSTD_TT_MAX_ALIGNMENT]: Guard __rw_aligned_storage_impl<>", 
   "specializations to prevent their use when the requested alignment", 
   "is out of range.", 
   "* include/rw/_meta_comp.h: Reduce lines to 76 characters or less.", 
   "* include/rw/_meta_cat.h: Add __rw_is_class_or_union<> helper.", 
   "[!_RWSTD_TT_IS_CLASS]: Add fallback to detect class types, using", 
   "_RWSTD_TT_IS_UNION if available.", 
   "[!_RWSTD_TT_IS_UNION]: Add fallback to detect union types, using", 
   "_RWSTD_TT_IS_CLASS if available.", 
   "[!_RWSTD_TT_IS_ENUM]: Add fallback to detect enum types when compiler", 
   "support is not available.", 
   "[!_RWSTD_TT_IS_FUNCTION]: Fix fallback for __rw_is_function to avoid", 
   "compiler warnings on HP aCC 6.16.", 
   "* include/rw/_meta_ref.h: Reduce lines to 76 characters or less.", 
   "Remove use of _TYPENAME macro.", 
   "* include/rw/_meta_rel.h: Fix __rw_is_convertible_impl to avoid", 
   "warning on HP aCC 6.16. Reduce lines to 76 characters or less.", 
   "Remove use of _TYPENAME macro. Fix __rw_is_convertible_impl<> to", 
   "avoid compiler warnings on HP aCC 6.16.", 
   "[_RWSTD_TT_IS_CONVERTIBLE]: Guard header inclusion. Rename template", 
   "parameters to _From and _To for clarity.", 
   "[_RWSTD_TT_IS_BASE_OF]: Guard header inclusion. Change fallback for", 
   "__rw_is_base_of to be more reliable. Rename template parameters to", 
   "_Base and _Derived for clarity.", 
   "* include/rw/_config-gcc.h [__GNUG__]: Reduce lines to 76 characters", 
   "or less where necessary. Work around issue with gcc aligned attribute", 
   "so we can use it to define __rw_aligned_storage<>.", 
   "* include/rw/_config-acc.h [__HP_aCC]: Add macros _RWSTD_TT_ALIGN_OF,", 
   "_RWSTD_TT_MAX_ALIGNMENT, and _RWSTD_TT_ALIGNED_POD.", 
   "* include/rw/_config-msvc.h [_MSC_VER]: Remove comments about broken", 
   "__is_pod(). Reduce lines to 76 characters or less where necessary.", 
   "Provide accurate definition of _RWSTD_TT_MAX_ALIGNMENT.", 
   "* tests/utilities/20.meta.trans.other.cpp: Add include for stddef.h.", 
   "Use std::alignment_of<> instead of __alignof() for portability. Test", 
   "default alignment for various aligned storage sizes.", 
   "* tests/utilities/20.meta.rel.cpp (test_is_base_of): Fix test cases", 
   "that were failing due to parameter ordering."
  ], 
  "revision_id": "675050"
 }, 
 {
  "author": "kclark", 
  "date": "2008-07-08T23:20:15.359677Z", 
  "msg": [
   "rb: Buffer the slice!s in MemoryBuffer for a significant performance increase [THRIFT-63]", 
   "Author: Kevin Ballard <kevin@rapleaf.com>", 
   "Currently it buffers up to 4kB before throwing away the data.", 
   "Tests with 1MB shows the exact same performance characteristics."
  ], 
  "revision_id": "675049"
 }, 
 {
  "author": "stack", 
  "date": "2008-07-08T23:20:02.330570Z", 
  "msg": [
   "HBASE-727 Client caught in an infinite loop when trying to connect to cached server locations"
  ], 
  "revision_id": "675048"
 }, 
 {
  "author": "adrianc", 
  "date": "2008-07-08T23:17:50.097193Z", 
  "msg": [
   "Party Manager contact mech UI fixes. User's couldn't create/edit their own contact info."
  ], 
  "revision_id": "675047"
 }, 
 {
  "author": "doll", 
  "date": "2008-07-08T23:15:17.689805Z", 
  "msg": [
   "Fixed bug in samplecontainer caused by latest abdera changes.", 
   "The abdera code can now return an empty response so the samplecontainer.html code has been modified to allow that emptiness."
  ], 
  "revision_id": "675046"
 }
]