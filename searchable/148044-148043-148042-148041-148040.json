[
 {
  "author": "imario", 
  "date": "2004-05-20T19:34:01.000000Z", 
  "msg": [
   "add content-type and content-encoding to the file attributes"
  ], 
  "revision_id": "148044"
 }, 
 {
  "author": "imario", 
  "date": "2004-05-20T18:47:30.000000Z", 
  "msg": [
   "Now found the ultimative solution.", 
   "Introduce ResourceFileProvider.", 
   "This provider do not have its own filesystem implemention.", 
   "It simply resolve a full filename using the current or passed classloader and using the filesystemmanager to finally resolv the file.", 
   "In the case of a resource within an jar this will result in passing back a vfs jar-fileobject with all its goodies missing in an simple url connection.", 
   "The capability of such a provider is \"Dispatcher\" as it cant know much about the filesystem finally used to handle the resource."
  ], 
  "revision_id": "148043"
 }, 
 {
  "author": "imario", 
  "date": "2004-05-20T17:40:56.000000Z", 
  "msg": [
   "\"resolve Resource\" aka ResourceFileProvider.", 
   "res:META-INF/LICENSE.txt", 
   "Using its own FileProvider was not possible. Some internal tests failed and until i dont know better, i dont want to adjust the test-case. I treat them as a bible - what they say is fact :-)", 
   "I found a solution by adding the scheme \"res\" to the UrlFileProvider too and explicity query this prefix during the resolveFile process.", 
   "The con is, that now there exists a scheme-name which also \"configures\" a provider and could not be changed by editing providers.xml.", 
   "Using UrlFileSystemConfigBuilder one could set the classloader to use."
  ], 
  "revision_id": "148042"
 }, 
 {
  "author": "imario", 
  "date": "2004-05-19T19:34:07.000000Z", 
  "msg": [
   "moved filesystem capabilities to fileprovider (kept old methods for compatibility) to allow to get them before a filesystem is accessed.", 
   "introduced new interface SystemInfo (get an instance from FileSystemManager).", 
   "It allows us to get the currently available schemes (depending on the found external jars (jcifs, jsch, ...)) and to query the capabilities of the filesystem."
  ], 
  "revision_id": "148041"
 }, 
 {
  "author": "imario", 
  "date": "2004-05-18T06:20:56.000000Z", 
  "msg": [
   "PR: 29007", 
   "Submitted By: Anthony Goubard (adagoubard@chello.nl)", 
   "Change temporary filename from", 
   "\"basename_filecount.tmp\"", 
   "to \"tmp_filecount_basename\".", 
   "Advantage of this is to keep the \"fileidentity\" as the file-extension of the original file is kept."
  ], 
  "revision_id": "148040"
 }
]