[
 {
  "author": "seanfinan", 
  "date": "2015-03-05T21:54:31.025109Z", 
  "msg": [
   "attempting script placement"
  ], 
  "revision_id": "1664493"
 }, 
 {
  "author": "seanfinan", 
  "date": "2015-03-05T21:52:45.600589Z", 
  "msg": [
   "attempting script placement"
  ], 
  "revision_id": "1664492"
 }, 
 {
  "author": "ylavic", 
  "date": "2015-03-05T21:49:52.374467Z", 
  "msg": [
   "apr_skiplist: merge r1611023,r1611107,r1611110,r1611120,r1611125,", 
   "r1611184,r1611193,r1611466,r1664406,r1664447,", 
   "r1664451,r1664471 from trunk", 
   "r1611023 | ylavic | 2014-07-16 16:32:05 +0200 (Wed, 16 Jul 2014) | 5 lines", 
   "Three fixes:", 
   "- double size increment in insert_compare(),", 
   "- multiple apr_skiplist_free() called on the same value in remove_compare(),", 
   "- return 0 instead of NULL for void*.", 
   "r1611107 | ylavic | 2014-07-16 19:38:03 +0200 (Wed, 16 Jul 2014) | 6 lines", 
   "We do not garantee zero-ed memory for apr_skiplist_alloc(), neither in", 
   "the description, nor in the code for reused chunks.", 
   "So always allocate raw memory and don't rely on zero-ed one after internal", 
   "calls to apr_skiplist_alloc().", 
   "r1611110 | ylavic | 2014-07-16 19:42:22 +0200 (Wed, 16 Jul 2014) | 1 line", 
   "Improve skiplist tests.", 
   "r1611120 | ylavic | 2014-07-16 20:10:33 +0200 (Wed, 16 Jul 2014) | 3 lines", 
   "Call free() on the skiplist structure in apr_skiplist_destroy() if it was", 
   "apr_skiplist_init()ialized without a pool (ie. malloc()ed).", 
   "r1611125 | ylavic | 2014-07-16 20:21:33 +0200 (Wed, 16 Jul 2014) | 3 lines", 
   "Let apr_skiplist_find_compare() handle given NULL iterator, and be safe", 
   "from NULL returns.", 
   "r1611184 | ylavic | 2014-07-16 22:53:11 +0200 (Wed, 16 Jul 2014) | 4 lines", 
   "Reuse the skiplist's stack needed by insert_compare() by growing it with adds.", 
   "Rename the \"replace\" argument as \"add\" (negating the boolean) to avoid confusion", 
   "since the skiplist never replaces any element (add or preserve semantic).", 
   "r1611193 | ylavic | 2014-07-16 23:16:06 +0200 (Wed, 16 Jul 2014) | 4 lines", 
   "Don't grow the skiplist's height if the element is finally not inserted (preserve semantic).", 
   "Do this by moving the top node creation after insertion occured, and linking to the just", 
   "inserted node(s).", 
   "r1611466 | ylavic | 2014-07-17 22:26:30 +0200 (Thu, 17 Jul 2014) | 5 lines", 
   "Follow up to r1611193: update the inserted node's top while looping should we", 
   "have to create more than one top node (eg. preheight > 0).", 
   "(the check on p != NULL can be omited since it can't be here).", 
   "r1664406 | jim | 2015-03-05 17:51:39 +0100 (Thu, 05 Mar 2015) | 3 lines", 
   "FIX: Skiplists should allow for dups by default. Also, when added, dups", 
   "are added *after* each other, not before", 
   "r1664447 | ylavic | 2015-03-05 19:31:45 +0100 (Thu, 05 Mar 2015) | 1 line", 
   "skiplist: Follow up to r1664406: use insert() in apr_skiplist_merge and optimize test in insert_compare().", 
   "r1664451 | ylavic | 2015-03-05 19:42:35 +0100 (Thu, 05 Mar 2015) | 1 line", 
   "skiplist: Follow up to r1664406+r1664447: Better optimize test in insert_compare() and keep find_compare() in sync.", 
   "r1664471 | ylavic | 2015-03-05 21:00:25 +0100 (Thu, 05 Mar 2015) | 1 line", 
   "skiplist: improve duplicates ordering test."
  ], 
  "revision_id": "1664491"
 }, 
 {
  "author": "astieger", 
  "date": "2015-03-05T21:46:15.742446Z", 
  "msg": [
   "German translations for 1.9.0", 
   "* subversion/po/de.po: Add 91 strings"
  ], 
  "revision_id": "1664490"
 }, 
 {
  "author": "astieger", 
  "date": "2015-03-05T21:44:27.635472Z", 
  "msg": [
   "* subversion/po/de.po scan strings"
  ], 
  "revision_id": "1664489"
 }
]