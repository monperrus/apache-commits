[
 {
  "author": "slaws", 
  "date": "2010-01-18T21:40:32.725685Z", 
  "msg": [
   "Put another sca client api test into the build"
  ], 
  "revision_id": "900580"
 }, 
 {
  "author": "jbohn", 
  "date": "2010-01-18T21:40:30.206455Z", 
  "msg": [
   "ARIES-117 rename daytrader to ariestrader part 3"
  ], 
  "revision_id": "900579"
 }, 
 {
  "author": "lu4242", 
  "date": "2010-01-18T21:40:07.894523Z", 
  "msg": [
   "update version to 1.0.6-SNAPSHOT"
  ], 
  "revision_id": "900578"
 }, 
 {
  "author": "slaws", 
  "date": "2010-01-18T21:39:17.770135Z", 
  "msg": [
   "Add policy matching algorithm. Still a couple of TODOs here. Also there is no matching logic in the policy builders yet."
  ], 
  "revision_id": "900577"
 }, 
 {
  "author": "jwaldman", 
  "date": "2010-01-18T21:38:56.836643Z", 
  "msg": [
   "TRINIDAD-1687 add a Skin api that will clear the skin file(s) and reload at runtime", 
   "The api is", 
   "/**", 
   "* Check to see if this Skin has been marked dirty.", 
   "* The only way to mark a Skin dirty is to call setDirty(true).", 
   "* @return true if the Skin is marked dirty.", 
   "*/", 
   "abstract public boolean isDirty();", 
   "/**", 
   "* Sets the dirty flag of the Skin. Use this if you want to regenerate the skin.", 
   "* During rendering, if isDirty is true,", 
   "* the skin's css file will be reprocessed regardless of whether the css file has been modified", 
   "* or if the CHECK_FILE_MODIFICATION flag was set.", 
   "* The Skinning Framework calls setDirty(false) after the skin has been reprocessed.", 
   "*/", 
   "abstract public void setDirty(boolean dirty);"
  ], 
  "revision_id": "900576"
 }
]