[
 {
  "author": "clin", 
  "date": "2013-05-09T14:07:18.475063Z", 
  "msg": [
   "Add a baseline for event detection: Add selected NEs and Predicates to events. Evalutate: EvaluationOfNEPredicateEventSpans"
  ], 
  "revision_id": "1480643"
 }, 
 {
  "author": "stsp", 
  "date": "2013-05-09T14:04:58.195549Z", 
  "msg": [
   "Add new commands to the interactive conflict prompt which allow users to", 
   "edit conflicted properties and use the result to resolve the property conflict.", 
   "This adds new commands to the property conflict prompt: 'edit' and 'resolved'", 
   "* subversion/svn/conflict-callbacks.c", 
   "(merge_prop_conflict): New, split off from show_prop_conflict().", 
   "(show_prop_conflict): Reimplement as a wrapper around merge_prop_conflict().", 
   "(open_editor): Accept a 'merged_file' path instead of a conflict descriptor", 
   "which contains a merged_file path. No other information from the conflict", 
   "descriptor was used, and this interface change allows open_editor() to be", 
   "reused more easily.", 
   "(edit_prop_conflict): New. Runs an external editor to edit the conflicted", 
   "property value.", 
   "(prop_conflict_options): Add 'edit' and 'resolved' parameters.", 
   "(handle_text_conflict): Adjust for open_editor() interface change.", 
   "(handle_prop_conflict): Handle the newly added options. Only show the", 
   "'resolved' option after the user has used 'edit' to edit the property.", 
   "This function now needs a result pool to ensure that the merged file", 
   "will have sufficient lifetime and won't disappear from disk too early.", 
   "(conflict_func_interactive): Pass a result pool to handle_prop_conflict()."
  ], 
  "revision_id": "1480642"
 }, 
 {
  "author": "stsp", 
  "date": "2013-05-09T14:04:46.802780Z", 
  "msg": [
   "Fix a bug where the conflict resolver ignored the merged value provided", 
   "by the conflict resolution callback, for both text and property conflicts.", 
   "* subversion/libsvn_wc/conflicts.c", 
   "(resolve_text_conflict_on_node): Add 'merged_file' parameter. Use the merged", 
   "file as resolution source if it was provided and the user picked the", 
   "'choose_merged' conflict choice.", 
   "(resolve_prop_conflict_on_node): As above, but here we also need to add a", 
   "'conflicted_propname' parameter which indicates which conflicted property", 
   "the user is resolving, so we can apply the merged value to it.", 
   "(svn_wc__mark_resolved_text_conflict,", 
   "svn_wc__mark_resolved_prop_conflicts): Make these callers pass values for", 
   "the new parameters such that no change in behaviour occurs.", 
   "(conflict_status_walker): Pass the merged_file from the conflict callback", 
   "result to resolve_text_conflict_on_node()/resolve_prop_conflict_on_node().", 
   "This function still ignores the 'save_merge' boolean provided by the", 
   "conflict callback, which will need to be fixed later."
  ], 
  "revision_id": "1480641"
 }, 
 {
  "author": "rmannibucau", 
  "date": "2013-05-09T13:59:45.962055Z", 
  "msg": [
   "TOMEE-740 tomcat 7.0.40"
  ], 
  "revision_id": "1480640"
 }, 
 {
  "author": "desruisseaux", 
  "date": "2013-05-09T13:53:31.089001Z", 
  "msg": [
   "Merge from trunk."
  ], 
  "revision_id": "1480639"
 }
]