[
 {
  "author": "aevers", 
  "date": "2005-03-30T09:53:59.000000Z", 
  "msg": [
   "Allow the input encoding used to be overridden.", 
   "The default input encoding is 'null' which produces the", 
   "orignal behaviour.", 
   "Overriding the input encoding is necessary on platforms", 
   "like BS2000 or IBM z/OS where the default encoding (often", 
   "an EBCDIC variant) is not the same as the network encoding", 
   "(which for XML-RPC is defined to be ASCII)."
  ], 
  "revision_id": "233904"
 }, 
 {
  "author": "dlr", 
  "date": "2004-06-30T18:49:36.000000Z", 
  "msg": [
   "Work around method signature incompatibilities between version 1.1 and", 
   "1.2 of Commons Codec's Base64.encode() and decode() methods.", 
   "The 1.1 release had two encode() and decode() methods (each), one that", 
   "accepted a byte[] and the other accepted an Object.  In both cases,", 
   "Encoder/Decoder Exceptions were thrown if the argument wasn't a", 
   "byte[].  In Codec 1.2, both methods still exist, but the one that", 
   "accepts a byte[] no longer throws the exception (because the input is", 
   "guaranteed to be of type byte[]).", 
   "So, I have one option (which kind of sucks), I can cast the byte[] to an", 
   "Object in the calls to encode/decode to retain compatibility between codec", 
   "1.1 and 1.2.", 
   "* src/java/org/apache/xmlrpc/DefaultTypeFactory.java", 
   "createBase64(String): Cast input to the Base64.decode() method from", 
   "byte[] to Object.", 
   "* src/java/org/apache/xmlrpc/XmlWriter.java", 
   "writeObject(Object): Cast return value of Base64.encode() from", 
   "Object to byte[].", 
   "* src/java/org/apache/xmlrpc/applet/SimpleXmlRpcClient.java", 
   "writeObject(Object, XmlWriter): Cast return value of Base64.encode()", 
   "from Object to byte[].", 
   "Value.characterData(String): Cast input to the Base64.decode()", 
   "method from byte[] to Object.", 
   "* src/java/org/apache/xmlrpc/util/HttpUtil.java", 
   "encodeBasicAuthentication(String, String): Cast return value of", 
   "Base64.encode() from Object to byte[], and assure we call the Object", 
   "overload.", 
   "Submitted by: Jochen Wiedmann", 
   "Reported by:  Ryan Bloom"
  ], 
  "revision_id": "233903"
 }, 
 {
  "author": "dlr", 
  "date": "2004-06-30T06:37:57.000000Z", 
  "msg": [
   "* .cvsignore", 
   "Ignore the test-reports directory.", 
   "Submitted by: Ryan Bloom"
  ], 
  "revision_id": "233902"
 }, 
 {
  "author": "dlr", 
  "date": "2004-06-30T06:37:27.000000Z", 
  "msg": [
   "* .cvsignore", 
   "Ignore the test-reports directory.", 
   "Submitted by: Ryan Bloom", 
   "Branch: XMLRPC_1_2_BRANCH"
  ], 
  "revision_id": "233901"
 }, 
 {
  "author": "dlr", 
  "date": "2004-06-30T06:11:55.000000Z", 
  "msg": [
   "Work around based on a patch from Ken Huffman for the", 
   "SecurityException generated by use in unsigned applets, thrown when", 
   "the code attempts to read a System property.", 
   "* src/java/org/apache/xmlrpc/XmlRpc.java", 
   "version: Added detail about how to implement the associated TODO to", 
   "pre-process in the version number.  Dropped alpha/beta", 
   "qualification of provided version number.", 
   "XmlRpc(): Improved JavaDoc.  Remodeled the interior to handle the", 
   "possible SecurityException which may be thrown when invoked by an", 
   "unsigned applet when determining TypeFactory implementation to use", 
   "from System property.", 
   "XmlRpc(String): Improved JavaDoc.  Remodeled interior to use a joist", 
   "construction, leveraging the new createTypeFactory(String) method to", 
   "replace old debris.", 
   "createTypeFactory(String): Merged this overload with the old private", 
   "createTypeFactory(Class) version for use by both constructors.", 
   "Improved implementation accordingly."
  ], 
  "revision_id": "233900"
 }
]