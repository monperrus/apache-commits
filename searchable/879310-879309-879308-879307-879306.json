[
 {
  "author": "hwright", 
  "date": "2009-09-11T04:53:12.528951Z", 
  "msg": [
   "Remove a couple of now-unused access batons.", 
   "* subversion/libsvn_client/merge.c", 
   "(get_mergeinfo_walk_baton, get_subtree_mergeinfo_walk_baton):", 
   "Remove the base_access member.", 
   "(get_mergeinfo_paths, svn_client_merge_reintegrate): Don't set said member."
  ], 
  "revision_id": "879310"
 }, 
 {
  "author": "hwright", 
  "date": "2009-09-11T04:23:51.253807Z", 
  "msg": [
   "* subversion/libsvn_wc/copy.c", 
   "(copy_file_administratively): Don't shadow a previous variable declaration.", 
   "Also, avoid a couple of potential error leaks."
  ], 
  "revision_id": "879309"
 }, 
 {
  "author": "hwright", 
  "date": "2009-09-11T04:05:49.030549Z", 
  "msg": [
   "Update svn_wc__read_tree_conflicts() and svn_wc__write_tree_conflicts() to use", 
   "hashs of svn_wc_conflict_description2_t structs instead of", 
   "svn_wc_conflict_description_t structs.", 
   "* subversion/tests/libsvn_wc/tree-conflict-data-test.c", 
   "(test_read_tree_conflict, test_read_2_tree_conflicts,", 
   "test_read_invalid_tree_conflicts, test_write_tree_conflict):", 
   "Update tests.", 
   "test_write_invalid_tree_conflicts):", 
   "Update test, and also remove the invalid path case.  The constructors", 
   "now test this via a no-return assert.", 
   "* subversion/include/private/svn_wc_private.h", 
   "(svn_wc__read_tree_conflicts): Update docs.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(revert_internal): Use a conflict_description2_t to interact with the", 
   "new APIs.  Also, perform some juggling to sanitize a path before passing", 
   "it along.", 
   "* subversion/libsvn_wc/status.c", 
   "(get_dir_status): Update a comment.", 
   "* subversion/libsvn_wc/tree_conflicts.c", 
   "(read_one_tree_conflict): Create the rev'd struct, rather than the", 
   "deprecated one.", 
   "(svn_wc__read_tree_conflicts, svn_wc__write_tree_conflicts):", 
   "Iterate over the rev'd version of the struct.", 
   "* subversion/libsvn_wc/tree_conflicts.h", 
   "(svn_wc__write_tree_conflicts): Update docs.", 
   "* subversion/libsvn_wc/entries.c", 
   "(visit_tc_too_found_entry): Just use the absolute path provided by", 
   "the conflict description, rather than generating one locally.", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(remove_tc_txn, svn_wc__read_tree_conflicts): Don't bother converting the", 
   "read conflict, since it is now the right type.", 
   "* subversion/libsvn_wc/log.c", 
   "(log_runner): Update a doc.", 
   "(log_do_add_tree_conflict): Use the updated struct when creating and", 
   "storing tree conflicts.", 
   "(run_log): When adding the tree conflict(s), use the provided absolute", 
   "path, instead of calculating a new one.", 
   "(svn_wc__loggy_add_tree_conflict): Convert the incoming conflict to the", 
   "correct type, and use it's absolute path as a hash key.", 
   "* subversion/libsvn_wc/upgrade.c", 
   "(migrate_single_tree_conflict_data): Use the new tree conflict type, and", 
   "properly construct the conflict_relpath for migrating the data."
  ], 
  "revision_id": "879308"
 }, 
 {
  "author": "hwright", 
  "date": "2009-09-11T03:37:58.924433Z", 
  "msg": [
   "A couple of improvements to the tree conflict descriptor handling.", 
   "* subversion/libsvn_wc/util.c", 
   "(svn_wc_conflict_description_create_text2,", 
   "svn_wc_conflict_description_create_prop2,", 
   "svn_wc_conflict_description_create_tree2): Assert we are passed an absolute", 
   "path.", 
   "(svn_wc_conflict_version_dup): Allow dup'ing a NULL value."
  ], 
  "revision_id": "879307"
 }, 
 {
  "author": "hwright", 
  "date": "2009-09-11T01:33:02.358929Z", 
  "msg": [
   "Add an iterpool when migrating tree conflict data from f12 to f13.", 
   "* subversion/libsvn_wc/upgrade.c", 
   "(migrate_single_tree_conflict_data): Add the iteration pool."
  ], 
  "revision_id": "879306"
 }
]