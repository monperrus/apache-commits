[
 {
  "author": "", 
  "date": "2012-01-31T16:51:32.630775Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 16904", 
   "Author:   smgilson@adobe.com", 
   "Date:     2010-07-13T17:25:46.841130Z", 
   "Log Message:", 
   "-----------", 
   "Add ASDoc comment about using the component as an item renderer", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs:", 
   "Reviewer:", 
   "Tests run: checkintests", 
   "Is noteworthy for integration:", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/CheckBox.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/ComboBox.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/Button.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/ButtonBar.as</path>"
  ], 
  "revision_id": "1278498"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T16:51:30.779913Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 16796", 
   "Author:   tkraikit@adobe.com", 
   "Date:     2010-07-02T17:25:28.540380Z", 
   "Log Message:", 
   "-----------", 
   "Fix for bug 26734: ComboBox does not require a TextInput to be present, but a number of references in the code assume existence of one. Added null checks.", 
   "QE notes: none", 
   "Doc notes: none", 
   "Bugs: SDK-26734", 
   "Reviewer: jszeto", 
   "Tests run: checkintests mustella", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/ComboBox.as"
  ], 
  "revision_id": "1278497"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T16:51:28.456980Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 16727", 
   "Author:   jszeto@adobe.com", 
   "Date:     2010-06-29T20:42:03.768739Z", 
   "Log Message:", 
   "-----------", 
   "Form and ComboBox Bug Fixes", 
   "SDK-25765 - ComboBox does not commit item when closed if Enter key is pressed", 
   "I changed the fix for this bug.", 
   "Instead of only committing the selection in ComboBox.applySelection if the dropDown is closed, we keep track of the user defined selection in DropDownList.keyDownHandler.", 
   "SDK-26268 - ComboBox does not commit value with TAB when openOnInput = false", 
   "Removed the restriction in ComboBox.applySelection that the dropDown must be open in order to commit", 
   "SDK-26442 -  When arrowing between the first two items in a flex combo box the selection is always on the secodn item", 
   "Fixed logic bug in ComboBox.changeHighlightedSelection.", 
   "SDK-26752 - error string no longer appears for Spark or MX components", 
   "The errorString was getting set in MXML. At that time, the component is not parented and not hooked up to its styles. So the call to get the showErrorTip style was returning false.", 
   "I moved this logic to commitProperties which solves the timing issue.", 
   "SDK-26497 - Spark Form displays errors in a seemingly random order", 
   "Changed the dictionary of invalid elements into a sorted array.", 
   "An element's sort order is based on its position in the display list tree using a depth first search. The position is represented by a Vector.<int>, with each item being the child index of the element's ancestor at that depth. For example, the second child of the first child of the root would have a Vector like this [0,0,1].", 
   "Whenever an element is invalid, we add it to the sorted array and perform a re-sort. We can live with using a heavy data structure like a Vector of ints because there should only be a few errors at a time in a Form. The alternative is to traverse the entire tree and store a pointer and the sort order for each node.", 
   "We make an assumption that the order in the display list tree is equivalent to the visual order of the Form's input controls. Since the Form's layout is based on VerticalLayout, this is a valid assumption. This same algorithm would work if the Form was switched to a horizontal layout.", 
   "SDK-26697 - Cannot reset Spark Form to original state if form had validation errors", 
   "Added logic to Form to listen for the errorStringChanged event on an invalid element. We don't use the same technique as in FormItem, which listens for errorStringChanged in the capture phase on the FormItem's contentGroup. This is because FormItem's errorString is set to the combined errorStrings of its children. If Form used the same technique, the error strings would appear twice.", 
   "QE notes: retest SDK-25765", 
   "Doc notes: none", 
   "Bugs: SDK-25765, SDK-26268, SDK-26442, SDK-26752, SDK-26497, SDK-26697", 
   "Reviewer: Kevin", 
   "Tests run: full run", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/ComboBox.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/supportClasses/DropDownListBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/Form.as</path>"
  ], 
  "revision_id": "1278496"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T16:51:24.338332Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 15522", 
   "Author:   jszeto@adobe.com", 
   "Date:     2010-04-16T22:08:12.278608Z", 
   "Log Message:", 
   "-----------", 
   "ComboBox, DropDownList and PopUpAnchor bug fixes", 
   "http://bugs.adobe.com/jira/browse/SDK-25764 - ComboBox will not display first item in dataProvider when dropdown is open", 
   "The first item of the dataProvider was the object \"Zero\". This returns false in an equality check, so I changed the check to compare to undefiend", 
   "http://bugs.adobe.com/jira/browse/SDK-25765 - ComboBox does not commit item when closed if Enter key is pressed", 
   "Pressing Enter was actually clearing the selection. Fixed ComboBox.applySelection to only commit if the proposed selection is a custom string or if the dropdown is open", 
   "http://bugs.adobe.com/jira/browse/SDK-25432 - Spark DropDownList throws RTE when trying to change data provider and open dropdown and use mouse wheel", 
   "Added null check", 
   "http://bugs.adobe.com/jira/browse/SDK-25132 - Odd rendering of pop up when using PopUpAnchor w/ popUpPosition == center", 
   "Rounded off the x/y position of the popUp", 
   "QE notes: Add test for PopUpAnchor centered where popup dimensions are odd numbers", 
   "Doc notes: none", 
   "Bugs: SDK-25764, SDK-25765, SDK-25432, SDK-25132", 
   "Reviewer: Kevin", 
   "Tests run: checkintests, ComboBox, DropDownList, PopUpAnchor", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/ComboBox.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/DropDownController.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/PopUpAnchor.as</path>"
  ], 
  "revision_id": "1278495"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T16:51:18.729402Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 15314", 
   "Author:   jszeto@adobe.com", 
   "Date:     2010-04-09T21:02:53.061274Z", 
   "Log Message:", 
   "-----------", 
   "Merging revision 15312 from 4.x to trunk", 
   "ComboBox bug fix", 
   "http://bugs.adobe.com/jira/browse/SDK-26089 - s:ComboBox is not updated correctly when selectedItem is removed from dataProvider", 
   "Handle this specific case by overriding itemRemoved and clearing the textInput. Changing updateLabelDisplay messes with the custom selected item logic, which is why I chose a more localized solution.", 
   "QE notes: none", 
   "Doc notes: none", 
   "Bugs: SDK-26089", 
   "Reviewer: Kevin", 
   "Tests run: ComboBox, checkintests", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/ComboBox.as</path>", 
   "<path kind=\"dir\" action=\"M\">/flex/sdk/trunk</path>"
  ], 
  "revision_id": "1278494"
 }
]