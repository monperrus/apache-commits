[
 {
  "author": "knopp", 
  "date": "2009-03-03T00:16:29.160761Z", 
  "msg": [], 
  "revision_id": "749485"
 }, 
 {
  "author": "jvanzyl", 
  "date": "2009-03-03T00:14:44.602942Z", 
  "msg": [
   "o further culling fields from the resolution request"
  ], 
  "revision_id": "749484"
 }, 
 {
  "author": "lryan", 
  "date": "2009-03-03T00:12:46.272873Z", 
  "msg": [
   "This is an initial implementation of the \"Limited Invalidation\" spec. Containers", 
   "are expected to implement their own InvalidationService based on their caching", 
   "behavior", 
   "This implementation differs from the spec in a couple of ways that I believe are", 
   "worth proposing as clarifications.", 
   "- The service endpoint is \"cache/invalidate\" not \"invalidate\" for REST. For RPC", 
   "the method is \"cache.invalidate\"", 
   "- Only 2-legged consumer OAuth calls can invalidate URLs", 
   "- Security token for rendered gadgets can only be used to invalidate the viewers data", 
   "-  Viewer data is invalidated by default and a simple GET /social/rest/cache/invalidate will trigger it", 
   "The default request pipeline is altered to allow invalidated content to be", 
   "returned if fetching a replacement causes an error as is suggested in the spec."
  ], 
  "revision_id": "749483"
 }, 
 {
  "author": "bentmann", 
  "date": "2009-03-03T00:00:40.273551Z", 
  "msg": [
   "o Added generics"
  ], 
  "revision_id": "749482"
 }, 
 {
  "author": "tabish", 
  "date": "2009-03-03T00:00:06.193994Z", 
  "msg": [
   "http://issues.apache.org/activemq/browse/AMQCPP-100", 
   "Add a CompositeData class to house the multiple URI values in a Failover URI and start on adding parsing code in URISupport to handle the Failover URI format."
  ], 
  "revision_id": "749481"
 }
]