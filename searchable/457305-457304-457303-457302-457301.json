[
 {
  "author": "jonl", 
  "date": "2005-08-11T23:20:54.000000Z", 
  "msg": [
   "Changed comment."
  ], 
  "revision_id": "457305"
 }, 
 {
  "author": "ehillenius", 
  "date": "2005-08-11T23:19:19.000000Z", 
  "msg": [
   "file Initializer.java was added on branch V_1_2 on 2005-08-20 09:48:29 +0000"
  ], 
  "revision_id": "457304"
 }, 
 {
  "author": "ehillenius", 
  "date": "2005-08-11T23:19:19.000000Z", 
  "msg": [
   "file PackageResourceReference.java was added on branch V_1_2 on 2005-08-20 09:48:28 +0000"
  ], 
  "revision_id": "457303"
 }, 
 {
  "author": "ehillenius", 
  "date": "2005-08-11T23:19:19.000000Z", 
  "msg": [
   "file wicket.properties was added on branch V_1_2 on 2005-08-20 09:48:30 +0000"
  ], 
  "revision_id": "457302"
 }, 
 {
  "author": "jonl", 
  "date": "2005-08-11T23:19:18.000000Z", 
  "msg": [
   "Refactored intializer code.  Now wicket.properties is checked for each jar or", 
   "root folder on the classpath.  If it contains either initializer=[class]", 
   "or [app-name]-initializer=[class], that class is instantiated and the", 
   "IInitializer.init(Application) method is called on the resulting object.", 
   "So, both libraries and applications can easily initialize their resources now.", 
   "For example, the core wicket.properties file contains just this:", 
   "\"initializer=wicket.Initializer\", which invokes the wicket.Initializer class", 
   "with the application being loaded.  The wicket.Initializer.init() method", 
   "will contain a sequence of initializations.  For example,", 
   "\"new TreeComponentInitializer().init(application)\".  This is a much better", 
   "and safer and more Java way of initializing components for a library like core.", 
   "Updated the images example to show how this is done."
  ], 
  "revision_id": "457301"
 }
]