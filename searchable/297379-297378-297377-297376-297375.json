[
 {
  "author": "costin", 
  "date": "2002-05-28T22:44:50.000000Z", 
  "msg": [
   "Support stderr as a special name for logger.", 
   "Few checks for endpoint ( it doesn't have to be associated with a worker )"
  ], 
  "revision_id": "297379"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-28T22:40:25.000000Z", 
  "msg": [
   "Moved the code to listen from jni to jk_channel_un. This may allow mod_jk", 
   "to listen ( if needed ) but more important is that we no longer duplicate", 
   "the code, and use a single mechanism for bridging from java to C.", 
   "Also removed the duplicated code for init/setAttribute - we have special", 
   "methods for that, no need for them in invoke."
  ], 
  "revision_id": "297378"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-28T22:37:11.000000Z", 
  "msg": [
   "Add invoke() method to jk_bean.", 
   "Added 'serverSide' option to channel and msg ( since now the same object can", 
   "be used on apache side or tomcat side - see jk_channel_un for example )"
  ], 
  "revision_id": "297377"
 }, 
 {
  "author": "costin", 
  "date": "2002-05-28T22:34:59.000000Z", 
  "msg": [
   "Removed the ( duplicated )  unix socket code. We'll use jk_channel_un instead", 
   "( directly ).", 
   "Fixes in initialization ( make sure workerEnv is init, log ).", 
   "Added a 'raw' param to jkInvoke - to support unprocessed buffers. If", 
   "raw is set the jk component will use the buffer as a byte[], not", 
   "ajp messages ( for example channel.read() is doing that ).", 
   "No need to copy the data from the JNI buffer to msg.", 
   "Use the new jk_bean.invoke() directly instead of the dispatch.", 
   "I think it's cleaner."
  ], 
  "revision_id": "297376"
 }, 
 {
  "author": "jfclere", 
  "date": "2002-05-28T22:20:46.000000Z", 
  "msg": [
   "Add explanations for the headers."
  ], 
  "revision_id": "297375"
 }
]