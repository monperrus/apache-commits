[
 {
  "author": "luc", 
  "date": "2014-02-18T14:32:17.235497Z", 
  "msg": [
   "Add Javadoc to LeastSquaresBuilder."
  ], 
  "revision_id": "1569348"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:32:11.823221Z", 
  "msg": [
   "Fixup javadoc in LeastSquaresProblem"
  ], 
  "revision_id": "1569347"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:32:06.128274Z", 
  "msg": [
   "Value and Jacobian evaluated in a single method.", 
   "A new interface MultivariateJacobianFunction lets the function value and", 
   "Jacobian be evaluated at the same time. This saves the user from having to cache", 
   "the result between calls to get the value and the jacobian.", 
   "A factory method was added to create LeastSquaresProblems from the new interface."
  ], 
  "revision_id": "1569346"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:31:59.113565Z", 
  "msg": [
   "Clean up LeastSquaresProblemImpl", 
   "Reorder constructor parameters to match LeastSquaresFactory and remove an unused", 
   "method."
  ], 
  "revision_id": "1569345"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:31:53.378082Z", 
  "msg": [
   "Implicit Weights", 
   "The weights are no longer implicit in LeastSquaresProblem.Evaluation. They are", 
   "already included in the computed residuals and Jacobian.", 
   "GN and LM multiplied the residuals by the weights immediately, so that was easy", 
   "to remove.", 
   "Created an AbstractEvaluation class which handles the derived quantitied (cost,", 
   "rms, covariance,...) and two implementations. UnweightedEvaluation uses the", 
   "straight forward formulas. DenseWeightedEvaluation delegates to an Evaluation", 
   "and multiples the residuals and Jacobian by the square root of the weight matrix", 
   "before returning them. Allowed me to remove the reference to the full weight", 
   "matrix."
  ], 
  "revision_id": "1569344"
 }
]