[
 {
  "author": "chirino", 
  "date": "2006-03-03T23:16:53.505527Z", 
  "msg": [
   "No need to clean up connection if it's being closed."
  ], 
  "revision_id": "382960"
 }, 
 {
  "author": "jerome", 
  "date": "2006-03-03T23:15:02.677867Z", 
  "msg": [
   "Change the way multi-valued fields are displayed in HitDetails"
  ], 
  "revision_id": "382959"
 }, 
 {
  "author": "rahul", 
  "date": "2006-03-03T23:11:31.499890Z", 
  "msg": [
   "One of the changes between the July 05 WD [1] (which we're currently close to par with) and the January 06 WD [2] is that transition targets can no longer be anonymous child states of <transition>.", 
   "Furthermore, the <target> child of <transition> has been changed into an attribute. This definitely makes the document more compact, since snippets like this:", 
   "<transition event=\"foo.bar\">", 
   "<target next=\"foobarState\"/>", 
   "</transition>", 
   "now turn into:", 
   "<transition event=\"foo.bar\" target=\"foobarState\"/>", 
   "However, anonymous target states are no longer mentioned in the WD, so the following construct (though not yet removed from the implementation), is not specified by the latest WD, and shouldn't be used:", 
   "<transition event=\"foo.bar\">", 
   "<target>", 
   "<state>", 
   "<!-- content of anonymous state -->", 
   "</state>", 
   "</target>", 
   "</transition>", 
   "So another todo (now this gets the privilege of being low priority ;-) will be to redo documents in the RDC and Shale usecases to sync up. This is low priority since the Commons SCXML implementation still continues to support either case. However, as we tighten up the implementation against the WD, we will probably shed that support (and adjust the usecases accordingly).", 
   "[1] http://www.w3.org/TR/2005/WD-scxml-20050705/", 
   "[2] http://www.w3.org/TR/2006/WD-scxml-20060124/"
  ], 
  "revision_id": "382958"
 }, 
 {
  "author": "jmarino", 
  "date": "2006-03-03T23:09:57.290549Z", 
  "msg": [
   "change EntryPointContext.getInstance() to return proxy; to return the InvocationHandler, use EntryPointcontext.getImplementationInstance()"
  ], 
  "revision_id": "382957"
 }, 
 {
  "author": "jboynes", 
  "date": "2006-03-03T23:00:50.827488Z", 
  "msg": [
   "start the module context when the webapp start"
  ], 
  "revision_id": "382956"
 }
]