[
 {
  "author": "jdillon", 
  "date": "2007-01-16T19:43:53.201133Z", 
  "msg": [
   "(GERONIMO-2684) Updating to use latest released spec versions; Patch submitted by Donald Woods, thanks :-)"
  ], 
  "revision_id": "496835"
 }, 
 {
  "author": "rineholt", 
  "date": "2007-01-16T19:40:35.166161Z", 
  "msg": [
   "TUSCANY-1056", 
   "http://issues.apache.org/jira/browse/TUSCANY-1056", 
   "I guess the old default state was MODULE ? and now its stateless resulting in new conversation being creted. without setting it back to now COMPOSITE"
  ], 
  "revision_id": "496834"
 }, 
 {
  "author": "rgreig", 
  "date": "2007-01-16T19:38:51.103919Z", 
  "msg": [
   "Fix to broken build due to missing file."
  ], 
  "revision_id": "496833"
 }, 
 {
  "author": "sebb", 
  "date": "2007-01-16T19:38:35.797222Z", 
  "msg": [
   "Add image dimensions for faster rendering"
  ], 
  "revision_id": "496832"
 }, 
 {
  "author": "chrisd", 
  "date": "2007-01-16T19:36:26.353442Z", 
  "msg": [
   "We now create memory sub-pools for each DB connection and close DB", 
   "connections in a pool cleanup function.  This simplifies the ap_dbd_acquire()", 
   "and ap_dbd_cacquire() functions, and also stops us from leaking ap_dbd_t", 
   "structures when using reslists.", 
   "We ensure that prepared statements are destroyed before their DB connection", 
   "is closed, in case any drivers would have problems cleaning up prepared", 
   "statements after the DB connection is closed.", 
   "The combination of reslists and memory pool cleanup functions was causing", 
   "segfaults when child processes exited, as reported in PR 39985.  To prevent", 
   "this, we register dbd_destroy() as a cleanup that will execute prior to", 
   "the internal cleanup function registered by apr_reslist_create().  When the", 
   "reslist's memory pool is destroyed, dbd_destroy() informs dbd_destruct() not", 
   "to do anything when subsequently called by the reslist's internal cleanup", 
   "function.", 
   "We avoid the use of s->process->pool (the global pool) since it isn't", 
   "destroyed by exiting child processes in most multi-process MPMs."
  ], 
  "revision_id": "496831"
 }
]