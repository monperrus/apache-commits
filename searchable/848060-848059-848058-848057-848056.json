[
 {
  "author": "mbk", 
  "date": "2003-12-12T14:39:31.344416Z", 
  "msg": [
   "* www/project_faq.html: Update the \"windows-access-denied\" answer to reflect", 
   "the fact that the workaround retry-loop patch was committed to the trunk."
  ], 
  "revision_id": "848060"
 }, 
 {
  "author": "striker", 
  "date": "2003-12-12T12:29:54.251358Z", 
  "msg": [
   "Use svn_stream_t for output of diff/merge.", 
   "* subversion/include/svn_diff.h", 
   "(svn_diff_file_output_unified, svn_diff_file_output_merge): Change signature.", 
   "* subversion/libsvn_diff/diff_file.c", 
   "(svn_diff__file_output_baton_t, svn_diff3__file_output_baton_t): Trade in", 
   "apr_file_t for a svn_stream_t.", 
   "(svn_diff__file_output_unified_flush_hunk, svn_diff3__file_output_line,", 
   "svn_diff3__file_output_conflict): Use stream output functions instead of", 
   "apr file output functions.", 
   "(svn_diff_file_output_unified, svn_diff_file_output_merge): Take and use", 
   "a svn stream for output instead of an apr file.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge): Update call to svn_diff_file_output_merge.  Provide a", 
   "stream instead of a file.", 
   "* subversion/libsvn_client/diff.c", 
   "(diff_file_changed): Update call to svn_diff_file_output_unified.  Provide", 
   "a stream instead of a file.", 
   "* subversion/svnlook/main.c", 
   "(print_diff_tree):  Update call to svn_diff_file_output_unified.  Provide", 
   "a stream instead of a file.", 
   "* subversion/tests/libsvn_diff/diff-diff3-test.c", 
   "(three_way_merge): Update call to svn_diff_file_output_merge.  Provide a", 
   "stream instead of a file.", 
   "(two_way_diff):  Update call to svn_diff_file_output_unified.  Provide a", 
   "stream instead of a file.", 
   "* subversion/tests/libsvn_diff/diff-test.c", 
   "(do_diff): Take and pass an svn stream.", 
   "(main): Update call to do_diff.  Provide a stream instead of a file.", 
   "* subversion/tests/libsvn_diff/diff3-test.c", 
   "(do_diff3): Take and pass an svn stream.", 
   "(main): Update call to do_diff3.  Provide a stream instead of a file.", 
   "* subversion/tests/libsvn_diff/diff4-test.c", 
   "(do_diff4): Take and pass an svn stream.", 
   "(main): Update call to do_diff4.  Provide a stream instead of a file."
  ], 
  "revision_id": "848059"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-12-12T10:54:16.425239Z", 
  "msg": [
   "* subversion/bindings/swig/core.i", 
   "Only wrap the svn_swig_py_exception_type() for Python.  Thanks for", 
   "the save, Chia-liang Kao <clkao@clkao.org>."
  ], 
  "revision_id": "848058"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-12-12T10:23:26.196032Z", 
  "msg": [
   "Teach the Subversion Python bindings to build a custom SubversionException", 
   "object so that users of the bindings interfaces can trap those Exceptions", 
   "and examine their .apr_err error code field (and compare it to the likes", 
   "of core.SVN_ERR_FS_NOT_FOUND and other error codes).  Big ol' thanks to", 
   "Greg Stein for guidance and review.", 
   "* subversion/bindings/swig/swigutil_py.h", 
   "(svn_swig_py_register_exception, svn_swig_py_exception_type,", 
   "svn_swig_py_svn_exception): New exception-related functions.", 
   "* subversion/bindings/swig/swigutil_py.c", 
   "(SubversionException): New global for holding the exception class.", 
   "(svn_swig_py_register_exception, svn_swig_py_exception_type,", 
   "svn_swig_py_svn_exception): New exception-related functions.", 
   "* subversion/bindings/swig/core.i", 
   "Wrap svn_swig_py_register_exception().  Include %init code to", 
   "register the exception class and note it as an attribute of the", 
   "module.  Finally, give SWIG some generated-.py-file stuff for", 
   "exposing the C exception.", 
   "* subversion/bindings/swig/svn_types.i", 
   "Now call svn_swig_py_svn_exception() instead of using a", 
   "PyExc_RuntimeError.  Oh, and clear errors we don't return."
  ], 
  "revision_id": "848057"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-12-12T09:49:32.016031Z", 
  "msg": [
   "Fix some functions that lacked namespace protection.", 
   "* subversion/bindings/swig/swigutil_py.h", 
   "* subversion/bindings/swig/swigutil_py.c", 
   "(svn_swig_py_release_py_lock, svn_swig_py_acquire_py_lock): Were", 
   "release_py_lock() and acquire_py_lock(), respectively.  Update all", 
   "callers.", 
   "* subversion/bindings/swig/svn_types.i", 
   "Update calls to renamed interfaces.  Also, wrap in digest typemap in", 
   "Perl defines."
  ], 
  "revision_id": "848056"
 }
]