[
 {
  "author": "elecharny", 
  "date": "2009-12-17T00:58:19.762319Z", 
  "msg": [
   "Fixed some error in Comparator addition/deletion"
  ], 
  "revision_id": "891500"
 }, 
 {
  "author": "olga", 
  "date": "2009-12-17T00:50:05.349275Z", 
  "msg": [
   "PIG-1075: Error in Cogroup when key fields types don't match (rding via olgan)"
  ], 
  "revision_id": "891499"
 }, 
 {
  "author": "taylor", 
  "date": "2009-12-17T00:49:59.451686Z", 
  "msg": [
   "https://issues.apache.org/jira/browse/JS2-1084", 
   "respect container fragment size properties"
  ], 
  "revision_id": "891498"
 }, 
 {
  "author": "tomwhite", 
  "date": "2009-12-17T00:49:01.546722Z", 
  "msg": [
   "HADOOP-6426. Create ant build for running EC2 unit tests."
  ], 
  "revision_id": "891497"
 }, 
 {
  "author": "johnh", 
  "date": "2009-12-17T00:48:29.443293Z", 
  "msg": [
   "Introduces Caja-based GadgetHtmlParser, and refactors/cleans up HtmlParser impl a bit.", 
   "Summary:", 
   "* Overhauls the GadgetHtmlParser base class and associated test cases", 
   "* Tweaks the Neko-based HTML parser implementation", 
   "* Introduces new Caja-based HTML parser", 
   "This fairly substantial CL reworks the HTML parsing system to better represent", 
   "(though not fully yet) the way that HTML is handled within gadgets: as tag soup,", 
   "cleaned up via custom rules after the fact into a legitimate, well-formed", 
   "document. It's a step toward treating concrete GadgetHtmlParser implementations", 
   "purely as fragment parsers.", 
   "Change detail:", 
   "* All parsing tests factored into base test classes with concrete tests largely", 
   "just providing a concrete parser implementation.", 
   "- HTML-equivalence method added utilizing the (fantastic) diff_match_patch", 
   "library, which ignores whitespace, case, and attributing-encoding differences.", 
   "* GadgetHtmlParser now does significant cleanup of the DOM it retrieves from", 
   "parseDomImpl(...), which BTW will soon go the way of the dodo in favor of always", 
   "using parseFragmentImpl(...)", 
   "- Creates head element and populates it with all style elements (only), as", 
   "putting these here cannot break rendering and because HTML requires <style> in", 
   "head.", 
   "- Creates body element as well.", 
   "- Combines multiple <head> elements together, if present.", 
   "- Prepends head with elements that occurred above a <head> element that", 
   "occurred in source, if any.", 
   "- Combines multiple <body> elements together, if present.", 
   "- Prepends and appends, respectively, elements found before and after the", 
   "first <body> tag and after the first <head> tag, and elements found after the", 
   "first <body> tag, without any <head> or <body> parent, to the <body> tag (that", 
   "was a mouthful).", 
   "- As noted above, stuffs all <style> elements found in <body> at the end of", 
   "<head>", 
   "- If OpenSocial-type <script> elements are treated per spec (ie. having only", 
   "text, no children), reprocesses this text as HTML and adds as children for", 
   "template processing.", 
   "* Introduces CajaHtmlParser", 
   "- Still has parseDomImpl method, mostly for API compatibility (short-term)", 
   "with Neko-based HtmlParser implementation, which has subtle differences btw", 
   "parseDomImpl and parseFragmentImpl which I want to clean up in a follow-up CL", 
   "(again, obviating the need for parseDomImpl altogether).", 
   "- Delegates to Caja's DomParser class's parseFragment() method for most", 
   "parsing needs"
  ], 
  "revision_id": "891496"
 }
]