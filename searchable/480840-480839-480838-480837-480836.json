[
 {
  "author": "mloenko", 
  "date": "2006-11-30T05:25:03.107467Z", 
  "msg": [
   "removed support classes from the exclude lists"
  ], 
  "revision_id": "480840"
 }, 
 {
  "author": "keithc", 
  "date": "2006-11-30T05:14:40.640745Z", 
  "msg": [
   "added the utilyty method getBindingPropertyFromMessage"
  ], 
  "revision_id": "480839"
 }, 
 {
  "author": "ndbeyer", 
  "date": "2006-11-30T05:13:39.789356Z", 
  "msg": [
   "Apply patch from HARMONY-2304: [classlib][swing] j.s.text.CompositeView.getNextVisualPositionFrom should use another algorithm"
  ], 
  "revision_id": "480838"
 }, 
 {
  "author": "gvanmatre", 
  "date": "2006-11-30T05:00:46.254541Z", 
  "msg": [
   "I've added a few more random components to the testbed (so, so many choices).  I also added an InternalView implementation that would be another option for Clay/Trinidad integration.  This InternalView is a really slick idea.  It's like a pseudo view handler that is mapped by the view id (wish I had thought of this).  You can use it to build a specific JSF component tree.  In this example, I just add a clay component to the view root and load a full clay view but you could use to build pages using java code.  I would think this would perform very well (the heck with templating).", 
   "The second page, /page2.jsf, shows an example.  The Clay PageHander is mapped the the view id of /clay.jsf.  The Trinidad view handler intercepts, find an InternalView implementation and delegates.  The clay version looks for a request param of jsfid and uses that to build the root of the clay subtree.", 
   "For example:", 
   "<h:outputLink value=\"clay.jsf\">", 
   "Clay InternalView Example", 
   "<f:param name=\"jsfid\" value=\"/index.jsf\"/>", 
   "</h:outputLink>"
  ], 
  "revision_id": "480837"
 }, 
 {
  "author": "chinthaka", 
  "date": "2006-11-30T04:52:51.272715Z", 
  "msg": [
   "More improvements to multi-language client emitter"
  ], 
  "revision_id": "480836"
 }
]