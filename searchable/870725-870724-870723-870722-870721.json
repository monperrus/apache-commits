[
 {
  "author": "hwright", 
  "date": "2008-04-17T03:38:41.137391Z", 
  "msg": [
   "On the fs-rep-sharing branch:", 
   "Add a force parameter to svn_fs_file_checksum(), allowing callers to obtain the", 
   "checksum of their chosen type, regardless of what is stored in the fs.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_file_checksum): Add force parameter with matching docstring.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_file_checksum): If force is TRUE, load the file contents and", 
   "calculate the checksum of the given type for them."
  ], 
  "revision_id": "870725"
 }, 
 {
  "author": "hwright", 
  "date": "2008-04-17T03:12:43.619040Z", 
  "msg": [
   "On the fs-rep-sharing branch:", 
   "Add a few more convenience functions to the checksum API.", 
   "* subversion/include/svn_checksum.h", 
   "(svn_checksum_dup): Renamed from svn_checksum_copy().", 
   "(svn_checksum, svn_checksum_empty_checksum): New.", 
   "* subversion/libsvn_subr/checksum.c", 
   "(svn_checksum_match): Check for null-ness as a condition of matching.", 
   "(svn_checksum_dup): Rename from svn_checksum_copy(), only copy the", 
   "proper amount of data for the given kind of checksum.", 
   "(svn_checksum, svn_checksum_empty_checksum): New."
  ], 
  "revision_id": "870724"
 }, 
 {
  "author": "hwright", 
  "date": "2008-04-17T03:03:39.841241Z", 
  "msg": [
   "On the fs-rep-sharing branch:", 
   "Simplify a test and expand a failure message.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(get_file_digest): Instead of calculating the checksum manually, use a", 
   "checksummed stream.", 
   "(file_integrity_helper): Show the expected and actual checksums, like we do", 
   "elsewhere."
  ], 
  "revision_id": "870723"
 }, 
 {
  "author": "epg", 
  "date": "2008-04-17T02:28:24.125487Z", 
  "msg": [
   "Mark some items done."
  ], 
  "revision_id": "870722"
 }, 
 {
  "author": "epg", 
  "date": "2008-04-17T02:27:46.994814Z", 
  "msg": [
   "Support parsing svnserve logs.", 
   "* tools/server-side/svn_server_log_parse.py", 
   "(pREVNUMS): Add pattern for matching list of revnums (not range).", 
   "(pREVRANGE): Support negative numbers (for get-location-segments).", 
   "(pPROPERTY): Add pattern for property name.", 
   "(Parser): Add new parse methods for reparent, get-latest-rev,", 
   "get-dated-rev, get-dir, rev-prop, get-lock, get-locks,", 
   "get-locations, get-location-segments, check-path, and stat", 
   "svnserve requests.", 
   "(Parser._parse_change_rev_prop): Don't define pPROPERTY here.", 
   "* tools/server-side/test_svn_server_log_parse.py", 
   "(TestCase): Test new methods.", 
   "(if __name__ == '__main__'):", 
   "(Test): Print the bogus line in handle_unknown method.  Add the", 
   "new methods.", 
   "Support both mod_dav_svn and svnserve formats, print what format", 
   "we're looking at, and print OK if it the test passes.  Catch", 
   "svn_server_log_parse.Error exceptions and print the line number", 
   "and action that caused the problem."
  ], 
  "revision_id": "870721"
 }
]