[
 {
  "author": "tcurdt", 
  "date": "2006-06-14T10:40:27.935462Z", 
  "msg": [
   "GSoC: first implementation of the maven2 plugin by Peter Konstantinov"
  ], 
  "revision_id": "414185"
 }, 
 {
  "author": "jstrachan", 
  "date": "2006-06-14T10:39:27.184308Z", 
  "msg": [
   "Latest export from confluence"
  ], 
  "revision_id": "414184"
 }, 
 {
  "author": "damitha", 
  "date": "2006-06-14T10:37:49.250161Z", 
  "msg": [
   "More link error fixes"
  ], 
  "revision_id": "414183"
 }, 
 {
  "author": "damitha", 
  "date": "2006-06-14T10:36:49.285236Z", 
  "msg": [
   "component model builder is now compiling"
  ], 
  "revision_id": "414182"
 }, 
 {
  "author": "hughesj", 
  "date": "2006-06-14T10:36:32.867351Z", 
  "msg": [
   "WODEN-25 WODEN-29", 
   "* For elements that have a name attribute which is defined as an NCName in the spec I have ensured that for all org.apache.woden.internal.wsdl20.Xxx.setName() where Xxx is a class containing a setName() method, setName() now takes an NCName as parameter instead of a QName.", 
   "Fixing WODEN-25 meant fixing WODEN-29 at the same time - in order to fix failing unit tests. Which means:", 
   "* getName() methods continue to return a QName as this is useful to the client code. The namespace of the QName is now taken from the 'root parent'. So in effect DescriptionElement.setTargetNamespace() changes the namespace of all name attributes on XxxElement objects it contains.", 
   "* in order that a component's {name} property is a correct QName the associated XxxElement must have been added to a DescriptionElement (or the relevant child of a DescriptionElement). So for example if you want to InterfaceOperation.getName() then the InterfaceOperationElement must have been added to an InterfaceElement and that must have been added to a DescriptionElement and setTargetNamespace() must have been called on the DescriptionElement. If one of those hasn't happened the namespace of the QName returned by getName() will be the empty string."
  ], 
  "revision_id": "414181"
 }
]