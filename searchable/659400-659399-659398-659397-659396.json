[
 {
  "author": "trustin", 
  "date": "2008-05-23T03:54:33.599139Z", 
  "msg": [
   "Added a simple test case for DefaultByteBuffer - more tests to come..."
  ], 
  "revision_id": "659400"
 }, 
 {
  "author": "ajaquith", 
  "date": "2008-05-23T03:52:30.028493Z", 
  "msg": [
   "Version/changelog bump."
  ], 
  "revision_id": "659399"
 }, 
 {
  "author": "ajaquith", 
  "date": "2008-05-23T03:52:01.755246Z", 
  "msg": [
   "Miscellaneous and varied Java 5 enhancements (such as for-loops)."
  ], 
  "revision_id": "659398"
 }, 
 {
  "author": "oching", 
  "date": "2008-05-23T03:49:59.016624Z", 
  "msg": [
   "[MRM-694]", 
   "-fix index writer sorting for virtual repos"
  ], 
  "revision_id": "659397"
 }, 
 {
  "author": "ajaquith", 
  "date": "2008-05-23T03:48:35.400208Z", 
  "msg": [
   "Checked in three new features for UserProfile and the UserDatabase classes. First, profiles can now store arbitrary Serializable objects via a new method in UserProfile, getAttributes, that returns a Map<Serializable,Serializable> that can be directly manipulated. Arbitrary attributes such as user preferences can be added to the profile and be guaranteed to be persisted on save. Second, the UserProfile now has two methods setLockExpiry(Date)/getLockExpiry that allow callers to disable user profiles. These are NOT enforced in AuthenticationManager yet. Third, user profile now have a 'uid' field that stores a long value for uniquely identifying users. Existing profiles without UIDs are automatically upgraded when they are loaded by a findBy___() method. The default XML/JDBC UserDatabase implementations have been enhanced to support all of these new features. If you have custom UserDatabase implementations, you should take a look at the new code."
  ], 
  "revision_id": "659396"
 }
]