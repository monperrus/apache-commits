[
 {
  "author": "kfogel", 
  "date": "2007-09-27T00:25:14.471229Z", 
  "msg": [
   "* subversion/include/svn_types.h", 
   "(svn_log_message_receiver_t): Doc formatting fix, following up to r25074."
  ], 
  "revision_id": "866865"
 }, 
 {
  "author": "epg", 
  "date": "2007-09-26T21:47:08.196942Z", 
  "msg": [
   "Resolve #2850 (RA call for retrieving revprops for more than one revision).", 
   "Replace the new-in-1.5 omit_log_text parameter to svn_repos_get_logs4,", 
   "svn_ra_get_log2, and svn_client_log4 with an apr array listing which", 
   "revprops the receiver wants.  We've already bumped all the log interfaces", 
   "for 1.5, so we don't need another bump.  Rename svn_log_message_receiver2_t", 
   "to svn_log_entry_receiver_t to better express its new behavior.", 
   "* subversion/libsvn_client/log.c", 
   "(svn_client__oldest_rev_at_path): This doesn't use any revprops at all,", 
   "so pass empty list to svn_ra_get_log2 as revprops.", 
   "(pre_15_receiver_baton_t, pre_15_receiver): Add baton type and receiver", 
   "callback for pre-1.5 compat mode, retrieving revprops via", 
   "svn_ra_rev_prop or svn_ra_rev_proplist on a second ra connection.", 
   "(svn_client_log4): Adapt to svn_ra_get_log2 changes.  If svn_ra_get_log2", 
   "raises a SVN_ERR_RA_NOT_IMPLEMENTED error, retry with pre_15_receiver.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "(svn_ra_get_log2, svn_ra_get_log): Adapt; all callers updated.", 
   "* subversion/libsvn_ra/ra_loader.h", 
   "(svn_ra__vtable_t): Adapt.", 
   "* subversion/libsvn_ra/wrapper_template.h", 
   "(compat_get_log): Adapt.", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__get_log): Adapt.", 
   "* subversion/libsvn_ra_neon/log.c", 
   "(struct log_baton): Add revprop_name field to hold revprop name.  Add", 
   "want_author, want_date, and want_message fields.", 
   "(reset_log_item): Adapt.", 
   "(log_start_element): Handle new <revprop> and <no-custom-revprops>", 
   "elements; set info->revprop_name from name attribute.", 
   "(log_end_element): Set creator-displayname, date, and comment in", 
   "info->log_entry->revprops hash if want_author, want_date, and", 
   "want_message are set, respectively, for pre-1.5 servers, which send", 
   "these unconditionally; update log_entry->revprops for.", 
   "(svn_ra_neon__get_log): Take revprops list instead of omit_log_text: if", 
   "NULL, send <all-revprops> element and set want_author, want_date, and", 
   "want_message to TRUE; if non-NULL, send the list as <revprop> elements", 
   "and set want_author, want_date, and want_message to TRUE only if the", 
   "corresponding revprop is listed.  Raise SVN_ERR_RA_NOT_IMPLEMENTED", 
   "error if custom revprops were requested but the server did not send", 
   "either them or a <no-custom-revprops> element.", 
   "* subversion/libsvn_ra_neon/ra_neon.h", 
   "(svn_ra_neon__get_log): Update prototype.", 
   "(ELEM_no_custom_revprops, ELEM_revprop): Add enumerated values.", 
   "* subversion/libsvn_ra_serf/log.c", 
   "(REVPROP): Add enumerated value.", 
   "(log_info_t): Add revprop_name field to hold revprop name.", 
   "(log_context_t): Add want_author, want_date, and want_message fields.", 
   "(push_state): Allocate info->log_entry->revprops when first receiving", 
   "a revprop.", 
   "(start_log, cdata_log): Handle new <revprop> and <no-custom-revprops>", 
   "elements; set info->revprop_name from name attribute.", 
   "(end_log): Set creator-displayname, date, and comment in", 
   "info->log_entry->revprops hash if want_author, want_date, and", 
   "want_message are set, respectively, for pre-1.5 servers, which send", 
   "these unconditionally; update log_entry->revprops for.", 
   "(svn_ra_serf__get_log): Take revprops list instead of omit_log_text: if", 
   "NULL, send <all-revprops> element and set want_author, want_date, and", 
   "want_message to TRUE; if non-NULL, send the list as <revprop> elements", 
   "and set want_author, want_date, and want_message to TRUE only if the", 
   "corresponding revprop is listed.  Raise SVN_ERR_RA_NOT_IMPLEMENTED", 
   "error if custom revprops were requested but the server did not send", 
   "either them or a <no-custom-revprops> element.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(svn_ra_serf__get_log): Update prototype.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_log): If revprops is NULL, send the word \"all-revprops\" to the", 
   "server, else send the word \"revprops\" followed by the list.  Parse", 
   "author, date, and message into svn_string_t and look for a list at the", 
   "end of the server result to parse into log_entry->revprops with", 
   "svn_ra_svn_parse_proplist.  Set author, date, and message in", 
   "info->log_entry->revprops only if requested by the caller, as pre-1.5", 
   "servers send these unconditionally.  Raise SVN_ERR_RA_NOT_IMPLEMENTED", 
   "error if custom revprops were requested but the server did not send", 
   "a revprop list (empty or otherwise).", 
   "* subversion/libsvn_ra_svn/protocol", 
   "(3.1.1): Update log protocol.", 
   "* subversion/libsvn_repos/log.c", 
   "(fill_log_entry): If revprops is NULL, set log_entry->revprops to the", 
   "svn_fs_revision_proplist hash, else set only the listed revprops in a", 
   "new hash in log_entry->revprops.  If the user can't see some changed", 
   "paths, only set svn:author and svn:date in the output hash; if the user", 
   "can see none of the changed paths, set no revprops at all.", 
   "(send_logs, do_merged_log, do_logs, svn_repos_get_logs4,", 
   "svn_repos_get_logs3): Adapt; all callers updated.", 
   "* subversion/libsvn_subr/compat.c", 
   "(svn_compat_log_revprops_clear,svn_compat_log_revprops_in,", 
   "svn_compat_log_revprops_out): Add functions.", 
   "(log_wrapper_callback): Adapt.", 
   "* subversion/mod_dav_svn/reports/log.c", 
   "(struct log_receiver_baton): Add requested_custom_revprops field.", 
   "(log_receiver): Send svn:author, svn:date, and svn:log revprops to the", 
   "client via the same specific elements as before, for compatibility; if", 
   "log_entry->revprops has any other revprops, send them in pairs of", 
   "revprop-name and revprop-value elements.  Send <no-custom-revprops> if", 
   "client requested custom revprops but none were sent.", 
   "(dav_svn__log_report): Pass to svn_repos_get_logs4 an empty list if we", 
   "see the all-revprops element from the client; the list from the revprop", 
   "elements if we see those; and svn:author, svn:date, svn:log if we see", 
   "neither (i.e. a pre-1.5 client).", 
   "* subversion/svn/cl.h", 
   "(svn_cl__with_all_revprops_opt): Add enumerated value.", 
   "(svn_cl__opt_state_t): Add all_revprops field.", 
   "* subversion/svn/log-cmd.c", 
   "(log_message_receiver): Adapt.", 
   "(log_message_receiver_xml): Print additional revprops if present.", 
   "(svn_cl__log): Disallow --with-all-revprops and --with-revprop options", 
   "except in xml mode.  If --with-all-revprops or --with-revprop options", 
   "are given, use those to build the revprops list for svn_client_log4,", 
   "otherwise (and for non-xml-mode) ask for author, date, and log.", 
   "* subversion/svn/main.c", 
   "(svn_cl__options): Add with-all-revprops option.", 
   "(svn_cl__cmd_table): Add svn_cl__with_all_revprops_opt", 
   "svn_cl__with_revprop_opt to log, with custom help text for the latter.", 
   "(main): Set opt_state.all_revprops to TRUE for --with-all-revprops.", 
   "* subversion/svnserve/serve.c", 
   "(log_receiver): Send svn:author, svn:date, and svn:log revprops to the", 
   "client the same way as before, for compatibility; if", 
   "log_entry->revprops has any other revprops, send them with", 
   "svn_ra_svn_write_proplist .", 
   "(log_cmd): Pass to svn_repos_get_logs4 an empty list if we see the", 
   "\"all-revprops\" word from the client; the list from the client if we see", 
   "the \"revprops\" word; and svn:author, svn:date, svn:log if we see", 
   "neither (i.e. a pre-1.5 client).", 
   "* subversion/include/svn_client.h", 
   "(svn_client_log4): Update docstring and prototype.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_log2): Update docstring and prototype.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_get_logs4): Update docstring (which previously lied about", 
   "changed_paths and revprop censoring) and prototype.", 
   "* subversion/include/svn_types.h", 
   "(svn_log_entry_t): Drop author, date, and message fields in favor of new", 
   "revprops hash; all users updated.", 
   "(svn_log_entry_receiver_t): Rename from svn_log_message_receiver2_t; all", 
   "users updated.", 
   "(svn_compat_log_revprops_clear,svn_compat_log_revprops_in,", 
   "svn_compat_log_revprops_out): Add functions.", 
   "* subversion/tests/cmdline/authz_tests.py", 
   "(authz_log_and_tracing_test): Test revprop censoring with svn log", 
   "--with-all-revprops and --with-revprop options.", 
   "* subversion/tests/cmdline/log_tests.py", 
   "(retrieve_revprops): Add test for svn log --xml with the new", 
   "--with-all-revprops and --with-revprop options.", 
   "* subversion/tests/cmdline/getopt_tests_data/svn_help_log_switch_stdout", 
   "Update svn log -h output.", 
   "* subversion/bindings/swig/include/svn_containers.swg", 
   "(%typemap(out) apr_hash_t *PROPHASH): Add type map for Python, using", 
   "svn_swig_py_prophash_to_dict.", 
   "(%typemap(in) apr_hash_t *changed_paths): Use", 
   "svn_swig_py_changed_path_hash_from_dict to wrap for Python.", 
   "(%typemap(out) apr_hash_t *changed_paths): Use", 
   "svn_swig_py_changed_path_hash_to_dict to wrap for Python.", 
   "(%apply apr_hash_t *PROPHASH): Add apr_hash_t *revprops pattern.", 
   "(%typemap(in) const apr_array_header_t *STRINGLIST): Only SWIG_fail if", 
   "PyErr_Occurred(); just checking $1 == NULL worked until NULL became a", 
   "legitimate return value (see above change to svn_swig_py_strings_to_array).", 
   "(%apply const apr_array_header_t *STRINGLIST): Add apr_array_header_t", 
   "*revprops pattern.", 
   "* subversion/bindings/swig/include/svn_types.swg", 
   "(%typemap(in) (svn_log_message_receiver2_t receiver)): Use", 
   "svn_swig_py_log_receiver to wrap for Python.", 
   "* subversion/bindings/swig/python/libsvn_swig_py/swigutil_py.c", 
   "(convert_hash): Return None if hash is NULL rather than segfaulting.", 
   "(svn_swig_py_changed_path_hash_to_dict): Add function to convert an", 
   "apr_hash_t mapping char * path names to svn_log_changed_path_t * to a", 
   "Python dictionary mapping strings to wrapped svn_log_changed_path_t * .", 
   "(svn_swig_py_changed_path_hash_from_dict): Add function to convert a", 
   "Python dictionary mapping strings to wrapped svn_log_changed_path_t *", 
   "to an apr_hash_t mapping char * path names to svn_log_changed_path_t * .", 
   "(svn_swig_py_strings_to_array): Allow None to be passed in for the list,", 
   "returning NULL as the result.", 
   "(svn_swig_py_log_receiver2): Add callback wrapper.", 
   "* subversion/bindings/swig/python/libsvn_swig_py/swigutil_py.h", 
   "(svn_swig_py_changed_path_hash_to_dict,", 
   "svn_swig_py_changed_path_hash_from_dict,", 
   "svn_error_t *svn_swig_py_log_receiver2): Declare.", 
   "* subversion/bindings/swig/python/tests/ra.py", 
   "(Callbacks): Add class implementing the ra callbacks.  ra.callbacks2_t", 
   "has never worked in real-world usage (at least not for authentication", 
   "and wcprops), so it was inevitable that we'd reach a point where it no", 
   "longer worked even in this simple test usage.", 
   "(setUp): Use Callbacks and save the instance in self.callbacks, since the", 
   "binding doesn't hold on to a reference.  We got away with this before", 
   "because nothing ever tried to *use* this callback object.", 
   "(test_get_log2): Add test."
  ], 
  "revision_id": "866864"
 }, 
 {
  "author": "glasser", 
  "date": "2007-09-26T21:34:45.499386Z", 
  "msg": [
   "* www/svn_1.5_releasenotes.html", 
   "(fsfs-sharding): Comment out link to reshard script,", 
   "because it is not finished."
  ], 
  "revision_id": "866863"
 }, 
 {
  "author": "dlr", 
  "date": "2007-09-26T21:04:57.349448Z", 
  "msg": [
   "* subversion/svn/status-cmd.c", 
   "(svn_cl__status): Update TODO comments, pointing to issue #2859."
  ], 
  "revision_id": "866862"
 }, 
 {
  "author": "blair", 
  "date": "2007-09-26T15:34:17.933874Z", 
  "msg": [
   "* subversion/libsvn_wc/props.c:", 
   "Rewrap a few lines to be less than 80 characters long."
  ], 
  "revision_id": "866861"
 }
]