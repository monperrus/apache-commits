[
 {
  "author": "gdaniels", 
  "date": "2001-07-15T18:13:31.000000Z", 
  "msg": [
   "Make strings XML-safe."
  ], 
  "revision_id": "245079"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-07-15T18:13:09.000000Z", 
  "msg": [
   "Add a method for writing an XML-safe string."
  ], 
  "revision_id": "245078"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-07-15T18:12:40.000000Z", 
  "msg": [
   "Though it could still use reworking, this version noticeably increases", 
   "performance (getting rid of the linear search for each symbol addition)", 
   "at the cost of maintaining a HashMap in addition to the ArrayList."
  ], 
  "revision_id": "245077"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-07-15T17:42:42.000000Z", 
  "msg": [
   "OK, I spoke to soon.", 
   "The version with the funky bucket/hash code passes the junit tests, but", 
   "when you hand it a deploy.xml, it ends up overwriting the \"deploy\" symbol", 
   "with \"option\", which breaks the Admin service.  Don't have time to fully", 
   "debug this now, so rolling back to my simple String-creation version."
  ], 
  "revision_id": "245076"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-07-15T17:06:16.000000Z", 
  "msg": [
   "*** JAMES : Never mind. :)", 
   "Replace the original symbol-mangling code, which seems to work now.", 
   "I guess the original problem was actually just the recorder trying to", 
   "replay the characters event with a start offset greater than zero.  Since", 
   "we're returning Strings anyway, we always need to start the char buf", 
   "from zero."
  ], 
  "revision_id": "245075"
 }
]