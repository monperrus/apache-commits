[
 {
  "author": "peiyongz", 
  "date": "2003-09-23T18:11:29.000000Z", 
  "msg": [
   "Using HashPtr"
  ], 
  "revision_id": "175219"
 }, 
 {
  "author": "neilg", 
  "date": "2003-09-22T19:51:41.000000Z", 
  "msg": [
   "scanners should maintain their own pools of undeclared elements, rather than requiring grammars to do this.  This makes grammar objects stateless with regard to validation."
  ], 
  "revision_id": "175218"
 }, 
 {
  "author": "neilg", 
  "date": "2003-09-22T19:50:02.000000Z", 
  "msg": [
   "avoid using SchemaGrammar::fElemNonDeclPool; this is not necessary."
  ], 
  "revision_id": "175217"
 }, 
 {
  "author": "neilg", 
  "date": "2003-09-22T19:49:03.000000Z", 
  "msg": [
   "implement change to Grammar::putElem(XMLElementDecl, bool).  If Grammars are used only to hold declared objects, there will be no need for the fElemNonDeclPool tables; make Grammar implementations lazily create them only if the application requires them (which good cpplications should not.)"
  ], 
  "revision_id": "175216"
 }, 
 {
  "author": "neilg", 
  "date": "2003-09-22T19:47:14.000000Z", 
  "msg": [
   "change Grammar::putElemDecl(XMLElementDecl, bool) so that it does not require the Grammar object to be const.  Also, mark findOrAddGrammar as being dangerous in multithreaded situations"
  ], 
  "revision_id": "175215"
 }
]