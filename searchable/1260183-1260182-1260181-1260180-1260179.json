[
 {
  "author": "", 
  "date": "2012-01-30T14:39:48.567799Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 23243", 
   "Author:   cframpto@adobe.com", 
   "Date:     2011-12-20T00:59:57.384047Z", 
   "Log Message:", 
   "-----------", 
   "In frameworks, remove Adobe headers from all files except xml/mxml file types.  There are also a few .txt files that are license files that I didn't touch yet.", 
   "Modified Paths:", 
   "--------------", 
   "2361 paths were modified"
  ], 
  "revision_id": "1260183"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T14:39:40.983666Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19240", 
   "Author:   clucier@adobe.com", 
   "Date:     2010-12-09T22:07:22.660903Z", 
   "Log Message:", 
   "-----------", 
   "Since Flex 4.0 the policy of a transition has been, the values of the destination state trump any values that may have been set by effects during the transition (this is different than Flex 3).  There were however cases where we'd fail to apply the proper end values.", 
   "For example if a button in states A, B had an explicit width of 100px, and a Resize effect animated the button's width to 500 during the transition..the button's width would be stuck at 500 once the transition was complete.", 
   "QE notes: None", 
   "Doc notes: None", 
   "Bugs: SDK-28195", 
   "Reviewer: Jason/Steven", 
   "Tests run: Checkin, Catalyst Matrix, Cyclone", 
   "Is noteworthy for integration: Yes", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/effects/Effect.as"
  ], 
  "revision_id": "1260182"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T14:39:38.873616Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 17212", 
   "Author:   clucier@adobe.com", 
   "Date:     2010-08-06T15:42:54.680152Z", 
   "Log Message:", 
   "-----------", 
   "Quick fix to prevent referencing array out of bounds.", 
   "QE notes: None", 
   "Doc notes: None", 
   "Bugs: SDK-27140", 
   "Reviewer: Carol", 
   "Tests run: Checkin", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/effects/Effect.as"
  ], 
  "revision_id": "1260181"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T14:39:33.998527Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 16064", 
   "Author:   chaase@adobe.com", 
   "Date:     2010-05-12T15:37:49.345162Z", 
   "Log Message:", 
   "-----------", 
   "Initial checkin of \"true autoReverse\" feature. This feature adds no new API, but does add new behavior to the existing autoReverse property on Transition. Now, if autoReverse=\"true\", any transition declared from/to the opposite states of the currently-requested state change can be used as a transition for this state change, played in reverse. This essentially means that you can author a single reverse for a forward direction and have the system play that transition in reverse for the opposite direction. Previously, you needed to author both directions, and take care to make them symmetric, in order to get them to play correctly when reversing in the middle. Note that if you author a *-to-* Transition (any to any), the new reversing behavior does nothing for you, because there is no way for the system to detect the forward (and thus the reverse) direction, so that transition will always play in the declared direction.", 
   "The main functionality needed to get this working was bolstering the currentSupport for playReversedFromEnd that already existed in Effect (along with the playReversed functionality in effect instances). There was also some timing engine details in Animation to make it work correctly, especially with startDelay.", 
   "Some work was done to make Fade work correctly when playing in reverse, though there is still a problem with some of the auto-fade functionality (fading items because of visible/parent changes between states) when the Fade effect has a startDelay.", 
   "QE notes: Tested on existing effects tests to make sure new behavior didn't break anything. But need new tests specifically around this new behavior.", 
   "Doc notes: Added new docs to Transition.autoReverse to describe the new behavior", 
   "Bugs: None", 
   "Reviewer: Corey", 
   "Tests run: checkintests, Mustella spark/effects, mx/effects", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/Effect.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/supportClasses/AnimateInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/Animate.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/animation/Animation.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/supportClasses/FadeInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/states/Transition.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/effectClasses/SequenceInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/effectClasses/ParallelInstance.as</path>"
  ], 
  "revision_id": "1260180"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T14:39:31.446402Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 15923", 
   "Author:   chaase@adobe.com", 
   "Date:     2010-05-06T18:05:24.751600Z", 
   "Log Message:", 
   "-----------", 
   "Initial checkin of \"Transition Interruption\" feature. Set Transition.interruptionBehavior=\"stop\" to get the new behavior, where interrupting transitions start from where the previous transition is at, rather than end()'ing the previous transition first. The default behavior is the same as it always was; transitionBehavior=\"end\" is the default property, and that uses the previous behavior of ending the previous Transition.", 
   "New API: Transition.interruptionBehavior, mx.states.InterruptionBehavior", 
   "QE notes: Check out the spec for the details on the new API", 
   "Doc notes: none", 
   "Bugs: none", 
   "Reviewer: Jason", 
   "Tests run: checkintests, Mustella (mx/effects, spark/effects)", 
   "Is noteworthy for integration: Yes - feature requested by downstream teams", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/Effect.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/supportClasses/AnimateInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/states/Transition.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/Fade.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/CompositeEffect.as</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/states/InterruptionBehavior.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/tools/dependencychecker/frameworkSwcExceptionsList.txt</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>"
  ], 
  "revision_id": "1260179"
 }
]