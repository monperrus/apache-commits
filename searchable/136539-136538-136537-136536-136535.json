[
 {
  "author": "proyal", 
  "date": "2003-06-22T19:43:01.000000Z", 
  "msg": [
   "Fix 20728 - Implement JSTL-compliant parameter coercion for LT/GT/LE/GE expressions"
  ], 
  "revision_id": "136539"
 }, 
 {
  "author": "proyal", 
  "date": "2003-06-22T19:40:40.000000Z", 
  "msg": [
   "Fix 20729 - Rethrow exceptions from method execution rather than printing", 
   "to console."
  ], 
  "revision_id": "136538"
 }, 
 {
  "author": "proyal", 
  "date": "2003-06-22T19:35:56.000000Z", 
  "msg": [
   "Add self to status file"
  ], 
  "revision_id": "136537"
 }, 
 {
  "author": "jstrachan", 
  "date": "2003-05-09T12:22:29.000000Z", 
  "msg": [
   "Added a simple Asserter helper class which can make using expression languages in JUnit test cases easier.", 
   "Often you end up with a graph of objects which can often take some clumsy casting or navigation code in your unit tests.", 
   "Asserter asserter = new Asserter( new SomeBean() );", 
   "asserter.assert(\"this.foo.bar[1].something\", expectedValue);", 
   "or", 
   "asserter.setVariable(\"foo\", new SomeOtherBean());", 
   "asserter.assert(\"foo.something.calculateSomething(a,12)\", expected);"
  ], 
  "revision_id": "136536"
 }, 
 {
  "author": "werken", 
  "date": "2003-03-06T21:34:32.000000Z", 
  "msg": [
   "jexl seems to enjoy producing java.lang.Long from multiplicative", 
   "expressions, but integral constants are java.lang.Integer.", 
   "jexl would only compare an Integer to an Integer for the GT/LT", 
   "operators and would throw an exception if one of the operands", 
   "was an Integer and one was a Long.  This seemed to be an uneeded", 
   "restriction.  So, if either are Long or Integer, the comparison", 
   "is made from the resulting longValue() from either to avoid", 
   "trimming and to allow comparision between different bitsized", 
   "integral values.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "136535"
 }
]