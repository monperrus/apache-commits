[
 {
  "author": "geirm", 
  "date": "2001-03-19T05:22:02.000000Z", 
  "msg": [
   "Added the ExternalLoggerTest to the testsuite", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "74554"
 }, 
 {
  "author": "geirm", 
  "date": "2001-03-19T05:20:47.000000Z", 
  "msg": [
   "Added AvalonLogSystem as the default logger system", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "74553"
 }, 
 {
  "author": "geirm", 
  "date": "2001-03-19T05:20:30.000000Z", 
  "msg": [
   "Added the new ones for the LOGSYSTEM stuff, and moved the log prefixes here from", 
   "LogSystem interface", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "74552"
 }, 
 {
  "author": "geirm", 
  "date": "2001-03-19T05:19:48.000000Z", 
  "msg": [
   "Boiled the interface down to 1 method and 4 level constants.  Rest was removed and pulled back", 
   "into Runtime or RuntimeConstants", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "74551"
 }, 
 {
  "author": "geirm", 
  "date": "2001-03-19T05:18:29.000000Z", 
  "msg": [
   "Now creates a logger according to the following rules :", 
   "1) First see if a living logger was placed in the configuration (so an app", 
   "can have Vel log into its log system, it if wants...)", 
   "2) If not, try to create from the class specified in the configuration.", 
   "3) If that fails (it shouldn't, as the AvalongLogSystem is in the default", 
   "properties) then it just makes an AvalonLogSystem", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "74550"
 }
]