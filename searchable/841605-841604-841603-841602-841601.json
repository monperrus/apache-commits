[
 {
  "author": "cmpilato", 
  "date": "2002-03-16T21:51:41.719537Z", 
  "msg": [
   "Ah, another day of Subversion coding, and -- *whoooOOOOOOOooosh!!!* --", 
   "What was that that just flew by?!  Why ... why ... it's a powerplant", 
   "checkin!", 
   "Summary: clean up the svn_wc_entry_t \"mess\" by making all members of", 
   "this object first-class citizens (as opposed to some of them being", 
   "buried in a hash while others get to be regular ol' structure fields).", 
   "* subversion/include/svn_types.h", 
   "(SVN_ENTRY_ATTR_COMMITTED_REV, SVN_ENTRY_ATTR_COMMITTED_DATE,", 
   "SVN_ENTRY_ATTR_LAST_AUTHOR): Removed.", 
   "(SVN_PROP_ENTRY_COMMITTED_REV, SVN_PROP_ENTRY_COMMITTED_DATE,", 
   "SVN_PROP_ENTRY_LAST_AUTHOR): Explicitly name the non-prefix portion", 
   "of these #defines.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_schedule_t): Typedef this structure.", 
   "(svn_wc_entry_t): Added the following members: conflict_old,", 
   "conflict_new, conflict_wrk, prejfile, copyfrom_url, copyfrom_rev,", 
   "name, cmt_rev, cmt_author, cmt_date.  Removed the following members:", 
   "attributes and conflicted members.", 
   "* subversion/libsvn_wc/wc.h", 
   "(SVN_WC__ENTRY_ATTR_CMT_REV, SVN_WC__ENTRY_ATTR_CMT_DATE,", 
   "SVN_WC__ENTRY_ATTR_CMT_AUTHOR): New #defines.", 
   "(SVN_WC__ENTRY_ATTR_CONFLICTED): Removed.", 
   "(SVN_WC__ENTRY_MODIFY_REVISION, SVN_WC__ENTRY_MODIFY_URL,", 
   "SVN_WC__ENTRY_MODIFY_KIND, SVN_WC__ENTRY_MODIFY_TEXT_TIME,", 
   "SVN_WC__ENTRY_MODIFY_PROP_TIME, SVN_WC__ENTRY_MODIFY_CHECKSUM,", 
   "SVN_WC__ENTRY_MODIFY_SCHEDULE, SVN_WC__ENTRY_MODIFY_COPIED,", 
   "SVN_WC__ENTRY_MODIFY_COPYFROM_URL, SVN_WC__ENTRY_MODIFY_COPYFROM_REV,", 
   "SVN_WC__ENTRY_MODIFY_CONFLICT_OLD, SVN_WC__ENTRY_MODIFY_CONFLICT_NEW,", 
   "SVN_WC__ENTRY_MODIFY_CONFLICT_WRK, SVN_WC__ENTRY_MODIFY_PREJFILE,", 
   "SVN_WC__ENTRY_MODIFY_CMT_REV, SVN_WC__ENTRY_MODIFY_CMT_DATE,", 
   "SVN_WC__ENTRY_MODIFY_CMT_AUTHOR, SVN_WC__ENTRY_MODIFY_ALL,", 
   "SVN_WC__ENTRY_MODIFY_FORCE): Re-#defined with 32-bit integrity, and", 
   "changed to match the SVN_WC__ENTRY_ATTR_* stuff.", 
   "(svn_wc__entry_modify): Use an entry structure for delivering new", 
   "values to this function instead of a long list of arguments.", 
   "* subversion/libsvn_wc/entries.c", 
   "(alloc_entry): Don't make an attributes hash any more!  Woohoo!", 
   "Initialize 'copyfrom_rev' and 'cmt_rev' fields to SVN_INVALID_REVNUM.", 
   "(svn_wc__atts_to_entry): Just use the 'atts' has passed in to us.", 
   "Make modify_flags an apr_uint32_t.  Remove support for \"conflicted\"", 
   "attribute, and added support for \"last-author\", \"committed-rev\",", 
   "\"committed-date\", \"conflict-old\", \"conflict-new\", \"conflict-wrk\",", 
   "and \"prejfile\".", 
   "(handle_start_tag): Use the name in the entry directly.  Make", 
   "modify_flags an apr_uint32_t.", 
   "(take_from_entry): Use entry's name field directly.", 
   "(normalize_entry): Removed.  The guts of this function now live in", 
   "write_entry().", 
   "(read_entries): Drop the 'get_missing_info' argument...it's always", 
   "pass as TRUE.", 
   "(svn_wc_entries_read): Update call to read_entries().", 
   "(write_entry): Make a hash from an entry before writing it to disk.", 
   "(svn_wc__entries_write): Removed call to normalize_entry() -- this", 
   "work is done in write_entry() now.", 
   "(fold_entry): Use an entry structure to tell this function what", 
   "changes to make instead of an absurb and boundless list of", 
   "arguments.  Make modify_flags an apr_uint32_t.  Don't mess with the", 
   "non-existent \"conflicted\" field, but do allow modifications of the", 
   "last-commit and new conflict file fields.  Remove attribute hash", 
   "junk.", 
   "(fold_scheduling): Was fold_state_changes().  Also, modify_flags is", 
   "now an apr_uint32_t.  now an apr_uint32_t.", 
   "(svn_wc__entry_modify): Use an entry structure to tell this function", 
   "what changes to make instead of an absurd and boundless list of", 
   "arguments.  I mean, we're talking *absurdity* here.  Anyway.  Also,", 
   "modify_flags is now an apr_uint32_t.  Updated calls to fold_entry()", 
   "and fold_scheduling().  Also, force the caller to provide a valid", 
   "node kind.", 
   "(svn_wc_entry_dup): No more hash copy, but lots more stringbuf", 
   "duping.", 
   "(svn_wc__tweak_entry): Edit the entry structure directly.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge): Updated call to svn_wc__entry_modify().", 
   "* subversion/libsvn_wc/props.c", 
   "(svn_wc__get_existing_prop_reject_file): Get prejfile directly from", 
   "entry structure.", 
   "(svn_wc__merge_prop_diffs): Do not send a \"conflicted\" attribute, as", 
   "it no longer exists.  In this case, \"prejfile\" is that is needed.", 
   "(svn_wc_prop_set): Updated call to svn_wc__entry_modify().", 
   "(expand_keyword): Get last-committed info directly from the entry", 
   "structure.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(bail_if_unresolved_conflict): Update the conflict pre-check to look", 
   "at conflict file names alone, not the non-existent \"conflicted\" field.", 
   "Also, do some cutesy error nesting. :-)", 
   "(derive_copyfrom_url): Access the entry's copyfrom_url directly.", 
   "(report_single_mod, crawl_dir, crawl_as_copy): Access the entry's", 
   "copyfrom_url and copyfrom_rev directly.", 
   "* subversion/libsvn_wc/log.c", 
   "(log_do_modify_entry): Make modify_flags an apr_uint32_t.  Put some", 
   "ticks around paths in error message for improved readability.", 
   "Updated call to svn_wc__entry_modify().", 
   "(log_do_committed): Updated calls to svn_wc__entry_modify().", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(process_committed): Updated call to svn_wc__entry_modify().  Update", 
   "uses of #defined entry attribute names in call to", 
   "svn_xml_make_open_tag().", 
   "(mark_tree): Make modify_flags an apr_uint32_t.  Updated calls to", 
   "svn_wc__entry_modify().  Use the copied argument instead of", 
   "unconditionally setting the entry's copied flag to TRUE.", 
   "(svn_wc_delete): Updated call to svn_wc__entry_modify().", 
   "(svn_wc_add): Updated calls to svn_wc__entry_modify().  Make", 
   "modify_flags an apr_uint32_t.", 
   "(revert_admin_things): Make modify_flags an apr_uint32_t.  Check the", 
   "conflict file fields instead of the non-existent conflicted field.", 
   "(svn_wc_revert): Updated calls to svn_wc__entry_modify().", 
   "(svn_wc_resolve_conflict): Get conflict file names directly from the", 
   "entry.", 
   "* subversion/libsvn_wc/status.c", 
   "(assemble_status): Examine entry's conflict file fields instead of", 
   "the non-existent \"conflicted\" field.", 
   "* subversion/libsvn_wc/adm_files.c", 
   "(svn_wc__ensure_adm): Simplify this function.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(maybe_bump_dir_revision, change_dir_prop): Updated call to", 
   "svn_wc__entry_modify().", 
   "* subversion/libsvn_wc/questions.c", 
   "(svn_wc_conflicted_p): There's no more \"conflicted\" field in the", 
   "entry struct, so that early-exit check no longer exists.  Also,", 
   "access the conflict file names directly instead of from that", 
   "ridiculous (and thankfully extinct) attributes hash.", 
   "* subversion/libsvn_client/prop_commands.c", 
   "(svn_client_proplist): Minor code formatting changes.", 
   "* subversion/libsvn_client/revisions.c", 
   "(svn_client__get_revision_number): Oh, and here's the glory of it", 
   "all.  The fact that this huge comment about how the entry structures", 
   "were \"a mess\" can be removed is a sign of progress.  Access the", 
   "committed-rev field directly in the entry.", 
   "* subversion/clients/cmdline/status.c", 
   "(print_long_format): Grow a pool argument, get last-committed info", 
   "directly from entry, and simplify some logic.", 
   "(svn_cl__print_status_list): Updated call to print_long_format()."
  ], 
  "revision_id": "841605"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2002-03-16T17:32:29.354294Z", 
  "msg": [
   "* COMMITTERS: Change my email address."
  ], 
  "revision_id": "841604"
 }, 
 {
  "author": "blair", 
  "date": "2002-03-15T20:20:13.304918Z", 
  "msg": [
   "On RedHat using RawHide db4-4.0.14-4 and certain FreeBSD systems (as reported", 
   "by Ben Collins-Sussman), db_dump and db_load are named db4_dump and db4_load,", 
   "respectively.  Have the script look for db4_* and then db_*.", 
   "* tools/enable-dupkeys.sh: Use db4_dump and db4_load if they exist.  If not,", 
   "use db_dump and db_load."
  ], 
  "revision_id": "841603"
 }, 
 {
  "author": "sussman", 
  "date": "2002-03-15T19:59:26.311094Z", 
  "msg": [
   "Rewrite our algorithm for \"merging\" binary files.  That is,", 
   "svn_wc_merge() will now carry out nearly the same conflict-procedure", 
   "on binary files as it does on text files, but without trying to run diff3.  :-)", 
   "* svn_wc.h (svn_wc_merge):  add new promises about binary file handling.", 
   "* merge.c (svn_wc_merge):  if file is binary, just copy OLD and NEW", 
   "textbases out, mark entry as \"conflicted\", and start tracking the", 
   "two backups as usual.", 
   "* update-editor.c (svn_wc_install_file): stop caring about text", 
   "vs. binary files; let svn_wc_merge() do all the dirty work.", 
   "* update_tests.py (update_binary_file): update this test to expect two", 
   "backup files and a 'conflicted' state.", 
   "(detect_extra_files):  fix a bug in this singleton handler.", 
   "* CHANGES:  mention this new user-visible behavior."
  ], 
  "revision_id": "841602"
 }, 
 {
  "author": "philip", 
  "date": "2002-03-15T18:39:05.646739Z", 
  "msg": [
   "* configure.in: Use $SHELL to invoke gnu-diff3.sh as we don't yet version", 
   "the executable bit."
  ], 
  "revision_id": "841601"
 }
]