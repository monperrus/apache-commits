[
 {
  "author": "deweese", 
  "date": "2001-01-25T12:43:22.000000Z", 
  "msg": [
   "Clamps gradient to gradient bounds, in special case for no change in", 
   "gradient as X changes (normal case already did this)."
  ], 
  "revision_id": "199379"
 }, 
 {
  "author": "vhardy", 
  "date": "2001-01-25T01:41:43.000000Z", 
  "msg": [
   "Cleaned up lighting filter code: added final variable usage and", 
   "optimization for constant lights.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "199378"
 }, 
 {
  "author": "vhardy", 
  "date": "2001-01-25T00:15:23.000000Z", 
  "msg": [
   "Added optimization to normal computation.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "199377"
 }, 
 {
  "author": "vhardy", 
  "date": "2001-01-24T21:06:03.000000Z", 
  "msg": [
   "a) Fixed ColorMatrix bug by rewriting filter implementation: now uses ColorMatrixRed", 
   "instead of BandCombineOp.", 
   "b) Fixed offset processing in all places where it did not take the SinglePixelPackedSampleModel", 
   "offset into account", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "199376"
 }, 
 {
  "author": "deweese", 
  "date": "2001-01-24T19:49:35.000000Z", 
  "msg": [
   "1) CompositeRable now takes the colorspace compositing should be done in", 
   "(currently support sRGB and linear sRGB).", 
   "2) Total rewrite of LinearGradient code (should be much faster)", 
   "3) Fixed MultipleGradientPaint so it works if the image is in linear sRGB", 
   "4) GraphicsUtils optimizations fixed to anticipate linear sRGB images.", 
   "5) BackgroundRable now does a much better job of optimizing it's rendering.", 
   "6) SVGComposite now includes OVER, IN, OUT modes, since they are needed", 
   "for linear images, and the built in general case from Java 2D sucks :)"
  ], 
  "revision_id": "199375"
 }
]