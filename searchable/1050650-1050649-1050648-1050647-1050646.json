[
 {
  "author": "stsp", 
  "date": "2010-12-18T15:15:03.876832Z", 
  "msg": [
   "Make svn_wc__internal_walk_children() issue sqlite queries per directory", 
   "instead of per node.", 
   "This should theoretically improve performance for some usage patterns by", 
   "trading a bit of memory usage overhead against sqlite queries. But I haven't", 
   "taken any measurements since I didn't have a profiling build around.", 
   "* subversion/libsvn_wc/wc-queries.sql", 
   "(STMT_SELECT_NODE_CHILDREN_WALKER_INFO): New query that gathers data", 
   "of interest to the node walker. Note in a comment that it may be possible", 
   "to speed up this query by handling local_relpath grouping and op_depth", 
   "sorting in the C code, as done in svn_wc__db_read_children_info().", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(svn_wc__db_read_children_walker_info): New. Returns info about immediate", 
   "child nodes of a directory the walker is interested in.", 
   "Basically a smaller cousin of svn_wc__db_read_children_info().", 
   "* subversion/libsvn_wc/wc_db.h", 
   "(svn_wc__db_walker_info_t): New struct. Contains all information about", 
   "child nodes the walker is interested in. Currently this is status and kind.", 
   "(svn_wc__db_read_children_walker_info): Declare.", 
   "* subversion/libsvn_wc/node.c", 
   "(walker_helper): Replace calls to svn_wc__db_read_children() and", 
   "svn_wc__db_read_info() with call to svn_wc__db_read_children_walker_info()."
  ], 
  "revision_id": "1050650"
 }, 
 {
  "author": "henkp", 
  "date": "2010-12-18T15:14:03.453641Z", 
  "msg": [
   "+= apachemirror.3gforphones.com (de) ; -= mirrors.igsobe.com www.sharethecoupon.com (fr) apache.thelorne.com"
  ], 
  "revision_id": "1050649"
 }, 
 {
  "author": "jim", 
  "date": "2010-12-18T15:07:05.580646Z", 
  "msg": [
   "Change ordering so the longest is prefered instead of the shortest"
  ], 
  "revision_id": "1050648"
 }, 
 {
  "author": "davsclaus", 
  "date": "2010-12-18T14:59:03.627589Z", 
  "msg": [
   "CAMEL-3441: DataFormat now supports Service and CamelContextAware which means its easier to do custom initialization logic in your data formats. CAMEL-3438: Attempt to use classloader from CamelContext with JAXB to fix classloading issues in for example OSGi runtimes."
  ], 
  "revision_id": "1050647"
 }, 
 {
  "author": "jim", 
  "date": "2010-12-18T14:57:09.214543Z", 
  "msg": [
   "(Try to) support Darwin's \"universal\" builds by allowing for", 
   "2 separate bit sizes for some types in the same binary/library", 
   "(which is what a universal build is). As such, the C header files", 
   "need to know how the *current* codebase is being built (which", 
   "links to apr) and choose the correct bit size depending on", 
   "the compiler flags."
  ], 
  "revision_id": "1050646"
 }
]