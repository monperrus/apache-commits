[
 {
  "author": "daijy", 
  "date": "2012-04-27T07:09:40.957046Z", 
  "msg": [
   "PIG-2671: e2e harness: Reference local test path via :LOCALTESTPATH:"
  ], 
  "revision_id": "1331253"
 }, 
 {
  "author": "daijy", 
  "date": "2012-04-27T07:05:38.316063Z", 
  "msg": [
   "Change jdiff from 0.10.0-SNAPSHOT to 0.10.0"
  ], 
  "revision_id": "1331252"
 }, 
 {
  "author": "jleroux", 
  "date": "2012-04-27T06:57:45.756778Z", 
  "msg": [
   "\"Applied fix from trunk for revision: 1327735\"", 
   "------------------------------------------------------------------------", 
   "r1327735 | doogie | 2012-04-19 01:48:40 +0200 (jeu., 19 avr. 2012) | 11 lines", 
   "FEATURE/FIX: <entity-condition> on views are now done correctly.  When a", 
   "view was previously joined to another view, the conditions on the inner", 
   "view were added to the outer-most WHERE clause.  This caused multiple", 
   "problems.  One, if the join was optional, the generated sql actually made", 
   "it required(because it was in the WHERE, and not in the ON clause).", 
   "Second, the outer WHERE may reference a field that was not available *at", 
   "all* in the generated nested select(view table).", 
   "The fix is to *not* recurse thru all view member entities when finding", 
   "conditions, and instead attach them to a new WHERE clause on the", 
   "generated inner SELECT(view table).", 
   "------------------------------------------------------------------------", 
   "?\\026"
  ], 
  "revision_id": "1331251"
 }, 
 {
  "author": "jleroux", 
  "date": "2012-04-27T06:57:39.315616Z", 
  "msg": [
   "\"Applied fix from trunk for revision: 1327735\"", 
   "------------------------------------------------------------------------", 
   "r1327735 | doogie | 2012-04-19 01:48:40 +0200 (jeu., 19 avr. 2012) | 11 lines", 
   "FEATURE/FIX: <entity-condition> on views are now done correctly.  When a", 
   "view was previously joined to another view, the conditions on the inner", 
   "view were added to the outer-most WHERE clause.  This caused multiple", 
   "problems.  One, if the join was optional, the generated sql actually made", 
   "it required(because it was in the WHERE, and not in the ON clause).", 
   "Second, the outer WHERE may reference a field that was not available *at", 
   "all* in the generated nested select(view table).", 
   "The fix is to *not* recurse thru all view member entities when finding", 
   "conditions, and instead attach them to a new WHERE clause on the", 
   "generated inner SELECT(view table).", 
   "------------------------------------------------------------------------", 
   "?\\026"
  ], 
  "revision_id": "1331250"
 }, 
 {
  "author": "davsclaus", 
  "date": "2012-04-27T06:56:59.301846Z", 
  "msg": [
   "CAMEL-5225: Added test based on user issue"
  ], 
  "revision_id": "1331249"
 }
]