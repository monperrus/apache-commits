[
 {
  "author": "malcolm", 
  "date": "2005-11-09T19:59:29.873604Z", 
  "msg": [
   "Remove a redundant structure member used to indicate whether a hash", 
   "has been populated.  Instead, leave the hash uncreated (a NULL pointer)", 
   "until we populate it, and test that condition instead.", 
   "* subversion/libsvn_wc/diff.c", 
   "(struct file_baton): Remove fetched_baseprops.", 
   "(make_file_baton): Don't initialise file_baton->baseprops to an empty", 
   "hash, leave it as a NULL pointer instead.", 
   "(load_base_props): Don't set fetched_baseprops.", 
   "(close_file): Add a comment noting that we might be calling the", 
   "callback function with a NULL originalprops argument (and noting", 
   "why that's okay).", 
   "(get_local_mimetypes, change_file_prop): Check whether b->baseprops", 
   "is NULL, rather than checking b->fetched_baseprops."
  ], 
  "revision_id": "857350"
 }, 
 {
  "author": "djames", 
  "date": "2005-11-09T19:28:13.906005Z", 
  "msg": [
   "Issue #443: Post-commit hook script (error) output lost.", 
   "Fix portability issues in commit_tests 34.", 
   "* subversion/tests/clients/cmdline/commit_tests.py", 
   "(post_commit_hook_test): Use the create_python_hook_script function", 
   "for better portability.", 
   "* subversion/tests/clients/cmdline/svntest/main.py", 
   "(create_python_hook_script): New function. Creates a portable Python based", 
   "hook script.", 
   "Patch by: Madan U Sreenivasan <madan@collab.net>", 
   "(Tweaked by me.)", 
   "Review by: malcolm", 
   "me"
  ], 
  "revision_id": "857349"
 }, 
 {
  "author": "malcolm", 
  "date": "2005-11-09T18:14:08.952743Z", 
  "msg": [
   "Trivial followup to r17234: Name the 'base' properties hash 'originalprops',", 
   "rather than 'wcprops', which better captures what it's meant for, and also", 
   "matches the name of the argument used in the diff callbacks.", 
   "* subversion/libsvn_wc/diff.c", 
   "(close_directory, close_file): Rename local variable 'wcprops' to", 
   "'originalprops'."
  ], 
  "revision_id": "857348"
 }, 
 {
  "author": "dberlin", 
  "date": "2005-11-09T17:51:14.263542Z", 
  "msg": [
   "Add support for svndiff1 to mod_dav_svn and libsvn_ra_dav.", 
   "This does not change what the *client sends*, only what", 
   "the *server will send to the client*.", 
   "* subversion/mod_dav_svn/file_revs.c", 
   "(struct file_rev_baton): Add svndiff_version", 
   "(file_rev_handler): Use svndiff version set in baton.", 
   "(dav_svn__file_revs_report): Get svndiff_version from private info.", 
   "* subversion/mod_dav_svn/update.c", 
   "(update_ctx_t): Add svndiff_version.", 
   "(upd_apply_textdelta): Use svndiff version set in baton.", 
   "(dav_svn__update_report): Get svndiff_version from private info.", 
   "* subversion/mod_dav_svn/dav_svn.h", 
   "(struct dav_resource_private): Add svndiff_version", 
   "* subversion/mod_dav_svn/repos.c", 
   "Include apr_lib.h", 
   "(accept_rec): New struct.", 
   "(get_entry): New function.", 
   "(do_header_Line): New function.", 
   "(sort_encoding_pref): New function.", 
   "(svn_dav__negotiate_encoding_prefs): New function.", 
   "(dav_svn__get_resource): Negotiate encoding preferences.", 
   "* subversion/libsvn_delta/svndiff.c", 
   "(window_handler): Use SVN_ERR everywhere instead of", 
   "keeping err alive.", 
   "* subversion/libsvn_ra_dav/file_revs.c", 
   "(svn_ra_dav__get_file_revs): Set Accept-Encoding header", 
   "to specify svndiff1 as acceptable.", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(reporter_finish_report): Set Accept-Encoding header", 
   "to specify svndiff1 as acceptable."
  ], 
  "revision_id": "857347"
 }, 
 {
  "author": "dberlin", 
  "date": "2005-11-09T15:15:27.665966Z", 
  "msg": [
   "Fix up status of schedule delete fix now that it", 
   "is two patches"
  ], 
  "revision_id": "857346"
 }
]