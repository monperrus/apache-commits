[
 {
  "author": "lhazlewood", 
  "date": "2009-08-21T22:35:08.030164Z", 
  "msg": [
   "SHIRO-25 & SHIRO-86 - created initial Builder implementations which allowed for significant cleanup of ThreadContext usage across code.  Builder implementations could probably be used in 'runAs' functionality moving forward.  Will investigate later."
  ], 
  "revision_id": "806735"
 }, 
 {
  "author": "rhs", 
  "date": "2009-08-21T22:21:49.323035Z", 
  "msg": [
   "fixed some more channel attribute errors; eliminated most uses of catchup in favor of waiting on semantically meaningful predicates; fixed Serial.__cmp__ to check the type of the other object"
  ], 
  "revision_id": "806734"
 }, 
 {
  "author": "szetszwo", 
  "date": "2009-08-21T22:18:28.684407Z", 
  "msg": [
   "MAPREDUCE-874. Rename the PiEstimator example to QuasiMonteCarlo."
  ], 
  "revision_id": "806733"
 }, 
 {
  "author": "davisp", 
  "date": "2009-08-21T22:11:17.927439Z", 
  "msg": [
   "Munge all ErlJSON to use binaries.", 
   "Our flavor of ErlJSON has this interesting characteristic:", 
   "{[{foo, bar}]} == {[{<<\"foo\">>, <<\"bar\">>}]}", 
   "This is fine and dandy for writing ErlJSON that is going to", 
   "go directly to a serializer, but when it goes to client code", 
   "executing in couch_native_process.erl it becomes a pain in", 
   "the but to know whether to use atoms or binaries.", 
   "This patch munges all input to user functions to use", 
   "binaries except for null, true, and false obviously.", 
   "This fixes the commented out test in erlang_views.js as well", 
   "as adds a show to poke into the request object that has", 
   "known instances of where things get munged."
  ], 
  "revision_id": "806732"
 }, 
 {
  "author": "axb", 
  "date": "2009-08-21T21:48:42.888949Z", 
  "msg": [], 
  "revision_id": "806731"
 }
]