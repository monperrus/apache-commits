[
 {
  "author": "scheu", 
  "date": "2002-05-24T21:34:22.000000Z", 
  "msg": [
   "While looking at defect http://nagoya.apache.org/bugzilla/show_bug.cgi?id=9261", 
   "I found a number of problems, which are fixed here.", 
   "First I attempted to run Java2WSDL on the comprehensive test TestType", 
   "SEI.  This revealed a number of roundtripping problems with Attributes.", 
   "Change 1", 
   "---------", 
   "The serialization code was using Types.isSimpleSchemaType(class) to", 
   "determine if it an object was acceptable as an attribute.  I added", 
   "a new method Types.isAcceptableAsAttribute(class) which checks to", 
   "see if the class is a simple type, an enumeration type or an", 
   "extension of SimpleType.  I changed all appropriate code to use", 
   "the new isAcceptableAsAttribute method.", 
   "--------------", 
   "This revealed a problem in the detection of enumeration classes.", 
   "Change 2", 
   "--------", 
   "I updated the Types.isEnumClass(class) method to comply with the", 
   "latest version of JSR 101.", 
   "--------------", 
   "This revealed a problem with WSDL2Java for an attribute that was", 
   "declared in the wsdl file using an anonymous type.", 
   "Change 3", 
   "--------", 
   "Added a getAttributeAnonQName method that is similar to the", 
   "existing getElementAnonQName method.  Made corresponding changes", 
   "to the symbolTable classes to use this method so that an attribute", 
   "can be declared with an anonymous type.  Cool!  Also opened a defect", 
   "indicating that we still need to support the \"form\" attributes for attributes.", 
   "---------------", 
   "I then added a public static field to Investment.java in the roundtrip testcase", 
   "to determine whether it is illegally mapped.  It was...", 
   "Change 4", 
   "--------", 
   "Small change to BeanUtils to prevent static, final and transient fields from", 
   "being mapped to the properties.  Added code to the roundtrip testcase to", 
   "fail if such a mapping is found. Also added code to the roundtrip testcase", 
   "to fail if a private field is mapped to wsdl.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "247124"
 }, 
 {
  "author": "", 
  "date": "2002-05-24T18:20:44.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create tag", 
   "'deserializer-modification'."
  ], 
  "revision_id": "247123"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-05-24T18:20:44.000000Z", 
  "msg": [
   "Make streaming deserialization work again!", 
   "There is now a MessageContext option for \"high-fidelity\" recording.", 
   "If this is true (the default), we will SAX-record the entire message", 
   "just like we were doing before - this allows byte-for-byte reconstruction", 
   "of messages for intermediaries/encryption/etc.  If it's false, we only", 
   "record what is necessary (i.e. when we come to elements with ID", 
   "attributes, we record them for multiref deserialization) and deserialize", 
   "on the fly during the parse.", 
   "DETAILS:", 
   "* Remove Deserializer interface, replace with Deserializer class which", 
   "extends SOAPHandler.", 
   "* Introduce \"highFidelity\" flag in MessageContext.  Defaults to true, so", 
   "unless you do something everything works as before.  The option also", 
   "exists in SOAPService and WSDDService, so if you specify \"streaming='on'\"", 
   "in your service deployment, you'll get on-the-fly deserialization.", 
   "* Add a setter for \"needDeser\" on RPCElement, which gets used by BodyBuilder", 
   "* BodyBuilder checks if we're doing high-fidelity recording, and if NOT,", 
   "directly uses RPCHandlers during parsing, which results in immediate", 
   "deserialization on the fly.", 
   "* Even if we're not recording the whole message, if we come across", 
   "MessageElements with ID attributes, record them for later multi-ref", 
   "deserialization.", 
   "* Remove main()s from a few tests, since it's better to let junit deal", 
   "for you (these were put in before I realized how simple running a single", 
   "test was within the framework)", 
   "* Various little bits of cleanup, unused imports, etc.", 
   "TODOs:", 
   "* The way the current SOAPHandler framework works with respect to creating", 
   "new MessageElements and maintaining the element stack in the DserContext", 
   "is very brittle and hard to understand.  This should be cleaned up and", 
   "factored out again - it was clean at one point and now enough stuff", 
   "has creeped in to make it worthy of a revisit.  Start to frame this work", 
   "with makeNewElement() in SOAPHandler."
  ], 
  "revision_id": "247122"
 }, 
 {
  "author": "scheu", 
  "date": "2002-05-24T18:11:12.000000Z", 
  "msg": [
   "Changes to fix the following defect:", 
   "http://nagoya.apache.org/bugzilla/show_bug.cgi?id=9262", 
   "The wsdl doc created by Java2WSDL now has a", 
   "<wsdl:types>", 
   "element instead of a", 
   "<types>", 
   "element.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "247121"
 }, 
 {
  "author": "scheu", 
  "date": "2002-05-24T16:48:58.000000Z", 
  "msg": [
   "This change is in response to defect", 
   "http://nagoya.apache.org/bugzilla/show_bug.cgi?id=9352", 
   "The defect indicates that an NPE is thrown if a bean", 
   "cannot be constructed (possibly due to a private default constructor).", 
   "Tom made some changes that may have fixed this problem.", 
   "These additional changes ensure that the bean is constructed", 
   "or an exception is thrown prior to the href/id processing.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "247120"
 }
]