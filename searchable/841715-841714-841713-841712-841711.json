[
 {
  "author": "blair", 
  "date": "2002-04-05T00:58:40.296115Z", 
  "msg": [
   "Fix path to tools/dev/svn-dev.el.", 
   "* subversion/clients/cmdline/propdel-cmd.c: Fix path to tools/dev/svn-dev.el."
  ], 
  "revision_id": "841715"
 }, 
 {
  "author": "sussman", 
  "date": "2002-04-05T00:47:42.372230Z", 
  "msg": [
   "Tweak internals in preparation for the new 'svn merge' interface.", 
   "[The next step is to make the cmdline application actually parse args", 
   "and call svn_client_merge() correctly.]", 
   "* repos_diff.c (open_root):  all paths that this editor passes to the", 
   "callback table need are now correctly prefixed by the TARGET", 
   "argument.  [This is the same TARGET_wcpath that receives", 
   "merge-changes.]", 
   "* diff.c (do_diff, do_merge): split up diff_or_merge into two funcs;", 
   "diff & merge are just too different now, it's not worth the", 
   "spaghetti that comes from factorization.  They only share the", 
   "repos_diff editor at this point.  do_diff calls RA->do_update,", 
   "and do_merge calls RA->do_switch, because the latter allows us to", 
   "compare two totally different URLs.", 
   "(svn_client_diff):  call do_diff.", 
   "(svn_client_merge): take a target_wcpath argument, and pass it to", 
   "do_merge.", 
   "* svn_client.h (svn_client_merge):  take a target_wcpath argument.", 
   "* client.h (svn_client__get_diff_editor):  tweak docstring.", 
   "* merge-cmd.c (svn_cl__merge): temporary hack: pass bogus target_wcpath."
  ], 
  "revision_id": "841714"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-04-04T23:49:14.768221Z", 
  "msg": [
   "Make other commit-y things use the log message callback system.  That", 
   "is, any time an operation requires a log message for a commit (be it a", 
   "proper commit, or a remote mkdir or delete, etc.), it will invoke a", 
   "callback (if provided) which will pulls the log message either from", 
   "the command-line options of using an $EDITOR procedure.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_CL_NO_EXTERNAL_EDITOR): New error code.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_mkdir, svn_client_delete, svn_client_copy,", 
   "svn_client_move): Replace 'message' parameter with 'log_msg_func'", 
   "and 'log_msg_baton' parameters.", 
   "(svn_client_import): Replace 'log_msg' parameter with 'log_msg_func'", 
   "and 'log_msg_baton' parameters.", 
   "* subversion/libsvn_client/delete.c", 
   "(svn_client_delete): Replace 'log_msg' parameter with 'log_msg_func'", 
   "and 'log_msg_baton' parameters (and use them).", 
   "* subversion/libsvn_client/diff.c", 
   "(merge_file_deleted, merge_dir_deleted): Updated call to svn_client_delete.", 
   "(merge_dir_added): Updated call to svn_client_mkdir.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_wc_copy): Remove unused 'message' parameter.", 
   "(setup_copy): Replace 'message' parameter with 'log_msg_func'", 
   "and 'log_msg_baton' parameters (and use them).", 
   "(svn_client_copy, svn_client_move): Replace 'message' parameter with", 
   "'log_msg_func' and 'log_msg_baton' parameters.  Update call to setup_copy.", 
   "* subversion/libsvn_client/add.c", 
   "(svn_client_mkdir): Replace 'log_msg' parameter with 'log_msg_func'", 
   "and 'log_msg_baton' parameters (and use them).", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_import): Replace 'log_msg' parameter with 'log_msg_func'", 
   "and 'log_msg_baton' parameters (and use them).", 
   "* subversion/clients/cmdline/cl.h", 
   "(svn_cl__edit_externally): Remove notion that 'base_dir' is a wc path.", 
   "(svn_cl__make_log_msg_baton, svn_cl__get_log_message): New functions.", 
   "* subversion/clients/cmdline/move-cmd.c", 
   "(svn_cl__move): Use new svn_cl__get_log_message and", 
   "svn_cl__make_log_msg_baton functions.  Update call to svn_client_move.", 
   "* subversion/clients/cmdline/mkdir-cmd.c", 
   "(svn_cl__mkdir): Use new svn_cl__get_log_message and", 
   "svn_cl__make_log_msg_baton functions.  Update call to svn_client_mkdir.", 
   "* subversion/clients/cmdline/copy-cmd.c", 
   "(svn_cl__copy): Use new svn_cl__get_log_message and", 
   "svn_cl__make_log_msg_baton functions.  Update call to svn_client_copy.", 
   "* subversion/clients/cmdline/util.c", 
   "(svn_cl__edit_externally): Don't assume that 'base_dir' is a working", 
   "copy directory.  Also, remove the default editors, opting instead", 
   "for an error message.", 
   "(get_next_line, strip_prefix_from_buffer, struct log_msg_baton):", 
   "Moved from commit-cmd.c.", 
   "(svn_cl__make_log_msg_baton): New function.", 
   "(svn_cl__get_log_message): Was get_log_msg() in commit-cmd.c.", 
   "* subversion/clients/cmdline/commit-cmd.c", 
   "(get_next_line, strip_prefix_from_buffer, struct log_msg_baton):", 
   "Moved to util.c.", 
   "(get_log_msg): Moved to util.c (as svn_cl__get_log_message).", 
   "(svn_cl__commit): Use new svn_cl__get_log_message and", 
   "svn_cl__make_log_msg_baton functions.", 
   "* subversion/clients/cmdline/delete-cmd.c", 
   "(svn_cl__delete): Use new svn_cl__get_log_message and", 
   "svn_cl__make_log_msg_baton functions.  Update call to svn_client_delete.", 
   "* subversion/clients/cmdline/import-cmd.c", 
   "(svn_cl__import): Use new svn_cl__get_log_message and", 
   "svn_cl__make_log_msg_baton functions.  Update call to svn_client_import."
  ], 
  "revision_id": "841713"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-04-04T22:55:41.007839Z", 
  "msg": [
   "* www/project_status.html: We're going to have `merge' in", 
   "0.11, not wait for 0.12."
  ], 
  "revision_id": "841712"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-04-04T22:54:06.707640Z", 
  "msg": [
   "* www/project_status.html: Reinstate 0.12 milestone, move", 
   "some stuff from 0.11 to 0.12, etc."
  ], 
  "revision_id": "841711"
 }
]