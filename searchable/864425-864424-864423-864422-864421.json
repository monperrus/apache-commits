[
 {
  "author": "dlr", 
  "date": "2007-04-02T22:46:33.811775Z", 
  "msg": [
   "JavaHL: Cleanup for the commit() API.", 
   "[ in subversion/bindings/java/javahl/ ]", 
   "* native/native/SVNClient.cpp", 
   "(commit): Use SVN_INVALID_REVNUM instead of the magic number \"-1\".", 
   "Tweak whitespace usage."
  ], 
  "revision_id": "864425"
 }, 
 {
  "author": "dlr", 
  "date": "2007-04-02T22:35:53.275623Z", 
  "msg": [
   "Initial framework to share the utility functions used by FSFS and BDB", 
   "file systems, with the goal of avoiding duplicate code in FS backend", 
   "implementations.", 
   "It includes a new libsvn_fs_util library to define the functions used by", 
   "both FSFS and BDB file systems. For now, svn_fs__canonicalize_abspath()", 
   "function, a replacement for svn_fs_fs__canonicalize_abspath() and", 
   "svn_fs_base__canonicalize_abspath() functions is defined here.  It", 
   "should be extended for other shared functions as well.", 
   "* subversion/libsvn_fs_base/tree.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "(open_path, get_dag, add_change, change_txn_merge_info,", 
   "base_node_history): Rename svn_fs_base__canonicalize_abspath() function", 
   "as svn_fs__canonicalize_abspath() function.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "svn_fs_base__canonicalize_abspath(): Remove.", 
   "* subversion/libsvn_fs_base/fs.h", 
   "Bump copyright year to 2007.", 
   "svn_fs_base__canonicalize_abspath(): Remove.", 
   "* subversion/libsvn_fs_base/lock.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "(svn_fs_base__lock, svn_fs_base__unlock, svn_fs_base__get_lock,", 
   "svn_fs_base__get_locks): Rename svn_fs_base__canonicalize_abspath()", 
   "function as svn_fs__canonicalize_abspath() function.", 
   "* subversion/libsvn_fs_base/dag.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "(svn_fs_base__dag_copy): Rename svn_fs_base__canonicalize_abspath()", 
   "function as svn_fs__canonicalize_abspath() function.", 
   "* subversion/libsvn_fs_util/fs-util.c", 
   "New library for defining the functions which could be used by FSFS and", 
   "BDB libraries. For now, we have defined svn_fs__canonicalize_abspath()", 
   "function.", 
   "* subversion/include/private/svn_fs_util.h", 
   "New header file for declaring the functions which could be used by", 
   "FSFS and BDB file systems. For now, we have declared", 
   "svn_fs__canonicalize_abspath() function used to canonicalize the", 
   "absolute path.", 
   "* subversion/tests/libsvn_fs_base/fs-base-test.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "(canonicalize_abspath): Rename svn_fs_base__canonicalize_abspath()", 
   "function as svn_fs__canonicalize_abspath() function and correct the", 
   "msg appropriately.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "(open_path, get_dag, add_change, fs_change_node_prop, copy_helper,", 
   "fs_node_history): Rename svn_fs_fs__canonicalize_abspath() function as", 
   "svn_fs__canonicalize_abspath() function.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "svn_fs_fs__canonicalize_abspath(): Remove.", 
   "* subversion/libsvn_fs_fs/fs.h", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "svn_fs_fs__canonicalize_abspath(): Remove.", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "Include the private/svn_fs_util.h header file, and bump copyright year", 
   "to 2007.", 
   "(svn_fs_fs__allow_locked_operation, svn_fs_fs__lock,", 
   "svn_fs_fs__unlock, svn_fs_fs__get_lock, svn_fs_fs__get_locks): Rename", 
   "svn_fs_fs__canonicalize_abspath() function as", 
   "svn_fs__canonicalize_abspath() function.", 
   "Patch by: bhuvan", 
   "Suggested by: kameshj"
  ], 
  "revision_id": "864424"
 }, 
 {
  "author": "hwright", 
  "date": "2007-04-02T21:53:06.436550Z", 
  "msg": [
   "JavaHL: Make info2() callback-based.  This better encapsulates some of the", 
   "underlying C++ code, and also lets the Java interface better mirror the", 
   "C API.", 
   "[ in subversion/bindings/java/javahl/ ]", 
   "* native/org_tigris_subversion_javahl_SVNClient.cpp", 
   "(Java_org_tigris_subversion_javahl_SVNClient_info2):", 
   "Update method return type to be void, and update call to SVNClient::info().", 
   "* native/SVNClient.h,", 
   "native/SVNClient.cpp", 
   "(info): Cut out the extra functionality which is not longer needed because", 
   "we are using a callback object.", 
   "(infoReceiver): Remove.", 
   "(createJavaInfo2): Move to InfoCallback.", 
   "* native/InfoCallback.h,", 
   "native/InfoCallback.cpp", 
   "(InfoCallback): A new class to represent a callback for svn_client_info().", 
   "The class also contains helper functions moved from SVNClient.", 
   "* src/org/tigris/subversion/javahl/SVNClientInterface.java", 
   "(info2): Add the new info2() method.", 
   "* src/org/tigris/subversion/javahl/SVNClient.java", 
   "(info2): Implement the old info2() in terms of the new one.", 
   "(info2): New native info2 implementation.", 
   "(MyInfoCallback): A callback class to be used for implementing a thin wrapper", 
   "around the new info implementation.", 
   "* src/org/tigris/subversion/javahl/SVNClientSynchronized.java", 
   "(info2): New callback-based info implementation.", 
   "* src/org/tigris/subversion/javahl/InfoCallback.java", 
   "(InfoCallback): New callback interface."
  ], 
  "revision_id": "864423"
 }, 
 {
  "author": "hwright", 
  "date": "2007-04-02T21:04:16.171319Z", 
  "msg": [
   "Add vi(m) swap files to the list of default global ignores.", 
   "Suggested by: glasser", 
   "* subversion/include/svn_config.h", 
   "(SVN_CONFIG_DEFAULT_GLOBAL_IGNORES): Add '.*.swp'."
  ], 
  "revision_id": "864422"
 }, 
 {
  "author": "dlr", 
  "date": "2007-04-02T20:52:32.687203Z", 
  "msg": [
   "A follow-up to r24318, fixing repository access for the", 
   "svn_client_get_mergeinfo() API, and improving the efficiency of its", 
   "WC-only access.", 
   "* subversion/libsvn_client/merge.c", 
   "(get_wc_or_repos_merge_info): If the RA_SESSION parameter is NULL,", 
   "open a session to the appropriate URL.", 
   "(svn_client_get_mergeinfo): Rewrite function to work correctly when", 
   "doing RA access, and peform more efficiently when there's no need", 
   "to contact the repository.", 
   "Found by: lundblad"
  ], 
  "revision_id": "864421"
 }
]