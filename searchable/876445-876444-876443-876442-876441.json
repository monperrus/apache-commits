[
 {
  "author": "cmpilato", 
  "date": "2009-03-06T17:23:35.922004Z", 
  "msg": [
   "Make the new POST handler able to return complex DAV error messages.", 
   "* subversion/mod_dav_svn/dav_svn.h,", 
   "* subversion/mod_dav_svn/util.c", 
   "(dav_svn__error_response_tag): New.", 
   "* subversion/mod_dav_svn/repos.c", 
   "(dav_svn__method_post): Use new dav_svn__error_response_tag() to", 
   "handle POST errors."
  ], 
  "revision_id": "876445"
 }, 
 {
  "author": "gstein", 
  "date": "2009-03-06T17:04:31.024659Z", 
  "msg": [
   "Add const to a lot of parameters and structure members. Fix numerous", 
   "problems in win32_auth_sspi.c, where it hasn't tracked changes in other", 
   "parts of ra_serf (and create a fake_sspi.h to assist with that moving", 
   "forward). Revamped a number of parsing algorithms to be simpler, and to", 
   "avoid using apr_strtok() since that likes to modify its input, and we", 
   "typically don't have modifiable input anyways. Removed a number of", 
   "redundancies. Add C++ wrappers into the header files. Prefixed a number of", 
   "library-private functions with svn_ra_serf__.", 
   "* subversion/libsvn_ra_serf/ra_serf.h:", 
   "(): add the extern \"C\" wrapper", 
   "(svn_ra_serf__connection_t): constify several string members", 
   "(svn_ra_serf__session_t): constify a couple string members", 
   "(svn_serf__auth_handler_func_t): constify auth params", 
   "(svn_ra_serf__encode_auth_header): constify result returned in HEADER.", 
   "couple whitespace tweaks.", 
   "* subversion/libsvn_ra_serf/auth_digest.h:", 
   "(): add the extern \"C\" wrapper", 
   "(serf_digest_context_t): constify string members", 
   "(handle_digest_auth): renamed to ...", 
   "(svn_ra_serf__handle_digest_auth): ... this. constify auth params.", 
   "(init_digest_connection): renamed to ...", 
   "(svn_ra_serf__init_digest_connection): ... this", 
   "(setup_request_digest_auth): renamed to ...", 
   "(svn_ra_serf__setup_request_digest_auth): ... this", 
   "(validate_response_digest_auth): renamed to ...", 
   "(svn_ra_serf__validate_response_digest_auth): ... this", 
   "* subversion/libsvn_ra_serf/win32_auth_sspi.h:", 
   "(): add a potential USE_FAKE_SSPI #define for developers to use to haul", 
   "in fake_sspi.h. add the extern \"C\" wrapper.", 
   "(serf_sspi_context_t): create a typedef for this type", 
   "(handle_sspi_auth): renamed to ...", 
   "(svn_ra_serf__handle_sspi_auth): ... this. constified the auth params.", 
   "fix: function now takes a CTX rather than SESSION/CONN pair.", 
   "(init_sspi_connection): renamed to ...", 
   "(svn_ra_serf__init_sspi_connection): ... this", 
   "(setup_request_sspi_auth): renamed to ...", 
   "(svn_ra_serf__setup_request_sspi_auth): ... this. added missing METHOD", 
   "and URI params.", 
   "(handle_proxy_sspi_auth): renamed to ...", 
   "(svn_ra_serf__handle_proxy_sspi_auth): ... this. constified the auth", 
   "params and switched to CTX param.", 
   "(init_proxy_sspi_connection): renamed to ...", 
   "(svn_ra_serf__init_proxy_sspi_connection): ... this", 
   "(handle_sspi_auth): renamed to ...", 
   "(svn_ra_serf__setup_request_proxy_sspi_auth): ... this. added missing", 
   "METHOD and URI params.", 
   "(sspi_get_credentials): removed. now private to file.", 
   "* subversion/libsvn_ra_serf/fake_sspi.h: new header to allow", 
   "win32_auth_sspi.c to compile on non-Windows platforms.", 
   "* subversion/libsvn_ra_serf/auth.c:", 
   "(serf_auth_protocols[]): track function renames", 
   "(svn_ra_serf__encode_auth_header): constify the HEADER output.", 
   "(auth_baton_t): constify last_prot_name", 
   "(handle_auth_header): use ab->header rather than figuring one out from", 
   "ab->code. revamp parsing to avoid apr_strtok(). no need to duplicate", 
   "the header value when calling the handler since the param is (now)", 
   "constified.", 
   "(svn_ra_serf__handle_auth): put the auth_baton on the stack rather than", 
   "the heap. skip the serf_bucket_headers_do() since we only care about", 
   "one header, and we already have it. in the auth failure message, be", 
   "wary of a NULL last_prot_name.", 
   "(handle_basic_auth): constify the auth params. revamp the realm parsing", 
   "to be more straightforward and to avoid apr_strtok().", 
   "(handle_proxy_basic_auth): constify the auth params.", 
   "* subversion/libsvn_ra_serf/auth_digest.c:", 
   "(int_to_hex): fix declaration style", 
   "(hex_encode): fix declaration style. constify return value.", 
   "(random_cnonce): constify return value.", 
   "(build_digest_ha1): constify return value. constify TMP local.", 
   "(build_digest_ha2): constify return value. move local var declarations", 
   "into a tighter scope.", 
   "(build_auth_header): constify return value. switch construction over to", 
   "use a stringbuf rather than number strcat calls. constify locals.", 
   "(handle_digest_auth): renamed to ...", 
   "(svn_ra_serf__handle_digest_auth): ... this. constified auth params.", 
   "revamp parsing code for clarity, to remove redundancies, and to avoid", 
   "some uses of strtok. when allocating the context, skip a cast, and use", 
   "the variable itself to determine the required size. when stashing", 
   "strings into the context, dup them into the right pool.", 
   "(init_digest_connection): renamed to ...", 
   "(svn_ra_serf__init_digest_connection): ... this.", 
   "(setup_request_digest_auth): renamed to ...", 
   "(svn_ra_serf__setup__request_digest_auth): ... this. toss a cast.", 
   "(validate_response_digest_auth): renamed to ...", 
   "(svn_ra_serf__validate_response_digest_auth): ... this. revamp parsing", 
   "code for clarity, to remove some redundancies, and to avoid some uses", 
   "of strtok. constify some local vars.", 
   "* subversion/libsvn_ra_serf/win32_auth_sspi.c:", 
   "(sspi_get_credentials): add forward declare to avoid a move right now.", 
   "(sspi_maxtokensize): constify AUTH_PKG param since it is called with a", 
   "string constant.", 
   "(init_sspi_connection): renamed to ...", 
   "(svn_ra_serf__init_sspi_connection): remove cast on an alloc, and use", 
   "the variable to know the size. remove a cast to void*.", 
   "(handle_sspi_auth): renamed to ...", 
   "(do_auth): ... this. and a new parameter set in order to refactor the", 
   "old handle_sspi_auth and handle_proxy_sspi_auth, which were duplicate", 
   "yet divergent functions. revamp the parsing to avoid apr_strtok.", 
   "(svn_ra_serf__handle_sspi_auth): new function to take place of the old", 
   "handle_sspi_auth. simply calls do_auth(). constified auth params.", 
   "(setup_request_sspi_auth): renamed to ...", 
   "(svn_ra_serf__setup_request_sspi_auth): ... this. added missing METHOD", 
   "and URI params.", 
   "(sspi_get_credentials): made private to this function.", 
   "(init_proxy_sspi_connection): renamed to ...", 
   "(svn_ra_serf__init_proxy_sspi_connection): ... this. remove cast on an", 
   "alloc and use the variable to know the size. remove a cast to void*.", 
   "(handle_proxy_sspi_auth): renamed to ...", 
   "(svn_ra_serf__handle_proxy_sspi_auth): ... this. constified auth params.", 
   "gutted and now calls do_auth().", 
   "(setup_request_proxy_sspi_auth): renamed to ...", 
   "(svn_ra_serf__setup_request_proxy_sspi_auth): ... this. added missing", 
   "METHOD and URI params."
  ], 
  "revision_id": "876444"
 }, 
 {
  "author": "hwright", 
  "date": "2009-03-06T15:12:33.104621Z", 
  "msg": [
   "Resurrect r36358, which was reverted in r36362 for reasons invalid."
  ], 
  "revision_id": "876443"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-03-06T15:11:21.482069Z", 
  "msg": [
   "Revert path-test changed of r33424 to show that UNC path support", 
   "in the svn_path_*() functions is currently broken.", 
   "r33424 removed UNC path support from svn_uri_*() functions and", 
   "shouldn't have disabled it for svn_path_*().", 
   "* subversion/tests/libsvn_subr/path-test.c", 
   "(test_path_dirname, test_path_canonicalize, test_path_is_ancestor,", 
   "test_path_is_canonical): Re-enable old test values."
  ], 
  "revision_id": "876442"
 }, 
 {
  "author": "hwright", 
  "date": "2009-03-06T15:07:25.127305Z", 
  "msg": [
   "Make sure we stay internally consistent by inserting a new repository row", 
   "into the wc db if we encounter a repo we haven't seen before.", 
   "* subversion/libsvn_wc/wc-metadata.sql", 
   "(REPOSITORY): Create an index on the repos root.", 
   "* subversion/libsvn_wc/entries.c", 
   "(statements): When selecting the repository, condition upon the root, which", 
   "is guaranteed to be unique (unlike the uuid).", 
   "(entries_write_body): If the repo doesn't exist in the db, insert it."
  ], 
  "revision_id": "876441"
 }
]