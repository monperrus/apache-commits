[
 {
  "author": "stylesen", 
  "date": "2007-11-27T08:06:59.049674Z", 
  "msg": [
   "A follow-up to r28044.", 
   "* subversion/tests/cmdline/svndumpfilter_tests.py", 
   "(reflect_dropped_renumbered_revs): Remove unnecessary None argument passed", 
   "to load_and_verify_dumpstream() for *varargs.", 
   "Suggested by: dlr"
  ], 
  "revision_id": "868140"
 }, 
 {
  "author": "glasser", 
  "date": "2007-11-27T03:57:19.299534Z", 
  "msg": [
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c", 
   "(index_path_mergeinfo) Don't use a \"mergeinfo\" hash as a", 
   "\"mergeinfo_for_paths\" hash.  Just pass NULL for result and use the", 
   "\"cache\" argument to get your answer."
  ], 
  "revision_id": "868139"
 }, 
 {
  "author": "hwright", 
  "date": "2007-11-27T03:41:26.407712Z", 
  "msg": [
   "* STATUS: Note the backport branch for r25833, and also add notes about", 
   "r21596 to its description.  Move it back to nominated status."
  ], 
  "revision_id": "868138"
 }, 
 {
  "author": "hwright", 
  "date": "2007-11-27T03:37:47.154434Z", 
  "msg": [
   "Merge r25833 from trunk, and resolve conflicts.  This also pulls in relevant", 
   "portions of r21596."
  ], 
  "revision_id": "868137"
 }, 
 {
  "author": "glasser", 
  "date": "2007-11-27T02:41:28.089058Z", 
  "msg": [
   "In the spirit of r28059, make sure never to do a SELECT query that", 
   "could possibly return info about an uncommitted revision.", 
   "index_path_mergeinfo wants to find out about mergeinfo that is *older*", 
   "than the revision being committed (new_rev), so it should pass", 
   "new_rev-1 to get_mergeinfo_for_path.  (This shouldn't be a behavior", 
   "change, since any row with revision=new_rev was already deleted in", 
   "svn_fs_mergeinfo__update_index.)", 
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c", 
   "(index_path_mergeinfo): Query mergeinfo that is strictly older than", 
   "the mergeinfo we're inserting."
  ], 
  "revision_id": "868136"
 }
]