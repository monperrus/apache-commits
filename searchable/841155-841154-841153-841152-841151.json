[
 {
  "author": "cmpilato", 
  "date": "2002-01-28T01:29:24.541823Z", 
  "msg": [
   "Added usage message to output."
  ], 
  "revision_id": "841155"
 }, 
 {
  "author": "gstein", 
  "date": "2002-01-28T00:32:23.646372Z", 
  "msg": [
   "Turn svn_txdelta_window_t into a readonly structure, rather than a", 
   "dual purpose build/use structure.", 
   "* include/svn_delta.h (svn_txdelta_window_t {}): remove the ops_size", 
   "member. add 'const' to the 'ops' member. change new_data from a", 
   "buf into a 'const svn_string_t *'.", 
   "* libsvn_fs/reps-strings.c (window_handler): add 'const' to the 'op'", 
   "variable to deal with window->ops.", 
   "* mod_dav_svn/repos.c (dav_svn_write_stream): remove assignment of", 
   "ops_size and make 'data' an svn_string_t.", 
   "* tests/libsvn_delta/xml-output-test.c (main): add an 'op' variable", 
   "and set the operation info there, rather than using a dynamic", 
   "allocation. set up 'new_data' as an svn_string_t.", 
   "* libsvn_delta/delta.h (svn_txdelta__insert_op): change the WINDOW", 
   "parameter to BUILD_BATON. update docco.", 
   "(svn_txdelta__vdelta): change WINDOW param to BUILD_BATON", 
   "(svn_txdelta__make_window): removed.", 
   "* libsvn_delta/vdelta.c (vdelta): change WINDOW param to BUILD_BATON", 
   "(svn_txdelta__vdelta): change WINDOW param to BUILD_BATON.", 
   "* libsvn_delta/svndiff.c (window_handler): constify the 'op' variable.", 
   "(write_handler): construct the operations in a non-const 'ops'", 
   "variable, then assign into the window. add an svn_string_t local", 
   "to hold the new data.", 
   "* libsvn_delta/text_delta.c (struct build_ops_baton_t): new structure", 
   "to hold data while building the operations for a new window.", 
   "(make_window): renamed from svn_txdelta__make_window and made", 
   "static. add a build_ops_baton_t param for the op data to place", 
   "into the window.", 
   "(svn_txdelta__insert_op): change WINDOW param to BUILD_BATON. build", 
   "the operations stuff in the baton.", 
   "(svn_txdelta_next_window): initialize a build_ops_baton structure", 
   "for building the window. pass the new baton to svn_txdelta__vdelta", 
   "and make_window.", 
   "(apply_instructions): constify the 'op' variable to match window->ops.", 
   "(svn_txdelta_send_string): change window.new_data to point to a", 
   "local svn_string_t structure rather than the passed buf.", 
   "* libsvn_ra_dav/fetch.c (fetch_file_reader): change the new_data", 
   "construction to use an svn_string_t. remove ops_size assignment."
  ], 
  "revision_id": "841154"
 }, 
 {
  "author": "gstein", 
  "date": "2002-01-27T22:41:24.448207Z", 
  "msg": [
   "* subversion/clients/cmdline/main.c", 
   "(main): only check to see if there is anything special about", 
   "-F <filename> if the subcommand is commit.", 
   "Patch by: Sander Striker <striker@apache.org>"
  ], 
  "revision_id": "841153"
 }, 
 {
  "author": "gstein", 
  "date": "2002-01-27T14:00:34.338418Z", 
  "msg": [
   "Begin a bit of work on auto-generating .dsp files. Others can play and", 
   "poke at this now. (uncomment the call to t.write_dsp(); note the files", 
   "are called .dsp-test for now)", 
   "* gen-make.py (Target.find_sources): new method to find a Target's", 
   "sources and save them away.", 
   "(Target.write_dsp): new method to write out a .dsp file for the", 
   "Target.", 
   "(main): use the new find_sources() method and target_ob.sources. add", 
   "a loop to write out a .dsp file for each target.", 
   "* build/: new directory to hold config/build related stuff. a number", 
   "of things in our top-level and ac-helpers will migrate here.", 
   "* build/win32/: new directory for win32-specific build items", 
   "* build/win32/dll-template, exe-template: some templates for .dsp", 
   "files. the dll-template seems close. no way on the exe-template."
  ], 
  "revision_id": "841152"
 }, 
 {
  "author": "gstein", 
  "date": "2002-01-27T13:54:05.160136Z", 
  "msg": [
   "Clarify the lifetime issues around the svn_txdelta_window_t", 
   "structure. In some cases, it was created as a \"free standing\" object", 
   "in its own subpool and svn_txdelta_free_window() needed to be", 
   "called. Other times, it was a structure on the stack.", 
   "Now, it is clearer that the code creating the window is responsible", 
   "for cleaning it, and how they clean it. If svn_txdelta_next_window()", 
   "is used, then it is passed a pool, so the caller knows to clear the", 
   "pool to toss the window. If the caller constructs a window manually,", 
   "then they also know how to clean it up.", 
   "NOTE: this change may also dramatically fix our memory consumption. I", 
   "found that the vdelta hash tables were allocated in the stream's pool,", 
   "rather than for each window. I'm not positive what the resulting peak", 
   "was, but it appeared to be on the order of a pointer for each byte in", 
   "the source *and* target files that were being diff'd. (e.g. compare", 
   "two one megabyte files and you'd get 8 megabytes of pointer data).", 
   "Basically, the wrong pool was passed to svn_txdelta__vdelta().", 
   "* include/svn_delta.h (svn_txdelta_window_t): Removed the 'pool'", 
   "member field.", 
   "(svn_txdelta_next_window): take a POOL argument. update doc.", 
   "(svn_txdelta_free_window): removed", 
   "* libsvn_fs/reps_strings.c (svn_fs__rep_deltify): allocate a subpool", 
   "to contain the windows fetched via svn_txdelta_next_window. clear", 
   "on each loop.", 
   "* tests/libsvn_delta/vdelta-test.c (main): allocate a subpool to", 
   "contains the windows fetched via svn_txdelta_next_window. clear on", 
   "each loop.", 
   "* libsvn_delta/delta.h (svn_txdelta__insert_op): add a POOL argument.", 
   "* libsvn_delta/vdelta.c (vdelta): pass pool argument to the", 
   "svn_txdelta__insert_op() function for allocating space for the new", 
   "operation.", 
   "* libsvn_delta/svndiff.c (write_handler): allocate the window on the", 
   "stack, rather than on the heap. make the destruction of the", 
   "subpool explicit, rather than via svn_txdelta_free_window().", 
   "* libsvn_delta/text_delta.c (svn_txdelta__make_window): place the new", 
   "window directly into the pool passed, rather than into a new", 
   "subpool.", 
   "(svn_txdelta__insert_op): take a new POOL argument for allocations", 
   "related to the inserted operations.", 
   "(svn_txdelta_next_window): take a POOL argument for where to", 
   "allocate the new window (rather than via a subpool of the", 
   "stream->pool passed to make_window). create errors via this pool,", 
   "rather than the stream's pool. use this pool for computing vdeltas", 
   "instead of the stream pool(!!)", 
   "(svn_txdelta_free_window): remove", 
   "(svn_txdelta_send_string): remove assignment of the window's pool.", 
   "(svn_txdelta_send_txstream): use a subpool for storing the windows,", 
   "and clear on each iteration.", 
   "* libsvn_ra_dav/fetch.c (fetch_file_reader): remove assignment of the", 
   "window's pool."
  ], 
  "revision_id": "841151"
 }
]