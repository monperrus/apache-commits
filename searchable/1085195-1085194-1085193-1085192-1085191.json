[
 {
  "author": "stack", 
  "date": "2011-03-24T23:36:36.916416Z", 
  "msg": [
   "HBASE-3658 Alert when heap is over committed"
  ], 
  "revision_id": "1085195"
 }, 
 {
  "author": "struberg", 
  "date": "2011-03-24T23:33:58.995747Z", 
  "msg": [
   "upgrade to apache-parent-9"
  ], 
  "revision_id": "1085194"
 }, 
 {
  "author": "jm", 
  "date": "2011-03-24T23:28:23.518303Z", 
  "msg": [
   "auto-generated test rules"
  ], 
  "revision_id": "1085193"
 }, 
 {
  "author": "crossley", 
  "date": "2011-03-24T23:27:00.279445Z", 
  "msg": [
   "easyant updated status page.", 
   "easyant has a website.", 
   "mrunit updated status page."
  ], 
  "revision_id": "1085192"
 }, 
 {
  "author": "johnh", 
  "date": "2011-03-24T23:24:40.682834Z", 
  "msg": [
   "This CL removes JsHandler in favor of replacement processors:", 
   "1. GetJsContentProcessor, which formerly delegated to JsHandler. It now does", 
   "more clearly what it says: retrieves the raw JS content for the request. It", 
   "still uses the injected JsCompiler.getJsContent() to do so.", 
   "2. InjectConfigProcessor, which injects gadgets.config.init(...) calls.", 
   "3. CompilationProcessor, which actually performs compilation of JS.", 
   "4. JsWrapperProcessor, which wraps JS in an anonymous function closure (vs. the", 
   "compiler impl itself doing so).", 
   "The purpose of the CL is to move to a less-monolithic processing model, as well", 
   "as to complete the move to a situation where compiled/optimized JS is exactly", 
   "equivalent to debug JS, only compiled (no additional injection/processing).", 
   "Small bits of cleanup work remain after this CL, as it means there will no", 
   "longer be a strong reason for hard-coded JS injection (eg. JsInfo) to be obscure", 
   "in representation on input."
  ], 
  "revision_id": "1085191"
 }
]