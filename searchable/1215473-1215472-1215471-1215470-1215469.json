[
 {
  "author": "nilgun", 
  "date": "2011-12-17T12:06:39.876744Z", 
  "msg": [
   "New Turkish translation", 
   "Translated by: Nilg\u00fcn Belma Bug\u00fcner <nilgun belgeler.org>", 
   "Reviewed by:  Orhan berent <berent belgeler.org>"
  ], 
  "revision_id": "1215473"
 }, 
 {
  "author": "stefan2", 
  "date": "2011-12-17T12:05:37.758712Z", 
  "msg": [
   "On file_handle_cache branch:", 
   "Switch mutex handling in file handle cache to svn_mutex_* API.", 
   "* subversion/libsvn_subr/svn_file_handle_cache.c", 
   "adapt #includes", 
   "(svn_file_handle_cache_t): use svn_mutex__t instead of conditional", 
   "apr_thread_mutex_t", 
   "(lock_cache, unlock_cache): drop", 
   "(svn_file_handle_cache__open_internal): new, contains the logic part", 
   "of the former svn_file_handle_cache__open function", 
   "(svn_file_handle_cache__open): sync'ing front-end to previous function", 
   "(svn_file_handle_cache__close_internal): new, contains the cache access", 
   "part of the former svn_file_handle_cache__close function", 
   "(svn_file_handle_cache__close): remainder, calling the previous function", 
   "(svn_file_handle_cache__flush_internal): new, contains the logic part", 
   "of the former svn_file_handle_cache__flush function", 
   "(svn_file_handle_cache__flush): sync'ing front-end to previous function", 
   "(svn_file_handle_cache__create_cache): use svn_mutex_* API"
  ], 
  "revision_id": "1215472"
 }, 
 {
  "author": "nilgun", 
  "date": "2011-12-17T12:05:20.052634Z", 
  "msg": [
   "update for sync with English docs.", 
   "Translated by: Nilg\u00fcn Belma Bug\u00fcner <nilgun belgeler.org>", 
   "Reviewed by:  Orhan Berent <berent belgeler.org>"
  ], 
  "revision_id": "1215471"
 }, 
 {
  "author": "xiaming", 
  "date": "2011-12-17T12:04:34.310772Z", 
  "msg": [
   "Default assembly is tomcat now, so exclude test-jetty"
  ], 
  "revision_id": "1215470"
 }, 
 {
  "author": "davsclaus", 
  "date": "2011-12-17T11:52:29.576995Z", 
  "msg": [
   "CAMEL-4786: Add sized scheduled thread pool to ensure scheduled thread pools do not eat up memory as the JDK pools is unbounded. Fixed throttler and delayer to use thread pool profile so end user can customize core pool size with these EIPs."
  ], 
  "revision_id": "1215469"
 }
]