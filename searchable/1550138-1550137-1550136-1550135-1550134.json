[
 {
  "author": "andy", 
  "date": "2013-12-11T13:50:47.357432Z", 
  "msg": [
   "Change SNAPSHOT version to next release version."
  ], 
  "revision_id": "1550138"
 }, 
 {
  "author": "ay", 
  "date": "2013-12-11T13:50:10.078804Z", 
  "msg": [
   "add systest for CXF-5405"
  ], 
  "revision_id": "1550137"
 }, 
 {
  "author": "reschke", 
  "date": "2013-12-11T13:47:29.032755Z", 
  "msg": [
   "OAK-1266 - work in progress SQL/JDBC DocumentStore implementation - re-enable table clearing for now"
  ], 
  "revision_id": "1550136"
 }, 
 {
  "author": "dag", 
  "date": "2013-12-11T13:39:52.952698Z", 
  "msg": [
   "DERBY-6419 Make BTree scan honor OPENMODE_LOCK_NOWAIT for row locks", 
   "Patch derby-6419-1 introduces a mode to avoid waiting for row locks in", 
   "BTeee scans.  Using the debugger I can see that the current wait in", 
   "ConstraintCharactericsTest#testLocking, line 417 as of svn 1545394 is", 
   "no longer waiting with the patch, and stepping through the code in", 
   "IndexChanger I can see that the second next() which currently waits", 
   "returns immediately with an exception as desired.", 
   "Instead of overloading the current flag OPENMODE_LOCK_NOWAIT, I", 
   "introduced a new flag OPENMODE_LOCK_ROW_NOWAIT instead. The short", 
   "circuiting logic was added in B2IRowLocking3#LockRowOnPage: I had to", 
   "added an accessor to HeapController to get at the open_mode of the", 
   "base table's conglomerate; not sure if that's kosher or not. An", 
   "alternative could be to keep to flag in the B2IForwardScan object."
  ], 
  "revision_id": "1550135"
 }, 
 {
  "author": "markg", 
  "date": "2013-12-11T13:37:36.230255Z", 
  "msg": [
   "OPENNLP-607", 
   "Fixed many issues. Added default file-based impls for all interfaces, and created a util class wrapper to allow for easy use of the default implementations."
  ], 
  "revision_id": "1550134"
 }
]