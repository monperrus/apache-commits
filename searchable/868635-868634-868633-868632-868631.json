[
 {
  "author": "kameshj", 
  "date": "2007-12-19T16:11:43.138485Z", 
  "msg": [
   "On the issue-2897 branch:", 
   "Implement 'extract and apply non-reflective changes' from a reflective", 
   "revision.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__remaining_range_info_t): New type to hold the merge range slice", 
   "and corresponding reflected_ranges that this merge range slice reflects.", 
   "(svn_client__merge_path_t): Update the doc for 'remaining_ranges' member.", 
   "* subversion/libsvn_client/repos_diff.c", 
   "(delete_entry): Don't populate eb->deleted_paths if the deleted path is", 
   "purely reflective.", 
   "(add_directory): Don't notify if added directory is purely reflective.", 
   "(close_file): Don't notify if modified file changes is purely reflective.", 
   "* subversion/libsvn_client/merge.c", 
   "(merge_cmd_baton_t): Add 'target_ra_session' corresponding to url of the", 
   "target working copy. Add 'reflected_ranges' corresponding to current", 
   "reflective merge. Both this members are used only by reflective merge", 
   "callbacks.", 
   "(get_file_from_ra, merge_reflected_ranges_b4_reflecting,", 
   "reflective_merge_file_changed, reflective_merge_file_added,", 
   "reflective_merge_file_deleted, reflective_merge_dir_added,", 
   "reflective_merge_dir_deleted): New function.", 
   "(reflective_merge_callbacks): New callback struct holding functions to", 
   "handle reflective merges.", 
   "(notification_receiver, populate_remaining_ranges,", 
   "get_most_inclusive_start_rev, get_youngest_end_rev, slice_remaining_ranges,", 
   "remove_first_range_from_remaining_ranges, do_file_merge):", 
   "Fix the code to reflect the fact 'remaining_ranges' is an array of", 
   "'svn_client__remaining_range_info_t *' rather than 'svn_merge_range_t *'.", 
   "(filter_merged_revisions): Parameter name change from 'remaining_ranges' ->", 
   "'ranges_to_merge' to avoid the confusion with new meaning of", 
   "remaining_ranges (array of svn_client__remaining_range_info_t *).", 
   "(filter_reflected_revisions): Filter the reflective revisions from the", 
   "requested merge ranges. Change the signature to output the 1-1 corresponding", 
   "reflective_rangelist and reflected_ranges_list.", 
   "(calculate_remaining_ranges): Populate remaining_ranges as a list of", 
   "'svn_client__remaining_range_info_t *'. Fix calls to", 
   "'filter_reflected_revisions' as per its new signature.", 
   "(drive_merge_report_editor): Remove parameter 'callbacks'. Fix the code to", 
   "reflect the fact 'remaining_ranges' is an array of", 
   "'svn_client__remaining_range_info_t *' rather than 'svn_merge_range_t *'.", 
   "Deduce the reflective merge and invoke with 'reflective_merge_callbacks'", 
   "as callbacks.", 
   "(do_directory_merge):", 
   "Fix the code to reflect the fact 'remaining_ranges' is an array of", 
   "'svn_client__remaining_range_info_t *' rather than 'svn_merge_range_t *'.", 
   "Update the call to 'drive_merge_report_editor' as per the new signature.", 
   "(do_merge): Initialize 'merge_cmd_baton.reflected_ranges' to NULL.", 
   "Open a merge_cmd_baton.target_ra_session to target's url.", 
   "* subversion/tests/cmdline/merge_tests.py", 
   "(test_list): Remove XFail markers from", 
   "'merge_non_reflective_changes_from_reflective_rev',", 
   "'merge_non_reflective_text_and_prop_change'", 
   "'merge_non_reflective_with_conflict'."
  ], 
  "revision_id": "868635"
 }, 
 {
  "author": "cmpilato", 
  "date": "2007-12-19T15:47:01.490620Z", 
  "msg": [
   "Combine two helper functions (one to check that a filesystem is", 
   "opened, one to check that it isn't) into a single one that does both", 
   "based on a boolean expectation flag.", 
   "NOTE: This changes the test when 'expect_open' is set to examine", 
   "svn_fs_t->fsap_data instead of svn_fs_t->path (since that's what", 
   "is checked when 'expect_open' is not set, too).  I think that's", 
   "fine, but wanted to note that here anyway just in case it rings", 
   "some alarm in another developer's mind.", 
   "* subversion/include/private/svn_fs_util.h,", 
   "* subversion/libsvn_fs_util/fs-util.c", 
   "(svn_fs__check_fs): Add 'expect_open' flag.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(check_already_open): Removed as unused.", 
   "(base_bdb_set_errcall): Update call to svn_fs__check_fs().", 
   "(open_databases): Use svn_fs__check_fs() instead of check_already_open().", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(check_already_open): Removed as unused.", 
   "(fs_create): Use svn_fs__check_fs() instead of check_already_open().", 
   "* subversion/libsvn_fs_base/tree.c,", 
   "* subversion/libsvn_fs_base/bdb/rev-table.c,", 
   "* subversion/libsvn_fs_base/uuid.c,", 
   "* subversion/libsvn_fs_base/revs-txns.c,", 
   "* subversion/libsvn_fs_base/lock.c,", 
   "* subversion/libsvn_fs_fs/tree.c,", 
   "* subversion/libsvn_fs_fs/fs_fs.c,", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "Update call calls to svn_fs__check_fs(), passing TRUE for 'expect_open'."
  ], 
  "revision_id": "868634"
 }, 
 {
  "author": "blair", 
  "date": "2007-12-19T15:37:34.741757Z", 
  "msg": [
   "Update all references to SQLite from 3.5.3 to 3.5.4.", 
   "* configure.ac,", 
   "* INSTALL:", 
   "s/3.5.3/3.5.4/g."
  ], 
  "revision_id": "868633"
 }, 
 {
  "author": "cmpilato", 
  "date": "2007-12-19T15:19:31.350394Z", 
  "msg": [
   "Fix issue #2549 by squelching an innocuous not-a-directory error.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(svn_fs_fs__check_path): Squelch not-a-directory errors raised when", 
   "checking for a path with parent component that isn't a directory.", 
   "This is on par with how our client side svn_io_check_path()", 
   "function behaves.", 
   "* subversion/libsvn_fs_base/tree.c", 
   "(base_check_path, txn_body_closest_copy): Squelch not-a-directory", 
   "errors raised when checking for a path with parent component that", 
   "isn't a directory."
  ], 
  "revision_id": "868632"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-12-19T15:10:01.916378Z", 
  "msg": [
   "On the issue-2897 branch:", 
   "Fix avoid_reflected_revs's expectation as per new 'merge non-reflective", 
   "changes'.", 
   "* subversion/tests/cmdline/merge_tests.py", 
   "(avoid_reflected_revs):  Fix the expectation to consider the fact that we", 
   "should merge the svn:mergeinfo from a reflective revision. Run the merge", 
   "with dry_run=False mode as the merges in multiple passes can change the", 
   "directory twice and hence can lead to different output between dry-run and", 
   "actual run."
  ], 
  "revision_id": "868631"
 }
]