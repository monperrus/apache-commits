[
 {
  "author": "ylavic", 
  "date": "2015-03-19T23:51:03.924695Z", 
  "msg": [
   "Follow up to r1667900: fix comments."
  ], 
  "revision_id": "1667903"
 }, 
 {
  "author": "kiwiwings", 
  "date": "2015-03-19T23:44:23.636278Z", 
  "msg": [
   "Snapshot commit - still lots of errors, xslf rendering works, started work on hslf"
  ], 
  "revision_id": "1667902"
 }, 
 {
  "author": "ylavic", 
  "date": "2015-03-19T23:40:51.875965Z", 
  "msg": [
   "Follow up to r1667900: revert spurious change on test/abts_tests.h."
  ], 
  "revision_id": "1667901"
 }, 
 {
  "author": "ylavic", 
  "date": "2015-03-19T23:38:38.354885Z", 
  "msg": [
   "locks: introduce apr_{thread,proc,global}_mutex_timedlock().", 
   "For proc mutexes, the new mechanism APR_LOCK_DEFAULT_TIMED usable at creation time", 
   "allows for the best mechanism to be elected (unixes: 1 to 3, or specific: 4 to 7):", 
   "1. PROC_PTHREAD if pthread_mutex_timedlock() and pthread_mutex_set_robust_np()", 
   "are both available,", 
   "2. SYSV if semtimedop() is availale,", 
   "3. POSIXSEM if sem_timedwait() is available,", 
   "4. BeOS' acquire_sem_etc() if available,", 
   "5. NetWare falls back to apr_thread_mutex_timedlock() as for others functions,", 
   "6. OS2's DosRequestMutexSem(),", 
   "7. Windows' WaitForSingleObject().", 
   "Otherwise (like when fcntl and flock only are availble, if that's ever possible),", 
   "APR_ENOTIMPL is returned.", 
   "For thread mutexes, the new flag APR_THREAD_MUTEX_TIMED, usable at create()", 
   "time still, allows to switch to an implementation using a condition variable", 
   "and apr_thread_cond_timedwait() when if no native mechanism is available (eg.", 
   "NetWare, pthreads but without pthread_mutex_timedlock() available).", 
   "On windows, this initializes a WaitForSingleObject()able handle (Mutex) instead", 
   "of the fastest (but not timeout-able) CRITICAL_SECTION used by default.", 
   "All apr_{thread,proc,global}_mutex_timedlock() functions can take a relative or", 
   "absolute time, thanks to the last (boolean) argument.", 
   "Test suite updated accordingly."
  ], 
  "revision_id": "1667900"
 }, 
 {
  "author": "desruisseaux", 
  "date": "2015-03-19T23:32:35.134896Z", 
  "msg": [
   "Matrix update before to port first map projections:", 
   "- Moved normalizeColumns() in the super-class for saving place (maybe at a slight performance cost) since this method is rarely used.", 
   "- Moved equals() and hashCode() in the super-class for saving place in Matrix3 and Matrix4, since we rarely put matrices in a HashMap.", 
   "- Initial version of a 'concatenateAffine' method, to be needed by map projection constructors."
  ], 
  "revision_id": "1667899"
 }
]