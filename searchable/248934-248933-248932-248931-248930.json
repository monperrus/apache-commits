[
 {
  "author": "jmsnell", 
  "date": "2003-02-28T01:01:56.000000Z", 
  "msg": [
   "Final Fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=14137", 
   "Made a change to the JavaUtils XML-to-Java name mapping so that", 
   "underscore characters are not treated as punctuation or word breaks."
  ], 
  "revision_id": "248934"
 }, 
 {
  "author": "jmsnell", 
  "date": "2003-02-28T00:36:09.000000Z", 
  "msg": [
   "Partial Fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=14137", 
   "Changed JavaBeanWriter so that all local variables are prefixed with", 
   "an underscore.  This is required to avoid name collisions that occur", 
   "when schema elements use java keywords for their names."
  ], 
  "revision_id": "248933"
 }, 
 {
  "author": "jmsnell", 
  "date": "2003-02-28T00:32:22.000000Z", 
  "msg": [
   "Partial Fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=14137", 
   "Changed JavaBeanWriter so that all local variables are prefixed with", 
   "an underscore.  This is required to avoid name collisions that occur", 
   "when schema elements use java keywords for their names."
  ], 
  "revision_id": "248932"
 }, 
 {
  "author": "jmsnell", 
  "date": "2003-02-27T23:13:19.000000Z", 
  "msg": [
   "Partial FIX http://nagoya.apache.org/bugzilla/show_bug.cgi?id=12935", 
   "A collision error would occur when an anonymous type was named", 
   "the same as a top level type because of the way the filename and", 
   "typename was generated."
  ], 
  "revision_id": "248931"
 }, 
 {
  "author": "jmsnell", 
  "date": "2003-02-27T21:12:10.000000Z", 
  "msg": [
   "FIX http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16519", 
   "Added checks", 
   "1. If we get an array when we're not expecting it,", 
   "no match unless we're expecting a generic Object", 
   "if (!sigType.isArray() && value.getClass().isArray() &&", 
   "!sigType.equals(Object.class)) {", 
   "match = false;", 
   "}", 
   "2. If we're expecting an array and don't get one and we're not using a LITERAL style, no match.  If we're using LITERAL, fall through and see if we get an appropriate match later.", 
   "if (operation.getUse() == Use.ENCODED &&", 
   "sigType.isArray() &&", 
   "!value.getClass().isArray()) {", 
   "match = false;", 
   "}"
  ], 
  "revision_id": "248930"
 }
]