[
 {
  "author": "rhuijben", 
  "date": "2009-09-08T13:03:40.462486Z", 
  "msg": [
   "Remove a few more access batons by revving svn_wc_copy2 and its", 
   "less visible cousing svn_wc_add_repos_file3.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_copy3): New function", 
   "(svn_wc_copy2): Deprecate function.", 
   "(svn_wc_add_repos_file4): New function.", 
   "(svn_wc_add_repos_file3): Deprecate function.", 
   "* subversion/libsvn_wc/copy.c", 
   "(copy_added_file_administratively): Take absolute paths and context.", 
   "and use these to call svn_wc_add4.", 
   "(copy_added_dir_administratively, copy_file_administratively):", 
   "Take absolute paths and context.", 
   "(copy_dir_administratively): Take absolute paths and context.", 
   "(svn_wc_copy2): Renamed to ...", 
   "(svn_wc_copy3): ... this. Take absolute paths and context. Retrieve", 
   "access batons to do the real work. But use access batons in the", 
   "shared context instead of an independent baton.", 
   "* subversion/libsvn_wc/deprecated.c", 
   "(svn_wc_add_repos_file3): New function, wrapping svn_wc_add_repos_file2.", 
   "(svn_wc_copy2): New function, wrapping svn_wc_copy3.", 
   "* subversion/libsvn_wc/lock.c", 
   "(svn_wc__temp_get_relpath): New function.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(svn_wc_add_repos_file2): Rename to ...", 
   "(svn_wc_add_repos_file3): ... this and accept an absolute path and context.", 
   "Retrieve relative path to use for loggy property code that doesn't accept", 
   "absolute paths yet.", 
   "* subversion/libsvn_wc/wc.h", 
   "(svn_wc__temp_get_relpath): New temporary helper function. Should be", 
   "unnecessary before 1.7 releases."
  ], 
  "revision_id": "879260"
 }, 
 {
  "author": "sbutler", 
  "date": "2009-09-08T12:54:57.477441Z", 
  "msg": [
   "On the 1.6.x branch:", 
   "* STATUS: Minor corrections to the description of the r38000 group."
  ], 
  "revision_id": "879259"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-09-08T08:41:52.522749Z", 
  "msg": [
   "Add a notification on removing an external reference from version control.", 
   "This notification allows third party clients like AnkhSVN to update their", 
   "status cache.", 
   "Strangely this change doesn't trigger any test failures.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_notify_action_t): Add notification type.", 
   "* subversion/libsvn_client/externals.c", 
   "(handle_external_item_change): Send notification on unversioning an", 
   "external.", 
   "* subversion/svn/notify.c", 
   "(notify): Handle svn_wc_notify_update_external_removed as if it were a", 
   "svn_wc_notify_update_delete."
  ], 
  "revision_id": "879258"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-09-08T08:33:50.159144Z", 
  "msg": [
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add4): Following up on r39182, fix the recalculation of path", 
   "to work correctly for more types of relative paths.", 
   "Found by: gstein"
  ], 
  "revision_id": "879257"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-09-08T07:57:49.498133Z", 
  "msg": [
   "Deprecate svn_wc_add3 for a new version that accepts a context and", 
   "abspath. The implementation is very entry specific, so don't switch", 
   "that right now, but allow updating callers.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_add4): New function.", 
   "(svn_wc_add3): Deprecate.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add3): Rename to ...", 
   "(svn_wc_add4): ... this and retrieve the access batons, and relative", 
   "paths to keep the current implementation.", 
   "* subversion/libsvn_wc/deprecated.c", 
   "(svn_wc_add3): New function. Open access for caller if there is none", 
   "in the shared set."
  ], 
  "revision_id": "879256"
 }
]