[
 {
  "author": "brane", 
  "date": "2013-03-14T05:30:04.162975Z", 
  "msg": [
   "Fix a silly bug in the JavaHL native implementation of DiffOptions.", 
   "[in subversion/bindings/javahl/native]", 
   "* DiffOptions.cpp (get_diff_options_flags): Actually store the retreived", 
   "field ID of the DiffOptions.flags Java class member.", 
   "Don't make assumptions about types -- use jint instead of int.", 
   "* DiffOptions.h, DiffOptions.cpp (DiffOptions):", 
   "Don't make assumptions about types -- use jint instead of int.", 
   "[in subversion/bindings/javahl/tests/org/apache/subversion/javahl]", 
   "* BasicTests.java (BasicTests.testDiffOptions):", 
   "Enable a previoiusly failing hunk of test.", 
   "[in subversion/bindings/javahl/src/org/apache/subversion/javahl]", 
   "* types/DiffOptions.java: Add missing trailing newline."
  ], 
  "revision_id": "1456328"
 }, 
 {
  "author": "crossley", 
  "date": "2013-03-14T05:28:49.099195Z", 
  "msg": [
   "Follow breaking links."
  ], 
  "revision_id": "1456327"
 }, 
 {
  "author": "mahadev", 
  "date": "2013-03-14T05:24:46.559956Z", 
  "msg": [
   "Fix release issues"
  ], 
  "revision_id": "1456326"
 }, 
 {
  "author": "sdeboy", 
  "date": "2013-03-14T05:14:38.810206Z", 
  "msg": [
   "Implementing LOG4J2-155: add getFormat to Layout", 
   "Advertiser implementations are now a 'Core' type with an 'advertiser' elementType.", 
   "Updated XMLConfiguration and JSONConfiguration to resolve the 'advertiser' attribute on the configuration element via the plugin mechanism", 
   "The test in-memory advertiser is now defined as 'memory' in the test xml config, and the multicast DNS implementation can be defined as 'multicastdns'", 
   "Also updated the packages definition on the log4j-advertiser.xml to include the 'core' package, as the in-memory advertiser is in the 'core' package hierarchy (depended on the fix for LOG4J2-175)"
  ], 
  "revision_id": "1456325"
 }, 
 {
  "author": "sdeboy", 
  "date": "2013-03-14T05:10:42.715309Z", 
  "msg": [
   "Implementing LOG4J2-175: Plugin cache should be reset when addPackages is called", 
   "- updated PluginManager#addPackage to reset the pluginTypeMap if a package was added, causing calls to PluginManager#collectPlugins to retrieve plugins instead of use the pluginTypeMap cache", 
   "- updated BaseConfiguration - removed pluginManager member, changed getPluginManager to construct a new 'Core' instance and call collectPlugins on that instance prior to returning", 
   "Resolves the issue where a packages definition on the configuration would not have any effect due to cached plugins and a cached pluginmanager in the configuration"
  ], 
  "revision_id": "1456324"
 }
]