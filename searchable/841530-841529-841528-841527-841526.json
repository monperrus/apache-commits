[
 {
  "author": "gstein", 
  "date": "2002-03-07T22:08:22.359840Z", 
  "msg": [
   "Update the compose_editor and wrap_editor functions (and its", 
   "underlying editor) to operate on new-style editors. The change in the", 
   "type ripples up and through most of the client.", 
   "* include/svn_client.h (svn_client_checkout, svn_client_update,", 
   "svn_client_switch, svn_client_import, svn_client_commit,", 
   "svn_client_copy): change the BEFORE_EDITOR and AFTER_EDITOR", 
   "parameters from the old- to the new-style editor type.", 
   "* include/svn_delta.h", 
   "(svn_delta_compose_editors): renamed back from the", 
   "svn_delta_compose_old_editors (i.e. undoing Mike's change). it now", 
   "takes new-style editor params. change all callers.", 
   "(svn_delta_wrap_editor): renamed back from from", 
   "svn_delta_wrap_editor. it now takes new-style editor params.", 
   "change all callers.", 
   "* include/svn_ra.h (get_commit_editor vtable func): return a new-style", 
   "editor.", 
   "* libsvn_ra_local/ra_plugin.c (get_commit_editor): return a new-style", 
   "editor rather than a compat-wrapped editor.", 
   "* libsvn_client/delete.c (svn_client_delete): compat-wrap the", 
   "new-style commit editor from RA", 
   "* libsvn_client/add.c (svn_client_add): compat-wrap the new-style", 
   "commit editor from RA", 
   "* libsvn_client/client.h (svn_client__checkout_internal,", 
   "svn_client__update_internal): update BEFORE_EDITOR and", 
   "AFTER_EDITOR parameters to take new-style editors.", 
   "* libsvn_delta/compose_editors.c", 
   "(struct edit_baton): change sub-editors' types to new style", 
   "(struct file_baton): record the file pool", 
   "(struct handler_pair): don't store the file_baton", 
   "(open_root): take a directory pool, allocate the baton in it, and", 
   "pass the pool to the sub-editors", 
   "(delete_entry): take a path (rather than a name), a pool, and pass", 
   "them the sub-editors.", 
   "(add_directory, open_directory, add_file, open_file): take a path,", 
   "a pool, allocate the baton in that pool, and pass the mess to", 
   "the sub-editors", 
   "(window_handler): don't invoke a sub-editor if its handler is null", 
   "(apply_textdelta): don't construct a baton unless one or both of", 
   "the sub-editor's handlers is non-NULL. if both are NULL, then", 
   "also return NULL.", 
   "(change_file_prop, change_dir_prop): change the types for NAME and", 
   "VALUE paremeters, take a pool, and pass them to the sub-editors.", 
   "(svn_delta_compose_editors): renamed from", 
   "svn_delta_compose_old_editors, and change the types of the", 
   "params to be new-style editors.", 
   "(svn_delta_wrap_editor): renamed from svn_delta_wrap_old_editor", 
   "and change the types of the parameters to be new-style editors.", 
   "* libsvn_ra_dav/ra_dav.h (svn_ra_dav__get_commit_editor): change the", 
   "declaration to return a new-style editor.", 
   "* libsvn_ra_dav/commit.c (svn_ra_dav__get_commit_editor): change the", 
   "parameter type and monkey the internal work to remove all", 
   "compat-wrapping of the editors.", 
   "For the following, take new-style editors for the BEFORE_EDITOR and", 
   "AFTER_EDITOR parameters. Adjust some editor compositions and compat", 
   "wrapping as appropriate.", 
   "* libsvn_client/switch.c (svn_client_switch)", 
   "* libsvn_client/checkout.c (svn_client_checkout)", 
   "* libsvn_client/copy.c (repos_to_repos_copy, wc_to_repos_copy,", 
   "repos_to_wc_copy, setup_copy, svn_client_copy)", 
   "* libsvn_client/apply_edits.c (apply_delta, do_edits,", 
   "svn_client__checkout_inernal, svn_client__update_internal)", 
   "* libsvn_client/update.c (svn_client_update)", 
   "* libsvn_client/commit.c (svn_client_commit, svn_client_import,", 
   "send_to_repos)", 
   "For the following, we stop compat-wrapping the trace editor, and just", 
   "pass it directly to the libsvn_client function.", 
   "* clients/cmdline/checkout-cmd.c (svn_cl__checkout)", 
   "* clients/cmdline/copy-cmd.c (svn_cl__copy)", 
   "* clients/cmdline/update-cmd.c (svn_cl__update)", 
   "* clients/cmdline/commit-cmd.c (svn_cl__commit)", 
   "* clients/cmdline/switch-cmd.c (svn_cl__switch)", 
   "* clients/cmdline/import-cmd.c (svn_cl__import)"
  ], 
  "revision_id": "841530"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-03-07T20:43:52.574858Z", 
  "msg": [
   "* subversion/libsvn_fs/tree.c (open_path): Free ephemeral error."
  ], 
  "revision_id": "841529"
 }, 
 {
  "author": "sussman", 
  "date": "2002-03-07T20:17:52.787826Z", 
  "msg": [
   "Our commit-driver sends \"postfix\" textdeltas, so that the server can", 
   "reject any conflicts as early as possible.  However, with really large", 
   "commits, this means 90% of the commit-time is spent after all the", 
   "\"Sending\" lines have already been printed out.  The user just sits", 
   "there, wondering what's going on while txdeltas are sent.", 
   "This change makes the trace-commit editor print feedback as it sends", 
   "txdeltas.", 
   "* trace-commit.c (struct edit_baton): new 'started_sending_txdeltas'", 
   "boolean.", 
   "(apply_textdelta): use boolean to inform user that postfix txdeltas", 
   "have begun: \"Transmitting file data ...\"  Print a '.' after each", 
   "file's contents have been sent.", 
   "(close_edit):  print final '\\n' after the dots.", 
   "(svn_cl__get_trace_commit_editor): initialize boolean, use", 
   "apply_textdelta.", 
   "* actions.py (run_and_verify_commit):  make python tests ignore the", 
   "penultimate \"Transmitting file data ...\" line, if present at all.", 
   "Unrelated:", 
   "* Makefile.in (check): print 'success' instead of 'SUCCESS', so that", 
   "'FAILURE' stands out more in the list produced by 'make check'.  :-)", 
   "* CHANGES:  add more M10 changes."
  ], 
  "revision_id": "841528"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-03-07T19:12:44.025186Z", 
  "msg": [
   "* subversion/libsvn_ra_local/commit_editor.c", 
   "(struct file_baton): Remove friggin' parent baton.", 
   "(add_file, open_file): There is no parent in the file baton anymore.", 
   "(change_file_prop): Use the edit_baton directly since the parent", 
   "baton might be ... oh ... invalid at this point."
  ], 
  "revision_id": "841527"
 }, 
 {
  "author": "gstein", 
  "date": "2002-03-07T16:19:36.697212Z", 
  "msg": [
   "Change internals of compose_editor over to use SVN_ERR; this", 
   "simplifies some upcoming changes.", 
   "* compose_editor", 
   "(struct dir_baton): the parent_dir_baton is no longer needed.", 
   "(struct file_baton); add the edit baton. remove dir_baton. change", 
   "all users of fb->dir_baton->edit_baton to do fb->edit_baton.", 
   "(set_target_revision, delete_entry, close_directory, close_file,", 
   "close_edit, abort_edit, window_handler, apply_textdelta,", 
   "change_file_prop, change_dir_prop):", 
   "use SVN_ERR() rather than if/return idioms.", 
   "(open_root, add_directory, open_directory): remove assignment of the", 
   "parent_dir_baton.", 
   "(add_file, open_file): remove assignment of dir_baton, add", 
   "edit_baton."
  ], 
  "revision_id": "841526"
 }
]