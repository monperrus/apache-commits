[
 {
  "author": "santiagopg", 
  "date": "2004-01-20T20:08:40.000000Z", 
  "msg": [
   "XSLT->Java and Java->XSLT conversion table revisited. I made sure that two internal types corresponding to the same XSLT type had identical conversion rules (e.g. IntType and RealType). The multi-step conversions NodeSetType->int and ResultTreeType->double have been eliminated in order to simplify the table (they can always by implemented externally). The resulting conversion table is still not identical to the interpreter (and perhaps it will never be) so it should be documented separately.", 
   "Parameters", 
   "----------------------------------------------------------------", 
   "XSLT type       Java Type", 
   "boolean        boolean, java.lang.Boolean, java.lang.Object", 
   "number         double, java.lang.Double, float, long,", 
   "java.lang.Integer, int, short, byte, char,", 
   "java.lang.Object", 
   "string         java.lang.String, java.lang.Object", 
   "node-set       org.w3c.NodeList, org.w3c.Node, java.lang.Object,", 
   "java.lang.String", 
   "result-tree    org.w3c.NodeList, org.w3c.Node, java.lang.Object,", 
   "java.lang.String", 
   "Return type", 
   "---------------------------------------------------------------", 
   "boolean           boolean", 
   "void              (ignored)", 
   "char, byte,", 
   "short, int,", 
   "long, float,", 
   "double            number", 
   "java.lang.String  string", 
   "For parameters, the order on the right column of the table is significant --following the convention already in used in the docs."
  ], 
  "revision_id": "337824"
 }, 
 {
  "author": "minchau", 
  "date": "2004-01-15T16:09:32.000000Z", 
  "msg": [
   "PR: 26169", 
   "Submitted by:\tBrian Minchau", 
   "Flushed serialier before emitting trace event in ElemeTextLiteral and", 
   "ElemLiteralResult."
  ], 
  "revision_id": "337823"
 }, 
 {
  "author": "santiagopg", 
  "date": "2004-01-14T20:23:08.000000Z", 
  "msg": [
   "Removing unused constant."
  ], 
  "revision_id": "337822"
 }, 
 {
  "author": "santiagopg", 
  "date": "2004-01-14T20:20:04.000000Z", 
  "msg": [
   "Committing a patch from Bhakti Mehta (Bhakti.Mehta@sun.com). ForwardPositionIterators and ForwardPositionExprs are not needed anymore after the intergration with DTM. Despite that, ForwardPositionIterators were still being used even though they did not provide any additional functionally (they were basically identity iterators). This patch eliminates the need for these iterators (and the corresponding compile-time expressions) and also replaces calls to BasisLibrary.positionF() with calls to currentIterator.getPosition(). The resulting code should be smaller and faster."
  ], 
  "revision_id": "337821"
 }, 
 {
  "author": "santiagopg", 
  "date": "2004-01-13T16:03:10.000000Z", 
  "msg": [
   "Fix for Bugzilla 25924 by Bhakti Mehta (Bhakti.Mehta@sun.com). Variable _lastNext must be preserved in setMark() and restored in gotoMark()."
  ], 
  "revision_id": "337820"
 }
]