[
 {
  "author": "jkesselm", 
  "date": "2001-04-14T02:37:10.000000Z", 
  "msg": [
   "First draft of wrapping a CoroutineParser around a normal SAX stream.", 
   "Good illustration of why coroutines are a useful concept -- they allow", 
   "pausing the parse thread at an arbitrary location deep in the call stack,", 
   "if that happens to be the best time at which to yield control."
  ], 
  "revision_id": "334604"
 }, 
 {
  "author": "jkesselm", 
  "date": "2001-04-13T21:43:25.000000Z", 
  "msg": [
   "Abstracting the CoroutineParser to an interface. May wind up with a CoroutineSAXParser layer as well.", 
   "One initial implementation, demonstrating the Xerces parseSome() approach;", 
   "Need to do an equivalent for pure SAX; that will be messier.", 
   "Still need to abstract CoroutineManager as well."
  ], 
  "revision_id": "334603"
 }, 
 {
  "author": "jkesselm", 
  "date": "2001-04-13T16:03:27.000000Z", 
  "msg": [
   "First draft of a coroutine control for Xerces incremental parsing -- thanks to Glenn Marcy"
  ], 
  "revision_id": "334602"
 }, 
 {
  "author": "jkesselm", 
  "date": "2001-04-13T16:02:14.000000Z", 
  "msg": [
   "Missed a \"public\". Oops"
  ], 
  "revision_id": "334601"
 }, 
 {
  "author": "sboag", 
  "date": "2001-04-13T14:46:23.000000Z", 
  "msg": [
   "In progress check-in, so people can see how this is progressing.", 
   "There is a node map, and a corresponding array of integer information.", 
   "I did things this way to avoid having to allocate an object for every", 
   "node.  But I'm worried that access of the arrays is going to be too expensive."
  ], 
  "revision_id": "334600"
 }
]