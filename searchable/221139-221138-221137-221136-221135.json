[
 {
  "author": "henning", 
  "date": "2003-03-07T11:39:21.000000Z", 
  "msg": [
   "This mapper implements the Layout search strategy of the Template service.", 
   "1. about,directions,Driving.vm      <- exact match", 
   "2. about,directions,Default.vm      <- package match, Default name", 
   "3. about,Default.vm                 <- stepping up in the hierarchy", 
   "4. Default.vm                       <- The name configured as default.layout.template", 
   "in the corresponding Templating Engine"
  ], 
  "revision_id": "221139"
 }, 
 {
  "author": "henning", 
  "date": "2003-03-07T11:38:09.000000Z", 
  "msg": [
   "This is a simple mapper which is used for the Page class matching in", 
   "the template service. It replaces the template separators with class", 
   "path separators (.) and removes the template extension.", 
   "about,directions,Driving.vm --> about.directions.Driving"
  ], 
  "revision_id": "221138"
 }, 
 {
  "author": "henning", 
  "date": "2003-03-07T11:36:51.000000Z", 
  "msg": [
   "This is a mapper which implements the search strategy for matching", 
   "classes to templates. It implements the", 
   "1. about.directions.Driving     <- direct matching the template to the class name", 
   "2. about.directions.Default     <- matching the package, class name is Default", 
   "3. about.Default                <- stepping up in the package hierarchy, looking for Default", 
   "4. Default                      <- Class called \"Default\" without package", 
   "5. VelocityScreen               <- The class configured by the Service (VelocityService) to", 
   "strategy for class name matching for the screen, layout and navigation classes."
  ], 
  "revision_id": "221137"
 }, 
 {
  "author": "henning", 
  "date": "2003-03-07T11:35:34.000000Z", 
  "msg": [
   "Interface definition and some base classes for implementing the current", 
   "template mapping strategies as pluggable classes."
  ], 
  "revision_id": "221136"
 }, 
 {
  "author": "henning", 
  "date": "2003-03-07T11:32:25.000000Z", 
  "msg": [
   "Move Error management for missing screens into the render classes. This", 
   "will allow the Template Service to return null for \"no matching screen", 
   "template found\" and allow a developer by subclassing to react on missing", 
   "screens other than just throwing an exception to the user."
  ], 
  "revision_id": "221135"
 }
]