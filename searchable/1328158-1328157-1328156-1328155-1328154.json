[
 {
  "author": "marvin", 
  "date": "2012-04-20T00:47:31.717496Z", 
  "msg": [
   "Refactor Clownfish method typedefs.", 
   "Change the capitalization conventions for Clownfish method typedefs so that", 
   "they are exactly the same as the method invocation symbol with \"_t\" appended.", 
   "Generate method typedefs for every method/invocant combination -- instead of", 
   "only generating typedefs for fresh methods.  This harmonizes method typedefs", 
   "with method invocation symbols and method offset variables."
  ], 
  "revision_id": "1328158"
 }, 
 {
  "author": "hashutosh", 
  "date": "2012-04-20T00:45:39.626964Z", 
  "msg": [
   "HIVE-2958 [jira] GROUP BY causing ClassCastException [LazyDioInteger cannot be", 
   "cast LazyInteger]", 
   "(Navis Ryu via Ashutosh Chauhan)", 
   "Summary:", 
   "DPAL-1111 GROUP BY causing ClassCastException [LazyDioInteger cannot be cast", 
   "LazyInteger]", 
   "This relates to https://issues.apache.org/jira/browse/HIVE-1634.", 
   "The following work fine:", 
   "CREATE EXTERNAL TABLE tim_hbase_occurrence (", 
   "id int,", 
   "scientific_name string,", 
   "data_resource_id int", 
   ") STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler' WITH", 
   "SERDEPROPERTIES (", 
   "\"hbase.columns.mapping\" = \":key#b,v:scientific_name#s,v:data_resource_id#b\"", 
   ") TBLPROPERTIES(", 
   "\"hbase.table.name\" = \"mini_occurrences\",", 
   "\"hbase.table.default.storage.type\" = \"binary\"", 
   ");", 
   "SELECT * FROM tim_hbase_occurrence LIMIT 3;", 
   "SELECT * FROM tim_hbase_occurrence WHERE data_resource_id=1081 LIMIT 3;", 
   "However, the following fails:", 
   "SELECT data_resource_id, count(*) FROM tim_hbase_occurrence GROUP BY", 
   "data_resource_id;", 
   "The error given:", 
   "0 TS", 
   "2012-04-17 16:58:45,693 INFO org.apache.hadoop.hive.ql.exec.MapOperator:", 
   "Initialization Done 7 MAP", 
   "2012-04-17 16:58:45,714 INFO org.apache.hadoop.hive.ql.exec.MapOperator:", 
   "Processing alias tim_hbase_occurrence for file", 
   "hdfs://c1n2.gbif.org/user/hive/warehouse/tim_hbase_occurrence", 
   "2012-04-17 16:58:45,714 INFO org.apache.hadoop.hive.ql.exec.MapOperator: 7", 
   "forwarding 1 rows", 
   "2012-04-17 16:58:45,714 INFO org.apache.hadoop.hive.ql.exec.TableScanOperator: 0", 
   "forwarding 1 rows", 
   "2012-04-17 16:58:45,716 INFO org.apache.hadoop.hive.ql.exec.SelectOperator: 1", 
   "forwarding 1 rows", 
   "2012-04-17 16:58:45,723 FATAL ExecMapper:", 
   "org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while", 
   "processing row {\"id\":1444,\"scientific_name\":null,\"data_resource_id\":1081}", 
   "at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:548)", 
   "at org.apache.hadoop.hive.ql.exec.ExecMapper.map(ExecMapper.java:143)", 
   "at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)", 
   "at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:391)", 
   "at org.apache.hadoop.mapred.MapTask.run(MapTask.java:325)", 
   "at org.apache.hadoop.mapred.Child$4.run(Child.java:270)", 
   "at java.security.AccessController.doPrivileged(Native Method)", 
   "at javax.security.auth.Subject.doAs(Subject.java:396)", 
   "at", 
   "org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1157)", 
   "at org.apache.hadoop.mapred.Child.main(Child.java:264)", 
   "Caused by: org.apache.hadoop.hive.ql.metadata.HiveException:", 
   "java.lang.ClassCastException:", 
   "org.apache.hadoop.hive.serde2.lazydio.LazyDioInteger cannot be cast to", 
   "org.apache.hadoop.hive.serde2.lazy.LazyInteger", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.GroupByOperator.processOp(GroupByOperator.java:737)", 
   "at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)", 
   "at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:762)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.SelectOperator.processOp(SelectOperator.java:84)", 
   "at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)", 
   "at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:762)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:83)", 
   "at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)", 
   "at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:762)", 
   "at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:529)", 
   "... 9 more", 
   "Caused by: java.lang.ClassCastException:", 
   "org.apache.hadoop.hive.serde2.lazydio.LazyDioInteger cannot be cast to", 
   "org.apache.hadoop.hive.serde2.lazy.LazyInteger", 
   "at", 
   "org.apache.hadoop.hive.serde2.lazy.objectinspector.primitive.LazyIntObjectInspector.copyObject(LazyIntObjectInspector.java:43)", 
   "at", 
   "org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorUtils.copyToStandardObject(ObjectInspectorUtils.java:239)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.KeyWrapperFactory$ListKeyWrapper.deepCopyElements(KeyWrapperFactory.java:150)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.KeyWrapperFactory$ListKeyWrapper.deepCopyElements(KeyWrapperFactory.java:142)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.KeyWrapperFactory$ListKeyWrapper.copyKey(KeyWrapperFactory.java:119)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.GroupByOperator.processHashAggr(GroupByOperator.java:750)", 
   "at", 
   "org.apache.hadoop.hive.ql.exec.GroupByOperator.processOp(GroupByOperator.java:722)", 
   "... 18 more", 
   "Test Plan: EMPTY", 
   "Reviewers: JIRA, ashutoshc", 
   "Reviewed By: ashutoshc", 
   "Differential Revision: https://reviews.facebook.net/D2871"
  ], 
  "revision_id": "1328157"
 }, 
 {
  "author": "daijy", 
  "date": "2012-04-20T00:25:52.147619Z", 
  "msg": [
   "Cleanup CHANGES.txt"
  ], 
  "revision_id": "1328156"
 }, 
 {
  "author": "daijy", 
  "date": "2012-04-20T00:24:32.029055Z", 
  "msg": [
   "Cleanup CHANGES.txt"
  ], 
  "revision_id": "1328155"
 }, 
 {
  "author": "marvin", 
  "date": "2012-04-20T00:22:47.290401Z", 
  "msg": [
   "Disable auto-prefixing of arbitrary types.", 
   "Automatically adding parcel prefixes to arbitrary types is problematic because", 
   "we can't tell whether we should add \"Prefix\" or \"prefix\", and because we can't", 
   "tell reliably whether a parcel prefix is already present in a multi-parcel", 
   "environment."
  ], 
  "revision_id": "1328154"
 }
]