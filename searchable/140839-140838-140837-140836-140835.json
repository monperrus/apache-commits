[
 {
  "author": "rdonkin", 
  "date": "2003-05-20T10:24:32.000000Z", 
  "msg": [
   "Mavenization phase one - moving documentation build to maven, will complete by generating build.xml etc later."
  ], 
  "revision_id": "140839"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-18T00:58:52.000000Z", 
  "msg": [
   "Phil Steitz wrote:", 
   "This commit contains the suite of random data generation utilities that", 
   "I originally", 
   "proposed as extensions to lang.math.  There is some functional overlap", 
   "with lang.math, but the contract and intention of this implementation is", 
   "different in several significant ways.", 
   "* the lang implementation maintains \"immutability\" of the underlying", 
   "random number generator (emulating Math). The RandomData", 
   "implementation allows users to reseed the random number generator(s)", 
   "(this is in effect possible in the recent extensions to lang.math by", 
   "passing in a user-supplied random as an actual parameter to the", 
   "next() methods) Users can also reset the PRNG algorithm and provider", 
   "used by the \"secure\" methods.", 
   "* RandomData includes \"secure\" methods (delegating to SecureRandom)", 
   "* RandomData will generate random deviates from exponential and poisson,", 
   "as well as Gaussian and Uniform distributions.  These are useful in", 
   "simulation applications.", 
   "* Overlapping somewhat with lang.StringUtils, RandomData will generate", 
   "random hex strings.  There is a nextSecureHexString method that will", 
   "(I claim :-) generate cryptographically secure string identifiers. I", 
   "would appreciate feedback on this algorithm, which I have seen used", 
   "elsewhere (similar to what tomcat does to generate session ids); but", 
   "not documented as a standard.", 
   "PR: Bugzilla 20013", 
   "Obtained from: Phil S.", 
   "Submitted by: Phil S.", 
   "Reviewed by: Tim O."
  ], 
  "revision_id": "140838"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-18T00:55:18.000000Z", 
  "msg": [
   "Altered the build script to use batch test instead of running", 
   "a suite.  The advantage of this is that when new tests are added to the", 
   "project a TestSuite class does not need to updated.", 
   "All classes *Test.java are included, and *AbstractTest.java are excluded."
  ], 
  "revision_id": "140837"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-17T23:24:21.000000Z", 
  "msg": [
   "Added a FixedDoubleArray.  FixedDoubleArray supports a rolling mechanism", 
   "that reuses an array of fixed length.  This classes was added to an efficient", 
   "rolling mechanism.", 
   "FixedDoubleArray was influenced by discussions on the commons-dev list and", 
   "patches submitted by Mark Diggory."
  ], 
  "revision_id": "140836"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-16T05:23:29.000000Z", 
  "msg": [
   "The Univariate interface now contains getWindow and setWindow in", 
   "addition to a constant which signifies an \"infinite\" window.  Windowing", 
   "has been added to all three Univariate implementations:", 
   "* UnivariateImpl - If the window is not infinite, we keep track of", 
   "0..n elements and discount the contribution of the discarded element when", 
   "our \"window\" is moved.  If the window is infinite no extra storage is used", 
   "beyond an empty ContractableDoubleArray.", 
   "- In the following two implementations, the window size can be changed at anytime.", 
   "* ListStoreUnivariateImpl - If the window is not infinite, this", 
   "implementation only takes into account the last n elements of the List.", 
   "* StoreUnivariateImpl - Uses an internal ContractableDoubleArray, window size", 
   "can be changed at any time."
  ], 
  "revision_id": "140835"
 }
]