[
 {
  "author": "chirino", 
  "date": "2010-12-09T02:54:03.308303Z", 
  "msg": [
   "Simplifying DTOs for json by using a custom jackson jaxrs provider config."
  ], 
  "revision_id": "1043825"
 }, 
 {
  "author": "ffang", 
  "date": "2010-12-09T02:45:27.433690Z", 
  "msg": [
   "[CXF-3178]build failed on Mac OSX caused by Failed to resolve artifact. om.sun:tools:jar:1.5.0"
  ], 
  "revision_id": "1043824"
 }, 
 {
  "author": "stroucki", 
  "date": "2010-12-09T02:41:36.053239Z", 
  "msg": [
   "=== Changes from Michael Stroucken", 
   "- nodemanager.py", 
   "- get fresh instance data (per Miha Stopar)", 
   "=== Changes from Andrew Edmonds and Miha Stopar", 
   "- sql.py:", 
   "- self.idLock = threading.Lock() added into __init__", 
   "- registerHost, unregisterHost, getNewId functions added", 
   "- datainterface.py:", 
   "- registerHost, unregisterHost added", 
   "- fromconfig.py:", 
   "- import os, import ConfigParser", 
   "- the following section added into __init__:", 
   "self.hostLocks = {}", 
   "self.hostLock = threading.Lock()", 
   "self.idLock = threading.Lock()", 
   "if not self.config.has_section(\"FromConfig\"):", 
   "return", 
   "- the following line fixed - instance.id instead of instanceId:", 
   "raise TashiException(d={'errno':Errors.NoSuchInstanceId,'msg':\"No such instanceId - %d\" % (instance.id)})", 
   "- acquireHost was changed:", 
   "at the beginning the following line was added:", 
   "self.hostLock.acquire()", 
   "before acquireLock call the following section was added:", 
   "# hostLocks dict added when registerHost was implemented, otherwise newly added hosts don't have _lock", 
   "self.hostLocks[hostId] = self.hostLocks.get(hostId, threading.Lock())", 
   "host._lock = self.hostLocks[host.id]", 
   "- releaseHost was changed:", 
   "- hostId into host.id (see raise TashiException)", 
   "- self.save() and self.hostLock.release() calls added", 
   "- getHosts was changed:", 
   "- now return self.hosts() instead of return self.cleanHosts() (FromConfig does not have cleanHosts method, it is available only when Pickled overrides it)", 
   "- registerHost, unregisterHost, getNewId, save functions added", 
   "- pickled.py:", 
   "- the following section added to the __init__:", 
   "self.hostLock = threading.Lock()", 
   "self.hostLocks = {}", 
   "self.idLock = threading.Lock()", 
   "- getentoverride.py: registerHost, unregisterHost added", 
   "- ldapoverride.py: registerHost, unregisterHost added", 
   "- clustermanagerservice.py: registerHost, unregisterHost added", 
   "- nodemanagerservice.py:", 
   "- self.registerHost() call added into __init__ (before threads)", 
   "- registerHost added", 
   "- tashi-client.py: unregisterHost added to the argLists dict, convertArgs dict, description dict and to the examples dict", 
   "- rpycservices.py: added registerHost and unregisterHost to the clusterManagerRPCs list"
  ], 
  "revision_id": "1043823"
 }, 
 {
  "author": "hsaputra", 
  "date": "2010-12-09T02:19:17.651442Z", 
  "msg": [
   "Simple cleanup to remove extra spaces in the variable declaration."
  ], 
  "revision_id": "1043822"
 }, 
 {
  "author": "nick", 
  "date": "2010-12-09T02:06:28.008929Z", 
  "msg": [
   "Fix TIKA-389 - If the PDF is protected (aka encrypted), then always try to decrypt it. Otherwise, we can end up with garbage metadata.", 
   "Includes a unit test that shows we now get the metadata correctly."
  ], 
  "revision_id": "1043821"
 }
]