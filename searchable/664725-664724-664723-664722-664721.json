[
 {
  "author": "marc", 
  "date": "2006-07-20T00:04:18.000000Z", 
  "msg": [
   "Bring up of thread manager", 
   "facebook::thrift::concurrency::test.ThreadManagerTest::test00", 
   "Launch N tasks that block for time T, verify they all complete and that the thread manager cleans up properly", 
   "when it goes out of scope"
  ], 
  "revision_id": "664725"
 }, 
 {
  "author": "marc", 
  "date": "2006-07-19T20:02:22.000000Z", 
  "msg": [
   "More bullet proofing of timer manager", 
   "facebook::thrift::concurrency::TimerManager::stop", 
   "Added proper cleanup of unprocessed tasks and shutdown of dispatcher thread to stop", 
   "facebook::thrift::concurrency::TimerManager::~TimerManager", 
   "Call stop if manager wasn't explicitly stopped", 
   "facebook::thrift::concurrency::test.TimerManagerTest", 
   "Calculate error margin for timeout expiration and verify it's within bounds", 
   "Verify manager stops properly when it goes out of scope"
  ], 
  "revision_id": "664724"
 }, 
 {
  "author": "marc", 
  "date": "2006-07-19T17:46:50.000000Z", 
  "msg": [
   "Added thread factory test - problems in thread", 
   "Fixed stupid typo in  TimerManager::start"
  ], 
  "revision_id": "664723"
 }, 
 {
  "author": "marc", 
  "date": "2006-07-17T23:51:05.000000Z", 
  "msg": [
   "Another checkpoint of initial cut at thread pool manager for thrift and related concurrency classes.", 
   "Added TimerManager -  I can't live without one after all.", 
   "Added Util - handy place for common time operations et al.", 
   "Initial test code"
  ], 
  "revision_id": "664722"
 }, 
 {
  "author": "marc", 
  "date": "2006-07-15T01:52:39.000000Z", 
  "msg": [
   "Checkpoint of initial cut at thread pool manager for thrift and related concurrency classes."
  ], 
  "revision_id": "664721"
 }
]