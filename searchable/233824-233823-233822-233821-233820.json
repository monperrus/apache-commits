[
 {
  "author": "dlr", 
  "date": "2002-11-11T23:55:20.000000Z", 
  "msg": [
   "* Don't retain memory for huge CDATA buffers past the life of a", 
   "request.  Reported by Glen Lewis <glewis@lspeed.com>."
  ], 
  "revision_id": "233824"
 }, 
 {
  "author": "dlr", 
  "date": "2002-11-11T23:53:41.000000Z", 
  "msg": [
   "* parse(InputStream): Don't retain memory for huge CDATA buffers past", 
   "the life of a request.  Reported by Glen Lewis <glewis@lspeed.com>."
  ], 
  "revision_id": "233823"
 }, 
 {
  "author": "dlr", 
  "date": "2002-11-01T22:55:24.000000Z", 
  "msg": [
   "Took out reference to cookie support -- user indicate they aren't", 
   "actually supported yet.  Hopefully Jakarta Commons HTTP Client can", 
   "help us out here.", 
   "http://issues.apache.org/bugzilla/show_bug.cgi?id=13298"
  ], 
  "revision_id": "233822"
 }, 
 {
  "author": "dlr", 
  "date": "2002-11-01T22:08:51.000000Z", 
  "msg": [
   "Noted fix for whitespace in body of base-64 encoded data.", 
   "http://issues.apache.org/bugzilla/show_bug.cgi?id=9931"
  ], 
  "revision_id": "233821"
 }, 
 {
  "author": "dlr", 
  "date": "2002-11-01T22:06:10.000000Z", 
  "msg": [
   "* Base64.java", 
   "Added a new discardWhitespace(byte[]) function which is called at", 
   "the beginning of decode(byte[]) to perform pre-processing on its", 
   "arguments.  Filtering whitespace the body of decode() would be both", 
   "more memory and CPU-efficient, but I'm not comfortable enough with", 
   "the the code to make that invasive of a change.  I'm curious what", 
   "the Tomcat folks are doing here these days.", 
   "I noticed that encode() isn't line wrapping at 76 characters --", 
   "should we log this as a problem?  What effect is this going to have", 
   "on our interop?", 
   "* Base64Test.java", 
   "Renamed the mis-named testWriter() to testBase64().  Implemented", 
   "more tests for encoding/decoding using output from Perl's", 
   "MIME::Base64 module.", 
   "http://issues.apache.org/bugzilla/show_bug.cgi?id=9931"
  ], 
  "revision_id": "233820"
 }
]