[
 {
  "author": "mikedd", 
  "date": "2010-07-26T17:32:01.379693Z", 
  "msg": [
   "OPENJPA-1719: Prepared SQL cache user parameter ordering problem with subqueries. Merged from Catalina's changes for trunk."
  ], 
  "revision_id": "979375"
 }, 
 {
  "author": "nandika", 
  "date": "2010-07-26T17:31:40.620358Z", 
  "msg": [
   "change log files updated"
  ], 
  "revision_id": "979374"
 }, 
 {
  "author": "brianf", 
  "date": "2010-07-26T17:31:25.223750Z", 
  "msg": [], 
  "revision_id": "979373"
 }, 
 {
  "author": "arkurth", 
  "date": "2010-07-26T17:29:57.461022Z", 
  "msg": [
   "VCL-298", 
   "Added retry loop to VIM_SSH.pm::_run_vim_cmd(). This fixed a problem that may occur if several vcld processes are controlling VMs on the same host. vim-cmd may fail with a \"failed to connect\" message if several processes are controlling the host. The command usually succeeds on subsequent attempts.", 
   "Updated VIM_SSH.pm::_get_datastore_names() to only retrieve the names once and store them in the object since the datastore names mounted on a host are pretty static. The stored names are returned on subsequent calls to _get_datastore_names(). This improves performance because calling vim-cmd each time adds a few seconds.", 
   "Added quotes to datastore name and file path argument passed to _run_vim_command allowing it to handle datastore names and other arguments containing spaces.", 
   "Added call to OS.pm::is_ssh_responding() to the beginning of VMware.pm::capture(). This causes the capture process to fail early on if the VM isn't responding to SSH with a message that's easy to understand. Otherwise, the process would still fail but the root cause of the problem could be confusing to figure out because the message would indicate a problem with some other OS function that relied on SSH working.", 
   "Moved code in VMware.pm::capture() that figures out the vmx path of the VM to a separate subroutine named VMware.pm::get_active_vmx_file_path(). Updated this code to check if the vmx file in the expected path exists first.  If not, it then checks all the vmx files on the host trying to find a match.", 
   "Updated VMware.pm::load() to improve performance. In order to determine if a particular VM was already running, it was checking the VCL computer ID which is added to the contents of each VM on the host. This was very slow if a host is running several VMs. This was updated to check for the VCL VM computer name in the vmx directory path.", 
   "Updated VMware.pm::does_image_exist() to first check if the image resides in the expected non-persistent location.", 
   "Updated utils.pm::get_vmhost_info() to retrieve vmprofile.repositorypath rather than vmprofile.nasshare.", 
   "Updated utils.pm::run_ssh_command() to check for the strings 'vmware-cmd', 'vim-cmd', and 'vmkfstools' if the exit status is 255. This exit status normally indicates the SSH command failed entirely but VMware uses it in some of its commands.", 
   "Updated utils.pm::get_computer_info() to use LEFT JOIN to retrieve data from tables other than computer. This allows the query to succeed if any of the data the computer table is pointing to is not defined.", 
   "Other", 
   "Updated Linux.pm::find_files() to handle case where the base directory indicated by the $base_directory_path argument doesn't exist.", 
   "Updated utils.pm::get_management_node_info() so set the $ENV{management_node_info} variable if the info was retrieved for the management node the code is running on.", 
   "Commented out a few unnecessary notify() messages in various places."
  ], 
  "revision_id": "979372"
 }, 
 {
  "author": "rjung", 
  "date": "2010-07-26T17:29:31.440696Z", 
  "msg": [
   "Update config.guess and config.sub from", 
   "http://git.savannah.gnu.org/cgit/config.git."
  ], 
  "revision_id": "979371"
 }
]