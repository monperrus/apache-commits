[
 {
  "author": "brondsem", 
  "date": "2014-03-04T17:00:59.845247Z", 
  "msg": [
   "update allura wiki location, stefanoinve username, link to Dec2014 report"
  ], 
  "revision_id": "1574133"
 }, 
 {
  "author": "breser", 
  "date": "2014-03-04T16:53:52.253442Z", 
  "msg": [
   "Fix compiler warnings about the size of membuffer cache entries.", 
   "Entries in the membuffer cache are limited to a maximum size of the maximum", 
   "value of an apr_uint32_t, since cache values larger than that would not be", 
   "efficient.  However, our APIs generally use apr_size_t for the size of data", 
   "in memory.  apr_size_t may be 64-bits wide on some platforms.", 
   "For the convenience of other developers the membuffer APIs take apr_size_t", 
   "values and the effort to ensure the cache entries are not larger than", 
   "apr_uint32_t is handled by the membuffer cache code itself.  It does this by", 
   "calculating the maximum cache entry value and comparing it against the size", 
   "of the incoming entry.  This means it is safe to cast the size to the", 
   "apr_uint32_t type it uses internally once this check has been completed.", 
   "* subversion/libsvn_subr/cache-membuffer.c", 
   "(select_level): Cast to apr_uint32_t when setting dummy_entry.size.", 
   "(membuffer_cache_set_internal, membuffer_cache_set_partial_internal):", 
   "Cast to apr_uint32_t when setting entry->size."
  ], 
  "revision_id": "1574132"
 }, 
 {
  "author": "rhillegas", 
  "date": "2014-03-04T16:46:21.453269Z", 
  "msg": [
   "DERBY-3155: Add privilege checks for the INSERT actions of MERGE statements; tests passed cleanly on derby-3155-33-ab-insertPrivs.diff."
  ], 
  "revision_id": "1574131"
 }, 
 {
  "author": "fmui", 
  "date": "2014-03-04T16:40:50.077571Z", 
  "msg": [
   "Standard authentication provider: added parameter to define the charset for username and password"
  ], 
  "revision_id": "1574130"
 }, 
 {
  "author": "mduerig", 
  "date": "2014-03-04T16:40:34.199639Z", 
  "msg": [
   "OAK-1491: ObservationTest failure on Windows", 
   "Use synchronized collections to ensure happens before relation holds when accessing them from different threads"
  ], 
  "revision_id": "1574129"
 }
]