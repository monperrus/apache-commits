[
 {
  "author": "gbrown", 
  "date": "2010-07-03T14:44:31.165310Z", 
  "msg": [
   "Remove nested serializer map from BXMLSerializer. This feature is no longer necessary since Bindable is better suited to this use case. Additionally, the path syntax used by BXMLSerializer#get() was not consistent with other aspects of the platform  (it did not use the complete JSON path syntax supported by JSON.get()). Also, the behavior of BXMLSerializer#get() could be confusing. For example, given the following:", 
   "window.bxml:", 
   "<Window>", 
   "<bxml:include bxml:id=\"content\" src=\"content.bxml\"/>", 
   "</Window>", 
   "content.bxml:", 
   "<Label text=\"foo\">", 
   "<bxml:script>", 
   "var text = \"bar\";", 
   "</bxml:script>", 
   "</Label>", 
   "A caller might expect get(\"content.text\") to return \"foo\"; however, it would return \"bar\". A call to get(\"content['text']\") would fail. With this change, \"foo\" would be returned, and the bracket-based path syntax will now work.", 
   "Lastly, this change will help facilitate support for serializing arbitrary objects via <bxml:include>. If the include tag is updated to support arbitrary serializers, there is no guarantee that a serializer will provide a namespace that can be accessed via path (in fact, most serializers will not)."
  ], 
  "revision_id": "960225"
 }, 
 {
  "author": "zoe", 
  "date": "2010-07-03T14:35:19.274971Z", 
  "msg": [
   "ARIES-319 pull apart adding items and resizing in TS. Fix missing removeSelf in RM."
  ], 
  "revision_id": "960224"
 }, 
 {
  "author": "rjung", 
  "date": "2010-07-03T14:27:43.961143Z", 
  "msg": [
   "Fix documented syntax for env var setting in mod_rewrite.", 
   "Main page is fine, only the flags guide was wrong."
  ], 
  "revision_id": "960223"
 }, 
 {
  "author": "mikem", 
  "date": "2010-07-03T14:26:32.813714Z", 
  "msg": [
   "DERBY-4244: ALTER TABLE ASSERT in ADD COLUMN with autocommit off", 
   "backported svn #795459 from trunk to 10.5 branch.  Also backported the", 
   "AlterTableTest.java from trunk so that test for this issue could be", 
   "run.", 
   "This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)", 
   "An ALTER TABLE ... ADD COLUMN statement which specifies to add a column to", 
   "a table may also include any column constraints which apply to that column.", 
   "For example, to add a column to a table and at the same time indicate that", 
   "the column should be the primary key of the table, this statement is used:", 
   "alter table t0 add column c2 int not null default 0 primary key;", 
   "If the table already contains a primary key, this statement fails, as the", 
   "table cannot have more than one primary key. However, the check for the", 
   "duplicate primary key was occurring at execution time, *after* the column", 
   "had already been added to the table. Then, during that same transaction,", 
   "subsequent ALTER TABLE statements affecting that table failed with internal", 
   "ASSERT messages because the data dictionary data structures were inconsistent.", 
   "This patch adds logic to the compilation processing of the ALTER TABLE", 
   "statement to check for a duplicate PRIMARY KEY constraint at compile", 
   "time, before the ALTER TABLE statement has begun execution. This way, when", 
   "such a duplicate constraint is rejected, the rejection occurs prior to", 
   "execution of the table, allowing for more straightforward cleanup.", 
   "The patch also re-enables a portion of the AlterTableTest, which had been", 
   "disabled due to this problem."
  ], 
  "revision_id": "960222"
 }, 
 {
  "author": "covener", 
  "date": "2010-07-03T14:25:41.124844Z", 
  "msg": [
   "wording tweak for plugin text"
  ], 
  "revision_id": "960221"
 }
]