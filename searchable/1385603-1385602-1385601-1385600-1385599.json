[
 {
  "author": "spmurphy50", 
  "date": "2011-08-26T15:54:26.939435Z", 
  "msg": [
   "Initial import."
  ], 
  "revision_id": "1385603"
 }, 
 {
  "author": "spmurphy50", 
  "date": "2011-08-26T15:18:54.014917Z", 
  "msg": [
   "Initial import."
  ], 
  "revision_id": "1385602"
 }, 
 {
  "author": "chenpei", 
  "date": "2011-08-17T16:08:49.709298Z", 
  "msg": [
   "Fixed: ID: 3307765 to handle windows CRLF \\r\\n new lines in Docs in getRawTokens()", 
   "it should treat \\r as a new line instead of raw tokens..."
  ], 
  "revision_id": "1385601"
 }, 
 {
  "author": "chenpei", 
  "date": "2011-08-12T17:30:36.555821Z", 
  "msg": [
   "ohnlp-Bugs-3296301", 
   "It looks like Line 249 of LookupParseUtilites. parseLookupBindingXml() expects the constructor of ALL lookup consumers to contain 3 parameters instead of 2 now.", 
   "Exception caused by running the Smoking Status Module:", 
   "Caused by: java.lang.NoSuchMethodException:", 
   "edu.mayo.bmi.uima.lookup.ae.SmokerNamedEntityLookupConsumerImpl.<init>(o", 
   "rg.apache.uima.analysis_engine.annotator.AnnotatorContext,", 
   "java.util.Properties, int)", 
   "at java.lang.Class.getConstructor0(Class.java:2706)", 
   "at java.lang.Class.getConstructor(Class.java:1657)", 
   "at", 
   "edu.mayo.bmi.uima.lookup.ae.LookupParseUtilities.parseLookupBindingXml(L", 
   "ookupParseUtilities.java:248)", 
   "at", 
   "edu.mayo.bmi.uima.lookup.ae.LookupParseUtilities.parseDescriptor(LookupP", 
   "arseUtilities.java:77)", 
   "at", 
   "edu.mayo.bmi.uima.lookup.ae.DictionaryLookupAnnotator.configInit(Diction", 
   "aryLookupAnnotator.java:119)", 
   "Option1: adding the constructors to each of the below public NonSmokerNamedEntityLookupConsumerImpl(AnnotatorContext aCtx, Properties props, int maxListSize) public UnknownSmokerNamedEntityLookupConsumerImpl(AnnotatorContext aCtx,", 
   "Properties props, int maxListSize)", 
   "public SmokerNamedEntityLookupConsumerImpl(AnnotatorContext aCtx, Properties props, int maxListSize)", 
   "Option2: add support for both constructors in LookupParseUtilites.", 
   "parseLookupBindingXml() ; at least for backwards compatibility for now since we won't expect all extensions to change their signatures?"
  ], 
  "revision_id": "1385600"
 }, 
 {
  "author": "chenpei", 
  "date": "2011-08-10T16:18:09.478216Z", 
  "msg": [
   "Fixed: ID: 3307765 to handle windows CRLF \\r\\n new lines in Docs", 
   "Since newlines always contain \\n and optionally prefixed with \\r for windows, added a checked to handle the \\r\\n use case.", 
   "It\u2019s pretty straightforward, but keep in mind that it will detect \\r\\n as a EOL token, but will still have \\r as a Symbol.", 
   "My personal recommendation is that users always Normalize their documents to Unix new lines during the preprocessing stage and not rely on individual annotators to handle the different new lines.", 
   "The only change is in edu.mayo.bmi.nlp.tokenizer.getEndOfLineTokens()", 
   "Tested it with a simple dos new line text file and a unix new line text file."
  ], 
  "revision_id": "1385599"
 }
]