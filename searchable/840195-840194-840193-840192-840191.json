[
 {
  "author": "gstein", 
  "date": "2001-09-20T01:00:55.759947Z", 
  "msg": [
   "Fix a wonky indentation."
  ], 
  "revision_id": "840195"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-09-19T15:38:35.192703Z", 
  "msg": [
   "* subversion/tests/clients/cmdline/update_tests.py", 
   "New file.", 
   "* build.conf", 
   "(paths): Added update_tests.py to list of tests."
  ], 
  "revision_id": "840194"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-09-19T14:47:25.177170Z", 
  "msg": [
   "* subversion/trunk/subversion/tests/clients/cmdline/basic_tests.py", 
   "(commit_one_file): Removed obsolete function.", 
   "(commit_multiple_targets, commit_multiple_targets_2): Moved to", 
   "commit_tests.py", 
   "(detect_extra_files, update_binary_file, update_binary_file_2,", 
   "update_missing): Moved to update_tests.py", 
   "Function description edited to uniformity.", 
   "* subversion/trunk/subversion/tests/clients/cmdline/commit_tests.py", 
   "(commit_multiple_targets, commit_multiple_targets_2): Moved from", 
   "basic_tests.py"
  ], 
  "revision_id": "840193"
 }, 
 {
  "author": "gstein", 
  "date": "2001-09-19T12:11:10.767400Z", 
  "msg": [
   "Complete revamp of dead property handling to match the new mod_dav API.", 
   "* mod_dav_svn/deadprops.c:", 
   "(struct dav_deadprop_rollback): new structure to hold rollback info", 
   "(get_repos_propname): new function. map from a DAV name to a repos name", 
   "(get_value): new function. get a prop value given a DAV name.", 
   "(save_value): new function. save a value, given a DAV name.", 
   "(dav_svn_db_define_namespace): new function. defines the namespaces", 
   "that we can/will use when outputing property values. right now, that", 
   "is just the \"svn:\" and \"svn:custom:\" names.", 
   "(dav_svn_db_output_value): replaces dav_svn_db_fetch. places property", 
   "values directly into the output text buffer (phdr). use the correct", 
   "xmlns prefix, escape the values, and format the right kind of property", 
   "element (empty vs content).", 
   "(dav_svn_db_map_namespaces): new function. does nothing; we don't need", 
   "it in our scenario -- we do not store namespaces internally, so no", 
   "mapping is required.", 
   "(dav_svn_db_store): revamp for new parameters -- we get the property", 
   "element directly and can store the value.", 
   "(dav_svn_db_remove, dav_svn_db_exists): adjust parameters to use a", 
   "dav_prop_name rather than a dav_datum key.", 
   "(get_name): replaces get_key. construct a dav_prop_name from the", 
   "current iteration thru the property hash.", 
   "(dav_svn_db_first_name): replaces dav_svn_db_firstkey. adjust to", 
   "dav_prop_name parameter; use get_name()", 
   "(dav_svn_db_next_name): replaces dav_svn_db_nextkey. adjust to", 
   "dav_prop_name parameter; use get_name()", 
   "(dav_svn_db_get_rollback, dav_svn_db_apply_rollback): new functions", 
   "to handle rolling back a failed PROPPATCH operation.", 
   "(dav_svn_hooks_propdb): adjust for new members", 
   "* include/svn_types.h (SVN_PROP_CUSTOM_PREFIX): new define for a", 
   "namespace for custom properties.", 
   "* libsvn_ra_dav/ra_dav.h (SVN_RA_DAV__CUSTOM_NAMESPACE): removed, in", 
   "favor of the new SVN_PROP_CUSTOM_PREFIX", 
   "* libsvn_ra_dav/commit.c (do_proppatch):", 
   "libsvn_ra_dav/fetch.c (add_props): use new SVN_PROP_CUSTOM_PREFIX", 
   "symbol instead of SVN_RA_DAV__CUSTOM_NAMESPACE"
  ], 
  "revision_id": "840192"
 }, 
 {
  "author": "sussman", 
  "date": "2001-09-18T16:48:14.572076Z", 
  "msg": [
   "* fetch.c (svn_ra_dav__do_checkout):  umm, fix logical error;  call", 
   "close_edit() before exiting.  Also, attempt to store auth info."
  ], 
  "revision_id": "840191"
 }
]