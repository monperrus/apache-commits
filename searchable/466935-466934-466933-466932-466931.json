[
 {
  "author": "", 
  "date": "2006-10-23T05:10:17.261200Z", 
  "msg": [
   "This is an empty revision for padding."
  ], 
  "revision_id": "466935"
 }, 
 {
  "author": "pini", 
  "date": "2006-10-23T05:06:15.527589Z", 
  "msg": [
   "Added AUTHORS file to tarball created by 'make dist'"
  ], 
  "revision_id": "466934"
 }, 
 {
  "author": "mrglavas", 
  "date": "2006-10-23T04:52:32.762274Z", 
  "msg": [
   "Fixing JIRA Issue #1204:", 
   "http://issues.apache.org/jira/browse/XERCESJ-1204", 
   "Allow \"http://apache.org/xml/properties/internal/entity-resolver\" and all other", 
   "Xerces properties to be set on the DOMConfiguration. I also took the opportunity", 
   "to fixup getParameter() and canSetParameter() so that they behave correctly when", 
   "the parameter is a Xerces specific feature or property."
  ], 
  "revision_id": "466933"
 }, 
 {
  "author": "dandiep", 
  "date": "2006-10-23T04:44:24.157979Z", 
  "msg": [
   "o Remove BindingInfoFactoryBeanManager as the way its implemented has", 
   "two issues.", 
   "1. BIFactoryBeans are stateful (hence the bean in the name),", 
   "so if two people tried to use the SoapBindingInfoFactoryBean at the same", 
   "time there would be clashes.", 
   "2. BIFBs are frontend specific. One can imagine a situation where we", 
   "have multiple front ends. In that case, there would be different BIFBs", 
   "for each frontend for the same namespace and this would cause clashes.", 
   "o As I said on email, I think a dynamic discovery mechanism IS needed", 
   "for the BindingInfoFactoryBeans, however I'm hoping for some feedback", 
   "on the best way to do so. Once we decide on the list we can make this", 
   "less static and add discovery back in...", 
   "o Add a JaxWsSoapBindingInfoFactoryBean which recognizes SOAPBinding", 
   "annotations.", 
   "o Add SpringBeanMap which allows us to simplify managers and do things", 
   "less invasively than with having an ExtensionManager. Really its", 
   "just an ExtensionManager as a deferred Map.", 
   "o Rework Conduit/Destination managers to accept a Map as the constructor", 
   "and use SpringBeanMap instead of the ExtensionManager. While we end up", 
   "loading the HTTPTransportFactory etc on startup, this is not resource", 
   "intensive and we need to load all the factories for", 
   "getDestinationFactoryForUri to work correctly.", 
   "o We needed a way to go from an Address in JAX-WS to a DestinationFactory", 
   "id. To do this I added a", 
   "destinationFactoryManager.getDestinationFactoryForUri() method. This", 
   "allows us to get a DestinationFactory. I then added a getTransportIds", 
   "method to DestinationFactory so we can determine which one we're using", 
   "so we can look it up later.", 
   "o Did some work to make the XML Schema for a particular MessagePartInfo", 
   "available. This is necessary for some HTTP/REST stuff I'm adding Real", 
   "Soon :-)", 
   "o Upgrade XmlSchema for the work mentioned above. Some bugs were fixed in", 
   "XML Schema so now the Schema imports are actually traversed, meaning we", 
   "needed to improve our URIResolver to work with jars and use that when", 
   "resolving imports."
  ], 
  "revision_id": "466932"
 }, 
 {
  "author": "jvanzyl", 
  "date": "2006-10-23T04:10:47.100763Z", 
  "msg": [
   "updating"
  ], 
  "revision_id": "466931"
 }
]