[
 {
  "author": "rsitze", 
  "date": "2002-09-01T04:12:49.000000Z", 
  "msg": [
   "Similar structure to what is in 'src', but turned up-side-down.  This", 
   "uses a 'listener' model, rather than iterators, to get data.  It has", 
   "it's own problems... but gave me an opportunity to do some performance", 
   "checking and convince me that it doesn't really matter...  This one is,", 
   "maybe, 3-5% faster.  Not enough for even me to worry about.", 
   "1.  This is NOT a full publish/subscribe model.  It was important to", 
   "me that a 'listener' be able to communicate that it didn't need anymore:", 
   "halt processing (this is the alternative to defered processing that I was", 
   "using via iterators).  This type of logic doesn't come cheap if you allow", 
   "multiple subscribers... so it's limited to just one (though that could be", 
   "a hook if anyone WANTs to allow multiple subscribes).", 
   "2.  The code is much cleaner and easier to write...", 
   "4.  It's MUCH easier to build up 'chains', simply connect each Discoverer", 
   "to the next (each is implemented as a 'listener').", 
   "3.  Depending upon your point of view, it's not as convenient to 'get'", 
   "the data (data is 'pushed' to you via a listener, rather than 'pulled'", 
   "by you from an iterator).  There are utility 'listeners' in", 
   "'o.a.c.d.listeners' for gathering all data, or just getting the first", 
   "(this means the 'first' non-null result from the last in the chain,", 
   "which is much nicer than monitoring the whole 'machine' as was done", 
   "when using Enumerations).", 
   "I think it's pretty cool... so I dumping it into a separate sandbox if", 
   "anyone wants to look at it.", 
   "We can figure out later which is the better direction."
  ], 
  "revision_id": "132844"
 }, 
 {
  "author": "rsitze", 
  "date": "2002-09-01T03:58:02.000000Z", 
  "msg": [
   "Remove copy of commons-logging, will work to alleviate any", 
   "future circular dependencies when/if needed.."
  ], 
  "revision_id": "132843"
 }, 
 {
  "author": "rsitze", 
  "date": "2002-08-30T22:19:33.000000Z", 
  "msg": [
   "Changed ResourceName to String.", 
   "Note that Discover & Iterator for ResourceName remain", 
   "for the moment."
  ], 
  "revision_id": "132842"
 }, 
 {
  "author": "rsitze", 
  "date": "2002-08-30T15:06:17.000000Z", 
  "msg": [
   "NPE fix"
  ], 
  "revision_id": "132841"
 }, 
 {
  "author": "rsitze", 
  "date": "2002-08-30T00:15:20.000000Z", 
  "msg": [
   "Reorg, finished loose ends.", 
   "I removed ServiceInfo & ClassInfo, merged everything into ResourceInfo.", 
   "In the end, I just couldn't handle the loose coupling between types...", 
   "I tried.. I really did.  The code was broke, it was difficult to debug..", 
   "to many if's to catch 'problems'... so I broke it back out.", 
   "ResourceInfo has become ResourceName, Resource, and ResourceClass.", 
   "I've got specialized iterators for each, and discovery for each.", 
   "Type-safe iterators exposed all bugs in my use of the code.", 
   "So, yes it's \"complex\" to look at, but it's easier to use.  Could help", 
   "with complexity by proper documentation... some object diagrams", 
   "would really help.  Any volenteers for that?"
  ], 
  "revision_id": "132840"
 }
]