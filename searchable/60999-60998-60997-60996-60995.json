[
 {
  "author": "rbb", 
  "date": "2001-01-01T00:09:18.000000Z", 
  "msg": [
   "Whenever we allocate a structure from a pool, we should set it's pool", 
   "pointer.  If we don't, then we take the chance of trying to allocate out", 
   "of a NULL pool later."
  ], 
  "revision_id": "60999"
 }, 
 {
  "author": "dreid", 
  "date": "2000-12-31T18:48:03.000000Z", 
  "msg": [
   "Various bits of tidying up mainly for locking, but a few thread bits as well.", 
   "Submitted by:\tCarlos Hasan <chasan@acm.org>", 
   "Reviewed by:\tDavid Reid   <dreid@apache.org>"
  ], 
  "revision_id": "60998"
 }, 
 {
  "author": "rbb", 
  "date": "2000-12-31T18:04:59.000000Z", 
  "msg": [
   "Begin to remove the ability to allocate out of NULL pools.  The first", 
   "problem to solve, is that we need an apr_lock in order to allocate", 
   "pools, so that we can lock things out when allocating.  So, how do we", 
   "allocate locks without a pool to allocate from?  The answer is to create", 
   "a global_apr_pool, which is a bootstrapping pool.  There should NEVER", 
   "be a sub-pool off this pool, and it is static to an APR file.  This is", 
   "only used to allow us to allocate the locks cleanly, without using the", 
   "NULL pool hack."
  ], 
  "revision_id": "60997"
 }, 
 {
  "author": "ben", 
  "date": "2000-12-31T17:45:28.000000Z", 
  "msg": [
   "Fix changed include paths."
  ], 
  "revision_id": "60996"
 }, 
 {
  "author": "ben", 
  "date": "2000-12-31T14:19:09.000000Z", 
  "msg": [
   "Fix a warning."
  ], 
  "revision_id": "60995"
 }
]