[
 {
  "author": "dkhaywood", 
  "date": "2007-11-30T13:02:22.752043Z", 
  "msg": [
   "DnD viewer now interacting a little better with the new reflector ... can at least invoke actions that take an argument."
  ], 
  "revision_id": "1017195"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2007-11-30T12:10:47.299896Z", 
  "msg": [
   "Oodles of changes, including: eliminated JavaLanguageRules; eliminated NakedObjectsAppLibRules; reduced ClassStrategy down to bare minimum; cleaned up JavaReflector/Introspector code; extended the FacetFactory and FacetFactorySet API so that JavaIntrospector uses the new PropertyOrCollectionIdentifyingFacetFactory to find/remove accessors for properties and collections; made each existing noa *Facet into an interface and added a new *FacetImpl for each; marked the NO Applib value classes using @Value; fully introduced ValueTypeRepository and CollectionTypeRepository, propogate injection into any FacetFactorys that require them via the FacetFactorySet; introduced ValueAdapterFactory and CollectionAdapterFactory to centralize the creation of NakedObjectSpecifications and corresponding NakedObject adapters ... the ObjectLoaderImpl now delegates, while the JavaReflector no longer needs to do this job at all."
  ], 
  "revision_id": "1017194"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2007-11-30T12:10:37.011680Z", 
  "msg": [
   "Oodles of changes, including: eliminated JavaLanguageRules; eliminated NakedObjectsAppLibRules; reduced ClassStrategy down to bare minimum; cleaned up JavaReflector/Introspector code; extended the FacetFactory and FacetFactorySet API so that JavaIntrospector uses the new PropertyOrCollectionIdentifyingFacetFactory to find/remove accessors for properties and collections; made each existing noa *Facet into an interface and added a new *FacetImpl for each; marked the NO Applib value classes using @Value; fully introduced ValueTypeRepository and CollectionTypeRepository, propogate injection into any FacetFactorys that require them via the FacetFactorySet; introduced ValueAdapterFactory and CollectionAdapterFactory to centralize the creation of NakedObjectSpecifications and corresponding NakedObject adapters ... the ObjectLoaderImpl now delegates, while the JavaReflector no longer needs to do this job at all."
  ], 
  "revision_id": "1017193"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2007-11-30T12:09:50.556869Z", 
  "msg": [
   "Oodles of changes, including: eliminated JavaLanguageRules; eliminated NakedObjectsAppLibRules; reduced ClassStrategy down to bare minimum; cleaned up JavaReflector/Introspector code; extended the FacetFactory and FacetFactorySet API so that JavaIntrospector uses the new PropertyOrCollectionIdentifyingFacetFactory to find/remove accessors for properties and collections; made each existing noa *Facet into an interface and added a new *FacetImpl for each; marked the NO Applib value classes using @Value; fully introduced ValueTypeRepository and CollectionTypeRepository, propogate injection into any FacetFactorys that require them via the FacetFactorySet; introduced ValueAdapterFactory and CollectionAdapterFactory to centralize the creation of NakedObjectSpecifications and corresponding NakedObject adapters ... the ObjectLoaderImpl now delegates, while the JavaReflector no longer needs to do this job at all."
  ], 
  "revision_id": "1017192"
 }, 
 {
  "author": "dkhaywood", 
  "date": "2007-11-30T12:08:29.250665Z", 
  "msg": [
   "Oodles of changes, including: eliminated JavaLanguageRules; eliminated NakedObjectsAppLibRules; reduced ClassStrategy down to bare minimum; cleaned up JavaReflector/Introspector code; extended the FacetFactory and FacetFactorySet API so that JavaIntrospector uses the new PropertyOrCollectionIdentifyingFacetFactory to find/remove accessors for properties and collections; made each existing noa *Facet into an interface and added a new *FacetImpl for each; marked the NO Applib value classes using @Value; fully introduced ValueTypeRepository and CollectionTypeRepository, propogate injection into any FacetFactorys that require them via the FacetFactorySet; introduced ValueAdapterFactory and CollectionAdapterFactory to centralize the creation of NakedObjectSpecifications and corresponding NakedObject adapters ... the ObjectLoaderImpl now delegates, while the JavaReflector no longer needs to do this job at all."
  ], 
  "revision_id": "1017191"
 }
]