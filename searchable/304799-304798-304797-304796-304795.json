[
 {
  "author": "costin", 
  "date": "2001-06-12T14:55:44.000000Z", 
  "msg": [
   "Next refactoring step: removed the JspCompilationContext.", 
   "JspCC was a mix of container callbacks and jsp page state info. Cleaned this", 
   "by moving all jsp page info into jsptree/JspPageInfo and all callbacks", 
   "into ContainerLiaiason."
  ], 
  "revision_id": "304799"
 }, 
 {
  "author": "costin", 
  "date": "2001-06-12T14:53:03.000000Z", 
  "msg": [
   "Duplicate - LocalStrings are used."
  ], 
  "revision_id": "304798"
 }, 
 {
  "author": "costin", 
  "date": "2001-06-09T21:29:02.000000Z", 
  "msg": [
   "Initial code to use the new line map.", 
   "We don't do anything special - this is just the original code that does", 
   "the mapping.", 
   "Very inefficient ( 2 Writers, Readers, many Srings, linear search ) - it can", 
   "be changed later ( possibly in a general purpose util ). This is called only", 
   "on error - shouldn't be a frequent operation.", 
   "The code should do a println with the detected location in the JSP file", 
   "( small bug - the line is 0-based, need to increment it )"
  ], 
  "revision_id": "304797"
 }, 
 {
  "author": "costin", 
  "date": "2001-06-09T21:26:21.000000Z", 
  "msg": [
   "Added support for the new option.", 
   "The Option will be changed - it'll become a base class, with a reasonable", 
   "default implementation, and various liaisons will no longer have to", 
   "implement it ( there are few other big simplifications in the", 
   "container/jasper interface - before we start using the Liaison )", 
   "Also, few fixes in JspInterceptor ( the compiler class was using the old", 
   "package - it worked because we had both in classpath )"
  ], 
  "revision_id": "304796"
 }, 
 {
  "author": "costin", 
  "date": "2001-06-09T21:23:32.000000Z", 
  "msg": [
   "Various changes to support the line mapping.", 
   "Javagen adds a getter for the line number.", 
   "Various generators fixed to not include \\n in the generated code", 
   "( that could be also fixed by treating all println as printMultiLn, but", 
   "it's better to have generators respect the conventions.", 
   "( we have a stack trace each time we detect a generator including \\n, for", 
   "debugging - it'll be removed after we fix everything )"
  ], 
  "revision_id": "304795"
 }
]