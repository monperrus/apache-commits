[
 {
  "author": "cmpilato", 
  "date": "2003-11-11T16:15:30.844004Z", 
  "msg": [
   "Add a state flag to prevent programmers from doing a very naughty", 
   "thing -- instantiating a Berkeley DB transaction from the same process", 
   "which already has a Berkeley DB transaction in use.  Hats off to Greg", 
   "Stein for suggesting idea (though I think he wanted its usage to be", 
   "for debug-only builds ... I don't see the need).", 
   "* subversion/libsvn_fs/fs.h", 
   "(struct svn_fs_t): Add 'in_txn_trail' state flag.", 
   "* subversion/libsvn_fs/trail.c", 
   "(begin_trail, abort_trail, commit_trail): Maintain the new state flag.", 
   "And then fix some codepaths that were nesting Berkeley transactions:", 
   "* subversion/libsvn_fs/tree.c", 
   "(txn_body_txdelta_finalize_edits): Move a stream close from here...", 
   "(window_consumer): ...to here.", 
   "(txn_body_fulltext_finalize_edits): Move a stream close from here...", 
   "(text_stream_closer): ...to here.", 
   "(write_to_string): Whitespace mods only."
  ], 
  "revision_id": "847770"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-11-11T01:01:18.137622Z", 
  "msg": [
   "Resolve issue #1573: Move deltification out of the commit process.", 
   "Move post-commit deltification out of the commit process, exposing a", 
   "new public interface for the task.  We make use of the new interface", 
   "in 'svnadmin load', deltifying each new revision after it is created,", 
   "because if you load a huge repository, and then deltify after the", 
   "operation is completely, Berkeley DB may never recover the extra space", 
   "used by the undeltified data.", 
   "I run 'svnadmin load' using a dumpfile of the first 5599 revisions of", 
   "the Subversion repository, and without deltification after each commit", 
   "was made.  Then I used 'svnadmin deltify -r1:HEAD' on the database.", 
   "The combined clock-times for these operations was 160 minutes.  The", 
   "combined logfile generation was 970 logfiles.  The size of the", 
   "'strings' table after it was all said and done was 456 Megabytes --", 
   "which was exactly the same size it was *before* I ran the standalone", 
   "deltification.  After the deltification, db_stat reported that I had", 
   "91,000 free pages in my 'strings' table.", 
   "Then I made 'svnadmin load' do the post-revision-creation", 
   "deltification, and re-ran my test (of course, this time without the", 
   "extra 'svnadmin deltify' command).  Clock-time was 165 minutes.", 
   "Logfile generation, 970 logfiles.  But the 'strings' table size was a", 
   "shockingly mere 80 Megabytes -- and db_stat reported only 110 free", 
   "pages.", 
   "The moral of the story:  to keep your repository small, deltify early", 
   "and often.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_deltify_revision): New.", 
   "* subversion/libsvn_fs/tree.c", 
   "(svn_fs_commit_txn): No longer perform post-commit predecessor", 
   "deltification.", 
   "(struct rev_get_txn_id_args): New baton.", 
   "(txn_body_rev_get_txn_id, svn_fs_deltify_revision): New functions.", 
   "* subversion/svnadmin/main.c", 
   "Sort subcommand function prototypes in alphabetical order, and add", 
   "one for svnadmin_deltify.", 
   "(cmd_table): Add 'deltify' subcommand ... again.", 
   "(subcommand_deltify): New (sorta).", 
   "* subversion/libsvn_repos/load.c", 
   "(close_revision): Explicitly deltify predecessors of paths changed", 
   "in each revision of the repository load.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(file_integrity_helper): Deltify after each revision, because these", 
   "tests were written long ago partially to address problems that", 
   "occured during deltification.", 
   "* subversion/libsvn_repos/repos.c", 
   "(create_hooks): Add a call to 'svnadmin deltify' in the post-commit", 
   "hook template.", 
   "* doc/book/TODO", 
   "Add a TODO note about fixing the book with respect to deltification", 
   "stuffs."
  ], 
  "revision_id": "847769"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-11-11T00:21:49.000768Z", 
  "msg": [
   "With Ben and Mike, start work on including property changes in the new", 
   "update reports:", 
   "* subversion/mod_dav_svn/update.c", 
   "(update_ctx_t): New boolean field 'send_all'.", 
   "(close_helper): If send_all, then make a conditional branch to send", 
   "prop changes immediately.", 
   "(maybe_start_update_report): New function.", 
   "(upd_set_target_revision): Just use maybe_start_update_report.", 
   "(upd_open_root): Same, and add some curly braces to pacify Mike.", 
   "(upd_close_edit): Same.", 
   "(dav_svn__update_report): Just use the new 'send_all' field in the", 
   "update ctx instead of using a local variable.", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(report_baton_t): New field 'receiving_all'.", 
   "(start_element): Parse server's response to set the new field.", 
   "(make_reporter): Initialize new field to false."
  ], 
  "revision_id": "847768"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-11-10T23:03:42.933054Z", 
  "msg": [
   "With Ben, start making ra_dav checkouts have fewer turnarounds:", 
   "########################################################", 
   "###                                                  ###", 
   "### This is an in-progress change.  Don't switch to  ###", 
   "###   this branch and expect things to work yet.     ###", 
   "###                                                  ###", 
   "########################################################", 
   "* subversion/mod_dav_svn/update.c: Include svn_base64.h.", 
   "(struct update_ctx_t): New field base64_output.", 
   "(struct brigade_write_baton, brigade_write_fn,", 
   "make_base64_output_stream): New struct and functions to create a", 
   "base64-encoding stream that writes to an apr output filter.", 
   "(struct window_handler_baton, window_handler): New struct and func,", 
   "returned by upd_apply_textdelta.", 
   "(upd_apply_textdelta): Return a window handler and baton to accept", 
   "windows and write them as svndiff data to base64_output stream.", 
   "(dav_svn__update_report): Look for new send-all attribute in report", 
   "request, if present, tell svn_repos_begin_report to send txdeltas", 
   "in response.  Set up the base64 output stream in the update ctxt.", 
   "* subversion/libsvn_ra_dav/fetch.c: Include svn_base64.h.", 
   "(report_head): Add send-all=\"true\" attribute.", 
   "(report_elements): Add new \"txdelta\" / ELEM_txdelta element.", 
   "(validate_element): Allow the new element where appropriate.", 
   "(start_element): Don't fetch props.  Add comments.", 
   "(end_element): Handle txdelta element.  Don't fetch props.", 
   "* subversion/libsvn_ra_dav/ra_dav.h", 
   "(ELEM_txdelta): New enum.", 
   "A partial list of what's left to do:", 
   "- Make svn_base64_stream stuff not destroy itself (?).", 
   "- Eventually: base_checksum to apply_textdelta().", 
   "- Look for \"### kff speeeeeed\" comments, handle them.", 
   "- Remember to remove cdata shim.", 
   "- What about lifetime of data handed off to a brigade?", 
   "(Note that send_xml() doesn't have this issue, because it's", 
   "vformatting the data anyway into its own pool)."
  ], 
  "revision_id": "847767"
 }, 
 {
  "author": "sussman", 
  "date": "2003-11-10T22:02:40.608166Z", 
  "msg": [
   "Make branch for #1429 w/Karl."
  ], 
  "revision_id": "847766"
 }
]