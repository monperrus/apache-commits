[
 {
  "author": "cmpilato", 
  "date": "2001-03-26T17:04:48.000000Z", 
  "msg": [
   "* libsvn_fs/delta.c", 
   "(get_revision_from_hash): Bug fixes to bug fixes.", 
   "(struct context): Added 'const' to editor field.", 
   "* libsvn_fs/delta.c", 
   "* include/svn_delta.h", 
   "(svn_fs_dir_delta): Added 'const' to editor argument."
  ], 
  "revision_id": "839030"
 }, 
 {
  "author": "gstein", 
  "date": "2001-03-26T10:05:01.000000Z", 
  "msg": [
   "Add Version-Controlled Configurations (VCCs), Baselines, Baseline", 
   "Collections (BCs), and some live property support to enable checkouts.", 
   "* dav_svn.h (DAV_SVN_DEFAULT_VCC_NAME): new define", 
   "(enum dav_svn_private_restype): add values for the root collection, the", 
   "collection of VCCs, the collection of BCs, and individual VCCs.", 
   "(enum dav_svn_build_what, dav_svn_build_uri): new enum and func decl.", 
   "* deadprops.c (dav_svn_db_open): many resource types don't have dead props,", 
   "so don't \"open\" a propdb for them.", 
   "(dav_svn_db_fetch): detect and handle missing props", 
   "* liveprops.c (dav_svn_namespace_uris[]): add an \"SVN:\" namespace", 
   "(DAV_SVN_NAMESPACE_URI): new define", 
   "(DAV_SVN_NAMESPACE_URI_DAV): renamed from DAV_SVN_URI_DAV", 
   "(SVN_RO_DAV_PROP2, SVN_RW_DAV_PROP2, SVN_RO_SVN_PROP, SVN_RW_SVN_PROP):", 
   "new macros for declaring live props.", 
   "(SVN_PROPID_baseline_relative_path): new enum value", 
   "(dav_svn_props[]): new property specs", 
   "(dav_svn_insert_prop): respond to some (new) live props. use an \"empty\"", 
   "elem if the value is an empty string.", 
   "(dav_svn_insert_all_liveprops): use dav_svn_props[] to figure out which", 
   "liveprops to insert.", 
   "* repos.c (dav_svn_parse_version_uri, dav_svn_parse_history_uri,", 
   "dav_svn_parse_working_uri, dav_svn_parse_activity_uri,", 
   "dav_svn_parse_uri): add new \"label\" and \"use_checked_in\" parameters.", 
   "(dav_svn_parse_vcc_uri): new function to parse VCC URLs", 
   "(dav_svn_parse_baseline_coll_uri): new function to parse BC URLs", 
   "(struct special_defn): \"parse\" member takes additional \"label\" and", 
   "\"use_checked_in\" parameters.", 
   "(special_subdirs[]): new entries for VCCs and BCs", 
   "(dav_svn_parse_uri): /$svn/ should be labeled as the ROOT_COLLECTION.", 
   "other PRIVATE resources should labeled similarly.", 
   "(dav_svn_prep_regular): only fetch the \"youngest\" revnum if one hasn't", 
   "been specified.", 
   "(dav_svn_prep_version): implement, considering regular VRs and Baselines.", 
   "(dav_svn_get_resource): fix processing of \"relative\" local var, which", 
   "propagates into \"uri_path\" (it was plain busted for the root", 
   "collection).", 
   "(dav_svn_getetag): many resources don't (yet) have etags. skip them.", 
   "(dav_svn_do_walk): don't (yet) allow walking into non-REGULAR resources", 
   "(dav_svn_walk): defer restriction of non-REGULAR walking to", 
   "dav_svn_do_walk when attempting to *descend* into the resource (this", 
   "allows \"walking\" a single resource (depth==0)).", 
   "* util.c (dav_svn_build_uri): new utility to build a private/special URI."
  ], 
  "revision_id": "839029"
 }, 
 {
  "author": "sussman", 
  "date": "2001-03-25T18:25:33.000000Z", 
  "msg": [
   "* adm_crawler.c (report_local_mods): Bugfix: when committing, don't", 
   "assume that just because a file has been added its contents must be", 
   "sent.  This is only true for *new* files.  If an added file has", 
   "non-NULL history, do a real local-mod check to decide."
  ], 
  "revision_id": "839028"
 }, 
 {
  "author": "sussman", 
  "date": "2001-03-25T17:33:13.000000Z", 
  "msg": [
   "* adm_ops.c (svn_wc_set_revision): Bugfix.  After committing a", 
   "directory, remember to modify its *parent's* entry; this entry needs", 
   "to have its ADD flag removed (if present) as well as its revision", 
   "attribute updated."
  ], 
  "revision_id": "839027"
 }, 
 {
  "author": "gstein", 
  "date": "2001-03-24T22:24:31.000000Z", 
  "msg": [
   "track some recent reporter changes. still stubbed, tho."
  ], 
  "revision_id": "839026"
 }
]