[
 {
  "author": "stefan2", 
  "date": "2013-12-03T17:22:07.524186Z", 
  "msg": [
   "Correctly handle the absence of MINOR_VERSION when creating test repositories", 
   "in the 'create_repos' helper.  \"if not MINOR_VERSION\" in this case is", 
   "equivalent to \"if MINOR_VERSION is None or MINOR_VERSION == 0\", which behaves", 
   "incorrectly for the case when the caller actually passes MINOR_VERSION = 0.", 
   "Follow-up to r1245799.", 
   "* subversion/tests/cmdline/svntest/main.py", 
   "(create_repos): Use \"if is None\" instead of \"if not\" when checking the", 
   "MINOR_VERSION for absence.", 
   "Patch by: Evgeny Kotkov <evgeny.kotkov{_AT_}visualsvn.com>"
  ], 
  "revision_id": "1547488"
 }, 
 {
  "author": "sergeyb", 
  "date": "2013-12-03T17:20:54.047588Z", 
  "msg": [
   "Merged revisions 1547482 via svnmerge from", 
   "https://svn.apache.org/repos/asf/cxf/trunk", 
   "........", 
   "r1547482 | sergeyb | 2013-12-03 17:16:09 +0000 (Tue, 03 Dec 2013) | 1 line", 
   "[CXF-5433] Fixing the issue with mapping Multipart types to primitive values", 
   "........"
  ], 
  "revision_id": "1547487"
 }, 
 {
  "author": "stefan2", 
  "date": "2013-12-03T17:20:28.669554Z", 
  "msg": [
   "Fix 'svnadmin recover' regression crash with old repositories", 
   "(--compatible-version=1.3 / 1.2 / 1.1).  Follow-up to r1532029.", 
   "* subversion/libsvn_fs_fs/recovery.c", 
   "(svn_fs_fs__find_max_ids): Call svn_fs_fs__open_pack_or_rev_file in order to", 
   "initialize REV_FILE before passing it as an argument to other functions", 
   "(namely, svn_fs_fs__item_offset).", 
   "Patch by: Evgeny Kotkov <evgeny.kotkov{_AT_}visualsvn.com>"
  ], 
  "revision_id": "1547486"
 }, 
 {
  "author": "ilgrosso", 
  "date": "2013-12-03T17:17:43.495357Z", 
  "msg": [
   "Merge from 1_1_X"
  ], 
  "revision_id": "1547485"
 }, 
 {
  "author": "stefan2", 
  "date": "2013-12-03T17:17:23.802455Z", 
  "msg": [
   "Make svnadmin-tests pass for 1.5 to 1.9 compat runs.", 
   "* subversion/tests/cmdline/svntest/main.py", 
   "(fs_has_rep_sharing,", 
   "fs_has_pack): New feature presence checks that we can use", 
   "e.g. for @SkipUnless conditions.", 
   "* subversion/tests/cmdline/svntest/verify.py", 
   "(RegexOutput.insert,", 
   "RegexListOutput.insert): Add these methods that allow us to e.g.", 
   "prepend lines to svadmin verify outputs", 
   "depending on metadata checks being done.", 
   "(RegexListOutput.__init__): Allow us to start with an empty list.", 
   "* subversion/tests/cmdline/svnadmin_tests.py", 
   "(verify_windows_paths_in_repos): Use the new feature checks instead", 
   "of local logic.", 
   "(load_ranges): Filter sha1 checksums from the expected dump files", 
   "when we use pre-1.5 repositories.", 
   "(hotcopy_incremental_packed): Skip this when the repo doesn't support", 
   "packing.", 
   "(verify_keep_going,", 
   "verify_invalid_path_changes,", 
   "verify_denormalized_names): Insert \"verifying metadata\" patterns", 
   "into expected output depending on repo", 
   "capabilities."
  ], 
  "revision_id": "1547484"
 }
]