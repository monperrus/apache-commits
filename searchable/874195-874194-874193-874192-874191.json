[
 {
  "author": "neels", 
  "date": "2008-11-10T06:30:27.853198Z", 
  "msg": [
   "Mend the re-addition of the dir_closed callback into", 
   "svn_wc_diff_callbacks3_t. Principally, there's a need for this callback", 
   "to be able to notify all changes at once on a directory. Thus, put", 
   "dir_closed() in a position to give complete notification information.", 
   "Anticipating to return svn_wc_notify_state_unknown in other callback", 
   "functions to skip notification there if needed, to return a complete state", 
   "via dir_closed().", 
   "The callers of the diff callbacks don't handle that yet, though. Future", 
   "users of dir_closed() will determine detailed behaviour and still have to", 
   "implement it.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_diff_callbacks3_t): Have both *CONTENTSTATE and *PROPSTATE return", 
   "values in the function signature. Fix the comment.", 
   "* subversion/libsvn_client/repos_diff.c", 
   "(close_directory):", 
   "Apply dir_closed() signature change. Don't pass any pointers to", 
   "dir_closed() yet, to avoid overwriting previous states. Future", 
   "users of dir_closed() will have to decide what to do here.", 
   "* subversion/libsvn_client/diff.c", 
   "(diff_dir_closed): Apply dir_closed() signature change.", 
   "* subversion/libsvn_client/merge.c", 
   "(merge_dir_closed): Apply dir_closed() signature change.", 
   "* subversion/libsvn_wc/deprecated.c", 
   "(dir_closed): Apply dir_closed() signature change."
  ], 
  "revision_id": "874195"
 }, 
 {
  "author": "neels", 
  "date": "2008-11-10T05:42:22.160409Z", 
  "msg": [
   "Undo r34018 which removed the dir_closed() diff callback from", 
   "svn_wc_diff_callbacks3_t. The dir_closed() callback will, after all, be", 
   "needed to be able to notify about an added directory with property", 
   "modifications. This is done  in wise foresight (cough) of the new", 
   "\"diff --summarize\" implementation waiting on branch diff-repos-wc.", 
   "Note that the dir_closed() callback is currently never used, and that", 
   "the code in subversion/libsvn_client/diff.c still fails to call dir_opened()", 
   "and dir_closed() callbacks altogether.", 
   "* subversion/include/svn_wc.h (svn_wc_diff_callbacks3_t):", 
   "Re-add the dir_closed() diff callback.", 
   "* subversion/libsvn_client/merge.c", 
   "(merge_dir_closed): Re-add this diff callback.", 
   "(merge_callbacks): Re-add use of merge_dir_closed().", 
   "* subversion/libsvn_client/diff.c", 
   "(diff_dir_closed): Re-add this diff callback.", 
   "(svn_client_diff4, svn_client_diff_peg4): Re-add use of diff_dir_closed().", 
   "* subversion/libsvn_client/repos_diff.c (close_directory):", 
   "Call the dir_closed() callback again.", 
   "* subversion/libsvn_wc/deprecated.c", 
   "(dir_closed, callbacks_wrapper, callbacks2_wrapper):", 
   "Apply re-addition of dir_closed() diff callback."
  ], 
  "revision_id": "874194"
 }, 
 {
  "author": "neels", 
  "date": "2008-11-10T05:00:23.999084Z", 
  "msg": [
   "On *lightweight* branch tc-resolve:", 
   "Allow sched-deleted nodes to be resolved (fixes update_tests.py 15).", 
   "Also avoid a segmentation fault when svn_wc__loggy_del_tree_conflict() didn't", 
   "write anything to the log.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(resolve_found_entry_callback):", 
   "Allow sched-deleted nodes to be resolved.", 
   "Comment a debugging printf that would fail update_tests.py 15.", 
   "### Have some other debugging printfs, have to be removed again.", 
   "* subversion/libsvn_wc/entries.c", 
   "(visit_tc_too_found_entry):", 
   "Only try to retrieve the ADM_ACCESS in presence of tree-conflicts.", 
   "(visit_tc_too_error_handler):", 
   "Get the ADM_ACCESS on the parent instead of on the node itself, thus", 
   "avoid an error upon an unversioned tree-conflict victim.", 
   "### TODO: check for greater subdir depths.", 
   "* subversion/libsvn_wc/tree_conflicts.c", 
   "(svn_wc__del_tree_conflict):", 
   "Only write and run the log if LOG_ACCUM is not NULL."
  ], 
  "revision_id": "874193"
 }, 
 {
  "author": "neels", 
  "date": "2008-11-10T02:39:10.580264Z", 
  "msg": [
   "On *lightweight* branch: tc-resolve", 
   "*** Checking in julianf's current patch state. ***", 
   "Make \"resolved\" handle tree conflicts per victim rather than per parent.", 
   "### update_tests.py 15 fails", 
   "### tree_conflict_tests.py all tests fail", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(resolve_conflict_on_entry): Do not clear tree conflicts that are recorded", 
   "in this entry. Do not send a notification, but instead report (through a", 
   "new boolean output parameter) whether something was resolved.", 
   "(resolve_found_entry_callback): Resolve any tree conflict for this victim.", 
   "Send a notification if any conflict was resolved.", 
   "(svn_wc_resolved_conflict4): Use an entries-walker function that visits", 
   "unversioned tree conflict victims as well as ordinary entries.", 
   "* subversion/tests/cmdline/log_tests.py", 
   "(merge_history_repos): Resolve the victim, not the parent.", 
   "* subversion/tests/cmdline/tree_conflict_tests.py", 
   "(ensure_tree_conflict): Resolve the victim, not the parent.", 
   "* subversion/tests/cmdline/update_tests.py", 
   "(another_hudson_problem): Resolve the victim, not the parent."
  ], 
  "revision_id": "874192"
 }, 
 {
  "author": "neels", 
  "date": "2008-11-10T02:34:12.934505Z", 
  "msg": [
   "Creating lightweight branch tc-resolve.", 
   "Aim: to fix some tree-conflicts resolve semantics.", 
   "Quoting julianf (mentioned patch will be checked in next):", 
   "It would be great if you could advance the per-victim semantics, by", 
   "making \"svn resolved\" work per victim.", 
   "I recommend first converting \"svn revert\" or \"svn info\" (or both) to use", 
   "svn_wc__walk_entries_and_tc(), and check that they still work, to prove", 
   "that that new walker function works. \"svn revert\" and \"svn info\"", 
   "currently both do their own recursion in order to get correct per-victim", 
   "behaviour.", 
   "Then convert \"svn resolved\" to use it. The attached patch mostly does", 
   "this, but there's still a problem with it trying to get the adm_access", 
   "for an unversioned dir, the same kind of error you pointed out for me a", 
   "few days ago. update_tests 15 shows that error (\"warning: Directory", 
   "'[...]/A/D/G' is missing\").", 
   "Another error shows up in", 
   "tree_conflict_tests.py 1: it fails to resolve a tree conflict."
  ], 
  "revision_id": "874191"
 }
]