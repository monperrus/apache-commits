[
 {
  "author": "jacopoc", 
  "date": "2009-02-08T08:14:58.597517Z", 
  "msg": [
   "Misc enhancements to the update password screen and events: improved layout, error handling."
  ], 
  "revision_id": "742015"
 }, 
 {
  "author": "jonesde", 
  "date": "2009-02-08T07:44:20.842127Z", 
  "msg": [
   "A few cleanups plus a couple of fixes for problems caused by the new html encoding from screen widget included files"
  ], 
  "revision_id": "742014"
 }, 
 {
  "author": "jonesde", 
  "date": "2009-02-08T07:40:40.865698Z", 
  "msg": [
   "Implemented StringModel extension and BeansWrapper extension to load it in order to encode strings for HTML use; this is only done throught the HtmlWidget class that is part of the screen widget, so won't interfere with other FTL uses; note that there is other experimental code in here for wrapping the GenericValue object for html encoding, but that option wasn't very complete so went this way instead; this option behaves better and is more transparent than that escape x as x?html option for FTL files; there are also a few cleanups of typos and things in here; note that this means we have a different Configuration object and so a different template cache, and so we have different cache settings and such; after applying this I found a few places that encoded things they shouldn't but for the most part it is pretty good; will be committing some changes in applications in a bit to resolve a couple of these issues in ecommerce; all should watch out for funny things showing up as HTML text instead of being interpreted by the browser as HTML, meaning it was encoded; in extreme cases just comment out lines 71-73 of HtmlWidget.java to turn off this encoding"
  ], 
  "revision_id": "742013"
 }, 
 {
  "author": "jm", 
  "date": "2009-02-08T05:34:45.666346Z", 
  "msg": [
   "auto-generated test rules"
  ], 
  "revision_id": "742012"
 }, 
 {
  "author": "gmcdonald", 
  "date": "2009-02-08T05:29:03.380412Z", 
  "msg": [
   "test"
  ], 
  "revision_id": "742011"
 }
]