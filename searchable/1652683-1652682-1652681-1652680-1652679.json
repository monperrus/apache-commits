[
 {
  "author": "stefan2", 
  "date": "2015-01-17T22:01:03.540213Z", 
  "msg": [
   "Switch svn_fs_x__dag_dir_entries to using the 2-pool paradigm.", 
   "* subversion/libsvn_fs_x/dag.h", 
   "(svn_fs_x__dag_dir_entries): Change the signature to the new paradigm.", 
   "* subversion/libsvn_fs_x/dag.c", 
   "(svn_fs_x__dag_dir_entries): The pool parameters are simple pass-throughs.", 
   "* subversion/libsvn_fs_x/tree.c", 
   "(compare_dir_structure,", 
   "merge,", 
   "crawl_directory_dag_for_mergeinfo,", 
   "verify_node): Update callers.  Theye all have a handy ITERPOOL that", 
   "we can hijack for very short-lived allocations."
  ], 
  "revision_id": "1652683"
 }, 
 {
  "author": "stefan2", 
  "date": "2015-01-17T21:55:58.790420Z", 
  "msg": [
   "* subversion/libsvn_fs_x/tree.c", 
   "(root_node,", 
   "verify_node): Code formatting fixes.  No functional change."
  ], 
  "revision_id": "1652682"
 }, 
 {
  "author": "stefan2", 
  "date": "2015-01-17T21:54:11.502865Z", 
  "msg": [
   "Tighten memory usage in FSX' svn_fs_dir_entries implementation.", 
   "* subversion/libsvn_fs_x/tree.c", 
   "(x_dir_entries): Introduce a SCRATCH_POOL and fetch the directory in its", 
   "FSX-private format using that pool.  Return a deep copy", 
   "of it in the FS API format.  Once the function returns,", 
   "the caller-provided pool will contain no lingering", 
   "internal / temporary data structures."
  ], 
  "revision_id": "1652681"
 }, 
 {
  "author": "stefan2", 
  "date": "2015-01-17T21:53:58.451244Z", 
  "msg": [
   "* subversion/libsvn_fs_x/dag.c", 
   "(delete_if_mutable): svn_fs_x__dag_dir_entries can never return NULL,", 
   "so don't check for it."
  ], 
  "revision_id": "1652680"
 }, 
 {
  "author": "jani", 
  "date": "2015-01-17T21:52:34.811091Z", 
  "msg": [
   "added Dave"
  ], 
  "revision_id": "1652679"
 }
]