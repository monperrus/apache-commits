[
 {
  "author": "jstrachan", 
  "date": "2002-04-25T18:14:09.000000Z", 
  "msg": [
   "Added the 'define' tag library which allows new tags to be defined at runtime, allowing dynamic tags to be created as well as using Jelly scripts to write macro or template definitions. This isn't tested yet but most of the code is just about there."
  ], 
  "revision_id": "144864"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-04-25T16:47:07.000000Z", 
  "msg": [
   "Patched the detection of EL expressions to follow current JSP and JSTL mechanisms"
  ], 
  "revision_id": "144863"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-04-25T16:35:55.000000Z", 
  "msg": [
   "Patched the examples to use the core tags"
  ], 
  "revision_id": "144862"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-04-24T13:03:03.000000Z", 
  "msg": [
   "Added support for Jexl and made it the default expression language when using Jelly"
  ], 
  "revision_id": "144861"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-04-24T11:59:13.000000Z", 
  "msg": [
   "Refactored the Jelly engine to be XML native. Jelly now uses a class called XMLOutput which is-a SAX ContentHandler. This means that each custom tag is essentially a tap in the SAX pipestream. Indeed a custom tag can easily filter its body in a typical SAX pipeline like that used in Cocoon. Updated the documentation to reflect the new core dependencies"
  ], 
  "revision_id": "144860"
 }
]