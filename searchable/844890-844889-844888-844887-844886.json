[
 {
  "author": "striker", 
  "date": "2003-02-10T11:13:37.063868Z", 
  "msg": [
   "* subversion/tests/libsvn_delta/diff-diff3-test.c", 
   "Change XFAIL to PASS for test_two_way_unified_suspect.", 
   "* subversion/libsvn_delta/diff_file.c", 
   "(svn_diff__file_output_unified_flush_hunk): Add comment.", 
   "(svn_diff__file_output_unified_diff_modified): Add comment about when to", 
   "flush a hunk and start the next.  Fix the condition of when this is", 
   "supposed to happen."
  ], 
  "revision_id": "844890"
 }, 
 {
  "author": "rassilon", 
  "date": "2003-02-10T10:52:07.462065Z", 
  "msg": [
   "Ok folks, this is the big URL stability/rename patch. This supports", 
   "tracking moves in the changes table, fixes issue #1003, and handling", 
   "the annoying rename cases.", 
   "Additional follow on patches for other folks to contemplate:", 
   "* Add support for getting rename information out of the changes table", 
   "with appropriate test cases.", 
   "* Implement TODOs in tree.c's directory merge routine to detect rename", 
   "conflicts, as well as test cases for them.", 
   "* Don't pass the path in txn_body_delete's add_change call when", 
   "!parent_path->in_lazy_land.", 
   "* Leverage open_path's new common path prefix support in other APIs that", 
   "make use of two open_path calls.", 
   "The reason for picking the various schema changes this patch does are", 
   "handling #1003, being able to easily discover moves during the log", 
   "generation process of files/directories that aren't at the top of the", 
   "actual move operation, and not increasing the cost of the open_path", 
   "operation.", 
   "This set of bits passes fs-test, and changes-test.", 
   "* include/svn_fs.h (svn_fs_change_kind_t): Added svn_fs_change_moved.", 
   "* libsvn_fs/tree.c (parent_path_t): Added inherit member.", 
   "(make_parent_path): Add inherit parameter.", 
   "(get_id_path): Remove path concicalization.", 
   "(compute_parent_path_info): Renamed from is_child_lazy_copied. Also", 
   "merged in choose_copy_id logic into this function.", 
   "(open_path): Support passing in common constructor parent_paths via parent_path_p.", 
   "This is required for any two path modifying function, and a possible", 
   "perf win for other multi-path operations since this allows you to", 
   "cache the open_path lazy/copyid computations. Another one of the", 
   "fallout consequences is that the paths used in open path aren't canocalized.", 
   "(choose_copy_id): Merged into compute_parent_path_info.", 
   "(make_path_mutable): No longer call choose_copy_id.", 
   "(add_change): Added path parameter.", 
   "(txn_body_created_rev, txn_body_proplist, txn_body_props_changed,", 
   "txn_body_contents_changed, txn_body_revisions_changed):", 
   "Initalize parent_path to NULL.", 
   "(txn_body_change_node_prop, txn_body_make_dir, txn_body_make_file,", 
   "txn_body_apply_textdelta, txn_body_apply_text): Initalize", 
   "parent_path to NULL, and fixup add_change call.", 
   "(undelete_change): Fixup add_change call.", 
   "(txn_body_dir_entries): Initialize parent_path to NULL, dump path", 
   "canocalization, and call compute_parent_path_info.", 
   "(txn_body_delete): Fixup svn_fs__dag_delete_tree call.", 
   "(txn_body_rename): New function.", 
   "(svn_fs_rename): Implement using txn_body_rename.", 
   "(txn_body_copy): Initialize parent_path to NULL, fixup svn_fs__dag_copy call, and", 
   "fixup add_change call.", 
   "* libsvn_fs/dag.h (svn_fs__dag_delete_tree): Added delete_mutables", 
   "parameter. Rename doesn't   want the mutables deleted thank you.", 
   "(svn_fs__dag_copy): Added output param for created to_id. Added", 
   "kind, and from_txn_id parameters. The from_txn_id parameter is to", 
   "reduce unecessary db reads.", 
   "* libsvn_fs/bdb/copies-table.h (svn_fs__bdb_create_copy): Add kind parameter.", 
   "* libsvn_fs/bdb/copies-table.c (svn_fs__bdb_create_copy): Add and use", 
   "new kind parameter.", 
   "* libsvn_fs/bdb/changes-table.c (svn_fs__bdb_changes_fetch): If the", 
   "PATH isn't in the row then get the PATH from ID.COMMIT-PATH.", 
   "* libsvn_fs/fs.h (svn_fs__copy_kind_t): New enumeration to distinguish", 
   "between copies and moves.   Eventually, it's likely that a merge-add", 
   "copy_kind will be added.", 
   "(svn_fs__change_t): Added kind and path memebers.", 
   "* libsvn_fs/structure: Update Changes and Copy table descriptions.", 
   "* libsvn_fs/dag.c (txn_body_dag_init_fs): Fixup svn_fs__bdb_create_copy call.", 
   "(delete_entry): Add delete_mutables parameter.", 
   "(svn_fs__dag_delete_tree): Add delete_mutables parameter.", 
   "(svn_fs__dag_delete): Fixup delete_entry call.", 
   "(svn_fs__dag_copy): Add new parameters.", 
   "* libsvn_fs/util/fs_skels.c (is_valid_copy_skel, is_valid_change_skel,", 
   "svn_fs__parse_copy_skel, svn_fs__parse_change_skel,", 
   "svn_fs__unparse_change_skel,", 
   "svn_fs__unparse_copy_skel): Deal with new table columns.", 
   "* tests/libsvn_fs/changes-test.c (add_standard_changes,", 
   "add_standard_fs_changes): Set change.path to NULL.", 
   "* tests/libsvn_fs/fs-test.c (rename_test): Add and extend Philip's rename tests.", 
   "(branch_test): Add comments to help other people to understand", 
   "what's supposed to happen."
  ], 
  "revision_id": "844889"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-02-10T07:19:23.157450Z", 
  "msg": [
   "* subversion/libsvn_fs/bdb/uuids-table.c", 
   "(svn_fs__bdb_get_uuid, svn_fs__bdb_set_uuid): Indentation fixes only", 
   "-- no logical changes."
  ], 
  "revision_id": "844888"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-02-10T07:15:46.521682Z", 
  "msg": [
   "* subversion/libsvn_fs/bdb/uuids-table.c", 
   "(svn_fs__bdb_open_uuids_table, svn_fs__bdb_get_uuid,", 
   "svn_fs__bdb_set_uuid): Only store and retrieve the UUID as data,", 
   "not its terminating NULL character.  Also, some formatting changes", 
   "throughout."
  ], 
  "revision_id": "844887"
 }, 
 {
  "author": "dwhedon", 
  "date": "2003-02-10T04:13:44.979881Z", 
  "msg": [
   "* configure.in : Define a new macro, SVN_CLIENT_EDITOR, in", 
   "svn_private_config.h.in and associate it with the new --with-editor=PATH", 
   "configure switch.", 
   "* subversion/clients/cmdline/util.c (svn_cl__edit_externally) : If", 
   "SVN_CLIENT_EDITOR is defined then use it as an editor if no editor can be", 
   "found in the environment.  We now include svn_private_config.h where this", 
   "macro may be defined."
  ], 
  "revision_id": "844886"
 }
]