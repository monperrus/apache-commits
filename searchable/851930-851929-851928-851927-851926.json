[
 {
  "author": "striker", 
  "date": "2004-11-12T06:28:53.261149Z", 
  "msg": [
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_LOCK_EXPIRED): New error code.", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(txn_body_expire_lock, check_lock_expired): New functions.", 
   "(svn_fs_base__unlock): Flesh out.", 
   "(txn_body_get_lock_from_path, txn_body_get_lock_from_token):", 
   "Check for expired locks.", 
   "(txn_body_get_locks): Resolve the lock tokens to locks,", 
   "checking for expired locks as we go."
  ], 
  "revision_id": "851930"
 }, 
 {
  "author": "cmpilato", 
  "date": "2004-11-12T05:21:48.145157Z", 
  "msg": [
   "Mo' Python bindings cleanups.", 
   "* subversion/bindings/swig/python/svn/util.py", 
   "Delete.  Stop propogating the madness.", 
   "* tools/examples/revplist.py", 
   "* tools/examples/geturl.py", 
   "* tools/examples/check-modified.py", 
   "Stop using the util module."
  ], 
  "revision_id": "851929"
 }, 
 {
  "author": "striker", 
  "date": "2004-11-12T04:31:54.229283Z", 
  "msg": [
   "Take some baby steps on the locking front...", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(txn_body_get_lock_from_path, svn_fs_base__get_lock_from_path):", 
   "Fix and refactor with sussman.", 
   "(svn_fs_base__get_lock_from_token): Fix and resolve warnings.", 
   "(txn_body_get_locks): New function.", 
   "(svn_fs_base__get_locks): Flesh out."
  ], 
  "revision_id": "851928"
 }, 
 {
  "author": "striker", 
  "date": "2004-11-12T03:39:10.931608Z", 
  "msg": [
   "Flesh out the lock tokens table functionality.", 
   "* subversion/libsvn_fs_base/bdb/lock-tokens-table.c", 
   "* subversion/libsvn_fs_base/bdb/lock-tokens-table.h", 
   "Renamed from lock-nodes-table.[ch]", 
   "(svn_fs_bdb__open_lock_tokens_table): Renamed from", 
   "svn_fs_bdb__open_lock_nodes_table.  Use a different table", 
   "name too: lock-tokens.", 
   "(svn_fs_bdb__lock_token_add, svn_fs_bdb__lock_token_delete,", 
   "svn_fs_bdb__lock_token_get, svn_fs_bdb__lock_tokens_get,", 
   "svn_fs_bdb__lock_token_exists):", 
   "New functions.", 
   "(svn_fs_bdb__lock_node_add, svn_fs_bdb__lock_node_delete,", 
   "svn_fs_bdb__lock_node_get): Removed.", 
   "* subversion/libsvn_fs_base/fs.h", 
   "(base_fs_data_t): Rename lock_nodes to lock_tokens.", 
   "* subversion/libsvn_fs_base/err.c", 
   "* subversion/libsvn_fs_base/err.h", 
   "(svn_fs_base__err_no_such_lock): New function.", 
   "* subversion/libsvn_fs_base/util/fs_skels.c", 
   "* subversion/libsvn_fs_base/util/fs_skels.h", 
   "(is_valid_lock_node_skel, svn_fs_base__parse_lock_node_skel,", 
   "svn_fs_base__unparse_lock_node_skel): Removed.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_NO_SUCH_LOCK): New error code.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(cleanup_fs, base_create, base_open, base_hotcopy):", 
   "Add the lock-tokens table handling."
  ], 
  "revision_id": "851927"
 }, 
 {
  "author": "cmpilato", 
  "date": "2004-11-12T02:19:34.734626Z", 
  "msg": [
   "More Python bindings cleanups.", 
   "* subversion/bindings/swig/python/svn/core.py", 
   "(Stream, secs_from_timestr): Add a docstring.", 
   "(argv_to_command_string): Was fs._escape_msvcrt_shell_command(),", 
   "fs._escape_msvcrt_shell_arg(), and fs._re_slashquote.", 
   "* subversion/bindings/swig/python/svn/fs.py", 
   "(FileDiff.get_pipe): Update call to core.argv_to_command_string().", 
   "(_escape_msvcrt_shell_command, _escape_msvcrt_shell_arg,", 
   "_re_slashquote): Move these to the core module (and rename)."
  ], 
  "revision_id": "851926"
 }
]