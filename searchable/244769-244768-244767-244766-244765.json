[
 {
  "author": "gdaniels", 
  "date": "2001-05-03T15:37:09.000000Z", 
  "msg": [
   "Use new deserialization methods, which cleans up the code."
  ], 
  "revision_id": "244769"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-05-03T15:35:47.000000Z", 
  "msg": [
   "First stage of cleaning up control flow and deserialization handling.  Add", 
   "a couple of \"events\" to DeserializerBase, for start and end of child", 
   "elements.  This makes deserializing structures much nicer (see samples/", 
   "encoding).", 
   "Next step is to clean up the MessageElement/RPCElement/RPCParam", 
   "classes, but wanted to checkpoint this."
  ], 
  "revision_id": "244768"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-05-03T14:34:16.000000Z", 
  "msg": [
   "A little sample illustrating a way to integrate a custom data type (a struct)", 
   "with the encoding system."
  ], 
  "revision_id": "244767"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-05-03T14:32:41.000000Z", 
  "msg": [
   "First cut at a more real encoding system, which supports mapping arbitrary", 
   "types to serializers/deserializers.  Needs cleanup (especially in terms of", 
   "how the various pieces learn about each other), but the basic structure", 
   "works.  See samples/encoding for a demo of encoding a custom data", 
   "type."
  ], 
  "revision_id": "244766"
 }, 
 {
  "author": "dug", 
  "date": "2001-05-03T13:31:25.000000Z", 
  "msg": [
   "oops - typo"
  ], 
  "revision_id": "244765"
 }
]