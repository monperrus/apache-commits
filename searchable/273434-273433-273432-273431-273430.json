[
 {
  "author": "costin", 
  "date": "2002-10-11T18:05:37.000000Z", 
  "msg": [
   "Added a callback for setProperty. This would allow different property", 
   "stores to implement their own policy.", 
   "This feature will not work in ant15 ( for now ).", 
   "Also changed Project to Object - and use it as a context. This makes", 
   "the callback more generic and the hooks less dependent of ant.", 
   "The only major issue on dynamic properties for me is the JNDI stuff.", 
   "I think the Context interface could be a better abstraction, but", 
   "on the other side it is much more complex. I also want to finalize", 
   "the JNDI property source and abstract the properties via JNDI", 
   "so tasks can be created without any dep on ant, but still accessing", 
   "properties and refs."
  ], 
  "revision_id": "273434"
 }, 
 {
  "author": "costin", 
  "date": "2002-10-11T18:01:33.000000Z", 
  "msg": [
   "Few small changes and comments.", 
   "I would like to extend it a bit more in the future - to support", 
   "properties like \"${property}\" without a string conversion.", 
   "In other workds, if a dynamic property is used ( which return an", 
   "object ), the object should be used as such in the introspection.", 
   "That would greatly simplify tasks and allow more flexibility."
  ], 
  "revision_id": "273433"
 }, 
 {
  "author": "costin", 
  "date": "2002-10-11T17:57:56.000000Z", 
  "msg": [
   "Added an alternate implementation, so we can override default", 
   "behavior and control the creation.", 
   "This will work for all code that checks instanceof, but", 
   "will obviously fail if any code explicitely looks at the class", 
   "name ( which is very unlikely - so far no code did that in the", 
   "gump run or otherwise ).", 
   "The UnknownElement2/RuntimeConfigurable2 will be further refactored", 
   "to make them more independent of the XML representation and", 
   "have a cleaner API. All behavior will be moved out of the XML", 
   "processor and into this pair. Of course, full backward compat will", 
   "be provided."
  ], 
  "revision_id": "273432"
 }, 
 {
  "author": "costin", 
  "date": "2002-10-11T17:55:25.000000Z", 
  "msg": [
   "Moved XMLDOM to taskdefs. There is no difference between type and", 
   "task any more, and it may do some active stuff in execute()"
  ], 
  "revision_id": "273431"
 }, 
 {
  "author": "costin", 
  "date": "2002-10-11T17:54:18.000000Z", 
  "msg": [
   "Added the proposed hook for component creation.", 
   "Full backward compatibility is provided - the project", 
   "is used to create tasks. The mechanism allows full", 
   "flexibility in implementing any kind of antlib policy,", 
   "and allows applications embeding ant to integrate in the", 
   "component creation process.", 
   "Probably a good improvement would be to move the 'default'", 
   "behavior in a separate plugin ( DefaultComponentFactory - to", 
   "use the project component storage ), and deprecate the use", 
   "of Project for project component management.", 
   "After more feedback is received I'll propose this for the", 
   "main branch."
  ], 
  "revision_id": "273430"
 }
]