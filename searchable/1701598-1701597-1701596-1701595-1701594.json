[
 {
  "author": "rhuijben", 
  "date": "2015-09-07T10:23:44.938206Z", 
  "msg": [
   "Make 'svn' return an error when at least one lock or unlock operation fails.", 
   "Some users call this a regression against Subversion 1.8.x, but this really", 
   "depends on what RA layer you used before upgrading as the behavior wasn't", 
   "consistent.. Some returned an error, thereby failing the rest of the", 
   "operation while others produced a warning via the callback.", 
   "Note that there is no actual behavior change inside Subversion in this", 
   "commit, but just one in how the result is reported by svn.", 
   "* subversion/svn/lock-cmd.c", 
   "(notify_lock_baton_t): New struct.", 
   "(notify_lock_handler): New function.", 
   "(svn_cl__lock): Wrap notify handler to detect errors.", 
   "* subversion/svn/unlock-cmd.c", 
   "(notify_unlock_baton_t): New struct.", 
   "(notify_unlock_handler): New function.", 
   "(svn_cl__unlock): Wrap notify handler to detect errors.", 
   "* subversion/tests/cmdline/lock_tests.py", 
   "(steal_lock,", 
   "out_of_date,", 
   "lock_and_exebit1,", 
   "lock_and_exebit2,", 
   "unlock_already_unlocked_files,", 
   "unlock_wrong_token,", 
   "unlocked_lock_of_other_user,", 
   "lock_twice_in_one_wc,", 
   "lock_path_not_in_head,", 
   "block_unlock_if_pre_unlock_hook_fails,", 
   "lock_invalid_token,", 
   "lock_hook_messages,", 
   "dav_lock_timeout,", 
   "many_locks_hooks): Update expected behavior."
  ], 
  "revision_id": "1701598"
 }, 
 {
  "author": "desruisseaux", 
  "date": "2015-09-07T10:23:14.145332Z", 
  "msg": [
   "Added comments and a check against too strong restriction on parameter values."
  ], 
  "revision_id": "1701597"
 }, 
 {
  "author": "mreutegg", 
  "date": "2015-09-07T10:17:09.754100Z", 
  "msg": [
   "OAK-3356: Unclosed sessions in oak-jcr tests"
  ], 
  "revision_id": "1701596"
 }, 
 {
  "author": "stefanegli", 
  "date": "2015-09-07T10:16:14.482583Z", 
  "msg": [
   "SLING-4991 : fix for testNonDelayedInitEvent : the 'late' listener was getting a TOPOLOGY_CHANGED which it erroneously checked for isCurrent to be false - that is of course not the case so the handle event method was throwing an AssertionError - which caused the DiscoveryServiceImpl's AsyncEventSender to step back 5 sec due to this unexpected Error - which was stopping any further events to be sent and caused the test to fail"
  ], 
  "revision_id": "1701595"
 }, 
 {
  "author": "amassari", 
  "date": "2015-09-07T10:11:28.089342Z", 
  "msg": [
   "Don't assume we know the size of the decoded string, expand the buffer whenever the transcoder reports it wrote 0 bytes (XERCESC-2052)"
  ], 
  "revision_id": "1701594"
 }
]