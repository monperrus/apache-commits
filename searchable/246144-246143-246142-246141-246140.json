[
 {
  "author": "gdaniels", 
  "date": "2002-01-03T21:57:22.000000Z", 
  "msg": [
   "Utility class for dealing with internationalized string resources.", 
   "This class deals with:", 
   "1) Locales", 
   "2) Automatically merging properties from \"parent\" files to \"children\" (see", 
   "comments)", 
   "3) Automatically searching the correct place in the classpath for messages,", 
   "which allows us to organize messages in a much nicer way", 
   "Originally written by Karl Moss at Macromedia, tweaked for Axis."
  ], 
  "revision_id": "246144"
 }, 
 {
  "author": "scheu", 
  "date": "2002-01-03T20:33:43.000000Z", 
  "msg": [
   "* Added Parameter Name Retrieval Feature described below.", 
   "* Added new utils class JavapUtils, that can be used to obtain class information using javap.", 
   "* Minor changes to support the new -i option.", 
   "* Updated Java2WSDL text in user's guide.", 
   "New Java2WSDL Feature", 
   "---------------------", 
   "Previously, the Java2WSDL emitter used names such as in0 and inOut1 for", 
   "the WSDL message part names.", 
   "Now, Java2WSDL will query the debug information in the web service class file", 
   "to determine the method parameter names.  These names are used to", 
   "generate the WSDL message part names; thus there is no longer any", 
   "loss of information.", 
   "If the web service class file describes an interface, or if the class", 
   "file was not compiled with -g, then the parameter names are not available.", 
   "In such cases, the new -i <impl-class> option can be used to pass", 
   "an alternate class.  This <impl-class> is only used to determine the names", 
   "of the method parameters.  The <impl-class> can be an implementation class,", 
   "a stub class or a skeleton class.", 
   "In the event that Java2WSDL cannot access the parameter names, it will", 
   "fallback and use the default in# and inOut## parameter names.", 
   "Enjoy!", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "246143"
 }, 
 {
  "author": "rubys", 
  "date": "2002-01-03T18:08:29.000000Z", 
  "msg": [
   "1. The most important reason for the patch is to allow more consistent use", 
   "of terminology. Without the patch TargetedChain is not strictly a Chain at", 
   "all (i.e. the TargetedChain interface doesn't extend the Chain interface),", 
   "so its name is rather misleading. Renaming TargetedChain to avoid referring", 
   "to Chain doesn't help as the concepts are so close. I believe that a", 
   "TargetedChain really is a special type of Chain with separately", 
   "identifiable requst, pivot, and response handlers. Similarly,", 
   "SimpleTargetedChain is really a special type of SimpleChain as its name", 
   "implies and the patch enshrines this in the code by making the former", 
   "extend the latter.", 
   "2. SimpleTargetedChain is initialised in stages which allows it to appear", 
   "in partially initialised states, e.g. with the request handler set but", 
   "without the response handler. This is changed to provide explicit", 
   "constructors which take the appropriate number of parameters and produce", 
   "valid SimpleTargetedChain instances. The error checking code in SOAPService", 
   "to cope with partially initialised states is then unnecessary.", 
   "3. There is quite a bit of duplicated logic between SimpleTargetedChain and", 
   "SimpleChain which can be deleted once the former is changed to extend the", 
   "latter. The result is easier to maintain. For example, if we rename undo or", 
   "modify its behaviour, we will not have to touch SimpleTargetedChain as it", 
   "will inherit its undo behaviour from SimpleChain.", 
   "4. There is also duplicated logic between SimpleTargetedChain and", 
   "SOAPService. In the patch, the additional logic has been separated out into", 
   "a Handler inside SOAPService which then allows the standard behaviour of", 
   "SimpleChain invoke (and undo) to be inherited.", 
   "Submitted by:\tGlyn Normington <glyn_normington@uk.ibm.com>"
  ], 
  "revision_id": "246142"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-01-03T17:20:21.000000Z", 
  "msg": [
   "Commit correct version which actually uses engine actors...."
  ], 
  "revision_id": "246141"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-01-03T17:12:36.000000Z", 
  "msg": [
   "First round of changes for actor attribute support."
  ], 
  "revision_id": "246140"
 }
]