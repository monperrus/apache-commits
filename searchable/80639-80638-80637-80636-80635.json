[
 {
  "author": "coar", 
  "date": "1998-03-24T02:58:49.000000Z", 
  "msg": [
   "Time for some FAQ revamp work.  Mostly cosmetic, but the LockFile", 
   "issue has been added because it has certainly become a FAQ!"
  ], 
  "revision_id": "80639"
 }, 
 {
  "author": "rse", 
  "date": "1998-03-23T15:44:15.000000Z", 
  "msg": [
   "if apache+HIDE && module+!HIDE then", 
   "no chance at all, because dlopen() cannot implicitly", 
   "resolve apache's XXX symbols for module because they", 
   "are named AP_XXX", 
   "else if apache+!HIDE && module+HIDE then", 
   "no chance at all, because dlopen() cannot implicitly", 
   "resolve apache's AP_XXX symbols for module because they", 
   "are named XXX", 
   "else if apache+HIDE && module+HIDE then", 
   "we have to prefix the resolved module symbol with AP_", 
   "(THIS PATCH!)", 
   "else if apache+!HIDE && module+!HIDE then", 
   "we have to just resolve the symbol as is", 
   "(AS ALREADY DONE IN THE PAST)"
  ], 
  "revision_id": "80638"
 }, 
 {
  "author": "rse", 
  "date": "1998-03-23T07:42:10.000000Z", 
  "msg": [
   "Germany/Munich: On Saturday bright and sunny and warm, now on", 
   "Monday a shock: Snow, snow, snow... and again really cold... Brrrrr..."
  ], 
  "revision_id": "80637"
 }, 
 {
  "author": "rse", 
  "date": "1998-03-23T07:28:40.000000Z", 
  "msg": [
   "Ops, mod_proxy has it's own local definition of the implict Makefile rules,", 
   "so change the compiler run for more portable usage here, too."
  ], 
  "revision_id": "80636"
 }, 
 {
  "author": "rse", 
  "date": "1998-03-23T07:26:03.000000Z", 
  "msg": [
   "Make shared object compilation more portable, because there are vendor", 
   "compilers out there (for instance UnixWare's cc) which don't honor the `-o'", 
   "option when used in combination with the `-c' option. They always create xx.o", 
   "for xx.c and just pass `-o' to the linker phase (which doesn't exist when `-c'", 
   "is used :-( ). This way shared objects are even supported under UnixWare."
  ], 
  "revision_id": "80635"
 }
]