[
 {
  "author": "ivan", 
  "date": "2014-06-20T00:57:42.352985Z", 
  "msg": [
   "On remove-log-addressing branch: Further cleanup now unused code.", 
   "* subversion/libsvn_fs_fs/cached_data.c", 
   "(dbg_log_access): Remove unused local variable.", 
   "(init_rep_state, block_read_windows, read_rep_header, block_read_contents,", 
   "auto_select_stream, block_read_changes,  block_read_noderev): Remove", 
   "unused static functions.", 
   "* subversion/libsvn_fs_fs/pack.c", 
   "(): Remove explanation how log addressing enabled repositories packing", 
   "works.", 
   "(DEFAULT_MAX_MEM, path_order_t, reference_t): Remove.", 
   "(pack_rev_shard): Remove unused argument MAX_MEM.", 
   "(pack_shard): Update caller."
  ], 
  "revision_id": "1604063"
 }, 
 {
  "author": "daijy", 
  "date": "2014-06-20T00:57:25.881916Z", 
  "msg": [
   "PIG-3892: Pig distribution for hadoop 2"
  ], 
  "revision_id": "1604062"
 }, 
 {
  "author": "kwright", 
  "date": "2014-06-20T00:57:13.418900Z", 
  "msg": [
   "Get it to compile"
  ], 
  "revision_id": "1604061"
 }, 
 {
  "author": "daijy", 
  "date": "2014-06-20T00:56:48.292426Z", 
  "msg": [
   "PIG-3892: Pig distribution for hadoop 2"
  ], 
  "revision_id": "1604060"
 }, 
 {
  "author": "ivan", 
  "date": "2014-06-20T00:41:20.338196Z", 
  "msg": [
   "On remove-log-addressing branch: First step of removing log addressing", 
   "support from FSFS: remove all checks for svn_fs_fs__use_log_addressing()", 
   "assuming that log addressing is not supported for all revisions.", 
   "* subversion/libsvn_fs_fs/cached_data.c", 
   "(block_read): Remove.", 
   "(dbg_log_access, get_node_revision_body, svn_fs_fs__rev_get_root,", 
   "create_rep_state_body, svn_fs_fs__check_rep, read_delta_window,", 
   "svn_fs_fs__get_changes): Remove check for svn_fs_fs__use_log_addressing().", 
   "* subversion/libsvn_fs_fs/caching.c", 
   "(): Do not include \"index.h\"", 
   "(svn_fs_fs__initialize_caches): Remove initialization of log-addressing", 
   "related caches.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(initialize_fs_struct): Do not initialize ffd->min_log_addressing_rev.", 
   "(PATH_EXT_L2P_INDEX, PATH_EXT_P2L_INDEX, CONFIG_OPTION_L2P_PAGE_SIZE,", 
   "CONFIG_OPTION_P2L_PAGE_SIZE, SVN_FS_FS__MIN_LOG_ADDRESSING_FORMAT):", 
   "Remove.", 
   "* subversion/libsvn_fs_fs/fs.h", 
   "(fs_fs_data_t): Remove min_log_addressing_rev, l2p_page_size,", 
   "p2l_page_size, l2p_header_cache, l2p_page_cache, p2l_header_cache and", 
   "p2l_page_cache fields", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(read_format): Remove min_log_addressing_rev argument and handling for", 
   "log addressing FORMAT files.", 
   "(svn_fs_fs__write_format): Remove support for writing log addressing", 
   "format files.", 
   "(read_config): Remove reading log addressing related configuration options.", 
   "(write_config): Do not mention log addressing configuration options.", 
   "(svn_fs_fs__open): Do not initialize ffd->min_log_addressing_rev.", 
   "(upgrade_body, write_revision_zero, svn_fs_fs__create): Remove log", 
   "addressing support.", 
   "* subversion/libsvn_fs_fs/hotcopy.c", 
   "(hotcopy_copy_shard_file): Do not copy indexes, since we do not create", 
   "them at all.", 
   "* subversion/libsvn_fs_fs/index.h", 
   "* subversion/libsvn_fs_fs/index.c", 
   "(l2p_page_table_entry_t, l2p_header_t, l2p_page_t, l2p_proto_entry_t,", 
   "p2l_header_t, value_position_pair_t, svn_fs_fs__packed_number_stream_t,", 
   "stream_error_create, packed_stream_read, packed_stream_open,", 
   "svn_fs_fs__packed_stream_close, packed_stream_get, packed_stream_seek,", 
   "packed_stream_offset, encode_uint, encode_int,  decode_int,", 
   "write_entry_to_proto_index, encode_l2p_page,", 
   "svn_fs_fs__l2p_proto_index_open, svn_fs_fs__l2p_proto_index_add_revision,", 
   "svn_fs_fs__l2p_proto_index_add_entry, index_create,", 
   "svn_fs_fs__l2p_index_create, retry_open_l2p_index, auto_open_l2p_index,", 
   "get_l2p_header_body, l2p_page_info_baton_t, l2p_page_info_copy,", 
   "l2p_page_info_access_func, get_l2p_page_info, l2p_page_table_baton_t,", 
   "l2p_page_table_access_func, get_l2p_page_table, get_l2p_page,", 
   "prefetch_l2p_pages, l2p_entry_baton_t, l2p_page_get_entry,", 
   "l2p_entry_access_func, l2p_index_lookup, l2p_proto_index_lookup,", 
   "get_l2p_header, svn_fs_fs__l2p_get_max_ids,", 
   "svn_fs_fs__p2l_proto_index_open,", 
   "svn_fs_fs__p2l_proto_index_add_entry,", 
   "svn_fs_fs__p2l_proto_index_next_offset, svn_fs_fs__p2l_index_create,", 
   "retry_open_p2l_index, auto_open_p2l_index, get_p2l_header,", 
   "p2l_page_info_baton_t, p2l_page_info_copy, p2l_page_info_func,", 
   "get_p2l_page_info, read_entry, get_p2l_page, prefetch_p2l_page,", 
   "get_p2l_keys, compare_start_p2l_entry, append_p2l_entries,", 
   "p2l_entries_baton_t, p2l_entries_func, p2l_index_lookup,", 
   "svn_fs_fs__p2l_index_lookup, compare_p2l_entry_offsets,", 
   "get_p2l_entry_from_cached_page, p2l_entry_lookup_func,", 
   "svn_fs_fs__p2l_entry_lookup, p2l_get_max_offset_func,", 
   "p2l_get_max_offset, svn_fs_fs__p2l_get_max_offset,", 
   "svn_fs_fs__serialize_l2p_header, svn_fs_fs__deserialize_l2p_header,", 
   "svn_fs_fs__serialize_l2p_page, svn_fs_fs__deserialize_l2p_page,", 
   "svn_fs_fs__serialize_p2l_header, svn_fs_fs__deserialize_p2l_header,", 
   "svn_fs_fs__serialize_p2l_page, svn_fs_fs__deserialize_p2l_page): Remove", 
   "now unused functions and structures.", 
   "(svn_fs_fs__item_offset): Remove support for log addressing format.", 
   "* subversion/libsvn_fs_fs/pack.c", 
   "(): Do not include \"index.h\"", 
   "(pack_context_t, initialize_pack_context, reset_pack_context,", 
   "close_pack_context, copy_file_data, write_null_bytes, copy_item_to_temp,", 
   "get_item_array_index, add_item_rep_mapping, get_item, copy_rep_to_temp,", 
   "compare_dir_entries_format7, tweak_path_for_ordering, copy_node_to_temp,", 
   "compare_path_order, compare_references, compare_ref_to_item,", 
   "compare_is_dir, roundness, sort_reps_range, sort_reps, compare_p2l_info,", 
   "sort_items, get_block_left, auto_pad_block, store_item, store_items,", 
   "copy_reps_from_temp, compare_p2l_info_rev, write_l2p_index, pack_range,", 
   "append_revision, pack_log_addressed): Remove now unused structures and", 
   "functions.", 
   "(pack_rev_shard): Remove check for log addressing support.", 
   "(svn_fs_fs__order_dir_entries): Always use format6 style ordering.", 
   "* subversion/libsvn_fs_fs/rev_file.h", 
   "(svn_fs_fs__revision_file_t): Remove p2l_stream and l2p_stream fields.", 
   "* subversion/libsvn_fs_fs/rev_file.c", 
   "(svn_fs_fs__init_revision_file): Do not initialize removed fields.", 
   "(svn_fs_fs__close_revision_file): Do not close p2l and l2p streams.", 
   "* subversion/libsvn_fs_fs/transaction.c", 
   "(auto_truncate_proto_rev, allocate_item_index, write_final_rev,", 
   "write_final_changed_path_info, commit_body): Remove log addressing", 
   "code path.", 
   "(store_l2p_index_entry, store_p2l_index_entry, using_log_addressing,", 
   "fnv1a_checksum_on_file_range, compare_sort_p2l_entry,", 
   "upgrade_transaction): Remove now unused static functions.", 
   "* subversion/libsvn_fs_fs/util.h", 
   "* subversion/libsvn_fs_fs/util.c", 
   "(svn_fs_fs__path_l2p_index, svn_fs_fs__path_p2l_index,", 
   "svn_fs_fs__path_l2p_proto_index, svn_fs_fs__path_p2l_proto_index): Remove.", 
   "* subversion/libsvn_fs_fs/verify.c", 
   "(): Do not include \"index.h\".", 
   "(compare_l2p_to_p2l_index, compare_p2l_to_l2p_index, expect_buffer_nul,", 
   "read_all_nul, expected_checksum, expected_buffered_checksum,", 
   "expected_streamed_checksum, compare_p2l_to_rev, verify_index_consistency):", 
   "Remove now unused static functions.", 
   "(svn_fs_fs__verify): Remove log addressing enabled repositories code path.", 
   "* subversion/tests/libsvn_fs_fs/fs-fs-pack-test.c", 
   "(write_format): Remove support for writing log addressing enabled FORMAT", 
   "files.", 
   "(pack_filesystem): Do not check l2p and p2l indexes.", 
   "* tools/server-side/svnfsfs/dump-index-cmd.c", 
   "(dump_index): Always return SVN_ERR_FS_UNSUPPORTED_FORMAT error."
  ], 
  "revision_id": "1604059"
 }
]