[
 {
  "author": "rubys", 
  "date": "2001-05-22T13:41:20.000000Z", 
  "msg": [
   "Make TypeMappingRegistry self managing (like the other registries)"
  ], 
  "revision_id": "244859"
 }, 
 {
  "author": "rubys", 
  "date": "2001-05-22T11:22:46.000000Z", 
  "msg": [
   "Typemapping registry not required for an RPCDispatch unit test"
  ], 
  "revision_id": "244858"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-05-22T05:25:35.000000Z", 
  "msg": [
   "Some cleanup and a little new stuff.", 
   "DebugHandler:", 
   "Clean up old code.", 
   "AxisServer:", 
   "Use a different exception for missing service name, as", 
   "opposed to couldn't find service in registry.", 
   "AxisServlet:", 
   "Try servlet initParameters first, then context.  This allows", 
   "for individual servlets in the same webapp to be different", 
   "Axis transports.", 
   "LogMessage handler:", 
   "A trivial handler which just \"marks\" some custom message", 
   "when it is invoked.  Primarily for testing and debugging.", 
   "URLMapper handler:", 
   "Assume the target service name is the pathInfo of the servlet", 
   "request, so if you had a servlet at http://foo.com/axis, and called", 
   "http://foo.com/axis/AdminService, you'd get the admin."
  ], 
  "revision_id": "244857"
 }, 
 {
  "author": "rubys", 
  "date": "2001-05-22T00:07:49.000000Z", 
  "msg": [
   "Add a unit test for a more complex data structure"
  ], 
  "revision_id": "244856"
 }, 
 {
  "author": "rubys", 
  "date": "2001-05-21T21:03:51.000000Z", 
  "msg": [
   "Now actually define a chain of typemaps.  By default an ephemeral", 
   "set is provided backed up by the good ol' SOAPTypeMappings.  Axis", 
   "Server goes a step further and interposes a persistent set, which", 
   "ultimately should be populated by deployment info (in the short", 
   "term deploy.xml, and ultimately WSDD)."
  ], 
  "revision_id": "244855"
 }
]