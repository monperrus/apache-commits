[
 {
  "author": "philip", 
  "date": "2010-08-03T14:56:08.370381Z", 
  "msg": [
   "Make depth_tests.py 37-40 pass in single-db. Deleted directories", 
   "are removed from disk in single-db, but remain until commit in", 
   "per-directory-db.", 
   "* subversion/tests/cmdline/depth_tests.py", 
   "(make_depth_tree_conflicts): Tweak expectations for single-db."
  ], 
  "revision_id": "981905"
 }, 
 {
  "author": "jukka", 
  "date": "2010-08-03T14:54:17.375904Z", 
  "msg": [
   "JCR-2695: Jackrabbit performance test suite", 
   "Add performance tests for all main Jackrabbit 1.x versions"
  ], 
  "revision_id": "981904"
 }, 
 {
  "author": "rhuijben", 
  "date": "2010-08-03T14:52:30.965845Z", 
  "msg": [
   "Make the ambient depth filter capable of handling just the BASE_NODE depth,", 
   "and reduce the number of database operations on the way.", 
   "* subversion/libsvn_wc/ambient_depth_filter_editor.c", 
   "(edit_baton): Add read_base variable.", 
   "(read_ambient_info): New function.", 
   "(make_dir_baton, make_file_baton, open_root, delete_entry,", 
   "open_directory): Use read_ambient_info instead of one or more", 
   "other db operations.", 
   "(svn_wc__ambient_depth_filter_editor): Reorder arguments to new", 
   "standard ordering and accept read_base argument.", 
   "* subversion/libsvn_wc/diff.c", 
   "(svn_wc_get_diff_editor6): Update caller. Keep working_tree filtering.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(make_editor): Update caller. Request base_tree filtering.", 
   "* subversion/libsvn_wc/wc.h", 
   "(svn_wc__ambient_depth_filter_editor): Update prototype and documentation."
  ], 
  "revision_id": "981903"
 }, 
 {
  "author": "schor", 
  "date": "2010-08-03T14:43:55.490421Z", 
  "msg": [
   "[UIMA-1840] Implement a valid equals method for resultSpecs - old method only tested 2 of the fields (was defaulting from a superclass). This equals method is used in the test case to compare actual and expected result specs.  Implement a hashcode that throws unsupported operation, since computing a true hashcode is very expensive and isn't done.", 
   "One test broke in AnalysisEngine_implTest - where it compared the ResultSpec sent in (which had a type with language x-unspecified), with the resultSpec sent to the last primitive (which had an output capability of \"en\" for that type) - which made the result spec there != to the one sent in (it was \"narrowed\" to \"en\").", 
   "Fixed the method that added a spec to the new resultSpec in intersection to work, given that the bitsets for languages are not necessarily compatible.", 
   "Added a test case to the ResultSpecTest and verified it failed before the fix, and worked afterwards."
  ], 
  "revision_id": "981902"
 }, 
 {
  "author": "jbonofre", 
  "date": "2010-08-03T14:36:22.227310Z", 
  "msg": [
   "[SMX4-567] Normalize bundles naming convention."
  ], 
  "revision_id": "981901"
 }
]