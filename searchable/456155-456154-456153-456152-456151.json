[
 {
  "author": "ehillenius", 
  "date": "2005-03-06T12:46:58.000000Z", 
  "msg": [
   "doc fix"
  ], 
  "revision_id": "456155"
 }, 
 {
  "author": "ehillenius", 
  "date": "2005-03-06T09:50:39.000000Z", 
  "msg": [
   "fixes"
  ], 
  "revision_id": "456154"
 }, 
 {
  "author": "jonl", 
  "date": "2005-03-06T08:58:22.000000Z", 
  "msg": [
   "Removed constructor overloads taking OGNL expressions and Serializable objects, reducing parameters to (String name) and (String name, IModel model) in most places.  Made FormComponent and Component look in Form and Page, respectively, for models in their implementations of initModel().  This effectively gives any component missing a model either the parent form's model or the page's model.  Made setModel() public again since it's too inconvenient to pass models straight up the constructor chain.  So now Forms and Pages can have CompoundPropertyModels and BoundCompoundPropertyModels and their children will essentially inherit this compound model (which is parameterized by component).  Since Pages and Forms will typically hold CompoundPropertyModels, it was necessary to make a method getRootModel() which gets the rootmost nested model from the compound model.  This is convenient because it means that Forms do not have to have a separate instance variable to track the actual bean being edited.  If getRootModel() did not exist, getModelObject() on the Form or Page would fail because the model would be parameterized on the Form or Page itself."
  ], 
  "revision_id": "456153"
 }, 
 {
  "author": "jonl", 
  "date": "2005-03-06T08:51:52.000000Z", 
  "msg": [
   "Removed constructor overloads taking OGNL expressions and Serializable objects, reducing parameters to (String name) and (String name, IModel model) in most places.  Made FormComponent and Component look in Form and Page, respectively, for models in their implementations of initModel().  This effectively gives any component missing a model either the parent form's model or the page's model.  Made setModel() public again since it's too inconvenient to pass models straight up the constructor chain.  So now Forms and Pages can have CompoundPropertyModels and BoundCompoundPropertyModels and their children will essentially inherit this compound model (which is parameterized by component).  Since Pages and Forms will typically hold CompoundPropertyModels, it was necessary to make a method getRootModel() which gets the rootmost nested model from the compound model.  This is convenient because it means that Forms do not have to have a separate instance variable to track the actual bean being edited.  If getRootModel() did not exist, getModelObject() on the Form or Page would fail because the model would be parameterized on the Form or Page itself."
  ], 
  "revision_id": "456152"
 }, 
 {
  "author": "jonl", 
  "date": "2005-03-06T08:08:36.000000Z", 
  "msg": [
   "Typo"
  ], 
  "revision_id": "456151"
 }
]