[
 {
  "author": "cmpilato", 
  "date": "2001-05-31T16:10:02.000000Z", 
  "msg": [
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(do_apply_textdelta): Clean up bad logic conversion that occured", 
   "in my recent Big Ol' Change.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add_file, svn_wc_add_directory): Fix some oopses that", 
   "occurred in the recent Big Ol' Change.", 
   "(svn_wc_undelete): Add some real guts for this function.", 
   "* subversion/libsvn_wc/entries.c", 
   "(fold_state_changes): Uh...make the error messages at least report", 
   "the correct name of the function.", 
   "* subversion/libsvn_wc/log.c", 
   "(log_do_delete_entry): Minor segfault protection.", 
   "(log_do_committed): Change formatting (and set) of modification", 
   "flags in call to svn_wc__entry_modify."
  ], 
  "revision_id": "839430"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-05-30T16:13:02.000000Z", 
  "msg": [
   "WOOT! WOOT!  WARNING: Big ol' change follows.", 
   "While the scope of the change is no larger than the libsvn_wc", 
   "module...it's not much smaller, either. ;-)", 
   "* include/svn_wc.h", 
   "(enum svn_wc_schedule_t, enum svn_wc_existence_t): New types for", 
   "tracking state.", 
   "(typedef struct svn_wc_entry_t): New state tracking variables.", 
   "* libsvn_wc/wc.h", 
   "(svn_wc__entry_fold_sync, svn_wc__entry_fold_sync_intelligently):", 
   "Removed these functions.  Instead, use...", 
   "(svn_wc__entry_modify): New function for entry modification.  Lots", 
   "of flags added for use with this function, as well.", 
   "(svn_wc__atts_to_entry): New function for converting an entries", 
   "attribute hash into an svn_wc_entry_t entry structure.", 
   "* libsvn_wc/adm_ops.c", 
   "Instances of svn_wc__entry_fold_sync_intelligently and", 
   "svn_wc__entry_fold_sync changed to use svn_wc__entry_modify.", 
   "(svn_wc_add_file, svn_wc_add_directory): Added some sanity checks.", 
   "* libsvn_wc/get_editor.c", 
   "Instances of svn_wc__entry_fold_sync_intelligently and", 
   "svn_wc__entry_fold_sync changed to use svn_wc__entry_modify.", 
   "* libsvn_wc/log.c", 
   "Instances of svn_wc__entry_fold_sync_intelligently and", 
   "svn_wc__entry_fold_sync changed to use svn_wc__entry_modify.", 
   "(log_do_modify_entry): Now use factorized code in svn_wc__atts_to_entry.", 
   "* libsvn_wc/props.c", 
   "(svn_wc__do_property_merge): Minor patch to use renamed #define.", 
   "* libsvn_wc/questions.c", 
   "* libsvn_wc/status.c", 
   "Minor patches to use new entry state variables.", 
   "* libsvn_wc/adm_crawler.c", 
   "Patches to use new entry state variables.", 
   "(verify_tree_deletion): Renamed from verify_deleted_tree.", 
   "* libsvn_wc/entries.c", 
   "Instances of svn_wc__entry_fold_sync_intelligently and", 
   "svn_wc__entry_fold_sync changed to use svn_wc__entry_modify.  Lots", 
   "of modified uses of the new entry state variables.", 
   "(svn_wc__atts_to_entry): New function for converting an entries", 
   "attribute hash into an svn_wc_entry_t entry structure.", 
   "(handle_start_tag): Now use factorized code in svn_wc__atts_to_entry.", 
   "(normalize_entry): Write out the new entries XML.", 
   "(fold_state_changes): Renamed from interpret_changes, gutted, and", 
   "rewritten with new state stuffs in mind.", 
   "(internal_fold_sync, svn_wc__entry_fold_sync,", 
   "svn_wc__entry_fold_sync_intelligently): Obsolete functions removed.", 
   "(svn_wc__entry_modify): New function for entry modification.", 
   "* include/svn_error.h", 
   "(SVN_ERR_WC_ENTRY_ATTRIBUTE_INVALID): New error type."
  ], 
  "revision_id": "839429"
 }, 
 {
  "author": "gstein", 
  "date": "2001-05-30T11:58:11.000000Z", 
  "msg": [
   "Fix the XML_DIR symbol to point to the .../xml/ subdirectory rather than the", 
   "top of the source tree."
  ], 
  "revision_id": "839428"
 }, 
 {
  "author": "gstein", 
  "date": "2001-05-30T11:33:49.000000Z", 
  "msg": [
   "* Makefile.in: toss the SVN_EXPAT_LIBS macro (unused). add some initial (and", 
   "unused) gunk for doc targets. the \"check\" target should depend on ALL", 
   "test programs rather than just the ones it will actually run. add START", 
   "and END lines into the log file.", 
   "HACK: chmod a+x the test prog. some .sh scripts aren't +x when they come", 
   "out of CVS. need to tweak the CVS repository to fix.", 
   "* gen-make.py: generate the TEST_DEPS macro"
  ], 
  "revision_id": "839427"
 }, 
 {
  "author": "gstein", 
  "date": "2001-05-30T11:26:23.000000Z", 
  "msg": [
   "(main): watch out for (and skip) the srcdir argument which is passed during", 
   "a standard \"make check\" execution."
  ], 
  "revision_id": "839426"
 }
]