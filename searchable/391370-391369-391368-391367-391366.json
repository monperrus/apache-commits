[
 {
  "author": "remm", 
  "date": "2006-04-04T17:19:42.371524Z", 
  "msg": [
   "- Update poweredby."
  ], 
  "revision_id": "391370"
 }, 
 {
  "author": "kmarsden", 
  "date": "2006-04-04T17:17:34.268692Z", 
  "msg": [
   "DERBY-1144 With client PooledConnection.getConnection() does not reset holdability and isolation state properly", 
   "This patch addresses this issue by changing PooledConnection.getConnection() to reset the connection to the datasource defaults.", 
   "Code changes:", 
   "Just a small code change in ClientPooledConnection to pass true to the reset method to reset the defaults.", 
   "This change has the side effect of making DERBY- 1173 harder to reproduce. But I don't think it fixes that bug. With the change, the checkDataSource test hangs only very intermittently. The fixer of that bug will have to go back to a previous version to get a easily reproducable case.", 
   "Tests -", 
   "Changed the checkDataSource30.java test to test holdability,isolation, and autocommit reset."
  ], 
  "revision_id": "391369"
 }, 
 {
  "author": "gharley", 
  "date": "2006-04-04T17:17:04.625347Z", 
  "msg": [
   "HARMONY-295 : New implementation and test code. Test cases complete successfully against both 5.0 RI and Harmony.", 
   "InitManifest.java contains small mod to fix boundary condition failure that was noticed after the changes to", 
   "related issue HARMONY-204 were committed."
  ], 
  "revision_id": "391368"
 }, 
 {
  "author": "weber", 
  "date": "2006-04-04T17:13:28.169429Z", 
  "msg": [
   "fix for TOBAGO-10 (Combine the attributes label, labelWithAccessKey and accessKey to one attribute label)"
  ], 
  "revision_id": "391367"
 }, 
 {
  "author": "ekoneil", 
  "date": "2006-04-04T17:10:02.443736Z", 
  "msg": [
   "Add the Serializable marker interface to PageFlowControlContainerImpl.  With this attribute in the session, it seems like (Daryl, correct me if I'm wrong) this should be serializable.  Both the CCC object and lock that it wraps are serializable and should live across nodes in a cluster / HttpSession serialization, etc.", 
   "When the ReentrantLock serializes, it will be in the unlocked state after being deserialized.  When a request restarts, thsi seems like the right thing to have happen.", 
   "BB: self", 
   "Test: NetUI pass"
  ], 
  "revision_id": "391366"
 }
]