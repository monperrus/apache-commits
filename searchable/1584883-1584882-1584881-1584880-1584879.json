[
 {
  "author": "uschindler", 
  "date": "2014-04-04T20:17:41.648512Z", 
  "msg": [
   "Make Exception more readable (those coming from -Dtests.directory=NonExistentDir). We have Rethrow calss for that!"
  ], 
  "revision_id": "1584883"
 }, 
 {
  "author": "philip", 
  "date": "2014-04-04T20:11:05.725530Z", 
  "msg": [
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(svn_repos_fs_lock_many, svn_repos_fs_unlock_many): Always attempt the", 
   "post- hooks if there were any successful lock/unlock operations."
  ], 
  "revision_id": "1584882"
 }, 
 {
  "author": "tross", 
  "date": "2014-04-04T20:09:44.995652Z", 
  "msg": [
   "DISPATCH-35 - Moved connection handling and configuration to a new configuration_manager module.", 
   "Added on-demand connectors."
  ], 
  "revision_id": "1584881"
 }, 
 {
  "author": "tross", 
  "date": "2014-04-04T20:06:24.856528Z", 
  "msg": [
   "DISPATCH-35 and DISPATCH-34 - Added basis for multi-phase transfer and on-demand connectors."
  ], 
  "revision_id": "1584880"
 }, 
 {
  "author": "philip", 
  "date": "2014-04-04T19:59:16.918076Z", 
  "msg": [
   "Don't assume absence of fs_err indicates lock_body/unlock_body was", 
   "successful.  This handles conditions like disk full or obstructions", 
   "in db/locks.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_LOCK_OPERATION_FAILED): New.", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(struct unlock_info_t): Add done member.", 
   "(unlock_body): Set done when unlock is successful.", 
   "(svn_fs_fs__lock): Generate an error if there is no lock and no fs_err.", 
   "(svn_fs_fs__unlock): Generate an error if the done flag is not set", 
   "and there is no fs_err."
  ], 
  "revision_id": "1584879"
 }
]