[
 {
  "author": "pmarek", 
  "date": "2005-03-04T11:17:08.474645Z", 
  "msg": [
   "* branches/meta-data-versioning/owner-group-mode:", 
   "Copy trunk to the owner-group-mode sub-branch."
  ], 
  "revision_id": "853330"
 }, 
 {
  "author": "pmarek", 
  "date": "2005-03-04T11:15:05.451838Z", 
  "msg": [
   "* branches/meta-data-versioning/text-time:", 
   "Copy trunk to the text-time sub-branch."
  ], 
  "revision_id": "853329"
 }, 
 {
  "author": "pmarek", 
  "date": "2005-03-04T11:03:42.080332Z", 
  "msg": [
   "* branches/meta-data-versioning: Create base directory for branches."
  ], 
  "revision_id": "853328"
 }, 
 {
  "author": "epg", 
  "date": "2005-03-04T03:18:22.443752Z", 
  "msg": [
   "Note r13193 is fsfs only.  Nominate and vote for r13222, r13223,", 
   "r13232, and r13218."
  ], 
  "revision_id": "853327"
 }, 
 {
  "author": "fitz", 
  "date": "2005-03-04T01:00:59.355426Z", 
  "msg": [
   "Locking branch: The first step in converting svn_ra_*_lock to send multiple", 
   "locks across the wire in one request.", 
   "An array of paths is passed to the client layer, which gathers base", 
   "revision info from the wc and passed the paths and base revisions", 
   "along to the ra layer in a hash.", 
   "ra_dav and ra_svn are presently \"shimmed\" to send the locks over the", 
   "wire one at a time, but we'll fix that in a later commit once I've", 
   "also converted svn_ra_*_unlock.", 
   "Oh, and I fixed a few typos I encountered.", 
   "* subversion/libsvn_ra/ra_loader.c (svn_ra_lock):", 
   "Remove lock, path, and current_rev args, and add locks, path_revs,", 
   "lock_func, and lock_baton args.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_lock): Remove lock, path, and current_rev args, and add", 
   "locks, path_revs, lock_func, and lock_baton args.", 
   "* subversion/libsvn_ra/ra_loader.h", 
   "(svn_ra__vtable_t): Change function signature of (*lock).", 
   "* subversion/include/svn_types.h", 
   "(svn_lock_callback_t): New callback function type.", 
   "* subversion/include/svn_client.h:", 
   "(svn_client_lock): New args: svn_wc_lock_info_func_t and lock_baton", 
   "* subversion/clients/cmdline/lock-cmd.c", 
   "(print_lock_info): New callback function.", 
   "(svn_cl__lock): Pass all targets to svn_client lock, instead of", 
   "iterating over the array and passing the targets one at a time.", 
   "(lock_baton): New opaque struct for print_lock_info.", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__lock): Remove lock, path, and current_rev args, and", 
   "add locks, path_revs, lock_func, and lock_baton args.  Lock each", 
   "path in path_revs.", 
   "(svn_ra_local__unlock): Fix typo in comment.", 
   "* subversion/libsvn_client/locking_commands.c", 
   "(lock_baton): New opaque struct for print_lock_info.", 
   "(store_locks_callback): New callback function.", 
   "(open_lock_targets): New private helper function.", 
   "(svn_client_lock): New args: svn_wc_lock_info_func_t and lock_baton.", 
   "Pass array of paths to svn_ra_lock.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add_lock): Fix typo.", 
   "(svn_wc_remove_lock): Fix typo.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_lock): Remove lock, path, and current_rev args, and add", 
   "locks, path_revs, lock_func, and lock_baton args.  Continue to send", 
   "locks over the wire one at a time until we rev the svn protocol to", 
   "send (and return) an array of locks in one request (which will", 
   "happen in a later commit).", 
   "* subversion/libsvn_ra_dav/session.c", 
   "(shim_svn_ra_dav__lock): Renamed from svn_ra_dav__lock (as a", 
   "temporary measure.", 
   "(svn_ra_dav__lock): Remove lock, path, and current_rev args, and add", 
   "locks, path_revs, lock_func, and lock_baton args.  Continue to send", 
   "locks over the wire one at a time until we write a custom POST to", 
   "send (and return) an array of locks in one request (which will", 
   "happen in a later commit)."
  ], 
  "revision_id": "853326"
 }
]