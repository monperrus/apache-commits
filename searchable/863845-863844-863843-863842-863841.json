[
 {
  "author": "hwright", 
  "date": "2007-03-10T23:18:56.245614Z", 
  "msg": [
   "Correctly parse the svn:externals definition when given only two arguments.", 
   "Also, actually parse the peg revision from the url provided.  Followup to", 
   "r23746.", 
   "* subversion/libsvn_wc/props.c", 
   "(parse_external_parts_with_peg_rev):  Correct the ordering for the target and", 
   "source for svn:externals parsing.  Parse the url for the peg revision."
  ], 
  "revision_id": "863845"
 }, 
 {
  "author": "ehu", 
  "date": "2007-03-10T21:53:23.358750Z", 
  "msg": [
   "Use working_size to indicate a file was modified when last updating entries.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_entry_t.working_size): Document that negative values mean", 
   "that we couldn't set the field because of the fact that the file was", 
   "changed when we tried to.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(loggy_tweak_entry): Mark the file 'changed' when updating an entry", 
   "because of a checkout/update.", 
   "(merge_file): Mark the file 'unchanged' if it wasn't", 
   "locally changed after all."
  ], 
  "revision_id": "863844"
 }, 
 {
  "author": "ehu", 
  "date": "2007-03-10T21:46:09.761210Z", 
  "msg": [
   "Reset working_size when reverting or repairing a working copy element.", 
   "* subversion/libsvn_wc/questions.c", 
   "(svn_wc__text_modified_internal_p): Repair working_size", 
   "when repairing text_time.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(revert_admin_things): Reset working_size when reverting."
  ], 
  "revision_id": "863843"
 }, 
 {
  "author": "ehu", 
  "date": "2007-03-10T21:10:13.916121Z", 
  "msg": [
   "Fix indenting."
  ], 
  "revision_id": "863842"
 }, 
 {
  "author": "ehu", 
  "date": "2007-03-10T11:22:25.977791Z", 
  "msg": [
   "Make the 'working file has changed' heuristic more robust:", 
   "check for the size of the file too.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_entry_t): Add 'working_size' field.", 
   "* subversion/libsvn_wc/wc.h (SVN_WC__WORKING_SIZE_WC): New constant.", 
   "* subversion/libsvn_wc/entries.h", 
   "(SVN_WC__ENTRY_ATTR_WORKING_SIZE,", 
   "SVN_WC__ENTRY_MODIFY_WORKING_SIZE): New constant.", 
   "(SVN_WC__ENTRY_MODIFY_ALL): Adjust to include all bits again.", 
   "(SVN_WC__ENTRY_MODIFY_FORCE): Move this flag to the topmost bit to prevent", 
   "it shifting every time we define a new bit.", 
   "* subversion/libsvn_wc/entries.c", 
   "(svn_wc__atts_to_entry): Convert the working size attribute into an entry.", 
   "(read_entry): Read the working size.", 
   "(write_entry): Write the working size.", 
   "(fold_entry): Fold the working size.", 
   "* subversion/libsvn_wc/log.c", 
   "(log_do_committed): Set the working size of the entry when it's a file.", 
   "(log_do_modify_entry): Extract the working size from the attributes list.", 
   "(svn_wc__loggy_entry_modify): Set the working size.", 
   "* subversion/libsvn_wc/log.h", 
   "* subversion/libsvn_wc/log.c", 
   "(svn_wc__loggy_set_entry_working_size_from_wc): New.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(merge_file): Generate log commands to set working size.", 
   "(loggy_tweak_entry): Tweak working size too.", 
   "* subversion/libsvn_wc/questions.c", 
   "(localfile_size_changed_p): New. Checks whether the actual and", 
   "entry-recorded file sizes differ.", 
   "(svn_wc__text_modified_internal_p): Adjust to check file sizes", 
   "as well as timestamps."
  ], 
  "revision_id": "863841"
 }
]