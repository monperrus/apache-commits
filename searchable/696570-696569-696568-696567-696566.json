[
 {
  "author": "supun", 
  "date": "2008-09-18T06:22:12.687655Z", 
  "msg": [
   "Fixing issues 1254 and 1266."
  ], 
  "revision_id": "696570"
 }, 
 {
  "author": "hansbak", 
  "date": "2008-09-18T06:16:16.107773Z", 
  "msg": [
   "use system userlogin to avoid security problems"
  ], 
  "revision_id": "696569"
 }, 
 {
  "author": "fmeschbe", 
  "date": "2008-09-18T06:15:27.083385Z", 
  "msg": [
   "SLING-663 sling:Folder changes:", 
   "* sling:Folder extends nt:folder and is not orderable", 
   "* sling:OrderedFolder extends sling:Folder and is orderable", 
   "* sling:HierarchyNode mixin extends nt:hierarchyNode"
  ], 
  "revision_id": "696568"
 }, 
 {
  "author": "dbertoni", 
  "date": "2008-09-18T06:09:53.701418Z", 
  "msg": [
   "Finish implementing exclusion of test cases that are known to be bad."
  ], 
  "revision_id": "696567"
 }, 
 {
  "author": "baerrach", 
  "date": "2008-09-18T05:53:07.226300Z", 
  "msg": [
   "[MECLIPSE-423] Fix NullPointerException when existing Manifest.MF file has no Class-Path element", 
   "EclipseManifestWriter and RadManifestWriter are a cut-and-paste. Created AbstractEclipseManifestWriter as shared parent class", 
   "and moved all the common stuff up.  Where the code varied EclipseManifestWriter's implementation was chosen.  This was because the variation was often a bug fix.", 
   "The only variation that could not be easily sorted was in addDependencyToClassPath where they only differ at the end:", 
   "EclipseManifestWriter:", 
   "classpath.append( dependency.getEclipseProjectName() + \".jar\" );", 
   "RadManifestWriter", 
   "classpath.append( dependency.getArtifactId() + \".jar\" );", 
   "I have taken the eclipse one as being correct and changed RadPlugin to override getProjectNameForArifact() to return artifact.getArtifactId() to match RadManifestWriter dependency.getArtifactId() as above.  Integration tests still work but I need a RAD person to validate this for me.", 
   "Added testProject8 for IT test. Prior to patch this exercised the defect.  After the patch it looks like it is fixed.", 
   "However have asked for clarifiction about write() when a new MANIFEST.MF needs to be written but there is already an existing file.", 
   "See http://www.nabble.com/m-eclipse-p%3A-EclipseManifestWriter.write%28%29---doesn%27t-retain-any-keys-except-CLASS_PATH-and-MANIFEST_VERSION-td19546126.html", 
   "The problem is that the old values will be lost.  Need to check if that is the correct intention."
  ], 
  "revision_id": "696566"
 }
]