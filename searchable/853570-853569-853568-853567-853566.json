[
 {
  "author": "cmpilato", 
  "date": "2005-03-19T08:02:18.691916Z", 
  "msg": [
   "Locking branch: Sync svn_fs_fs__allow_locked_operation() up with its", 
   "BDB form.  The C locks now pass again for both backends.", 
   "* subversion/libsvn_fs_fs/lock.h,", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(svn_fs_fs__allow_locked_operation): Lose the 'kind'.  Nobody cares.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(verify_locks): New (copied almost wholesale from libsvn_fs_base).", 
   "(svn_fs_fs__commit): Lose lock verification code -- call", 
   "verify_locks() instead.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(fs_change_node_prop, fs_make_dir, fs_delete_node, copy_helper,", 
   "fs_make_file, apply_textdelta, apply_text): Don't fetch node kinds", 
   "unnecessarily, and update calls to svn_fs_fs__allow_locked_operation()."
  ], 
  "revision_id": "853570"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-19T08:01:04.090926Z", 
  "msg": [
   "Locking branch: Some comment cleanups in libsvn_fs_base.", 
   "* subversion/libsvn_fs_base/tree.c", 
   "(verify_locks): Add a docstring, and lose a redundant comment."
  ], 
  "revision_id": "853569"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-19T07:39:10.146507Z", 
  "msg": [
   "Locking branch: Rewrite the FSFS locking schema to support directory", 
   "locking (though the logic will still disallow it).  And describe the", 
   "schema in the structure file.", 
   "* subversion/libsvn_fs_fs/structure", 
   "(Layout of the FS directory): Add the locks directory layout.", 
   "(Locks layout): Describe the locks layout.", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(base_lock_dir, write_entries_file, read_entries_file,", 
   "repository_abs_path, write_lock_to_file, read_lock_from_abs_path,", 
   "read_lock_from_file, read_lock_from_hash_name,", 
   "get_locks_under_path, get_lock_helper, join_array_components,", 
   "add_hash_to_entries_file): Remove these functions.", 
   "(CHILDREN_KEY, DIGEST_SUBDIR_LEN): New.", 
   "(hash_store): Add 'key_len' and 'value_len' parameters.", 
   "(hash_fetch, delete_lock): Rework.", 
   "(ensure_dir_exists): Was make_dir().  Lose the 'ref_path', add 'fs'.", 
   "Promise to dupe fs->path's permissions.  And rework.", 
   "(digest_path_from_digest): Was abs_path_to_lock_digest_file().", 
   "Now returns the path instead of an error.  Rework.  Callers updated.", 
   "(digest_path_from_path): Was abs_path_to_lock_file().  Now", 
   "returns the path instead of an error.  Rework.  Callers updated.", 
   "(write_digest_file, read_digest_file, walk_digest_files): New.", 
   "Pretty much any symbol *not* listed here was touched up to account", 
   "for the previous changes."
  ], 
  "revision_id": "853568"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-19T07:38:35.274665Z", 
  "msg": [
   "Locking branch:  Make each C locks test use a uniquely named filesystem."
  ], 
  "revision_id": "853567"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-19T05:54:23.637407Z", 
  "msg": [
   "Add some TODO items."
  ], 
  "revision_id": "853566"
 }
]