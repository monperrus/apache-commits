[
 {
  "author": "neels", 
  "date": "2010-07-01T17:51:36.836747Z", 
  "msg": [
   "Improve selected add-vs.-add tree conflict situations -- add as in unversioned", 
   "obstruction, add, copy-here, move-here, upon update, switch and checkout.", 
   "Take advantage of the wc-ng we already have to teach update_editor:add_file()", 
   "and close_file() to treat many add-vs-add conflicts much better. Note that", 
   "this is not changing *_directory() yet.", 
   "A very detailed description of this patch can be found in", 
   "notes/tree-conflicts/all-add-vs-add-tree-conflicts.txt", 
   ", which is being added in this revision.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(complete_directory):", 
   "Don't remove not_present nodes that were created to mark an add-vs.-add", 
   "conflict against unversioned.", 
   "(struct file_baton):", 
   "New flag ADDING_BASE_UNDER_LOCAL_ADD.", 
   "(create_tree_conflict): New function.", 
   "(check_tree_conflict):", 
   "Out-source the conflict struct creation to create_tree_conflict() above.", 
   "Fix the comment.", 
   "(build_write_revert_base_props): New function.", 
   "(add_file):", 
   "Remove some obsolete logic, but, in essence, just streamline and flag a", 
   "few more tree conflicts. Also use the COPYFROM_* args to flag conflicts", 
   "where local add hits an incoming copy, and to omit conflicts where local", 
   "and incoming are identical copies.", 
   "(close_file):", 
   "Detect whether incoming adds are symlinks, and flag tree conflicts if", 
   "symlink-ness mismatches local. Query file_baton's new parameter", 
   "ADDING_BASE_UNDER_LOCAL_ADD, and pull the incoming add directly into the", 
   "revert-base slots, if appropriate, not changing the WORKING/ACTUAL data.", 
   "* subversion/libsvn_client/info.c", 
   "(info_found_node_callback):", 
   "Make sure that unversioned nodes can show a tree conflict on 'svn info'.", 
   "* notes/tree-conflicts/all-add-vs-add-tree-conflicts.txt:", 
   "New file.", 
   "* subversion/tests/cmdline/checkout_tests.py", 
   "(co_with_obstructing_local_adds),", 
   "* subversion/tests/cmdline/svntest/actions.py", 
   "(run_and_validate_lock),", 
   "* subversion/tests/cmdline/update_tests.py", 
   "(forced_update_failures, update_with_obstructing_additions):", 
   "* subversion/tests/cmdline/switch_tests.py", 
   "(obstructed_switch, forced_switch_failures,", 
   "switch_with_obstructing_local_adds):", 
   "Change these tests to match the new tree conflicts behavior. Some of the", 
   "tests are rewritten from scratch (using svntest.factory).", 
   "* subversion/tests/cmdline/tree_conflict_tests.py", 
   "(incoming_paths, localmod_paths, modify, set_up_repos, ensure_tree_conflict):", 
   "Add 'F3' and a flag to the test suite so that the incoming copy always", 
   "mismatches the local copy (for files only, so far)."
  ], 
  "revision_id": "959735"
 }, 
 {
  "author": "xiaming", 
  "date": "2010-07-01T17:42:53.932010Z", 
  "msg": [
   "Merge rat:check updates from 3.0-M1 branch to trunk"
  ], 
  "revision_id": "959734"
 }, 
 {
  "author": "gerdogdu", 
  "date": "2010-07-01T17:37:08.419117Z", 
  "msg": [
   "Improvement in @EJB injections for OpenEJB. Now supports injecting ejbs witihin the same module with @EJB InterfaceType, example, @EJB ICalculator calculator"
  ], 
  "revision_id": "959733"
 }, 
 {
  "author": "gerdogdu", 
  "date": "2010-07-01T17:35:50.695585Z", 
  "msg": [
   "Update how our loading classes for singletons. Using Class.forName instead of loadClass"
  ], 
  "revision_id": "959732"
 }, 
 {
  "author": "jstrachan", 
  "date": "2010-07-01T17:26:41.328784Z", 
  "msg": [
   "fix for CAMEL-2893 so that getUriOrRef will return non-null when there is a URI defined"
  ], 
  "revision_id": "959731"
 }
]