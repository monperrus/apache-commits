[
 {
  "author": "kou", 
  "date": "2007-03-25T08:18:26.777340Z", 
  "msg": [
   "Support svn_wc_ensure_adm3().", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc.ensure_adm): Deprecated.", 
   "(Svn::Wc::AdmAccess.ensure): New method.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_adm_ensure): New test."
  ], 
  "revision_id": "864185"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T07:58:07.578541Z", 
  "msg": [
   "Support svn_wc_walk_entries3().", 
   "* subversion/bindings/swig/ruby/svn_wc.i", 
   "(%callback_typemap): Use svn_swig_rb_wc_entry_callbacks2() instead of", 
   "svn_swig_rb_wc_entry_callbacks().", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c,", 
   "subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_wc_entry_callbacks2_t *svn_swig_rb_wc_entry_callbacks): Remove.", 
   "(svn_wc_entry_callbacks2_t *svn_swig_rb_wc_entry_callbacks2): New function.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c", 
   "(DEFINE_ID(handle_error, \"handle_error\")): New ID.", 
   "(wc_entry_callbacks_found_entry): Remove.", 
   "(wc_entry_callbacks2_found_entry): New function.", 
   "(wc_entry_callbacks2_handle_error): New function.", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::AdmAccess#walk_entries): Use Svn::Wc.walk_entries3 instead of", 
   "Svn::Wc.walk_entries2.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_ancestry): Add tests for handle_error."
  ], 
  "revision_id": "864184"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T07:14:36.728085Z", 
  "msg": [
   "Support svn_wc_parse_externals_description3().", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby.c,", 
   "subversion/bindings/swig/ruby/libsvn_swig_ruby.h", 
   "(svn_swig_rb_apr_array_to_array_external_item): Remove.", 
   "(svn_swig_rb_apr_array_to_array_external_item2): New function.", 
   "* subversion/bindings/swig/include/svn_containers.swg", 
   "(%typemap(argout) apr_array_header_t **externals_p): Use", 
   "svn_swig_rb_apr_array_to_array_external_item2() instead of", 
   "svn_swig_rb_apr_array_to_array_external_item().", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::ExternalsDescription.parse): New method.", 
   "(Svn::Wc.parse_externals_description): Deprecated.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#assert_externals_description): Abstract test.", 
   "(SvnWcTest#test_externals_description,", 
   "SvnWcTest#test_externals_description_for_backward_compatibility):", 
   "New test."
  ], 
  "revision_id": "864183"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T05:56:33.368821Z", 
  "msg": [
   "Follow-up r24107.", 
   "* subversion/bindings/swig/ruby/svn/fs.rb", 
   "(Svn::Fs._delete): New alias.", 
   "(Svn::Fs::Root#delete): Use Svn::Fs._delete instead of Svn::Fs.delete."
  ], 
  "revision_id": "864182"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T05:53:42.980700Z", 
  "msg": [
   "Improve Svn::Fs interfaces.", 
   "* subversion/bindings/swig/ruby/svn/fs.rb", 
   "(Svn::Fs.create, Svn::Fs.delete, Svn::Fs.open, Svn::Fs.hotcopy,", 
   "Svn::Fs.recover): Use same interfaces of Svn::Repos and Svn::Wc.", 
   "(Svn::Fs::FileSystem.create,", 
   "Svn::Fs::FileSystem.delete,", 
   "Svn::Fs::FileSystem.open,", 
   "Svn::Fs::FileSystem.new,", 
   "Svn::Fs::FileSystem.hotcopy,", 
   "Svn::Fs::FileSystem.recover): Deprecated.", 
   "* subversion/bindings/swig/ruby/test/test_fs.rb", 
   "(SvnFsTest#assert_create, SvnFsTest#assert_hotcopy,", 
   "SvnFsTest#assert_recover): Abstract test.", 
   "(SvnFsTest#test_create, SvnFsTest#test_hotcopy,", 
   "SvnFsTest#test_recover): Test for new interfaces.", 
   "(SvnFsTest#test_create_for_backward_compatibility,", 
   "SvnFsTest#test_hotcopy_for_backward_compatibility,", 
   "SvnFsTest#test_recover_for_backward_compatibility): Test for", 
   "backward compatibility."
  ], 
  "revision_id": "864181"
 }
]