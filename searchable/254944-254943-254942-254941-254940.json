[
 {
  "author": "dims", 
  "date": "2002-08-27T13:10:22.000000Z", 
  "msg": [
   "Use Classutils.forName instead of Class.forName"
  ], 
  "revision_id": "254944"
 }, 
 {
  "author": "scheu", 
  "date": "2002-08-26T23:44:34.000000Z", 
  "msg": [
   "Problem:", 
   "Each string element or attribute inside of a bean causes a SimpleDeserializer to", 
   "be constructed, registered, processed etc.  This is a performance hit.", 
   "Solution:", 
   "If a BeanDeserializer constructs a SimpleDeserializer for a string, it is cached", 
   "and reused.  This prevents a lot of construction/garbage collection.  It also", 
   "speeds up the processing of obtaining string deserializers.", 
   "Added two methods to SimpleDeserializer. The method reset() simply resets", 
   "the information for re-use.  The removeValueTargets method() resets the", 
   "value targets without removing the Vector.", 
   "I also organized this code under the new BeanDeserializer.getDeserializer method.", 
   "I ran some performance tests with Beans containing lots of Strings and", 
   "the BeanDeserializer.onStartChild was reduced 3 times faster.", 
   "Future:", 
   "1) I would like to make a similar change for arrays", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "254943"
 }, 
 {
  "author": "tomj", 
  "date": "2002-08-26T21:15:54.000000Z", 
  "msg": [
   "Add test cases for the gYear, gMonth, gDay, gYearMonth, and gMonthDay", 
   "XML Schema types that I added to Axis a few weeks ago.", 
   "Enhance the getConstructorForParam() Utility method to use a HashMap", 
   "instead of a long if-then-else-if... structure.  Add support for g* types so we", 
   "correctly emit test cases and skeletons using these types."
  ], 
  "revision_id": "254942"
 }, 
 {
  "author": "seibert", 
  "date": "2002-08-26T20:56:55.000000Z", 
  "msg": [
   "In my haste, I forgot to hook the copy target onto the clean target"
  ], 
  "revision_id": "254941"
 }, 
 {
  "author": "butek", 
  "date": "2002-08-26T20:03:18.000000Z", 
  "msg": [
   "OOPS!  This file goes along with the new JDK13IO.java!  (commit comments", 
   "below)", 
   "I've discovered a JDK 1.3 implementation for our ImageIO plugin.  The", 
   "problem is, it can only write JPEG format, and it's depends on", 
   "sun.awt.image.codec.JPEGImageEncoderImpl, though the Sun, the IBM,", 
   "and the HP JDKs all have this class.", 
   "I've added this class so that those who want to use a non-JIMI JDK1.3", 
   "implementation have something they can use, even if it's as limited as this", 
   "one is."
  ], 
  "revision_id": "254940"
 }
]