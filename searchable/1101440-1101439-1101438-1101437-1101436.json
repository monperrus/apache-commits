[
 {
  "author": "olegk", 
  "date": "2011-05-10T12:44:18.565128Z", 
  "msg": [
   "Test case restructuring"
  ], 
  "revision_id": "1101440"
 }, 
 {
  "author": "olegk", 
  "date": "2011-05-10T12:42:57.894909Z", 
  "msg": [
   "More efficient handling of non-ascii coded lines by input/output session buffers due to utilization of Java 1.5 charset decoder / encoder API"
  ], 
  "revision_id": "1101439"
 }, 
 {
  "author": "rhuijben", 
  "date": "2011-05-10T12:42:36.440468Z", 
  "msg": [
   "[Patch 3/3. The build should be ok after this patch]", 
   "Refactor libsvn_wc's merge processing to pass a constant merge target struct", 
   "around instead of several arguments that are only used by the leaf functions.", 
   "Together with the two other patches in this batch this removes most db", 
   "operations from the merge processing on update. (We already have all the", 
   "information in ram while processing)", 
   "* subversion/libsvn_wc/merge.c", 
   "(merge_target_t): New struct.", 
   "(get_prop): Retrieve properties from merge target.", 
   "(detranslate_wc_file): Get information from merge target. Assume the target", 
   "is a file. We would have created a tree conflict if it isn't.", 
   "(do_text_merge,", 
   "do_text_merge_external,", 
   "save_merge_result): Use target instead of separate arguments.", 
   "(eval_conflict_func_result): Use target. Remove copyfrom handling.", 
   "(preserve_pre_merge_files): Use and pass merge target. Use normal", 
   "detranslate function, since we don't have to support copyfrom any more.", 
   "(maybe_resolve_conflicts,", 
   "merge_text_file,", 
   "merge_binary_file): Use merge target instead of several arguments.", 
   "(svn_wc__internal_merge): Update arguments. Fill target struct and pass", 
   "to other functions. Move hidden/unversioned check to the public wrapper.", 
   "(svn_wc_merge4): Update caller. Add hidden/unversioned check that used", 
   "to be part of svn_wc__internal_merge. Read and pass properties."
  ], 
  "revision_id": "1101438"
 }, 
 {
  "author": "olegk", 
  "date": "2011-05-10T12:40:58.666583Z", 
  "msg": [
   "More efficient handling of non-ascii coded lines by input/output session buffers due to utilization of Java 1.5 charset decoder / encoder API"
  ], 
  "revision_id": "1101437"
 }, 
 {
  "author": "olegk", 
  "date": "2011-05-10T12:39:03.551130Z", 
  "msg": [
   "More efficient handling of non-ascii coded lines by input/output session buffers due to utilization of Java 1.5 charset decoder / encoder API"
  ], 
  "revision_id": "1101436"
 }
]