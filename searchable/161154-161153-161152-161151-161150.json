[
 {
  "author": "crossley", 
  "date": "2005-04-13T04:07:32.214204Z", 
  "msg": [
   "Tabs to spaces."
  ], 
  "revision_id": "161154"
 }, 
 {
  "author": "crossley", 
  "date": "2005-04-13T04:06:41.440979Z", 
  "msg": [
   "Explain the local docs."
  ], 
  "revision_id": "161153"
 }, 
 {
  "author": "jta", 
  "date": "2005-04-13T03:50:10.873763Z", 
  "msg": [
   "Added links to javadoc on site menu and in papers/recovery.{xml,html}. Fixed bad links in dita.{xml,html}."
  ], 
  "revision_id": "161152"
 }, 
 {
  "author": "leif", 
  "date": "2005-04-13T03:42:38.694861Z", 
  "msg": [
   "If a connection is reused consistently at a high enough rate that the DB pinging feature would never be triggered, connection failures on a socket level would never be detected and the same bad connection would be returned over and over.  This was not a problem on MySQL as its Connection.isClosed method returns true in such cases.  Oracle on the other hand behaved badly here.  The isClosed method only returns true if the close method has been called.", 
   "The fix was to set a flag if any exception is thrown while calling a Connection method so that the DB will be pinged before the DB is allowed to be reused.  Ideally this should be done if a method on the Statement or PreparedStatement classes fail as well, but that is not easily done as they are not currently proxied as the Connection class is."
  ], 
  "revision_id": "161151"
 }, 
 {
  "author": "leif", 
  "date": "2005-04-13T03:35:55.636588Z", 
  "msg": [
   "Give connection instances their own child logger under the pool."
  ], 
  "revision_id": "161150"
 }
]