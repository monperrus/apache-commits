[
 {
  "author": "hdu", 
  "date": "2013-07-25T13:14:42.889576Z", 
  "msg": [
   "#i122836# fix rotated images looking corrupted on MacOSX", 
   "The solution is to intialize the images rotation mask to be opaque,", 
   "an approach that also the fix for bug #i122758#."
  ], 
  "revision_id": "1506958"
 }, 
 {
  "author": "desruisseaux", 
  "date": "2013-07-25T13:13:15.684081Z", 
  "msg": [
   "Yet an other formatting fix."
  ], 
  "revision_id": "1506957"
 }, 
 {
  "author": "desruisseaux", 
  "date": "2013-07-25T13:12:37.964396Z", 
  "msg": [
   "Formatting fixes."
  ], 
  "revision_id": "1506956"
 }, 
 {
  "author": "stefan2", 
  "date": "2013-07-25T13:12:26.029839Z", 
  "msg": [
   "On the fsfs-improvements branch:  Introduce the concept of \"optimal", 
   "tree traversal order\".  Add an FS vtable entry that allows an FS to", 
   "suggest an order in which entries of a given directory should be", 
   "visited to maximize FS-internal efficiency.", 
   "Implement that for FSFS as well as BDB backends and use in the", 
   "libsvn_repos reporter to determine the order in which directories", 
   "will be traversed.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_dir_optimal_order): declare new public FS API function", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(root_vtable): add new entry", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_dir_optimal_order): implement new FS API function", 
   "* subversion/libsvn_fs_base/tree.c", 
   "(base_dir_optimal_order): trivial implementation", 
   "(root_vtable): add entry", 
   "* subversion/libsvn_fs_fs/pack.h", 
   "(svn_fs_fs__order_dir_entries): declare new private API", 
   "* subversion/libsvn_fs_fs/pack.c", 
   "(compare_dir_entries_format6,", 
   "svn_fs_fs__order_dir_entries): implement it aiming for disk locality", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(fs_dir_optimal_order): new, forward to internal API", 
   "(root_vtable): add new entry", 
   "* subversion/libsvn_repos/reporter.c", 
   "(delta_dirs): walk dirs in suggested order"
  ], 
  "revision_id": "1506955"
 }, 
 {
  "author": "markt", 
  "date": "2013-07-25T13:10:04.222055Z", 
  "msg": [
   "DBCP-229", 
   "Make stack trace of borrowing available to help ID leaks.", 
   "This change makes some information available about objects in the pool (borrowed and idle) via JMX. More information can be exposed if required."
  ], 
  "revision_id": "1506954"
 }
]