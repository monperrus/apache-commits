[
 {
  "author": "slive", 
  "date": "2001-01-27T23:09:45.000000Z", 
  "msg": [
   "Bring a couple man pages a little closer to the 2.0 reality."
  ], 
  "revision_id": "87874"
 }, 
 {
  "author": "wrowe", 
  "date": "2001-01-27T21:28:28.000000Z", 
  "msg": [
   "Use the appropriate APR_FINFO_flags for the apr_stat/lstat/getfileinfo", 
   "calls to avoid ownership and permissions on Win32 when they are not", 
   "required, and until they are implemented."
  ], 
  "revision_id": "87873"
 }, 
 {
  "author": "dreid", 
  "date": "2001-01-27T20:03:23.000000Z", 
  "msg": [
   "BeOS BONE shouldn't be using this BeOS R5 check, so alter the check to make it", 
   "work correctly.  Shouldn't this be APR'ized?"
  ], 
  "revision_id": "87872"
 }, 
 {
  "author": "wrowe", 
  "date": "2001-01-27T18:52:42.000000Z", 
  "msg": [
   "Sunny and warm (if 30`F meets your definition of warm :-)"
  ], 
  "revision_id": "87871"
 }, 
 {
  "author": "rbb", 
  "date": "2001-01-27T18:23:49.000000Z", 
  "msg": [
   "Fix a seg fault.  The problem is easy to explain.  On a HEAD request, Good", 
   "handlers will send their data down the filter stack, but 1.3 handlers will", 
   "just return, giving us a Content-Length of 0.  Since we can't send a C-L", 
   "of 0 just because it is a HEAD request, we search the headers_out table", 
   "for a 0 C-L if it is a HEAD request.  The problem is that some filters", 
   "will not allow (includes_filter) a C-L to be computed, so we end up without", 
   "a C-L header in headers_out.  Thus, when we do a strcmp against the header", 
   "value and \"0\", we seg fault, because the header value is NULL.", 
   "To fix this, we grab the element from the header table, and make sure it", 
   "isn't NULL before doing the strcmp."
  ], 
  "revision_id": "87870"
 }
]