[
 {
  "author": "acmurthy", 
  "date": "2013-04-24T17:49:13.246299Z", 
  "msg": [
   "MAPREDUCE-5169. Fixed JobTracker recovery to ensure both job-info and jobToken file are saved correctly to prevent race-condition between job submission and initialization. Contributed by Arun C. Murthy"
  ], 
  "revision_id": "1471563"
 }, 
 {
  "author": "rhillegas", 
  "date": "2013-04-24T17:46:55.561702Z", 
  "msg": [
   "DERBY-6200: Encapsulate the bytes in the eof marker for character streams."
  ], 
  "revision_id": "1471562"
 }, 
 {
  "author": "acmurthy", 
  "date": "2013-04-24T17:45:51.675126Z", 
  "msg": [
   "MAPREDUCE-4737. Ensure that mapreduce APIs are semantically consistent with mapred API w.r.t Mapper.cleanup and Reducer.cleanup; in the sense that cleanup is now called even if there is an error. The old mapred API already ensures that Mapper.close and Reducer.close are invoked during error handling. Note that it is an incompatible change, however end-users can override Mapper.run and Reducer.run to get the old (inconsistent) behaviour. Contributed by Arun C. Murthy."
  ], 
  "revision_id": "1471561"
 }, 
 {
  "author": "acmurthy", 
  "date": "2013-04-24T17:41:19.956553Z", 
  "msg": [
   "Merge -c 1471559 from branch-1 to branch-1.2 to fix MAPREDUCE-4737. Ensure that mapreduce APIs are semantically consistent with mapred API w.r.t Mapper.cleanup and Reducer.cleanup; in the sense that cleanup is now called even if there is an error. The old mapred API already ensures that Mapper.close and Reducer.close are invoked during error handling. Note that it is an incompatible change, however end-users can override Mapper.run and Reducer.run to get the old (inconsistent) behaviour. Contributed by Arun C. Murthy."
  ], 
  "revision_id": "1471560"
 }, 
 {
  "author": "acmurthy", 
  "date": "2013-04-24T17:40:41.461914Z", 
  "msg": [
   "MAPREDUCE-4737. Ensure that mapreduce APIs are semantically consistent with mapred API w.r.t Mapper.cleanup and Reducer.cleanup; in the sense that cleanup is now called even if there is an error. The old mapred API already ensures that Mapper.close and Reducer.close are invoked during error handling. Note that it is an incompatible change, however end-users can override Mapper.run and Reducer.run to get the old (inconsistent) behaviour. Contributed by Arun C. Murthy."
  ], 
  "revision_id": "1471559"
 }
]