[
 {
  "author": "cmpilato", 
  "date": "2002-11-04T15:53:11.841565Z", 
  "msg": [
   "* doc/book/book/ch05.xml", 
   "More work on Chapter 5 of The Book."
  ], 
  "revision_id": "843715"
 }, 
 {
  "author": "philip", 
  "date": "2002-11-04T15:44:38.730094Z", 
  "msg": [
   "Fix issue 953.  Add a --dry-run option to merge.", 
   "* subversion/include/svn_client.h (svn_client_merge): Add dry-run parameter.", 
   "* subversion/include/svn_error_codes.h (SVN_ERR_WC_CONFLICT): Obsolete.", 
   "* subversion/include/svn_wc.h", 
   "(enum svn_wc_merge_outome_t): New", 
   "(svn_wc_merge): Add dry_run and merge_outome parameters.", 
   "(svn_wc_merge_prop_diffs): Add base_merge parameter.", 
   "* subversion/libsvn_client/diff.c", 
   "(struct merge_cmd_baton): Add dry_run member.", 
   "(merge_file_changed): Pass dry-run flag and merge-outcome to svn_wc_merge.", 
   "(merge_file_added): Don't call svn_client_copy during a dry-run. Pass", 
   "dry-run flag and merge-outcome to svn_wc_merge.", 
   "(merge_dir_added): Don't call svn_client_copy during a dry-run.", 
   "(merge_props_changed): Pass dry-run flag, and FALSE for base-merge, to", 
   "svn_wc_merge_prop_diffs.", 
   "(do_merge): Add dry_run parameter.", 
   "(do_single_file_merge): Add dry_run parameter. Pass dry-run flag and", 
   "merge-outcome to svn_wc_merge.  Pass dry-run flag, and FALSE for", 
   "base-merge, to svn_wc_merge_prop_diffs.", 
   "(do_diff): Pass dry-run placeholder to svn_client__get_diff_editor.", 
   "(svn_client_merge): Add dry_run parameter.  Use read-only access batons", 
   "if this is a dry-run.", 
   "* subversion/libsvn_client/client.h (svn_client__get_diff_editor): Add", 
   "dry_run parameter.", 
   "* subversion/libsvn_client/repos_diff.c", 
   "(struct edit_baton): Add dry_run member.", 
   "(get_parent_access, get_path_access): Add lenient parameter.  Don't return", 
   "an error for missing access batons if lenient is set. Use get_path_access", 
   "to implement get_parent_access.", 
   "(delete_entry): Pass FALSE for lenient.", 
   "(add_directory): Pass dry-run flag for lenient.", 
   "(close_file, close_directory): Pass dry-run flag for lenient.  Don't do", 
   "property merge for an add.", 
   "(svn_client__get_diff_editor): Add dry_run parameter and store in baton.", 
   "* subversion/libsvn_wc/merge.c", 
   "(svn_wc_merge): Add dry_run and merge_outcome parameters.  Don't modify", 
   "the working copy during a dry-run.  Return the merge outcome in the new", 
   "parameter and never return SVN_ERR_WC_CONFLICT.", 
   "* subversion/libsvn_wc/props.h (svn_wc_merge_prop_diffs): Add dry_run and", 
   "base_merge parameters.", 
   "* subversion/libsvn_wc/props.c", 
   "(svn_wc_merge_prop_diffs): Add dry_run and base_merge parameters.  Add", 
   "missing break which fixes the file part of issue 953.  Don't modify the", 
   "working copy during a dry-run.  Only modify the base props if the new", 
   "flag is set, which is the bit that fixes issue 953.", 
   "* subversion/libsvn_wc/log.c (log_do_merge): Pass a merge-outcome to", 
   "svn_wc_merge.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(close_directory, svn_wc_install_file): Pass TRUE for base-merge and", 
   "FALSE for dry-run when calling svn_wc_merge_prop_diffs.", 
   "* subversion/clients/cmdline/cl.h", 
   "(enum svn_cl__longopt_t): Add svn_cl__dry_run member.", 
   "(struct svn_cl__opt_state_t) Add dry_run member.", 
   "* subversion/clients/cmdline/merge-cmd.c (svn_cl__merge): Pass dry-run", 
   "option to svn_client_merge.", 
   "* subversion/clients/cmdline/main.c", 
   "(svn_cl__options): Add dry-run option.", 
   "(svn_cl__cmd_table): Reorder import options to match other commands. Add", 
   "dry-run to merge.", 
   "(main): Set dry_run in the the options structure.", 
   "* subversion/tests/clients/cmdline/svntest/actions.py", 
   "(run_and_verify_merge): Run a dry-run merge first and compare its output", 
   "with that of the real merge.", 
   "* subversion/tests/clients/cmdline/svntest/merge_tests.py", 
   "(simple_propery_merge): A new, rather crude, test.", 
   "* tools/dev/bash_completion (_svn): Reorder options to match order shown", 
   "by svn help. Remove xml-file comment. Add --dry-run and --incremental."
  ], 
  "revision_id": "843714"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-11-04T08:42:52.431199Z", 
  "msg": [
   "Fixes so that `svn update .' will handle externals.", 
   "Patch by: Vladimir Prus <ghost@cs.msu.su>", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(report_revision): Store \"svn:externals\" for current dir, not for children.", 
   "* subversion/tests/clients/cmdline/module_tests.py", 
   "(update_receive_change_under_external): Add some more steps to this test.", 
   "This part was not in Vladimir's patch and was added by me:", 
   "* subversion/libsvn_client/update.c", 
   "(svn_client_update): Only update externals when in recursive mode.", 
   "This check was formerly handled by report_revisions()."
  ], 
  "revision_id": "843713"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-11-04T08:11:13.687525Z", 
  "msg": [
   "* subversion/tests/clients/cmdline/log_tests.py", 
   "* subversion/tests/clients/cmdline/module_tests.py", 
   "* subversion/tests/clients/cmdline/trans_tests.py", 
   "Lower-case the initial letter of all tests whose descriptions were", 
   "not already lower-cased (as determined by: for i in *.py; do", 
   "python2 ${i} list | grep -v 'Test #' | grep -v -e '------' | cut", 
   "-c 16- | grep '^[A-Z]'; done)"
  ], 
  "revision_id": "843712"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-11-04T08:01:21.551503Z", 
  "msg": [
   "* doc/book/book/ch05.xml", 
   "Chapter 5, the continuing saga."
  ], 
  "revision_id": "843711"
 }
]