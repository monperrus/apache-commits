[
 {
  "author": "shankar", 
  "date": "2010-02-25T12:25:32.002158Z", 
  "msg": [
   "fixing AXIS2C-1431;"
  ], 
  "revision_id": "916265"
 }, 
 {
  "author": "shankar", 
  "date": "2010-02-25T12:21:24.249898Z", 
  "msg": [
   "removing pthread options"
  ], 
  "revision_id": "916264"
 }, 
 {
  "author": "elecharny", 
  "date": "2010-02-25T12:21:02.238516Z", 
  "msg": [
   "modified the source directory to respect the base directory names instead of using the artifactId"
  ], 
  "revision_id": "916263"
 }, 
 {
  "author": "shankar", 
  "date": "2010-02-25T12:17:32.550813Z", 
  "msg": [
   "removing comments"
  ], 
  "revision_id": "916262"
 }, 
 {
  "author": "kristwaa", 
  "date": "2010-02-25T12:15:58.693951Z", 
  "msg": [
   "DERBY-4563: Avoid unnecessary use of getStream and getStreamWithDescriptor", 
   "Introduced the method DataValueDescriptor.hasStream() - use this method to check", 
   "if the data value is, or will be, represented by a stream.", 
   "Made DVD.getStream() and SDV.getStreamWithDescriptor() fail if hasStream returns", 
   "false (maybe this check can be removed, or made cheaper, in the near future?).", 
   "The reasoning behind the change is to make it easier to debug and investigate", 
   "issues concerned with incorrect stream state. If the stream is \"leaked\" from the", 
   "DVD, it is because it will be used to access the data. It will also be easier to", 
   "guarantee that the stream has a certain state, for instance that it is", 
   "positioned just before the first byte of user data when returned from the DVD.", 
   "It may be expensive to re-position the stream, which is why getStream() != null", 
   "isn't the best way to check if the value is a stream. The need to re-position is", 
   "again caused by missing (or non-exposed) functionality in the stream coming from", 
   "store.", 
   "In most cases the stream should only be obtained once from a given DVD, but", 
   "there are currently exceptions to the rule.", 
   "Patch file: derby-4563-1b-dvd_hasStream.diff"
  ], 
  "revision_id": "916261"
 }
]