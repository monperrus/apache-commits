[
 {
  "author": "schor", 
  "date": "2011-04-29T20:11:21.011466Z", 
  "msg": [
   "[UIMA-2131] [UIMA-2130] Fix URI generation to notice windows style of C:/.... and generate a suitable URI for this.  Also fix line endings to use eol-style native"
  ], 
  "revision_id": "1097935"
 }, 
 {
  "author": "kgiusti", 
  "date": "2011-04-29T20:06:47.664530Z", 
  "msg": [
   "QPID-3227: assert if application or reserved header overflows send buffer."
  ], 
  "revision_id": "1097934"
 }, 
 {
  "author": "jogep", 
  "date": "2011-04-29T20:06:20.962017Z", 
  "msg": [
   "WW-3618: Stripes Link on Struts Homepage is dead"
  ], 
  "revision_id": "1097933"
 }, 
 {
  "author": "digy", 
  "date": "2011-04-29T19:57:29.364453Z", 
  "msg": [
   "[LUCENENET-412]"
  ], 
  "revision_id": "1097932"
 }, 
 {
  "author": "rhuijben", 
  "date": "2011-04-29T19:48:48.377343Z", 
  "msg": [
   "Make libsvn_wc finally use svn_wc_conflict_func2_t for conflict resolving for", 
   "its non deprecated functions, providing wrappers where necessary.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_ctx_t): Add new style callback.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_get_update_editor4): Update prototype.", 
   "(svn_wc_get_update_editor3): Update documentation.", 
   "(svn_wc_get_switch_editor4): Update prototype.", 
   "(svn_wc_get_switch_editor3): Update documentation.", 
   "(svn_wc_merge4): Update prototype.", 
   "(svn_wc_merge3): Update documentation.", 
   "(svn_wc_merge_props3): Update prototype.", 
   "(svn_wc_merge_props2): Update documentation.", 
   "* subversion/libsvn_client/ctx.c", 
   "(includes): Include private/svn_wc_private.h.", 
   "(call_conflict_func): New function.", 
   "(svn_client_create_context): Add wrapping conflict resolver.", 
   "* subversion/libsvn_client/merge.c", 
   "(merge_props_changed): Pass new resolver.", 
   "(conflict_resolver_baton_t): Store new style function.", 
   "(conflict_resolver): Implement svn_wc_conflict_resolver_func2_t.", 
   "(merge_file_changed): Update caller.", 
   "* subversion/libsvn_client/switch.c", 
   "(switch_internal): Update caller.", 
   "* subversion/libsvn_client/update.c", 
   "(update_internal): Update caller.", 
   "* subversion/libsvn_wc/deprecated.c", 
   "(conflict_func_1to2_baton): New struct.", 
   "(conflict_func_1to2_wrapper): New baton.", 
   "(svn_wc_merge_props2,", 
   "svn_wc_get_update_editor3,", 
   "svn_wc_get_switch_editor3,", 
   "svn_wc_merge3): Wrap old style conflict resolver.", 
   "* subversion/libsvn_wc/merge.c", 
   "(setup_text_conflict_desc): Remove conversion.", 
   "(maybe_resolve_conflicts,", 
   "merge_text_file,", 
   "merge_binary_file,", 
   "svn_wc__internal_merge,", 
   "svn_wc_merge4): Use new resolver.", 
   "* subversion/libsvn_wc/props.c", 
   "(svn_wc__perform_props_merge,", 
   "svn_wc_merge_props3,", 
   "maybe_generate_propconflict,", 
   "apply_single_prop_add,", 
   "apply_single_prop_delete,", 
   "apply_single_mergeinfo_prop_change,", 
   "apply_single_generic_prop_change,", 
   "apply_single_prop_change,", 
   "svn_wc__merge_props): Use new resolver.", 
   "* subversion/libsvn_wc/props.h", 
   "(svn_wc__merge_props,", 
   "svn_wc__perform_props_merge): Update prototype.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(edit_baton): Store new type resolver.", 
   "(make_editor,", 
   "svn_wc_get_update_editor4,", 
   "svn_wc_get_switch_editor4): Use new resolver type.", 
   "* subversion/libsvn_wc/wc.h", 
   "(svn_wc__internal_merge): Update prototype."
  ], 
  "revision_id": "1097931"
 }
]