[
 {
  "author": "cmpilato", 
  "date": "2012-09-26T15:44:15.406625Z", 
  "msg": [
   "* subversion/libsvn_repos/reporter.c", 
   "(delta_proplists): Fix unused and shadowed variable warnings."
  ], 
  "revision_id": "1390573"
 }, 
 {
  "author": "stsp", 
  "date": "2012-09-26T15:42:40.044511Z", 
  "msg": [
   "Change the way the command line client handles conflicted paths.", 
   "As of r1357313 the list of conflicted paths was stored in the notifier's", 
   "baton. Storing the list there would cause crashes when running with", 
   "the --quiet option because that option disables use of the notifier.", 
   "For details, see http://svn.haxx.se/dev/archive-2012-09/0058.shtml", 
   "Instead, use two separate conflict resolver callback functions, one", 
   "for postponing all conflicts and one for performing actual conflict", 
   "resolution, either interactive or based on the --accept option.", 
   "This approach was suggested by rhuijben.", 
   "While at it, hide implementation details of these functions, such as", 
   "the baton structure, completely within the conflict resolution code", 
   "in conflict-callbacks.c by introducing new svn_cl__ API functions.", 
   "* subversion/svn/cl.h", 
   "(svn_cl__opt_state_t): Remove conflict_func and conflict_baton. Now unused.", 
   "(svn_cl__conflict_baton_t): Renamed to ...", 
   "(svn_cl__interactive_conflict_baton_t): ... this. Now declared as an opaque", 
   "structure.", 
   "(svn_cl__conflict_baton_make): Rename to ...", 
   "(svn_cl__get_conflict_func_interactive_baton): ... this. Adjust parameter", 
   "list to simplify this interface from the caller's point of view.", 
   "(svn_cl__conflict_handler): Rename to ...", 
   "(svn_cl__conflict_func_interactive): ... this.", 
   "(svn_cl__get_conflict_func_postpone_baton,", 
   "svn_cl__conflict_func_postpone): New.", 
   "(svn_cl__notifier_check_conflicts,", 
   "svn_cl__notifier_get_conflicted_paths): Remove these declarations.", 
   "(svn_cl__resolve_conflicts): Rename to ...", 
   "(svn_cl__resolve_postponed_conflicts): ... this. Move declaration up in the", 
   "file to group it with related functions. This function now expects a baton", 
   "from svn_cl__conflict_func_postpone() as an argument, rather than a list", 
   "of conflicted paths, to hide the details of conflicted paths from the caller.", 
   "* subversion/svn/conflict-callbacks.c", 
   "(svn_cl__interactive_conflict_baton_t,", 
   "svn_cl__get_conflict_func_interactive_baton): New baton and constructor.", 
   "(open_editor, launch_resolver, handle_text_conflict,", 
   "handle_prop_conflict): Track rename of interactive conflict baton.", 
   "(svn_cl__conflict_handler): Rename to ...", 
   "(svn_cl__conflict_func_interactive): ... this, and track baton renaming.", 
   "(svn_cl__conflict_func_postpone,", 
   "svn_cl__get_conflict_func_interactive_baton,", 
   "get_postponed_conflicted_paths): New helpers, partly based on notify.c.", 
   "(svn_cl__resolve_conflicts): Rename to ...", 
   "(svn_cl__resolve_postponed_conflicts): ... this, and expect a baton", 
   "argument which corresponds to a baton from svn_cl__conflict_func_postpone().", 
   "The list of conflicted paths is obtained from it, and the interactive", 
   "conflict resolution function is run on these paths via svn_client_resolve().", 
   "):", 
   "* subversion/svn/main.c", 
   "(sub_main): Adjust setup of interactive conflict resolution callback. Always", 
   "install svn_cl__conflict_func_postpone in the client context by default.", 
   "Subcommands may override this (currently only 'svn resolve' will do so).", 
   "Re-shuffle handling of options related to conflict resolution a little for", 
   "clarity (no behaviour change).", 
   "* subversion/svn/merge-cmd.c", 
   "(svn_cl__merge): Use svn_cl__resolve_postponed_conflicts() to resolve", 
   "any conflicts after the merge.", 
   "* subversion/svn/notify.c", 
   "(notify_baton): Remove conflicted_paths list.", 
   "(add_conflicted_path): Remove.", 
   "(notify): Don't call add_conflicted_path() anymore.", 
   "(svn_cl__get_notifier): Don't set up conflicted_paths anymore.", 
   "(svn_cl__notifier_check_conflicts,", 
   "svn_cl__notifier_get_conflicted_paths): Remove, superseded by the", 
   "postponing conflict function.", 
   "* subversion/svn/resolve-cmd.c", 
   "(svn_cl__resolve): Cope with the fact that conflict_func was removed", 
   "from opt_state. Force use of the interactive resolver with this", 
   "subcommand so it can serve its purpose.", 
   "* subversion/svn/switch-cmd.c", 
   "(svn_cl__switch): Use svn_cl__resolve_postponed_conflicts() to resolve", 
   "any conflicts after the switch.", 
   "* subversion/svn/update-cmd.c", 
   "(svn_cl__update): Use svn_cl__resolve_postponed_conflicts() to resolve", 
   "any conflicts after the update."
  ], 
  "revision_id": "1390572"
 }, 
 {
  "author": "stefan2", 
  "date": "2012-09-26T15:37:40.758031Z", 
  "msg": [
   "* COMMITTERS: use my WANdisco e-mail account"
  ], 
  "revision_id": "1390571"
 }, 
 {
  "author": "stefan2", 
  "date": "2012-09-26T15:36:50.102773Z", 
  "msg": [
   "Indentation fixes where we replaced svn_ra_svn_write_cmd with", 
   "svn_ra_svn_write_templated_cmd.  No functional change.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_set_path): fixed indentation", 
   "* subversion/libsvn_ra_svn/editorp.c", 
   "(check_for_error,", 
   "ra_svn_target_rev,", 
   "ra_svn_open_root,", 
   "ra_svn_delete_entry,", 
   "ra_svn_add_dir,", 
   "ra_svn_open_dir,", 
   "ra_svn_close_dir,", 
   "ra_svn_absent_dir,", 
   "ra_svn_add_file,", 
   "ra_svn_open_file,", 
   "ra_svn_close_file,", 
   "ra_svn_absent_file,", 
   "ra_svn_close_edit,", 
   "ra_svn_abort_edit): fixed indentation", 
   "Found by: cmpilato"
  ], 
  "revision_id": "1390570"
 }, 
 {
  "author": "sully6768", 
  "date": "2012-09-26T15:35:58.926268Z", 
  "msg": [
   "Added tests to verify batch transaction concurrency"
  ], 
  "revision_id": "1390569"
 }
]