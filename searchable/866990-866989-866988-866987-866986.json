[
 {
  "author": "kfogel", 
  "date": "2007-10-03T23:11:08.513511Z", 
  "msg": [
   "Tweak test data so a test passes over DAV, following up to r26896.", 
   "Reported by: lgo", 
   "epg", 
   "* subversion/tests/cmdline/log_tests_data/xml-invalid-chars.dump:", 
   "Don't include CR in the log data, since it may be converted to LF.", 
   "* subversion/tests/cmdline/log_tests.py", 
   "(log_xml_with_bad_data): Adjust expectations accordingly."
  ], 
  "revision_id": "866990"
 }, 
 {
  "author": "cacknin", 
  "date": "2007-10-03T22:14:08.533026Z", 
  "msg": [
   "Follow-up to 26761.", 
   "(Provide 'svn patch' with support for Unidiff.  This includes a new", 
   "--patch-cmd option along with its analog run-time config entry to", 
   "determine the program to call in charge of applying the unidiff.)", 
   "* notes/svnpatch:", 
   "update accordingly to the new unidiff handling.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_EXTERNAL_PROGRAM_MISSING): new macro.", 
   "* subversion/include/svn_config.h:", 
   "Revert r26761 ident adjustments and place SVN_CONFIG_OPTION_PATCH_CMD", 
   "near its peers.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_apply_svnpatch): rename from svn_wc_apply_patch.", 
   "(svn_wc_apply_unidiff): new public API (moved from", 
   "subversion/libsvn_client/patch.c:apply_unidiff).", 
   "* subversion/libsvn_wc/patch.c", 
   "(svn_wc_apply_svnpatch): rename from svn_wc_apply_patch.", 
   "(svn_wc_apply_unidiff): new public API (moved from", 
   "subversion/libsvn_client/patch.c:apply_unidiff); also fix the exitcode", 
   "handling so that higher layers --UIs-- can address it instead.", 
   "* subversion/libsvn_client/patch.c", 
   "(apply_unidiff): move to", 
   "subversion/libsvn_wc/patch.c:svn_wc_apply_unidiff.", 
   "(svn_client_patch): update the call to apply unidiff.", 
   "* subversion/svn/patch-cmd.c", 
   "(svn_cl__patch): handle external program exitcode here.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_patch): fix docstring to not be CLI-speficic.", 
   "Suggested by: glasser"
  ], 
  "revision_id": "866989"
 }, 
 {
  "author": "epg", 
  "date": "2007-10-03T21:25:41.081690Z", 
  "msg": [
   "Implement launching an external merge tool for interactive conflict handling.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_CL_NO_EXTERNAL_MERGE_TOOL): New. Error code that indicates no merge", 
   "tool could be found.", 
   "* subversion/libsvn_subr/svn_config.h", 
   "(SVN_CONFIG_OPTION_MERGE_TOOL_CMD): New. Run-time configuration option for", 
   "the external merging tool to use.", 
   "* subversion/libsvn_subr/config_file.c", 
   "(svn_config_ensure): Add a line with some basic documentation for the new", 
   "run-time configuration option.", 
   "* subversion/svn/cl.h", 
   "(svn_cl__merge_file_externally): New prototype.", 
   "* subversion/svn/util.c", 
   "Include unistd.h.", 
   "(svn_cl__merge_file_externally): New. Used to invoke the user's external", 
   "merge tool on the specified files.", 
   "* subversion/svn/conflict-callbacks.c", 
   "Include stdio.h.", 
   "(svn_cl__interactive_conflict_handler): Implement calling an external merge", 
   "tool using svn_cl__merge_file_externally.", 
   "Patch by: Augie Fackler <durin42@gmail.com>"
  ], 
  "revision_id": "866988"
 }, 
 {
  "author": "blair", 
  "date": "2007-10-03T19:24:47.535064Z", 
  "msg": [
   "New public svn_path_compose() to mirror svn_path_decompose(), it takes", 
   "an apr_array_header_t and returns a path.", 
   "* subversion/include/svn_path.h", 
   "(svn_path_compose):", 
   "New function.", 
   "* subversion/libsvn_subr/path.c", 
   "(svn_path_compose):", 
   "Implement the new function.", 
   "* subversion/tests/libsvn_subr/path-test.c", 
   "(test_compose):", 
   "New function that checks that", 
   "path == svn_path_compose(svn_path_decompose(path))", 
   "(test_funcs):", 
   "Add test_compose to this array.", 
   "* subversion/bindings/swig/core.i", 
   "Tell swig to ignore svn_path_compose() and not to wrap it."
  ], 
  "revision_id": "866987"
 }, 
 {
  "author": "glasser", 
  "date": "2007-10-03T19:16:05.342006Z", 
  "msg": [
   "Wrap the global-ignores entry in the auto-generated", 
   "~/.subversion/config file onto two shorter lines.  (Serves as a good", 
   "example of the continuation-line syntax too!)", 
   "Unfortunately, in order to keep the value of the property defined in", 
   "svn_config.h, it looks like something ugly like placing the definition", 
   "of some double-underscored symbols in the public header is necessary.", 
   "But I'd rather have a bit of ugliness in our developer-visible headers", 
   "than in our user-visible default config files.", 
   "* subversion/include/svn_config.h", 
   "(SVN_CONFIG__DEFAULT_GLOBAL_IGNORES_LINE_1,", 
   "SVN_CONFIG__DEFAULT_GLOBAL_IGNORES_LINE_2): New symbols with two", 
   "parts of the global ignores list.", 
   "(SVN_CONFIG_DEFAULT_GLOBAL_IGNORES): Define in terms of the new", 
   "symbols.", 
   "* subversion/libsvn_subr/config_file.c", 
   "(svn_config_ensure): Write out the default global ignores using the", 
   "two new symbols on separate lines."
  ], 
  "revision_id": "866986"
 }
]