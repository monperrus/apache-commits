[
 {
  "author": "ghudson", 
  "date": "2000-12-24T12:52:59.000000Z", 
  "msg": [
   "(svn_stream_t, svn_stream_create): Oops, forgot, don't need the \"pool\"", 
   "element of svn_stream_t any more now that the pool argument to the", 
   "read and write handlers is gone."
  ], 
  "revision_id": "838295"
 }, 
 {
  "author": "ghudson", 
  "date": "2000-12-24T12:35:29.000000Z", 
  "msg": [
   "(svn_read_fn_t, svn_write_fn_t): Eliminate the pool argument; if a read or", 
   "write handler needs to do allocation, it must use a pool stored in the", 
   "baton argument--not an inconvenience for any of our current handlers now", 
   "that we have svn_stream_from_aprfile() and svn_stream_from_stdio() to", 
   "handle the simple cases.  All instances of svn_read_fn_t and svn_write_fn_t", 
   "changed, as well as the callers in io.c."
  ], 
  "revision_id": "838294"
 }, 
 {
  "author": "ghudson", 
  "date": "2000-12-24T12:24:12.000000Z", 
  "msg": [
   "(svn_txdelta_parse_svndiff, svn_base64_encode, svn_base64_decode,", 
   "svn_tdelta_apply, svn_txdelta_parse_svndiff, svn_delta_get_xml_editor):", 
   "Use a close handler instead of a zero-length write to signify end of", 
   "writing, or add an svn_stream_close() request when the writable stream", 
   "wasn't being terminated."
  ], 
  "revision_id": "838293"
 }, 
 {
  "author": "ghudson", 
  "date": "2000-12-24T11:48:45.000000Z", 
  "msg": [
   "(svn_base64_encode, svn_base64_decode, svn_delta_parse_svndiff): Now that", 
   "streams are represented by a single object instead of a handler and baton,", 
   "we can simply return streams instead of assigning them through pointer", 
   "arguments, at least in the case of constructors which can't return an", 
   "error.  So do so.  All callers changed."
  ], 
  "revision_id": "838292"
 }, 
 {
  "author": "ghudson", 
  "date": "2000-12-24T11:35:00.000000Z", 
  "msg": [
   "(svn_stream_from_aprfile, svn_stream_from_stdio): Don't close the", 
   "underlying file on a \"close\" operation.  This matches the existing uses of", 
   "writable streams on apr or stdio files; none of the uses assume that the", 
   "stream \"owns\" the underlying file."
  ], 
  "revision_id": "838291"
 }
]