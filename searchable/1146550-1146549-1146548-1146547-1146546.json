[
 {
  "author": "bayard", 
  "date": "2011-07-14T03:49:27.143669Z", 
  "msg": [
   "Setting version to 3.0 in prep for RC4"
  ], 
  "revision_id": "1146550"
 }, 
 {
  "author": "spamassassin_role", 
  "date": "2011-07-14T03:06:09.240891Z", 
  "msg": [
   "updated scores for revision 1145908 active rules added since last mass-check"
  ], 
  "revision_id": "1146549"
 }, 
 {
  "author": "chrism", 
  "date": "2011-07-14T02:56:54.462676Z", 
  "msg": [
   "LUCENE-3285: Moved flexible queryparser to queryparser module"
  ], 
  "revision_id": "1146548"
 }, 
 {
  "author": "danielsh", 
  "date": "2011-07-14T02:39:52.486727Z", 
  "msg": [
   "On the fs-progress branch, sketch an implementation of progress notification", 
   "for svn_fs_verify().", 
   "The FS API and the output of 'svnadmin' could both use some tweaking;", 
   "suggestions welcome.", 
   "Add a new FS API:", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_verify): Grow PROGRESS_FUNC and PROGRESS_BATON arguments.", 
   "(svn_fs_progress_notify_func_t): New, like svn_ra_progress_notify_func_t", 
   "but with an extra STAGE parameter.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_verify): Pass new arguments to verify_fs().", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(verify_fs): Grow PROGRESS_FUNC and PROGRESS_BATON arguments.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(base_verify): Track signature change.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(fs_verify): Track signature change.", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__verify): Track signature change.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(verify_baton): New baton type.", 
   "(svn_fs_fs__verify): Track signature change.  Initialize and pass a baton.", 
   "(verify_walker): Call PROGRESS_FUNC occasionally.", 
   "Add a new repos API:", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_notify_action_t):", 
   "New values:", 
   "svn_repos_notify_verify_aux_start,", 
   "svn_repos_notify_verify_aux_progress,", 
   "svn_repos_notify_verify_aux_end.", 
   "(svn_repos_notify_t):", 
   "New members PROGRESS_PROGRESS, PROGRESS_TOTAL, PROGRESS_STAGE.", 
   "* subversion/libsvn_repos/dump.c", 
   "(progress_to_notify_baton): New baton type.", 
   "(progress_to_notify): New helper.", 
   "(svn_repos_verify_fs2): Notify about global/auxiliary data verification.", 
   "Use the new API:", 
   "* subversion/svnadmin/main.c", 
   "(repos_notify_handler): Handle the three new notification kinds.", 
   "Adjust regression tests:", 
   "* subversion/tests/cmdline/svnadmin_tests.py", 
   "(verify_windows_paths_in_repos): Adjust expected output."
  ], 
  "revision_id": "1146547"
 }, 
 {
  "author": "dcreager", 
  "date": "2011-07-14T02:35:04.805458Z", 
  "msg": [
   "AVRO-837. C: Avro value interface", 
   "This patch adds a new interface for Avro values.  Eventually, each part", 
   "of the library that operates on Avro data will work with any C type that", 
   "implements this interface, rather than only working on avro_datum_t", 
   "instances.", 
   "As of right now, we have a definition of the interface itself (along", 
   "with a bunch of macros that make it easier to call the interface methods", 
   "on a particular instance).  We also have a \u201cgeneric\u201d implementation of", 
   "the interface, which will serve as a replacement for avro_datum_t.", 
   "There is also an avro_value_t implementation that wraps avro_datum_t", 
   "instances.  This will let us migrate code slowly to the new interface,", 
   "where necessary.", 
   "As part of all of this, I've broken out the monolithic avro.h header", 
   "file into separate modular headers.  You can still include <avro.h> on", 
   "its own to pick up all of the parts.", 
   "Lastly, there's now a test program that compares the performance of the", 
   "old and new APIs."
  ], 
  "revision_id": "1146546"
 }
]