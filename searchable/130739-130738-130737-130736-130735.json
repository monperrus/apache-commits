[
 {
  "author": "mas", 
  "date": "2002-07-03T01:45:47.000000Z", 
  "msg": [
   "Fix license to approved long form."
  ], 
  "revision_id": "130739"
 }, 
 {
  "author": "mas", 
  "date": "2002-07-03T01:44:04.000000Z", 
  "msg": [
   "Added Buffer interface from Avalon Excaliber.", 
   "Modified the interface from Avalon so that it (a) defines a read-only get()", 
   "method and (b) extends java.util.Collection. Also altered the documentation so", 
   "that the scope of the interface is broader; it can apply to stacks, heaps and", 
   "LRU caches as well.", 
   "Submitted by: Paul Jack ( pjack at sfaf dot org )"
  ], 
  "revision_id": "130738"
 }, 
 {
  "author": "mas", 
  "date": "2002-06-29T03:49:01.000000Z", 
  "msg": [
   "Formalize naming conventions proposal.", 
   "Submitted by: Stephen Colebourne", 
   "I made a few minor modifications (e.g. adding </li> tags), along with modifying", 
   "the requirement of static inner classes for the decorators to be more in line", 
   "with my perception of consensus from the discussion."
  ], 
  "revision_id": "130737"
 }, 
 {
  "author": "mas", 
  "date": "2002-06-21T06:17:45.000000Z", 
  "msg": [
   "Added BucketMap, renamed to StaticBucketMap, from Avalon Excaliber.  I made the", 
   "following changes to the Avalon implementation:", 
   "Changed improper short form of license to the approved long form.", 
   "Changed package from org.apache.avalon.excaliber.collections to", 
   "org.apache.commons.collections.", 
   "Altered to allow null keys and null values.", 
   "Fixed the values() method to return all values from the map.  That is, when a", 
   "particular value is mapped to from two different keys, it should be included", 
   "twice in the values() collection; however the avalon implementation was using a", 
   "Set (thus not including duplicates). The new implementation uses a list which", 
   "does not restrict duplicate elements.", 
   "Fixed the put(Object,Object) method to return null rather than the value being", 
   "put into the map when the key does not already exist in the map (per the Map", 
   "contract).", 
   "Added equals(Object) and hashCode() implementations to conform to the Map", 
   "contract.", 
   "Altered the Node inner class's hashCode() method to return the hashCode of the", 
   "Map.Entry as defined in the Map.Entry's contract.", 
   "Added an equals(Object) method to the Node inner class to conform to the", 
   "Map.Entry contract.", 
   "Things left todo:", 
   "Alter the keySet(), values(), and entrySet() methods to return collections that", 
   "are backed by the map per the Map contract.", 
   "Add a constructor that takes another Map and adds all the mappings from that", 
   "map (per the Map recommendation).", 
   "Implement a DynamicBucketMap that will allow for dynamic resizing of the", 
   "hashtable's structure such that the map will not suffer a performance penalty", 
   "when the number of elements in the map exceeds the number of buckets in the", 
   "map.", 
   "Improve the documentation to indicate the performance problems when specifying", 
   "a size that is smaller than the expected number of elements.", 
   "Other general documentation cleanup"
  ], 
  "revision_id": "130736"
 }, 
 {
  "author": "mas", 
  "date": "2002-06-21T04:01:31.000000Z", 
  "msg": [
   "Made the TestCases for primitive lists extend TestList,", 
   "so the full suite of List tests is performed on them.", 
   "Used BulkTest.makeSuite to pick up the sublist tests.", 
   "There should probably be additional work for testing the", 
   "primitive operations.", 
   "Submitted by: Paul Jack ( pjack at sfaf dot org )"
  ], 
  "revision_id": "130735"
 }
]