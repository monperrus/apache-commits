[
 {
  "author": "gdusbabek", 
  "date": "2010-08-02T18:18:40.504083Z", 
  "msg": [
   "internode structures for migrations. changes migration disk format. patch by stuhood, reviewed by gdusbabek. CASSANDRA-1308"
  ], 
  "revision_id": "981645"
 }, 
 {
  "author": "ddas", 
  "date": "2010-08-02T18:18:01.823338Z", 
  "msg": [
   "MAPREDUCE-1288. Fixes TrackerDistributedCacheManager to take into account the owner of the localized file in the mapping from cache URIs to CacheStatus objects. Contributed by Devaraj Das."
  ], 
  "revision_id": "981644"
 }, 
 {
  "author": "gsim", 
  "date": "2010-08-02T17:56:22.437689Z", 
  "msg": [
   "Return rather than exiting once route is deleted"
  ], 
  "revision_id": "981643"
 }, 
 {
  "author": "schor", 
  "date": "2010-08-02T17:51:33.241186Z", 
  "msg": [
   "[UIMA-1840] ResultSpecification_impl has new static method that takes 2 ResultSpec_impls and intersects them, following language subsumption rules.  The Javadocs for containsType and containsFeature are clarified to represent what they do in all the specific cases of language subsumption.  The PrimitiveAnalysisEngine_impl is modified to cache the resultSpec corresponding to its output capabilities, everytime the type system changes. The call to do the intersection is changed to use the new method in the ResutlSpecification_impl.  The old method, computeAnalysisComponentResultSpec, is commented out.  I hope no users made use of this (we'll soon see ...).  I made a new set of test cases for this (ResultSpecTest), and moved the resultSpec test from the AnalysisEngine_implTest, and modified it to work (it needs the type system specified, in order to compute the intersection for these tests)."
  ], 
  "revision_id": "981642"
 }, 
 {
  "author": "hwright", 
  "date": "2010-08-02T17:50:41.013821Z", 
  "msg": [
   "Make the JavaHL build and test targets include the javahl-compat targets.  For", 
   "backward compat, this will include the org.tigris.* packages in the distributed", 
   "tarballs.", 
   "* Makefile.in", 
   "(javahl): Add javahl-compat dependency.", 
   "(javahl-compat): Remove the circular javahl dependency.", 
   "(check-javahl): Add check-javahl-compat dependency."
  ], 
  "revision_id": "981641"
 }
]