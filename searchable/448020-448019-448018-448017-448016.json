[
 {
  "author": "remm", 
  "date": "2006-09-20T00:43:26.878907Z", 
  "msg": [
   "- Imports cleanup."
  ], 
  "revision_id": "448020"
 }, 
 {
  "author": "mszefler", 
  "date": "2006-09-20T00:42:16.555278Z", 
  "msg": [
   "Further tweaks on the correlation mechanism. Corrolator Message/Selector entry has been turned into two tables due to Hibernate bugs in", 
   "query generation for tables with discriminators. Eliminated UNIQ constraint mechanism for correlation and replaced with mandatory tx", 
   "boundary at <receive>/<pick> activity (even if the message has already arrived). This mechanism seems to work a lot better, has no", 
   "rollbacks and no lost messages."
  ], 
  "revision_id": "448019"
 }, 
 {
  "author": "mikem", 
  "date": "2006-09-20T00:35:03.854386Z", 
  "msg": [
   "DERBY-1777", 
   "contributed by Army Brown", 
   "merging change 446924 from trunk into 10.1 branch:", 
   "Commit Army's d1777_v2.patch, cleaning up an NPE in the optimizer."
  ], 
  "revision_id": "448018"
 }, 
 {
  "author": "bayard", 
  "date": "2006-09-20T00:34:04.731489Z", 
  "msg": [
   "Hooked the repository faq into the main dev page"
  ], 
  "revision_id": "448017"
 }, 
 {
  "author": "mikem", 
  "date": "2006-09-20T00:09:18.783723Z", 
  "msg": [
   "DERBY-1784", 
   "contributed by Yip Ng", 
   "committing derby1784-10.1-diff01.txt patch as backport of issue to 10.1 branch.", 
   "After studying the", 
   "compiler code abit more, I found that DML statements such as INSERT, UPDATE and", 
   "DELETE also suffer from the same problem (they use different bind logic)", 
   "With that said, this patch attempts to address all the stated problems above", 
   "when column reference is qualified with a synonym table name.", 
   "The fundamental problem is that Derby does not keep the original unbound table", 
   "name around once the synonym is resolved. So the fix is to address this case", 
   "and apply the qualification properly.", 
   "In the VIEW resolution case, the system needs to preserve the synonym name as", 
   "VIEW gets expanded to a subquery, the name to be set should be the exposed", 
   "name of the table and not the resolved table name.", 
   "For * expansion in the SELECT list, if the FROM clause happens to be a synonym,", 
   "the system should prepend it with the unbound name and not the resolved table", 
   "name. This way the binding logic is normalized.", 
   "For DML cases, the synonym name needs to be normalized to its base table so tha", 
   "setColumnDescriptor can apply correctly. When the system binds the expression", 
   "for this result column, it will resolve this properly since the column binding", 
   "logic are in the respective FromTable subclasses implementation where they", 
   "will use the exposed name this time to check for qualification.", 
   "I wrote more testcases for synonym.sql but I found out that this SQL file is", 
   "actually not part of derbylang suite, so the patch added this back to the test", 
   "bucket."
  ], 
  "revision_id": "448016"
 }
]