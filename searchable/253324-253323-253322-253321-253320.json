[
 {
  "author": "scheu", 
  "date": "2002-01-26T02:41:51.000000Z", 
  "msg": [
   "(See prior commit)"
  ], 
  "revision_id": "253324"
 }, 
 {
  "author": "scheu", 
  "date": "2002-01-26T02:40:34.000000Z", 
  "msg": [
   "(more commits to follow)", 
   "All of these changes passed all-tests and functional-tests", 
   "prior to committing the code.", 
   "Summary of changes", 
   "------------------", 
   "1) Added interfaces for all of the framework pieces", 
   "(SerializationContext, DeserializationContext,", 
   "Serializer, SerializerFactory, Deserializer,", 
   "DeserializerFactory, TypeMappingRegistry,", 
   "TypeMapping)", 
   "2) Each of the interfaces has a corresponding", 
   "*Impl file that contains the implementation.", 
   "In general, I hid public fields to force", 
   "communication through methods.", 
   "3) The TypeMappingRegistry/TypeMapping code now", 
   "conforms with the JAX-RPC spec.  Miscellaneous", 
   "function has been removed from the classes.", 
   "The type mapping code that was in the TypeMappingRegistry", 
   "is now in the TypeMapping class.", 
   "4) The WSDD now operates on the new TypeMapping", 
   "code per JAX-RPC.", 
   "5) The DefaultTypeMappingImpl class contains the", 
   "SOAP/XSD mappings.  Most of this code is now", 
   "HashMap driven.", 
   "6) The new org.apache.axis.encoding.ser class", 
   "now contains the serializer/deserializer/factory", 
   "classes.  These classes have been exploded into", 
   "individual classes.  See the description", 
   "in the interface classes for more details.", 
   "7) The QName constants in SOAPEncoding have been", 
   "moved to Constants.java (i.e. XSD_INT).  This", 
   "makes sense since the URI namespace constants", 
   "are in Constants.java.", 
   "8) The serialization framework is now passed the", 
   "original type of the value requiring serialization.", 
   "Thus the code now distinguishes between a java.lang.Integer", 
   "value that was originally an int versus a java.lang.Integer.", 
   "This distinction is necessary to discern between", 
   "xsd:int and soapenc:int, and also affects multi-ref processing.", 
   "9) Added numerous javadoc comments to the interfaces and", 
   "added javadoc comments to all methods that were touched.", 
   "10) The code, wsdd, etc. now exclusively uses factories to", 
   "construct serializers/deserializers per JAX-RPC.  See", 
   "the interface comments to see how such instances are constructed.", 
   "11) In general the \"addSerializer\" and \"addDeserializer\" methods", 
   "have been removed from the engine, service, etc.  Instead", 
   "the serializer/deserializer factories are added in a compliant manner.", 
   "I changed the addSerializer/addDeserializer method in the Call", 
   "object to registerTypeMapping as a convenience.", 
   "12) Changed the Stub generation to use the new TypeMapping", 
   "structure to register types.", 
   "13) Updated all of AXIS to use URI_CURRENT_SOAP_ENC instead", 
   "of URI_SOAP_ENC.  There was some inconsistencies.", 
   "14) Changed the samples/tests as necessary to conform to the new code.", 
   "Only minor/cosmetic changes were necessary.", 
   "----------------------------------------------", 
   "Limitations/Future Work:", 
   "A) Glen had some questions about performance.  I don't think that there", 
   "are any major performance problems with the new code, but I agree", 
   "that improvements can be made after this code is committed.", 
   "B) I ripped out the code that serialized the TypeMappingRegistry.", 
   "This kind of support will be added later (next week) as serialization of the", 
   "WSDDTypeMapping.", 
   "C) The JAX-RPC document is still in flux.  So more changes will be necessary", 
   "as the spec comes into focus.", 
   "D) The code still needs to be made more flexible to give the user the", 
   "ability to plug in their own default TypeMapping.  To make this work", 
   "properly, the runtime should always request the factory class names from", 
   "the TypeMapping (i.e. the runtime, wsdd, and stub code should not", 
   "have hard-coded references to BeanSerializerFactory).  There are", 
   "some performance issues involved with this, so might need to add", 
   "Axis only methods to speed up this path.", 
   "E) May want to change the default TypeMapping to try and find", 
   "unregistered mappings by automatically converting the namespace", 
   "uri into package names.", 
   "F) ???"
  ], 
  "revision_id": "253323"
 }, 
 {
  "author": "dims", 
  "date": "2002-01-25T18:31:53.000000Z", 
  "msg": [
   "Patches from \"Theodore W. Leung\" <twleung@sauria.com> for SOAP Envelope Signing and Verification", 
   "- The src-patch fixes problems with our use of C14n and has the server check whether an incoming message claims to be signed", 
   "- The test-patch changes some of the namespaces used in the wsdl test to be absolute -- this was causing c14n to break.", 
   "- The test suite can deploy all the examples with transparent signing. However, when it actually comes to invoking the tests via MultithreadTestCase#Run I'm seeing some weird NPE's."
  ], 
  "revision_id": "253322"
 }, 
 {
  "author": "tomj", 
  "date": "2002-01-25T17:48:54.000000Z", 
  "msg": [
   "Handle literal message elements of the form", 
   "<element name=\"foo\" type=\"foo_type\"/>", 
   "Insure the referenced types aren't emitted if not used.", 
   "Pass literal flag to recursive calls to setTypeReferences()"
  ], 
  "revision_id": "253321"
 }, 
 {
  "author": "dims", 
  "date": "2002-01-25T16:30:08.000000Z", 
  "msg": [
   "First cut of javax.xml.soap package from JAXM Spec.", 
   "- This is a subset of the classes from JAXM that we need for JAX-RPC 0.6", 
   "- Had to check in 2 classes in javax.xml.messaging that were referenced from javax.xml.soap package.", 
   "- Had to check in 1 class in javax.xml.transform that was referenced from javax.xml.soap package.", 
   "- Needs \"attachments.present\" to compile. Does not compile if attachments.present is false.", 
   "- Javadocs were hand-copied from JAXM Spec's Javadocs (JAX Winter Pack)", 
   "- As soon as we get an official copy we can replace this code with the \"official\" copy."
  ], 
  "revision_id": "253320"
 }
]