[
 {
  "author": "", 
  "date": "2012-01-31T20:18:42.676718Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7952", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-18T09:57:23.131767Z", 
   "Log Message:", 
   "-----------", 
   "PARB changes for RichEditableText, TextArea and TextInput", 
   "RichEditableText, TextArea", 
   "--------------------------", 
   "content:Object setter only for use by MXML compiler", 
   "textFlow:TextFlow getter/setter added", 
   "scrollToPosition -> scrollToRange()", 
   "getSelectionFormat() -> getFormatOfRange(requestedFormats:Vector.<String> = null, anchorPosition=-1,                  activePosition=-1):TextLayoutFormat", 
   "If either position is -1, the current selection will be used.", 
   "setSelectionFormat() -> setFormatOfRange(format:TextLayoutFormat, anchorPosition=-1, activePosition=-1):void", 
   "If either position is -1, the current selection will be used.", 
   "export() removed", 
   "RichEditableText, TextBase", 
   "--------------------------", 
   "autoSize removed", 
   "widthInChars defaults to NaN", 
   "heightInLines defaults to NaN", 
   "If both are NaN, and not in scroller, it will autoSize.", 
   "If both are NaN, and in scroller, widthInChars effectively 15, heightInLines effectively 10.", 
   "If widthInChars is NaN and heightInLines is not, widthInChars effectively 1.", 
   "If heightInLines is NaN and widthInChars is not, heightInLines effectively 1.", 
   "selectionVisibility:String -> selectionHighlighting:String", 
   "TextSelectionVisibiliy.as -> TextSelectionHightlighting.as", 
   "setSelection -> selectRange(anchor, active) and the args are no longer optional", 
   "selectAll() added", 
   "TextBase", 
   "--------", 
   "TextBase.as -> SkinnableTextBase.as", 
   "it will not support any non-inheriting styles", 
   "textView skin part -> textDisplay", 
   "widthInChars property removed and moved to TextInput and TextArea", 
   "Styles", 
   "-------", 
   "Renamed style selectionColor -> focusedTextSelectionColor", 
   "Renamed style unfocusedSelectionColor -> unfocusedTextSelectionColor", 
   "Renamed inactiveSelectionColor -> inactiveTextSelectionColor", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/Scroller.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/skins/spark/TextInputSkin.mxml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/styles/metadata/SelectionFormatTextStyles.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/skins/spark/TextAreaSkin.mxml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/defaults.css</path>", 
   "<path kind=\"file\" copyfrom-path=\"/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/supportClasses/TextBase.as\" copyfrom-rev=\"7834\" action=\"A\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/TextSelectionVisibility.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/TextInput.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/NumericStepper.as</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/supportClasses/TextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/spark-manifest.xml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/skins/spark/NumericStepperTextInputSkin.mxml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/defaults.css</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/TextArea.as</path>", 
   "<path kind=\"file\" copyfrom-path=\"/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/TextSelectionVisibility.as\" copyfrom-rev=\"7834\" action=\"A\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/TextSelectionHighlighting.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>"
  ], 
  "revision_id": "1282498"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:18:39.395254Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7799", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-12T20:48:31.644129Z", 
   "Log Message:", 
   "-----------", 
   "- Reproduced and fixed the ENTER key issue that Gordon found a few weeks ago that neither Peter or I could reproduce at the time.  I believe there is a bug in TLF that it doesn't always observe the manageEnter configuration setting.  My fix will work whether or not TLF is fixed since the ENTER key never gets to TLF.", 
   "- Moved the keyDownHandler and the focusOutHandler from RET to RETCM so it would be symmetric with the focusInHandler already there.", 
   "- Can't select in the numeric stepper if not editable or selectable.  The text APIs ignore the visual selectable and editable properties so the caller must check these first.", 
   "QA Notes: test enter in multiline TextArea single line TextInput/NumericStepper components", 
   "Doc Notes:SDK-21783", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/components/NumericStepper.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>"
  ], 
  "revision_id": "1282497"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:18:35.937403Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7747", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-11T14:28:32.772219Z", 
   "Log Message:", 
   "-----------", 
   "Remove override of focusInHandler since TLF now calls preventDefault on any nav keys it processes.", 
   "QA Notes: we need to be sure to test RET keyboard input and navigation on AIR since the keyboard events are slightly different than for the player", 
   "Doc Notes:", 
   "Bugs: SDK-21552", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as"
  ], 
  "revision_id": "1282496"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:18:32.635582Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7581", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-05T16:54:24.993662Z", 
   "Log Message:", 
   "-----------", 
   "-Redo workaround for SDK21552.  It turns out that in AIR all keyboard events are cancelable so blindly calling event.preventDefault() after the TCM keyDownHandler has processed the event results in the default behavior for normal keys being canceled - hence no text gets inserted.  It also turns out that our SystemManager.keyDownHandler is converting the keyDown events for the set of nav keys used by the scroller into cancelable events.  For the player, normal keys are not cancelable so blindly calling preventDefault() only canceled the nav keys which is what we wanted.", 
   "- Remove a no longer needed check in the text setter since TCM.setText() now does the check.", 
   "QA Notes:", 
   "Doc Notes:", 
   "Bugs: SDK-21580", 
   "Reviewers: Gordon", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>"
  ], 
  "revision_id": "1282495"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:18:29.624117Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 7539", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-06-03T21:41:04.560668Z", 
   "Log Message:", 
   "-----------", 
   "Integrate TLF 446. tcm.getText no longer appends terminator to the end of the string.  TCM.hasScrollRect is now private.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/in/tlf/textLayout.swz</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/libs/textLayout.swc</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/in/tlf/textLayout.swf</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/in/tlf/tlf.properties</path>"
  ], 
  "revision_id": "1282494"
 }
]