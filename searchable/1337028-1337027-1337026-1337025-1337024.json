[
 {
  "author": "nadiramra", 
  "date": "2012-05-11T05:13:01.014275Z", 
  "msg": [
   "AXISCPP-526 Add ability to specify connect timeout"
  ], 
  "revision_id": "1337028"
 }, 
 {
  "author": "ashish", 
  "date": "2012-05-11T04:55:05.337398Z", 
  "msg": [
   "Applied similar fix as we did on trunk r1300463.", 
   "On production systems you can't suppress Debug.log( message by the use of debug.properties file. It is always good to use Debug.* statements that are having log level setup in debug.properties file. The real problem comes with Debug.log( statement when you are printing any list or map object that contains so many records(or data) in it. Here I am changing all the occurrence of Debug.log( with Debug.logInfo(, Debug.logError( or Debug.logWarning( so that we can have better control of Debug.* statements on production system. :-)", 
   "Bad use of Debug statement. On production system you will get false alarm that you are having error in code base although the resultant statement is only giving additional information instead of error message.", 
   "If conditional check is used for some debug level lets say \"Verbose\" then the containing Debug statement will be Debug.logVerbose() instead of Debug.logInfo() - Comment from Jacopo and Adrian."
  ], 
  "revision_id": "1337027"
 }, 
 {
  "author": "ashish", 
  "date": "2012-05-11T04:51:55.417700Z", 
  "msg": [
   "Applied similar fix as we did on trunk r1300463.", 
   "On production systems you can't suppress Debug.log( message by the use of debug.properties file. It is always good to use Debug.* statements that are having log level setup in debug.properties file. The real problem comes with Debug.log( statement when you are printing any list or map object that contains so many records(or data) in it. Here I am changing all the occurrence of Debug.log( with Debug.logInfo(, Debug.logError( or Debug.logWarning( so that we can have better control of Debug.* statements on production system. :-)", 
   "Bad use of Debug statement. On production system you will get false alarm that you are having error in code base although the resultant statement is only giving additional information instead of error message.", 
   "If conditional check is used for some debug level lets say \"Verbose\" then the containing Debug statement will be Debug.logVerbose() instead of Debug.logInfo() - Comment from Jacopo and Adrian."
  ], 
  "revision_id": "1337026"
 }, 
 {
  "author": "ashish", 
  "date": "2012-05-11T04:48:14.336383Z", 
  "msg": [
   "Applied similar fix as we did on trunk r1300463.", 
   "On production systems you can't suppress Debug.log( message by the use of debug.properties file. It is always good to use Debug.* statements that are having log level setup in debug.properties file. The real problem comes with Debug.log( statement when you are printing any list or map object that contains so many records(or data) in it. Here I am changing all the occurrence of Debug.log( with Debug.logInfo(, Debug.logError( or Debug.logWarning( so that we can have better control of Debug.* statements on production system. :-)", 
   "Bad use of Debug statement. On production system you will get false alarm that you are having error in code base although the resultant statement is only giving additional information instead of error message.", 
   "If conditional check is used for some debug level lets say \"Verbose\" then the containing Debug statement will be Debug.logVerbose() instead of Debug.logInfo() - Comment from Jacopo and Adrian."
  ], 
  "revision_id": "1337025"
 }, 
 {
  "author": "ashish", 
  "date": "2012-05-11T04:46:26.935721Z", 
  "msg": [
   "Applied similar fix as we did on trunk r1300463.", 
   "On production systems you can't suppress Debug.log( message by the use of debug.properties file. It is always good to use Debug.* statements that are having log level setup in debug.properties file. The real problem comes with Debug.log( statement when you are printing any list or map object that contains so many records(or data) in it. Here I am changing all the occurrence of Debug.log( with Debug.logInfo(, Debug.logError( or Debug.logWarning( so that we can have better control of Debug.* statements on production system. :-)", 
   "Bad use of Debug statement. On production system you will get false alarm that you are having error in code base although the resultant statement is only giving additional information instead of error message.", 
   "If conditional check is used for some debug level lets say \"Verbose\" then the containing Debug statement will be Debug.logVerbose() instead of Debug.logInfo() - Comment from Jacopo and Adrian."
  ], 
  "revision_id": "1337024"
 }
]