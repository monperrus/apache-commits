[
 {
  "author": "olamy", 
  "date": "2012-09-21T20:02:27.381984Z", 
  "msg": [
   "[MDEP-376] -Dexcludes filtering not working anymore"
  ], 
  "revision_id": "1388658"
 }, 
 {
  "author": "gertv", 
  "date": "2012-09-21T20:00:07.119446Z", 
  "msg": [
   "Updating main website contents"
  ], 
  "revision_id": "1388657"
 }, 
 {
  "author": "tfischer", 
  "date": "2012-09-21T19:59:16.680887Z", 
  "msg": [
   "Fix javadoc", 
   "add @override annotations"
  ], 
  "revision_id": "1388656"
 }, 
 {
  "author": "gertv", 
  "date": "2012-09-21T19:56:46.820893Z", 
  "msg": [
   "SMX4-1247: Update documentation subproject page with svnpubsub publishing info"
  ], 
  "revision_id": "1388655"
 }, 
 {
  "author": "stefan2", 
  "date": "2012-09-21T19:56:41.646262Z", 
  "msg": [
   "On the 10Gb branch: Implement a 1st level cache for DAG nodes as they", 
   "are the most frequently accessed data object in FSFS.  Also, access", 
   "to them tends to have high locality.", 
   "* subversion/libsvn_fs_fs/fs.h", 
   "(fs_fs_dag_cache_t): declare new data structure", 
   "(fs_fs_data_t): add DAG 1st level cache as member", 
   "* subversion/libsvn_fs_fs/tree.h", 
   "(svn_fs_fs__create_dag_cache): declare new private API", 
   "* subversion/libsvn_fs_fs/caching.c", 
   "(svn_fs_fs__initialize_caches): initialize DAG 1st level cache", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(cache_entry_t,", 
   "BUCKET_COUNT,", 
   "fs_fs_dag_cache_t): define DAG node 1st level cache data structure", 
   "(svn_fs_fs__create_dag_cache): implement new private API", 
   "(unlock_cache,", 
   "lock_cache,", 
   "auto_clear_dag_cache,", 
   "cache_lookup): implement cache logic", 
   "(dag_node_cache_get): use both cache levels", 
   "(dag_node_cache_get_non_canonical): new variant of the former for", 
   "potentially non-canonical paths", 
   "(open_path): skip canonicalization for canonical paths", 
   "(get_dag): most paths are canonical, thus try optimistic lookup"
  ], 
  "revision_id": "1388654"
 }
]