[
 {
  "author": "ehu", 
  "date": "2004-12-16T22:53:59.234542Z", 
  "msg": [
   "Cast vote."
  ], 
  "revision_id": "852415"
 }, 
 {
  "author": "maxb", 
  "date": "2004-12-16T22:21:08.393328Z", 
  "msg": [
   "Fix mailer.py to work with r11729+ (1.2.x+) bindings.", 
   "* tools/hook-scripts/mailer/mailer.py (header comments): Declare the version", 
   "of the python subversion bindings which we require.", 
   "(generate_list, generate_diff): Do not try to strip a leading slash from", 
   "base_path-s, since it is no longer present."
  ], 
  "revision_id": "852414"
 }, 
 {
  "author": "lundblad", 
  "date": "2004-12-16T22:17:32.829240Z", 
  "msg": [
   "Locking branch: Don't require a username when breaking a lock.  This is", 
   "something that the server implementations should handle, not the FS", 
   "implementations.", 
   "* subversion/libsvn_fs_fs/lock.c, libsvn_fs_base/lock.c (svn_fs_fs__unlock):", 
   "Don't require a username if force was specified.", 
   "* subversion/include/svn_fs.h (svn_fs_unlock): Tweak docstring to reflect new", 
   "semantics.", 
   "* subversion/libsvn_repos/fs-wrap.c (svn_repos_fs_unlock): Don't bail if no", 
   "user, but force was specified.  Mark strings for translation while here.", 
   "* subversion/libsvn_repos/hooks.c (svn_repos__hooks_pre_unlock,", 
   "svn_repos__hooks_post_unlock): Pass empty string to script if username is", 
   "NULL."
  ], 
  "revision_id": "852413"
 }, 
 {
  "author": "sussman", 
  "date": "2004-12-16T22:03:46.275216Z", 
  "msg": [
   "Locking branch:  give svn_fs_attach_lock() a 'force' arg.", 
   "... and make both svn_fs_lock() and svn_fs_attach_lock() behave", 
   "consistently when it comes to 'force'.", 
   "* include/svn_fs.h", 
   "(svn_fs_lock):  clarify docstring a bit.", 
   "(svn_fs_attach_lock):  add 'force' arg, tweak the doc promises.", 
   "there's never a need to match incoming creds.", 
   "* include/svn_repos.h", 
   "(svn_repos_fs_attach_lock):  add 'force' arg.", 
   "* libsvn_fs/fs-loader.h", 
   "(fs_vtable_t):   add 'force' flag to attach_lock.", 
   "* libsvn_fs/fs-loader.c", 
   "(svn_fs_attach_lock):  update the dispatch function accordingly.", 
   "* libsvn_fs_base/lock.h", 
   "(svn_fs_base__attach_lock):  add force arg.", 
   "* libsvn_fs_base/lock.c, lock.h", 
   "(svn_fs_base__attach_lock):  add force arg.", 
   "(struct attach_lock_args):   add force field.", 
   "(txn_body_attach_lock):      make use of force flag, change logic to", 
   "match new docstring.", 
   "* libsvn_fs_fs/lock.h", 
   "(svn_fs_fs__attach_lock):  add force arg.", 
   "* libsvn_fs_fs/lock.c", 
   "(svn_fs_fs__attach_lock):  add force arg, change logic to match new", 
   "docstring.", 
   "* libsvn_repos/fs-wrap.c", 
   "(svn_repos_fs_attach_lock):  add force arg, pass to fs.", 
   "* tests/libsvn_fs/locks-test.c", 
   "(attach_lock):                update test caller.", 
   "(lock_break_steal_refresh):   same.", 
   "(lock_out_of_date):           same.", 
   "* mod_dav_svn/lock.c", 
   "(dav_svn_append_locks):  pass client's --force flag to svn_fs_attach_lock().", 
   "(dav_svn_refresh_locks):  assuming the incoming token matches the", 
   "existing lock, pass force=TRUE to attach_lock()."
  ], 
  "revision_id": "852412"
 }, 
 {
  "author": "lundblad", 
  "date": "2004-12-16T21:42:07.981907Z", 
  "msg": [
   "Tweak locking spec.", 
   "* notes/locking/locking-ui.txt: Change --keep-lock to --no-unlock.  Clarify", 
   "what gets unlocked.  Remove username from example outupt of svn unlock."
  ], 
  "revision_id": "852411"
 }
]