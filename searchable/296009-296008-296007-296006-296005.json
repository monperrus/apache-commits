[
 {
  "author": "costin", 
  "date": "2001-11-26T17:11:40.000000Z", 
  "msg": [
   "A simple code move, the jk_logger.c/jk_logger.h are implementing the logging ( instead of", 
   "having the logging code in jk_util.c ).", 
   "As indicated by comments in jk_util, most of the code there can be replaced with", 
   "direct calls to jk_map ( I'm talking about the code that gets/sets ajp properties ).", 
   "Long term I expect jk_util to disapear, and all code to go in the right classes."
  ], 
  "revision_id": "296009"
 }, 
 {
  "author": "costin", 
  "date": "2001-11-26T17:08:48.000000Z", 
  "msg": [
   "Updated for the current set of files."
  ], 
  "revision_id": "296008"
 }, 
 {
  "author": "costin", 
  "date": "2001-11-26T17:08:17.000000Z", 
  "msg": [
   "Use jk_ajp14_worker.c for both ajp13 and ajp14 protocol types.", 
   "The code will work fine with any - if no login is specified we'll use only the", 
   "'basic' callbacks ( i.e. ajp13 ), if a login is specified we'll do all the new ajp14 stuff.", 
   "This eliminates tons of duplicated code and simplifies a lot the code, allowing", 
   "for more modularisation and better implementation."
  ], 
  "revision_id": "296007"
 }, 
 {
  "author": "costin", 
  "date": "2001-11-26T17:06:05.000000Z", 
  "msg": [
   "Move discovery to the separate handler.", 
   "Make sure it works in 'backward compatibility' mode if no secret is set."
  ], 
  "revision_id": "296006"
 }, 
 {
  "author": "costin", 
  "date": "2001-11-26T17:03:25.000000Z", 
  "msg": [
   "Moved the discovery and logon code in separate file. This simplifies Ajp14.c - it'll just", 
   "contain ajp-related code - and prepares for a more flexible message handling mechansim.", 
   "Another benefit ( after abstraction of marshalling ) is that the code will be reusable with", 
   "different other wire protocols."
  ], 
  "revision_id": "296005"
 }
]