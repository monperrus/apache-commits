[
 {
  "author": "jerenkrantz", 
  "date": "2002-11-18T01:04:35.146105Z", 
  "msg": [
   "* subversion/libsvn_ra_dav/fetch.c (custom_get_request),", 
   "subversion/libsvn_ra_dav/util.c (svn_ra_dav__parsed_request):", 
   "Look for [miscellany].do_compression in the config file, then", 
   "conditionally disable neon's zlib compression if value isn't 'yes'", 
   "Review by: Ben Collins-Sussman <sussman@collab.net>"
  ], 
  "revision_id": "843895"
 }, 
 {
  "author": "rooneg", 
  "date": "2002-11-18T00:55:11.539971Z", 
  "msg": [
   "return the ruby bindings for libsvn_wc to some sembalance of functionality.", 
   "* subversion/bindings/ruby/extconf.rb", 
   "($objs): add wc.o", 
   "* subversion/bindings/ruby/svn_ruby.c", 
   "(Init_svn): turn svn_ruby_init_wc back on, now that the working copy libs", 
   "work.", 
   "* subversion/bindings/ruby/client.c", 
   "(cl_status): update to work with changes to svn_client_status since this was", 
   "last used.  unifdef out.", 
   "(svn_ruby_init_client): uncomment call to rb_define_method for cl_status.", 
   "(all others): whitespace changes to improve readability.", 
   "* subversion/bindings/ruby/wc.c", 
   "(svn_ruby_wc_entry_t): add dir_path member, constifiy entry member.", 
   "(svn_ruby_wc_status_t): add dir_path member.", 
   "(wc_revert): if 0 out, since this requires a fairly large change to get", 
   "the right adm_access, and you can just use Svn::Client::revert for the time", 
   "being.", 
   "(wc_entry_attributes): if 0 out, i don't think this applies to subversion", 
   "anymore, but i need to think it through more first.", 
   "(all others): update to current svn API's, add whitespace for clarity, use", 
   "SVN_RB_ERR, convert remaining apr_pool_destroy calls to svn_pool_destroy", 
   "for consistency with other subversion code."
  ], 
  "revision_id": "843894"
 }, 
 {
  "author": "rooneg", 
  "date": "2002-11-18T00:01:38.320164Z", 
  "msg": [
   "* subversion/bindings/ruby/svn_ruby.h", 
   "(SVN_RB_ERR): allow for the case where pool is NULL, so this can be used for", 
   "cases where the pool needs to survive even if an exception is thrown.", 
   "* subversion/bindings/ruby/stream.c", 
   "(all functions): convert to SVN_RB_ERR where appropriate and add whitespace", 
   "to improve readability.", 
   "* subversion/bindings/ruby/txdelta.c", 
   "(all functions): convert to SVN_RB_ERR where appropriate and add whitespace", 
   "to improve readability."
  ], 
  "revision_id": "843893"
 }, 
 {
  "author": "fitz", 
  "date": "2002-11-17T22:13:27.324035Z", 
  "msg": [
   "* doc/book/book/ch03.xml: Reverting bogus commit that should have happened on the broken-book branch. Ben just reproduced this bug."
  ], 
  "revision_id": "843892"
 }, 
 {
  "author": "fitz", 
  "date": "2002-11-17T21:41:19.723602Z", 
  "msg": [
   "Checking in some work from the airplane."
  ], 
  "revision_id": "843891"
 }
]