[
 {
  "author": "bentmann", 
  "date": "2009-07-22T22:43:05.658594Z", 
  "msg": [
   "o Re-introduced distinction between user properties and system properties. We have use cases like interpolation and SUREFIRE-121 where we would like to handle user-specified props specially so a single properties soup is not up to the job. However, I opted not to follow the approach from 2.x where we also collect both system properties and user properties in a combined set called execution properties. Code that embeds Maven and programmatically creates an execution request should be not required to assemble such a mixed properties instance, it would enable bad behavior from Maven by subtle API misuse. Also, for things like the lifecycle participant that wants to inject properties, it should be cristal clear whether it injects a user or a system property, the semantics of something like getExecutionProperties().setProperty() would be unclear however."
  ], 
  "revision_id": "796900"
 }, 
 {
  "author": "tripod", 
  "date": "2009-07-22T22:42:18.722291Z", 
  "msg": [
   "JCR-2140: Baselines"
  ], 
  "revision_id": "796899"
 }, 
 {
  "author": "cmlenz", 
  "date": "2009-07-22T22:41:59.452672Z", 
  "msg": [
   "Fix automatic group=true on reduce views in Futon, which was only getting applied erratically depending on timing."
  ], 
  "revision_id": "796898"
 }, 
 {
  "author": "gsingers", 
  "date": "2009-07-22T22:40:55.276947Z", 
  "msg": [
   "add verbosity option"
  ], 
  "revision_id": "796897"
 }, 
 {
  "author": "adrianc", 
  "date": "2009-07-22T22:27:27.211264Z", 
  "msg": [
   "Moved user preferences code from Global Decorator to ScreenRenderer.java. Now user preferences can be queried before the Global Decorator is run."
  ], 
  "revision_id": "796896"
 }
]