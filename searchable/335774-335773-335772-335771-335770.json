[
 {
  "author": "morten", 
  "date": "2001-11-05T11:27:04.000000Z", 
  "msg": [
   "A fix for ancestor iterators that are started using an attribute node.", 
   "PR:\t\tbugzilla 4602", 
   "Obtained from:\t`n/a", 
   "Submitted by:\tmorten@xml.apache.org", 
   "Reviewed by:\tmorten@xml.apache.org"
  ], 
  "revision_id": "335774"
 }, 
 {
  "author": "morten", 
  "date": "2001-11-05T11:26:01.000000Z", 
  "msg": [
   "Fixed the number formatter.", 
   "PR:\t\tbugzilla 2901", 
   "Obtained from:\tn/a", 
   "Submitted by:\tmorten@xml.apache.org", 
   "Reviewed by:\tmorten@xml.apache.org"
  ], 
  "revision_id": "335773"
 }, 
 {
  "author": "sboag", 
  "date": "2001-11-04T05:22:27.000000Z", 
  "msg": [
   "Progress on Bugzilla Bug 1639 : Xalan escaping characters for ISO encodings other than ISO-8859-1.", 
   "The problem is that you can't tell from the Java Writers if they can encode", 
   "a character, and you can't tell which character they are going to encode to.", 
   "So...", 
   "Do a one-time-only reflection to see if a sun.io.CharToByteConverter for the", 
   "specific encoding is available.  I'm hoping this will work for most or all", 
   "platforms... but only some extensive testing will tell for sure.  If the", 
   "CharToByteConverter is not available, it falls back to the old behavior.", 
   "If it is available, use the canConvert method to see if the UTF-16 character", 
   "can be encoded.  If it can be, just send it to the writer, otherwise escape it.", 
   "This doesn't need to be done for < 128, so I'm suspecting the performance", 
   "hit won't be too bad.", 
   "The alternative is to create lookups for all the encodings that tell which", 
   "blocks of characters can't be encoded.  Too much work for me this", 
   "weekend, though it remains a possibility.  I want to try the use of", 
   "CharToByteConverter.canConvert first.", 
   "One problem I've encountered is that CharToByteConverter.canConvert", 
   "returns true for (utf-16 code points) 127-159.  And so they go unescaped.", 
   "How bad of a problem is this?  This seems like a bug in the Java", 
   "CharToByteConverter for ISO-8859-7.", 
   "It remains to be seen if this problem exists with other encodings, or if this is", 
   "the best approach."
  ], 
  "revision_id": "335772"
 }, 
 {
  "author": "sboag", 
  "date": "2001-11-04T05:16:50.000000Z", 
  "msg": [
   "Commented out mainly greek entities that Netscape seems not to handle."
  ], 
  "revision_id": "335771"
 }, 
 {
  "author": "curcuru", 
  "date": "2001-11-03T02:35:26.000000Z", 
  "msg": [
   "Use appropriate context class loader as done in JAXP's FactoryFinder;", 
   "Added various new jars; added checkAntVersion()"
  ], 
  "revision_id": "335770"
 }
]