[
 {
  "author": "blair", 
  "date": "2008-09-14T04:13:44.371861Z", 
  "msg": [
   "On the file externals branch.", 
   "* branches/file-externals:", 
   "Merge r33064 through r33065 from trunk."
  ], 
  "revision_id": "873140"
 }, 
 {
  "author": "blair", 
  "date": "2008-09-14T04:11:06.505109Z", 
  "msg": [
   "* subversion/tests/cmdline/externals_tests.py", 
   "(externals_test_setup):", 
   "Correct some documentation."
  ], 
  "revision_id": "873139"
 }, 
 {
  "author": "blair", 
  "date": "2008-09-14T01:10:17.717739Z", 
  "msg": [
   "On the file externals branch.", 
   "* branches/file-externals:", 
   "Merge r33039 through r33063 from trunk."
  ], 
  "revision_id": "873138"
 }, 
 {
  "author": "kfogel", 
  "date": "2008-09-13T23:09:50.969690Z", 
  "msg": [
   "Fix issue #3282: replaced files should use the revert text-base rather", 
   "than the regular text-base.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add3): If replacing, move the base text (if any) and base", 
   "props to their 'revert' locations.", 
   "(revert_admin_things): Always touch the 'reverted' boolean parameter.", 
   "Look for a revert base if the entry is schedule-replace, without", 
   "regard to entry->copied.  (This undoes part of r26476, but r26476", 
   "was not necessarily wrong; it's just that we've now fixed the bugs", 
   "that that part of r26476 was compensating for.)  Don't assume that", 
   "there's a regular text-base at all: in a replace-without-history", 
   "situation, there won't be.  Correctly revert the working file when", 
   "there is a revert text-base but no regular text-base.  Update the", 
   "timestamp based on whether text or props were reverted, not just", 
   "text.  Update doc string, both for above changes and to describe", 
   "the 'use_commit_times' parameter, which was entirely undocumented.", 
   "(revert_entry): Add a comment about why we're intializing the", 
   "'reverted' boolean, in light of above changes.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(choose_base_paths): A file is replaced if it is schedule-replace,", 
   "regardless of whether or not it has copyfrom information.  WTF.", 
   "(add_file): Make the code match what the comment already said --", 
   "allow the addition if the entry is scheduled for addition without", 
   "history.  Extend the comment to make it clear that \"addition\"", 
   "includes replacement.", 
   "* subversion/libsvn_wc/props.c", 
   "(svn_wc__load_props): Don't examine entry->copied when determining", 
   "whether to load revert props or not.", 
   "* subversion/libsvn_wc/diff.c", 
   "(file_diff): Diff against the revert base iff the regular base is", 
   "not available.", 
   "* subversion/tests/cmdline/prop_tests.py", 
   "(test_list): Expect same_replacement_props to pass now."
  ], 
  "revision_id": "873137"
 }, 
 {
  "author": "kfogel", 
  "date": "2008-09-13T19:27:32.955803Z", 
  "msg": [
   "* subversion/libsvn_wc/copy.c", 
   "(post_copy_cleanup): Remove spurious call to svn_wc_entries_read.", 
   "We call it again a short while later -- with a different value for", 
   "show_hidden, by the way -- and we never used the information", 
   "retrieved from the first call, nor did we touch adm_access (so", 
   "we couldn't have affected cached entries between the two calls)."
  ], 
  "revision_id": "873136"
 }
]