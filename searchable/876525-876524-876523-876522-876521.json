[
 {
  "author": "fabien", 
  "date": "2009-03-10T13:15:57.767865Z", 
  "msg": [
   "bash completion update.", 
   "* tools/client-side/bash_completion:", 
   "_svn: add new 'patch' command, and --svnpatch option to diff."
  ], 
  "revision_id": "876525"
 }, 
 {
  "author": "fabien", 
  "date": "2009-03-10T12:53:56.749311Z", 
  "msg": [
   "bash completion update.", 
   "* tools/client-side/bash_completion:", 
   "_svn: use same argument completion for 'mergeinfo' as for 'merge'"
  ], 
  "revision_id": "876524"
 }, 
 {
  "author": "fabien", 
  "date": "2009-03-10T12:49:36.769445Z", 
  "msg": [
   "French translation update for r36447:", 
   "* subversion/po/fr.po: po-update, 8 new, 17 fuzzy fixed"
  ], 
  "revision_id": "876523"
 }, 
 {
  "author": "gstein", 
  "date": "2009-03-10T12:28:25.960538Z", 
  "msg": [
   "Continued simplification of the test framework.", 
   "Note that all test cases now take a sandbox parameter, so we no longer", 
   "need the conditional logic to detect old-style test cases.", 
   "* subversion/tests/cmdline/svntest/testcase.py:", 
   "(__all__): add SkipUnless to the available symbols", 
   "(TestCase.__init__): take a docstring for the test's descriptions. if", 
   "not provided, then use the delegate's (ie. it propagates at init time", 
   "rather than run time). export it as the \"description\" attribute.", 
   "(TestCase.get_description): removed. just read the attribute.", 
   "(TestCase.check_description): removed. asserted at init time.", 
   "(TestCase.need_sandbox): removed. rather than pair calls to need_sandbox", 
   "and get_sandbox_name, the latter just returns None if a sandbox should", 
   "not be constructed.", 
   "(TestCase.run): always take a sandbox parameter.", 
   "(FunctionTestCase.__init__): make various assertions about the", 
   "docstring. pass it to the superclass constructor. assert that the", 
   "function takes a single parameter (the sandbox)", 
   "(FunctionTestCase.get_description): removed", 
   "(FunctionTestCase.need_sandbox): removed. we no longer examine the", 
   "function to see if it will take a parameter.", 
   "(FunctionTestCase.run): simplify. always pass a sandbox.", 
   "(Skip.need_sandbox): removed in favor of ...", 
   "(Skip.get_sandbox_name): ... this. added to return None when a sandbox", 
   "should not be built.", 
   "(Skip.run): always take a sandbox parameter", 
   "* subversion/tests/cmdline/svntest/main.py:", 
   "(TestRunner.list, TestRunner._print_name): use the predicate's", 
   ".description attribute to access the description. don't worry about", 
   "calling .check_description(). the TestCase has done it already.", 
   "(TestRunner.run): adjust logic for Sandbox construction, and always pass", 
   "it to the TestCase."
  ], 
  "revision_id": "876522"
 }, 
 {
  "author": "gstein", 
  "date": "2009-03-10T07:41:27.420851Z", 
  "msg": [
   "Remove a few more flush() invocations.", 
   "* subversion/tests/cmdline/svntest/main.py:", 
   "(copy_repos): print the error rather than writing/flushing to stdout", 
   "(TestRunner.run): don't worry about flushing the output."
  ], 
  "revision_id": "876521"
 }
]