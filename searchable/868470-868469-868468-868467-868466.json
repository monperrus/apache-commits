[
 {
  "author": "kameshj", 
  "date": "2007-12-11T11:34:29.920628Z", 
  "msg": [
   "On the issue-2897 branch:", 
   "Commit r28394(synch up from /trunk) made 'svn_rangelist__parse' to error out", 
   "for empty rangelist input. This fixes it.", 
   "* subversion/libsvn_subr/mergeinfo.c", 
   "(parse_revlist): Allows empty rangelist if invoked with parameter", 
   "'allow_empty_rangelist' TRUE. Update doc string.", 
   "(parse_revision_line): Call parse_revlist with 'allow_empty_rangelist'", 
   "as FALSE.", 
   "(svn_rangelist__parse): Call parse_revlist with 'allow_empty_rangelist'", 
   "as TRUE."
  ], 
  "revision_id": "868470"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-12-11T11:25:27.797862Z", 
  "msg": [
   "Create record_exact_merge_and_commit_revs branch.", 
   "Purpose of this branch is to", 
   "* extract the schema changes implemented by issue-2897 branch.", 
   "* populate the nececessary data in the new schema."
  ], 
  "revision_id": "868469"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-12-11T10:44:35.133485Z", 
  "msg": [
   "On the 'issue-2897' branch, merge 28232:28393 from /trunk.", 
   "Resolved the conflicts on,", 
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c", 
   "* subversion/libsvn_subr/mergeinfo.c"
  ], 
  "revision_id": "868468"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-12-11T09:10:49.695057Z", 
  "msg": [
   "Remove the completed todo"
  ], 
  "revision_id": "868467"
 }, 
 {
  "author": "kameshj", 
  "date": "2007-12-11T09:09:49.660603Z", 
  "msg": [
   "On the issue-2897 branch:", 
   "Reimplement the 'get-commit-revs-for-merge-ranges API' as", 
   "'get-commit-and-merge-ranges'.", 
   "Get the merges+commits that occured between min_commit_rev:max_commit_rev", 
   "and return 2 rangelists of 1-1 correspondence with each other.", 
   "* subversion/include/private/svn_mergeinfo_private.h", 
   "(svn_rangelist__parse): Prototype change to accept do_sort and do_compact", 
   "based on which it sorts the parsed rangelist and compacts the overlapping", 
   "ranges.", 
   "* subversion/libsvn_subr/mergeinfo.c", 
   "(parse_revlist): Accept 'do_compact' to decide whether to compact the", 
   "overlapping ranges.", 
   "(parse_revision_line): Invoke parse_revlist with do_compact = TRUE.", 
   "(svn_rangelist__parse): Prototype change. Call parse_revlist with", 
   "'do_compact' as decided by the caller. Sort the parsed rangelist if only", 
   "asked.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(root_vtable_t): get_commit_revs_for_merge_ranges ->", 
   "get_commit_and_merge_ranges. Change 'merge_rangelist' to an output parameter", 
   "rather than being an input parameter.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_get_commit_and_merge_ranges): Rename from svn_fs_get_commit_revs_for_merge_ranges.", 
   "Fix prototype. Update doc string.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_get_commit_and_merge_ranges): Fix for prototype change in", 
   "'svn_fs_get_commit_revs_for_merge_ranges' and 'root_vtable_t'.", 
   "* subversion/include/private/svn_fs_mergeinfo.h", 
   "(svn_fs_mergeinfo__get_commit_and_merge_ranges): Rename from", 
   "'svn_fs_mergeinfo__get_commit_revs_for_merge_ranges' and fix the prototype", 
   "and doc string.", 
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c", 
   "(get_parent_target_path_having_mergeinfo):", 
   "As per this commit invoking this function with merge range with no", 
   "merge+commits in it is legal. Update doc string to reflect new behaviour", 
   "and other function name changes in this commit.", 
   "(get_commit_and_merge_ranges): Renamed from", 
   "'get_commit_revs_for_merge_ranges'. Update doc string to reflect function", 
   "name changes in this commit.", 
   "Does not accept 'merge_rangelist' rather outputs the merge_rangelist and", 
   "commit_rangelist.", 
   "Retrieves all merge+commits between min_commit_rev and max_commit_rev.", 
   "commit_range lists are not ordered as ordering would break 1-1", 
   "correspondense with merge_ranges.", 
   "(svn_fs_mergeinfo__get_commit_and_merge_ranges): Renamed from", 
   "'svn_fs_mergeinfo__get_commit_revs_for_merge_ranges'.", 
   "Does not accept 'merge_rangelist' rather outputs the merge_rangelist and", 
   "commit_rangelist.", 
   "Update calls for 'get_commit_revs_for_merge_ranges' to", 
   "'get_commit_and_merge_ranges'.", 
   "* subversion/libsvn_fs_base/tree.c", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(root_vtable):", 
   "'svn_fs_mergeinfo__get_commit_revs_for_merge_ranges' ->", 
   "'svn_fs_mergeinfo__get_commit_and_merge_ranges'.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_get_commit_and_merge_ranges): Rename from", 
   "svn_repos_get_commit_revs_for_merge_ranges. Fix prototype. Update doc string.", 
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(svn_repos_get_commit_and_merge_ranges): Renamed from", 
   "svn_repos_get_commit_revs_for_merge_ranges and adjust for the above FS", 
   "prototype change.", 
   "* subversion/include/private/svn_dav_protocol.h", 
   "(SVN_DAV__COMMIT_REVS_FOR_MERGE_RANGES_REPORT): Removed.", 
   "(SVN_DAV__COMMIT_AND_MERGE_RANGES_REPORT): New macro with a new report name.", 
   "(SVN_DAV__COMMIT_RANGES): New macro holding the tag name under which", 
   "commit rangelist is given back.", 
   "* subversion/mod_dav_svn/dav_svn.h", 
   "(dav_svn__reports_list): Refer to new report name", 
   "SVN_DAV__COMMIT_AND_MERGE_RANGES_REPORT.", 
   "(dav_svn__get_commit_and_merge_ranges_report): Rename from", 
   "dav_svn__get_commit_revs_for_merge_ranges_report.", 
   "* subversion/mod_dav_svn/version.c", 
   "(deliver_report): Update for the above report name and function name change.", 
   "* subversion/mod_dav_svn/reports/mergeinfo.c", 
   "(dav_svn__get_commit_and_merge_ranges_report): Rename from", 
   "dav_svn__get_commit_revs_for_merge_ranges_report.", 
   "Output 'merge_rangelist' within '<S:merge-ranges>' and 'commit_rangelist'", 
   "within '<S:commit-ranges>'. Use new 'svn_repos_get_commit_and_merge_ranges'", 
   "as against the old API.", 
   "* subversion/libsvn_ra_svn/protocol", 
   "(Capabilities.mergeinfo): 'commit-revs-for-merge-ranges' ->", 
   "'get-commit-and-merge-ranges'", 
   "('Main Command Set'.get-commit-and-merge-ranges): Renamed from", 
   "'commit-revs-for-merge-ranges'. Remove 'merge_rangelist' from input", 
   "parameter add 'merge_rangelist' to response.", 
   "* subversion/svnserve/serve.c", 
   "(get_commit_and_merge_ranges): Renamed from get_commit_revs_for_merge_ranges.", 
   "Fix the protocol as described in subversion/libsvn_ra_svn/protocol.", 
   "Use new 'svn_repos_get_commit_and_merge_ranges' as against the old API.", 
   "(main_commands): Reflect the new report name and the new report function.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_commit_and_merge_ranges): Rename from", 
   "svn_ra_get_commit_revs_for_merge_ranges. Fix prototype. Update doc string.", 
   "* subversion/libsvn_ra/ra_loader.h", 
   "(get_commit_and_merge_ranges): Rename from 'get_commit_revs_for_merge_ranges'", 
   "and fix Prototype.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "(svn_ra_get_commit_and_merge_ranges): Rename from", 
   "'svn_ra_get_commit_revs_for_merge_ranges' and fix for above prototype", 
   "change.", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__get_commit_and_merge_ranges): Rename from", 
   "'svn_ra_local__get_commit_revs_for_merge_ranges' and fix for above", 
   "prototype change.  Use new 'svn_repos_get_commit_and_merge_ranges'", 
   "as against the old API.", 
   "(ra_local_vtable): 'svn_ra_local__get_commit_revs_for_merge_ranges' ->", 
   "'svn_ra_local__get_commit_and_merge_ranges'", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(ra_svn_get_commit_and_merge_ranges): Rename from", 
   "'ra_svn_get_commit_revs_for_merge_ranges'. Fix for the new svnserve", 
   "protocol change.", 
   "(ra_svn_vtable): 'ra_svn_get_commit_revs_for_merge_ranges' ->", 
   "'ra_svn_get_commit_and_merge_ranges'.", 
   "* subversion/libsvn_ra_neon/commit_and_merge_ranges.c", 
   "New file. Moved the commit revs report request from", 
   "subversion/libsvn_ra_neon/mergeinfo.c to here.", 
   "* subversion/libsvn_ra_neon/session.c", 
   "(neon_vtable): 'svn_ra_neon__get_commit_revs_for_merge_ranges' ->", 
   "'svn_ra_neon__get_commit_and_merge_ranges'.", 
   "* subversion/libsvn_ra_neon/ra_neon.h", 
   "(): 'svn_ra_neon__get_commit_revs_for_merge_ranges' ->", 
   "'svn_ra_neon__get_commit_and_merge_ranges'. Fix for the prototype change.", 
   "Add constants 'ELEM_commit_and_merge_ranges_report', 'ELEM_merge_ranges',", 
   "'ELEM_commit_ranges'.", 
   "* subversion/libsvn_ra_serf/commit_and_merge_ranges.c", 
   "New file. Moved the commit revs report request from", 
   "subversion/libsvn_ra_serf/mergeinfo.c to here.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(): 'svn_ra_serf__get_commit_revs_for_merge_ranges' ->", 
   "'svn_ra_serf__get_commit_and_merge_ranges'. Fix for the prototype change.", 
   "* subversion/libsvn_ra_serf/serf.c", 
   "(serf_vtable): 'svn_ra_serf__get_commit_revs_for_merge_ranges' ->", 
   "'svn_ra_serf__get_commit_and_merge_ranges'.", 
   "* subversion/libsvn_client/merge.c", 
   "(filter_reflected_revisions): Use the new API", 
   "'svn_ra_get_commit_and_merge_ranges' to get the reflective revisions rather", 
   "than three ra calls prior to this commit."
  ], 
  "revision_id": "868466"
 }
]