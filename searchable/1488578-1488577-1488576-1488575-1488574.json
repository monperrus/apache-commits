[
 {
  "author": "oheger", 
  "date": "2013-06-01T19:57:42.366589Z", 
  "msg": [
   "Added Initializable interface.", 
   "This interface is used by configuration builder implementations to find out", 
   "whether a configuration instance needs special initialization."
  ], 
  "revision_id": "1488578"
 }, 
 {
  "author": "oheger", 
  "date": "2013-06-01T19:57:21.419322Z", 
  "msg": [
   "Ensure that the root node of the newly created CombinedConfiguration is initialized when it is returned from the builder.", 
   "This changes makes it possible to use read-only combined configurations", 
   "with a NoOpSynchronizer because no further initialization is needed."
  ], 
  "revision_id": "1488577"
 }, 
 {
  "author": "oheger", 
  "date": "2013-06-01T19:56:41.902581Z", 
  "msg": [
   "Fixed a dead lock problem with DynamicCombinedConfiguration.", 
   "There was a problem with read operations when a new child configuration had to", 
   "be created. This requires a write lock which caused the thread to hang. The", 
   "new solution determines the current configuration at the very begin of an", 
   "operation."
  ], 
  "revision_id": "1488576"
 }, 
 {
  "author": "oheger", 
  "date": "2013-06-01T19:56:19.550504Z", 
  "msg": [
   "Adapted beginRead() and beginWrite() methods in CombinedConfiguration.", 
   "The readLock() and writeLock() methods were removed. They could cause", 
   "problems because they obtained locks without using the standard means. This", 
   "could break subclasses that rely on symmetric invocations of beginRead()/", 
   "endRead() and beginWrite()/endWrite() respective."
  ], 
  "revision_id": "1488575"
 }, 
 {
  "author": "hboutemy", 
  "date": "2013-06-01T19:56:02.420931Z", 
  "msg": [
   "factored out icon output to use it in check-source-release"
  ], 
  "revision_id": "1488574"
 }
]