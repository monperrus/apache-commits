[
 {
  "author": "jerenkrantz", 
  "date": "2006-03-30T02:19:29.271641Z", 
  "msg": [
   "ra_serf: Simplify blame report parsing by using ra_serf's common XML helpers.", 
   "* subversion/libsvn_ra_serf/blame.c", 
   "(blame_state_e): Add NONE constant.", 
   "(blame_state_list_t): Remove.", 
   "(blame_context_t): Remove ->state, ->free_state.", 
   "(push_state): Simplify to use common svn_ra_serf__xml_state_t structures.", 
   "(pop_state): Remove.", 
   "(create_propval): Copy the final property val into our info pool from the", 
   "temporary state pool.", 
   "(start_blame): Adjust for altered state mechanics; grab file name from path", 
   "as it has never been name attribute.", 
   "(end_blame): Adjust for altered state mechanics; use", 
   "svn_ra_serf__xml_pop_state instead of pop_state.", 
   "(cdata_blame): Adjust for altered state mechanics; place property values", 
   "in the temporary pool."
  ], 
  "revision_id": "859165"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2006-03-30T01:34:04.393427Z", 
  "msg": [
   "ra_serf: Refactor XML parsing so that we don't have to individually handle", 
   "namespaces and parser state; convert update report parsing to a simpler common", 
   "state scheme.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(svn_ra_serf__xml_state_t): XML state type that handles namespaces and", 
   "private data types.", 
   "(svn_ra_serf__xml_parser_t): Forward declare so that we can pass into...", 
   "(svn_ra_serf__xml_start_element_t, svn_ra_serf__xml_end_element_t,", 
   "svn_ra_serf__xml_cdata_chunk_handler_t): Give callbacks the XML parser too.", 
   "(svn_ra_serf__xml_parser_t): Add a pool, state, and free state list.", 
   "(svn_ra_serf__xml_push_state, svn_ra_serf__xml_pop_state): Declare.", 
   "* subversion/libsvn_ra_serf/xml.c", 
   "(svn_ra_serf__xml_push_state, svn_ra_serf__xml_pop_state): New state", 
   "management funcs.", 
   "* subversion/libsvn_ra_serf/util.c", 
   "(start_xml, end_xml, cdata_xml): Handle namespaces and provide parser.", 
   "(start_error, end_error, cdata_error): Update prototype and remove dead code.", 
   "(svn_ra_serf__handler_discard_body): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(report_state_e): Add a NONE = 0 element to work with common state code.", 
   "(report_state_list_t): Remove.", 
   "(report_context_t): Remove ->xmlp, ->ns_list, ->state, ->free_state, and", 
   "->free_info.", 
   "(push_state): Move allocation of state into svn_ra_serf__xml_push_state.", 
   "(pop_state): Remove.", 
   "(start_report, end_report, cdata_report): Adjust for new prototypes and", 
   "greatly simplify in light of common state code.  (Oww, my head hurts.)", 
   "(finish_report): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/merge.c", 
   "(start_merge, end_merge, cdata_merge): Update prototype and remove dead code.", 
   "(svn_ra_serf__merge_create_req): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/blame.c", 
   "(blame_context_t): Remove ns list.", 
   "(start_blame, end_blame, cdata_blame): Update prototype and remove dead code.", 
   "(svn_ra_serf__get_file_revs): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/log.c", 
   "(log_context_t): Remove ns list.", 
   "(start_log, end_log, cdata_log): Update prototype and remove dead code.", 
   "(svn_ra_serf__get_log): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/property.c", 
   "(svn_ra_serf__propfind_context_t): Remove ns list", 
   "(start_propfind, cdata_propfind): Update prototype and remove dead code.", 
   "(end_propfind): Update prototype; simplify the null cdata case.", 
   "(setup_propfind): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/options.c", 
   "(options_context_t): Remove ns list and parser", 
   "(start_options, end_options, cdata_options): Update prototype and remove", 
   "dead code.", 
   "(svn_ra_serf__create_options_req): Give the parser a pool.", 
   "* subversion/libsvn_ra_serf/getloc.c", 
   "(loc_context_t): Remove ns list", 
   "(start_getloc, end_getloc): Update prototype and remove dead code.", 
   "(svn_ra_serf__get_locations): Give the parser a pool."
  ], 
  "revision_id": "859164"
 }, 
 {
  "author": "rooneg", 
  "date": "2006-03-30T00:54:06.594782Z", 
  "msg": [
   "On the fs-atomic-renames branch:", 
   "First step towards making renames play nicely with dump and load.  There", 
   "are almost certainly cases that don't work, but this at least makes simple", 
   "test cases work.", 
   "* subversion/include/svn_repos.h", 
   "(svn_node_action_rename): New action type.", 
   "* subversion/include/svn_delta.h", 
   "(svn_delta_editor_t): Add new callbacks for renaming files and directories.", 
   "* subversion/libsvn_repos/dump.c", 
   "(dump_node): Handle svn_node_action_rename.", 
   "(rename_file_to, rename_dir_to): New callbacks for handling renames.", 
   "(get_dump_editor): Set up the rename callbacks.", 
   "* subversion/libsvn_repos/load.c", 
   "(make_node_baton): Parse the rename case.", 
   "(new_node_record): Handle svn_node_action_rename.", 
   "* subversion/libsvn_repos/replay.c", 
   "(path_driver_cb_func): Add some support for moves, largely copied from", 
   "how we treat adds.", 
   "* subversion/libsvn_delta/default_editor.c", 
   "(default_editor): Add dummy callbacks for the rename stuff."
  ], 
  "revision_id": "859163"
 }, 
 {
  "author": "kfogel", 
  "date": "2006-03-29T23:19:50.420303Z", 
  "msg": [
   "Mention the new BuildBot farm, and generally update our pointers to", 
   "information about automated testing.", 
   "* www/project_development.html: Mention the new BuildBot farm Lieven", 
   "Govaerts has set up, pointing to hacking.html for details.", 
   "* www/hacking.html", 
   "(automated-tests): Completely update this section."
  ], 
  "revision_id": "859162"
 }, 
 {
  "author": "kfogel", 
  "date": "2006-03-29T22:40:00.331521Z", 
  "msg": [
   "* www/merge-tracking/summit-survey.html: Dunno what was up with", 
   "introductory paragraph, but fix it."
  ], 
  "revision_id": "859161"
 }
]