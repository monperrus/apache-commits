[
 {
  "author": "tilman", 
  "date": "2015-04-01T18:10:08.781279Z", 
  "msg": [
   "PDFBOX-2576: make fields final; remove uneeded casts; remove public modifier from methods of non public class"
  ], 
  "revision_id": "1670743"
 }, 
 {
  "author": "sershe", 
  "date": "2015-04-01T18:00:38.951751Z", 
  "msg": [
   "HIVE-10123 : Hybrid grace Hash join : Use estimate key count from stats to initialize BytesBytesMultiHashMap (Mostafa Mokhtar, reviewed by Sergey Shelukhin)"
  ], 
  "revision_id": "1670742"
 }, 
 {
  "author": "stevehay", 
  "date": "2015-04-01T17:46:26.230990Z", 
  "msg": [
   "Update Apache-Test to current revision"
  ], 
  "revision_id": "1670741"
 }, 
 {
  "author": "stevehay", 
  "date": "2015-04-01T17:40:08.583510Z", 
  "msg": [
   "Fix compilation failure in some configurations under Perl 5.21.1 and above", 
   "The problem is that mod_perl overrides Perl's definition of dNOOP with one that uses the same symbol in an incompatible way. Failures start with Perl 5.21.1 because this version introduced some inline function definitions that can end up using dNOOP internally. The core inline.h is processed too early for mod_perl's override, so functions defined there and functions defined in mod_perl end up using different versions of dNOOP, exposing the incompatibility.", 
   "Presumably mod_perl is trying to avoid the warnings that one used to get with Perl 5.6. That was fixed a long time ago, so mod_perl no longer needs an override. However, since README notes that mod_perl *MAY* still work with Perls older than 5.8.2 it is probably worth keeping the override and avoiding the clash of dNOOP definitions by using a different symbol.", 
   "Patch by Zefram <zefram@fysh.org> from rt.cpan.org #101144."
  ], 
  "revision_id": "1670740"
 }, 
 {
  "author": "stevehay", 
  "date": "2015-04-01T17:24:20.523317Z", 
  "msg": [
   "Add need_fork() to Apache::Test, and use it to skip a test requiring fork() if fork() is unimplemented."
  ], 
  "revision_id": "1670739"
 }
]