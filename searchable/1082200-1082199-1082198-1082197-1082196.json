[
 {
  "author": "rmuir", 
  "date": "2011-03-16T16:51:26.318116Z", 
  "msg": [
   "LUCENE-2970: SpecialOperations.isFinite had a terrible complexity, use a visited set to avoid it"
  ], 
  "revision_id": "1082200"
 }, 
 {
  "author": "jbellis", 
  "date": "2011-03-16T16:51:04.648000Z", 
  "msg": [
   "allow specifying maven repo locations", 
   "patch by J\u00fcrgen Hermann; tested by jbellis for CASSANDRA-2340"
  ], 
  "revision_id": "1082199"
 }, 
 {
  "author": "cmpilato", 
  "date": "2011-03-16T16:48:51.359069Z", 
  "msg": [
   "* notes/db_node_walkers.txt", 
   "Rename this...", 
   "* notes/wc_node_walkers.txt", 
   "...to this."
  ], 
  "revision_id": "1082198"
 }, 
 {
  "author": "mikem", 
  "date": "2011-03-16T16:48:10.542086Z", 
  "msg": [
   "DERBY-3993 With IBM 1.6 T_RawStoreFactory fails with There should be 0 observers, but we still have 1 observers on Win 2K", 
   "The problem will only show up in SANE builds as that is the only time we do", 
   "the sanity check.", 
   "Xact.doComplete() is called near the end of the transaction to take care of any", 
   "cleanup prior to committing or aborting the transaction.", 
   "It calls notifyObservers(commitOrAbort) and it expects on return that each", 
   "observer has been notified, and all the observers are coded", 
   "to delete themselves from the observer list as part of this process. It then", 
   "asserts that the list should be empty on return.", 
   "The problem is that one of the DropOnCommit observer as part of it's", 
   "processing manages to add another observer to the list. I am guessing that the", 
   "problem becomes intermittent because either different", 
   "JVM's/memory layouts/hash algorithms", 
   "result in the order processing of the observer list to be different,", 
   "or different implementations handle the adding of an observer to the list", 
   "while scanning the list differently.  There is nothing in the Observable", 
   "javadoc that guarantees and order or says anything about expected behavior", 
   "of notifyObservers() execution if another observer is added during the", 
   "execution so I don't think it is a jvm bug.", 
   "In my case in order to process a drop of a container marked drop on commit the", 
   "raw store interface requires it to first be opened. The code adds", 
   "a TruncateOnCommit as part of this open as that layer of the code does not", 
   "know why it is being opened. I believe it is this \"new\" TruncateOnCommit", 
   "observer which is left on the observer queue. Adding an extra notify to the", 
   "drop on commit processing seems to fix the unit test, I'll see if that causes", 
   "any problems in the full set of tests."
  ], 
  "revision_id": "1082197"
 }, 
 {
  "author": "poirier", 
  "date": "2011-03-16T16:45:25.953447Z", 
  "msg": [
   "core: AllowEncodedSlashes new option NoDecode to allow encoded slashes", 
   "in request URL path info but not decode them. Change behavior of option", 
   "\"On\" to decode the encoded slashes as 2.0 and 2.2 do.  PR 35256,", 
   "PR 46830."
  ], 
  "revision_id": "1082196"
 }
]