[
 {
  "author": "kfogel", 
  "date": "2002-02-08T01:29:14.352380Z", 
  "msg": [
   "Implement a cancellation system, with a few minor tweaks.  There are", 
   "no users of the editor yet, this is just to make the functionality available.", 
   "Patch by: Bill Tutt <rassilon@lyra.org>", 
   "* subversion/libsvn_client/libsvn_client.dsp: Add cancellation_editor.c.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_cancellation_func_t): New function typedef.", 
   "(svn_client_get_cancellation_editor): New prototype.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_CANCELED): New error.", 
   "* subversion/libsvn_client/cancellation_editor.c: New file."
  ], 
  "revision_id": "841280"
 }, 
 {
  "author": "philip", 
  "date": "2002-02-08T00:10:06.632673Z", 
  "msg": [
   "Issue #532: make files in the .svn admin area readonly.", 
   "* subversion/include/svn_io.h", 
   "(svn_io_copy_file): Add boolean permissions copying parameter.", 
   "(svn_io_copy_dir_recursively): Add boolean permissions copying parameter.", 
   "(svn_io_set_file_read_only): Add prototype.", 
   "* subversion/libsvn_subr/io.c", 
   "(apr_transfer_file_contents): Remove to APR.", 
   "(apr_copy_file): Remove to APR.", 
   "(apr_append_file): Remove to APR.", 
   "(svn_io_copy_file): Call new APR function.", 
   "(svn_io_append_file): Call new APR function.", 
   "(svn_io_copy_dir_recursively): Pass new parameter to svn_io_copy_file and", 
   "to recursive call to svn_io_copy_dir_recursively.", 
   "(svn_io_set_file_read_only): Add function.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(do_postfix_text_deltas, do_prop_deltas, restore_file): Pass new parameter", 
   "to svn_io_copy_file.", 
   "* subversion/libsvn_wc/adm_files.c", 
   "(maybe_copy_file): Pass new parameter to svn_io_copy_file.", 
   "(sync_adm_file): Use svn_io_set_file_read_only to make permanent adm file", 
   "readonly.", 
   "(close_adm_file): Use svn_io_set_file_read_only to make permanent adm file", 
   "readonly.", 
   "* subversion/libsvn_wc/copy.c", 
   "(copy_file_administratively): Pass new parameter to svn_io_copy_file.", 
   "(copy_dir_administratively): Pass new parameter to svn_io_copy_dir_recursively", 
   "* subversion/libsvn_wc/get_editor.c (close_file): Add log entry to", 
   "make text-base readonly.", 
   "* subversion/libsvn_wc/log.c", 
   "(replace_text_base): Pass new parameter to svn_io_copy_file.", 
   "(log_do_file_readonly): New function.", 
   "(start_handler): Handle SVN_WC__LOG_READONLY.", 
   "* subversion/libsvn_wc/props.c (svn_wc__do_property_merge): Add log entries", 
   "to make property files readonly.", 
   "* subversion/libsvn_wc/translate.c (svn_wc_copy_and_translate): Pass new", 
   "parameter to svn_io_copy_file.", 
   "* subversion/libsvn_wc/wc.h", 
   "(SVN_WC__LOG_READONLY): Add log tag.", 
   "* subversion/tests/clients/cmdline/basic_tests.py (basic_revert): Check", 
   "reverted working copy is read-write."
  ], 
  "revision_id": "841279"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-02-07T23:35:46.198462Z", 
  "msg": [
   "Patch by: Daniel Berlin <dan@dberlin.org>", 
   "* subversion/libsvn_fs/fs.c (allocate_env): Increase the in-memory log", 
   "buffer size from 32k to 256k."
  ], 
  "revision_id": "841278"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-02-07T17:53:40.760469Z", 
  "msg": [
   "* subversion/libsvn_client/diff.c", 
   "(svn_client_diff): Docstring edits only."
  ], 
  "revision_id": "841277"
 }, 
 {
  "author": "gstein", 
  "date": "2002-02-07T00:20:14.959262Z", 
  "msg": [
   "Basic tweaks to gen_base.py.", 
   "* trunk/build: add *.pyc to the svn:ignore property", 
   "* build/gen_base.py: remove the _extension_map method, and use a class", 
   "attribute instead. update the classes accordingly. wrap a number", 
   "of lines to stay under 80 columns. remove the 'oname' parameter", 
   "from _GeneratorBase; it is a subclass concept."
  ], 
  "revision_id": "841276"
 }
]