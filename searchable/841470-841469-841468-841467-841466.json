[
 {
  "author": "gstein", 
  "date": "2002-03-02T01:00:09.902580Z", 
  "msg": [
   "Convert the ra_dav commit editor over to the new editor interface.", 
   "* libsvn_ra_dav/commit.c", 
   "(resource_t {}): change the 'local_path' member from a stringbuf to", 
   "a 'const char *'. remove the ->data from all users.", 
   "(add_child): use svn_path_join() for constructing URLs and paths", 
   "(record_prop_change): change types of NAME and VALUE args over to", 
   "'const char *' and 'const svn_string_t *' respectively. copy the", 
   "name into the right pool.", 
   "(commit_open_root): add DIR_POOL param. the local_path in the new", 
   "resource structure can just be \"\" since we can use a constant", 
   "now. construct the baton in the passed-in DIR_POOL.", 
   "(commit_delete_entry): change NAME param to PATH (and type). add a", 
   "POOL param. do all the work in the provided POOL rather than the", 
   "session pool. use svn_path_join() to construct the URL. copy the", 
   "PATH argument for the local_path in the 'deleted' array.", 
   "(commit_add_dir): change NAME param to PATH (and type). change the", 
   "COPYFROM_PATH to a 'const char *'. add a DIR_POOL argument.", 
   "construct the new baton in the provided DIR_POOL. run the", 
   "get_baseline_info() in the new pool and construct the resulting", 
   "using svn_path_join().", 
   "(commit_open_dir): change NAME param to PATH (and type). add a", 
   "DIR_POOL argument and use it for the new baton.", 
   "(commit_change_dir_prop): change NAME/VALUE params' type over to", 
   "'const char *' and 'const svn_string_t *' (respectively).", 
   "(commit_add_file): change NAME param to a PATH (and type). change", 
   "the COPYFROM_PATH to a 'const char *'. add a FILE_POOL and use it", 
   "for the resulting file baton. use the FILE_POOL for running the", 
   "get_baseline_info() call, and construct the resulting copy source", 
   "URL using svn_path_join().", 
   "(commit_open_file): change NAME param to PATH (and type). add a", 
   "FILE_POOL argument and use it for the new baton.", 
   "(commit_change_file_prop): change NAME/VALUE params' type over to", 
   "'const char *' and 'const svn_string_t *' (respectively).", 
   "(svn_ra_dav__get_commit_editor): build a new-style editor and then", 
   "wrap it."
  ], 
  "revision_id": "841470"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-03-02T00:40:44.002783Z", 
  "msg": [
   "Convert the update/checkout/status editor to the new", 
   "svn_delta_editor_t interface.  Let this stand as a warning to any", 
   "other sucker who casually considers upgrading an editor to the", 
   "new interface. :-)", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_get_switch_editor, svn_wc_get_checkout_editor,", 
   "svn_wc_get_update_editor): Changed 'editor' param to svn_delta_editor_t type.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(make_dir_baton, make_file_baton): Make 'name' a const char *.", 
   "(struct file_baton): Add an 'edit_baton' member.", 
   "(free_file_baton): Removed function.", 
   "(prep_directory): Simplify this function.", 
   "(bump_dir_revision): Was free_dir_baton.  Now doesn't free the dir  baton.", 
   "(make_editor, svn_wc_get_switch_editor, svn_wc_get_checkout_editor,", 
   "svn_wc_get_update_editor): Changed 'editor' param to svn_delta_editor_t type.", 
   "(open_root): Add 'pool' argument (and use it).", 
   "(delete_entry, open_directory, open_file): Add 'pool' argument (and use it),", 
   "and make 'name' a const char *.", 
   "(add_directory, add_file): Add 'pool' argument (and use it), and make 'name'", 
   "and 'copyfrom_path' const char *'s.", 
   "(add_or_open_file): Add 'pool' argument (and use it), and make", 
   "'name' a const char *.  Rename 'ancestor_url' to 'copyfrom_path'", 
   "(which is now also a const char *) and 'ancestor_revision' to", 
   "'copyfrom_rev'.", 
   "(change_dir_prop): Add 'pool' argument (and use it), make 'name' a", 
   "const char *, and 'value' a const svn_string_t *.", 
   "(change_file_prop): Add 'pool' argument, but don't use it (we'll let", 
   "our data to live in the same pool as the hash that will contain it).", 
   "Make 'name' a const char *, and 'value' a const svn_string_t *.", 
   "(close_edit): No longer free the edit baton's pool.", 
   "* subversion/libsvn_client/apply_edits.c", 
   "(apply_delta): Update and checkout editors are now", 
   "svn_delta_editor_t, but we will wrap them for compatibility with old", 
   "drivers.", 
   "* subversion/libsvn_client/checkout.c", 
   "(svn_client_checkout): Checkout editor is now svn_delta_editor_t,", 
   "but we will wrap it for compatibility with old drivers.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_wc_copy): Checkout editor is now svn_delta_editor_t,", 
   "but we will wrap it for compatibility with old drivers.", 
   "* subversion/libsvn_client/update.c", 
   "(svn_client_update): Update editor is now svn_delta_editor_t, but we", 
   "will wrap it for compatibility with old drivers.", 
   "* subversion/libsvn_client/switch.c", 
   "(svn_client_switch): Switch editor is now svn_delta_editor_t, but we", 
   "will wrap it for compatibility with old drivers.", 
   "* subversion/tests/libsvn_wc/checkout-test.c", 
   "(apply_delta): Checkout editor is now svn_delta_editor_t,", 
   "but we will wrap it for compatibility with old drivers."
  ], 
  "revision_id": "841469"
 }, 
 {
  "author": "sussman", 
  "date": "2002-03-01T23:20:10.419232Z", 
  "msg": [
   "Make mod_dav_svn throw svn_error_t's as <D:error> responses, and teach", 
   "libsvn_ra_dav to parse them.", 
   "[ This code assumes that you're using the latest httpd-2.0 with the new", 
   "mod_dav error-handling changes. ]", 
   "* mod_dav_svn/util.c (svn_errorcode_to_tag):  new func.", 
   "(dav_svn_convert_err): call the new dav_error constructor, passing", 
   "in a single generic custom namespace/error-tag.", 
   "* libsvn_ra_dav/util.c (ra_dav_parsed_request_accepter): new function", 
   "of type ne_accept_response.", 
   "(error_elements, validate_error_elements, start_err_element,", 
   "end_err_element): the error parser.", 
   "(parser_cxt_t):  context baton for error parser.", 
   "(svn_ra_dav__parsed_request): create two xml parsers: the one passed", 
   "in, and a \"standard\" one for parsing <D:error>.  Register them", 
   "*both* with the neon request, each with a different accepter", 
   "function.  So depending on the HTTP response code, we use the", 
   "appropriate parser, and reconstruct an svn_error_t from the server.", 
   "* libsvn_ra_dav/ra_dav.h (ELEM_error):  new DAV enum val.", 
   "(ELEM_svn_error, ELEM_human_readable):  new SVN enum vals."
  ], 
  "revision_id": "841468"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-03-01T20:53:18.752470Z", 
  "msg": [
   "* subversion/libsvn_fs/tree.c", 
   "(txn_body_apply_textdelta): Oops!  Bug fix.  Need to return an error", 
   "if the node we're looking for doesn't exist."
  ], 
  "revision_id": "841467"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-03-01T10:26:28.487143Z", 
  "msg": [
   "Some more pool cleanups.  Kinda scary to think that all of our", 
   "during-commit wc property reading/writing, and all our post-commit", 
   "revision bumping, was happening in one big giant single pool!", 
   "\"Good grief!\" -- Charlie Brown", 
   "* subversion/include/svn_wc.h", 
   "(struct svn_wc_close_commit_baton): Removed the pool from this baton.", 
   "(svn_wc_process_committed, svn_wc_get_wc_prop, svn_wc_set_wc_prop):", 
   "Add a 'pool' argument.", 
   "* subversion/include/svn_ra.h", 
   "(svn_ra_get_wc_prop_func_t, svn_ra_set_wc_prop_func_t,", 
   "svn_ra_close_commit_func_t): Add a 'pool' argument.", 
   "* subversion/include/svn_delta.h", 
   "(svn_delta_bump_func_t): Add a 'pool' argument.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(process_committed): Use iterative subpools.", 
   "(svn_wc_process_committed, svn_wc_get_wc_prop, svn_wc_set_wc_prop):", 
   "Add a 'pool' argument.", 
   "* subversion/libsvn_delta/track_editor.c", 
   "(close_edit): Update call to the bump_func to use an iteration subpool.", 
   "* subversion/libsvn_client/commit.c", 
   "(send_to_repos): There's no more pool in the svn_wc_close_commit_baton.", 
   "* subversion/libsvn_ra_dav/commit.c", 
   "(get_version_url, get_activity_url): Pass a pool to the wc callback(s).", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(get_delta_base): Pass a pool to the wc callback(s).", 
   "* subversion/libsvn_ra_dav/merge.c", 
   "(bump_resource, svn_ra_dav__merge_activity): Pass a pool to the", 
   "wc callback(s).", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(cleanup_commit): Pass a pool to the wc callback(s).", 
   "* subversion/libsvn_client/ra.c", 
   "(get_wc_prop): Add 'pool' argument, which is not put into the", 
   "callback baton, but just passed directly to the callback."
  ], 
  "revision_id": "841466"
 }
]