[
 {
  "author": "andyc", 
  "date": "2000-10-19T19:24:33.000000Z", 
  "msg": [
   "Replaced generic java.util.Stack for element stack with a", 
   "custom stack object that re-uses the objects in the stack.", 
   "This gives a large boost in performance. :)"
  ], 
  "revision_id": "316354"
 }, 
 {
  "author": "andyc", 
  "date": "2000-10-19T18:36:49.000000Z", 
  "msg": [
   "Merge in fix from main branch for JAXP to compile under 1.x."
  ], 
  "revision_id": "316353"
 }, 
 {
  "author": "lehors", 
  "date": "2000-10-19T17:37:19.000000Z", 
  "msg": [
   "renamed checkForPEReference to skipSeparator and add a parameter", 
   "to specify whether this should look for and expand parameter entity refs.", 
   "The original name was a misnommer given that in some cases when scanning", 
   "the internal subset we do not want it to look for PE refs.", 
   "I also fixed scanDecls so that it does not allow conditional sections to be", 
   "in the internal subset."
  ], 
  "revision_id": "316352"
 }, 
 {
  "author": "", 
  "date": "2000-10-19T17:10:29.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create tag", 
   "'Xerces-J_1_2_1'."
  ], 
  "revision_id": "316351"
 }, 
 {
  "author": "lehors", 
  "date": "2000-10-19T17:10:29.000000Z", 
  "msg": [
   "applied patch from Lynn Moson:", 
   "Performance problems", 
   "In some cases, compareBoundaryPoints() requires a partial walk of the DOM", 
   "tree.  The existing Xerces code did this very inefficiently.  For large", 
   "trees, or when large numbers of ranges are compared, this can be a", 
   "bottleneck.  It was for us.  Our new implementation maintains the same", 
   "semantics, but with a far more efficient implementation."
  ], 
  "revision_id": "316350"
 }
]