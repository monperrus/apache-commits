[
 {
  "author": "hwright", 
  "date": "2009-01-19T19:01:37.996660Z", 
  "msg": [
   "Followup to r35329: Pass the node kind information to JavaHL.", 
   "[ in subversion/bindings/javahl/ ]", 
   "* native/LogMessageCallback.cpp", 
   "(singleMessage): Pass the node kind information back up to Java.", 
   "* src/org/tigris/subversion/javahl/ChangePath.java", 
   "(serialVersionUID): Bump.", 
   "(ChangePath): Add new value to constructor.", 
   "(nodeKind): New.", 
   "(getNodeKind): New."
  ], 
  "revision_id": "875405"
 }, 
 {
  "author": "hwright", 
  "date": "2009-01-19T18:14:52.662648Z", 
  "msg": [
   "* subversion/include/svn_types.h", 
   "(svn_log_entry_t): Followup to r35329: Update docstring.", 
   "Suggested by: rhuijben"
  ], 
  "revision_id": "875404"
 }, 
 {
  "author": "hwright", 
  "date": "2009-01-19T17:59:38.353865Z", 
  "msg": [
   "Fix issue #1967: Return the kind of a node in the changed_paths portion of the", 
   "log receiver interface.  Ultimately the presence or lack thereof of this value", 
   "could depend on the server version, and whether or not the filesystem is storing", 
   "this information.", 
   "Note: This doesn't actually *use* these values in the command line client, but", 
   "I figure that's a bikeshed for another day.", 
   "* subversion/mod_dav_svn/reports/log.c", 
   "(kind_str): New.", 
   "(log_receiver): Use svn_log_changed_path2_t and report the node kind to the", 
   "client.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(interpret_kind): If the passed string is NULL, return an unknown kind.", 
   "(ra_svn_log): Use sv_log_changed_path2_t and report the node kind to the", 
   "client.", 
   "* subversion/libsvn_ra_svn/protocol", 
   "(changed-path-entry): Update.", 
   "* subversion/svn/log-cmd.c", 
   "(log_entry_receiver): Use a svn_log_changed_path2_t, even though we don't", 
   "currently use the extra node kind field.", 
   "* subversion/include/svn_types.h", 
   "(svn_log_changed_path2_t): New.", 
   "(svn_log_changed_path_t): Deprecate.", 
   "* subversion/libsvn_ra_neon/log.c", 
   "(log_baton): Use svn_log_changed_path2_t.", 
   "(kind_val): New.", 
   "(log_start_element): Parse the node-kind attribute.", 
   "* subversion/libsvn_repos/log.c", 
   "(detect_changed): Use svn_log_changed_path2_t and set the node kind member", 
   "from the filesystem value.", 
   "* subversion/svnserve/serve.c", 
   "(log_receiver): Write the changed node kind to the client.", 
   "* subversion/libsvn_ra_serf/log.c", 
   "(log_info_t): Use svn_log_changed_path2_t.", 
   "(kind_val): New.", 
   "(start_log): Parse the changed node kind received from the server."
  ], 
  "revision_id": "875403"
 }, 
 {
  "author": "cmpilato", 
  "date": "2009-01-19T17:40:49.915071Z", 
  "msg": [
   "Try to alleviate issue #3102 (ap_fflush() calls in mod_dav_svn can", 
   "hide some errors from client) by adding a helper function for wrapping", 
   "up REPORT responses, and using it consistently across all the REPORT", 
   "handlers.  The hope is that as future REPORTs appear, the use of this", 
   "helper function will be so well-established that it will be replicated", 
   "to the new code, too.", 
   "* subversion/mod_dav_svn/util.c", 
   "(dav_svn__final_flush_or_error): New function.", 
   "* subversion/mod_dav_svn/reports/dated-rev.c", 
   "(dav_svn__dated_rev_report): Replace flush and error logic with a", 
   "call to dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/deleted-rev.c", 
   "(dav_svn__get_deleted_rev_report): Replace flush and error logic", 
   "with a call to dav_svn__final_flush_or_error().  Also, make a little", 
   "code formatting tweak.", 
   "* subversion/mod_dav_svn/reports/file-revs.c", 
   "(dav_svn__file_revs_report): Replace flush and error logic with a", 
   "call to dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/get-locations.c", 
   "(dav_svn__get_locations_report): Replace flush and error logic with", 
   "a call to dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/get-location-segments.c", 
   "(dav_svn__get_location_segments_report): Replace flush and error", 
   "logic with a call to dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/get-locks.c", 
   "(send_get_lock_response): New helper function, cored out of ...", 
   "(dav_svn__get_locks_report): ... this, which in addition to calling", 
   "send_get_lock_response() now also uses dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/log.c", 
   "(dav_svn__log_report): Replace flush and error logic with a call to", 
   "dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/mergeinfo.c", 
   "(dav_svn__get_mergeinfo_report): Replace flush and error logic with a call", 
   "to dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/replay.c", 
   "(dav_svn__replay_report): Replace flush and error logic with a call", 
   "to dav_svn__final_flush_or_error().", 
   "* subversion/mod_dav_svn/reports/update.c", 
   "(dav_svn__update_report): Replace flush and error logic with a call", 
   "to dav_svn__final_flush_or_error().  This also changes some nearby logic", 
   "ordering regarding subpool deletion and such."
  ], 
  "revision_id": "875402"
 }, 
 {
  "author": "pburba", 
  "date": "2009-01-19T17:28:11.005989Z", 
  "msg": [
   "Fix expectations for issue #2618 test.", 
   "* subversion/tests/cmdline/update_tests.py", 
   "(update_wc_with_replaced): Change expected outcome when an update pulls", 
   "down a replacement on a locally replaced file.  This should be a", 
   "tree conflict of the 'local delete, incoming edit upon update' variety", 
   "since the incoming edit conflicts with the delete half of the replace.", 
   "(test_list): Remove XFail from update_wc_with_replaced."
  ], 
  "revision_id": "875401"
 }
]