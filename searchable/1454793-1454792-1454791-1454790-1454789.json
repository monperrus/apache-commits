[
 {
  "author": "peter_firmstone", 
  "date": "2013-03-10T06:04:40.918948Z", 
  "msg": [
   "Mux field defaultTimout was written by threads synchronizing on ConnectionManager's lock during startup, however reads were performed while holding muxLock.  The documentation stated that access to defaultTimeout was unsynchronized.", 
   "The failing test:", 
   "com/sun/jini/test/impl/outrigger/matching/StressTestWithShutdown.td", 
   "Suspected cause: because reads and writes were synchronized on different locks and defaultTimout was neither final nor volatile, threads could see defaultTimeout in it's default constructed state of 0, causing an IOException:", 
   "[java] TestBase.fail FINE: WriteTask_190: Caught an unexpected Exception during a retry", 
   "[java] java.rmi.ConnectIOException: I/O exception connecting to BasicObjectEndpoint[b3755737-cdf3-49d7-adb1-33197bc3a993,TcpEndpoint[10.1.1.2:54176]]; nested exception is:", 
   "[java]     java.io.IOException: timeout waiting for server to respond to handshake", 
   "[java]     at net.jini.jeri.BasicInvocationHandler.wrapSafeIOException(BasicInvocationHandler.java:893)", 
   "[java]     at net.jini.jeri.BasicInvocationHandler.invokeRemoteMethodOnce(BasicInvocationHandler.java:711)", 
   "[java]     at net.jini.jeri.BasicInvocationHandler.invokeRemoteMethod(BasicInvocationHandler.java:659)", 
   "[java]     at net.jini.jeri.BasicInvocationHandler.invoke(BasicInvocationHandler.java:528)", 
   "[java]     at com.sun.jini.outrigger.$Proxy1.write(Unknown Source)", 
   "[java]     at com.sun.jini.outrigger.SpaceProxy2.write(SpaceProxy2.java:296)", 
   "[java]     at com.sun.jini.test.impl.outrigger.matching.StressTest$WriteRandomEntryTask.spaceWrite(StressTest.java:585)", 
   "[java]     at com.sun.jini.test.impl.outrigger.matching.StressTest$WriteRandomEntryTask.run(StressTest.java:548)", 
   "[java]     at com.sun.jini.thread.TaskManager$TaskThread.run(TaskManager.java:331)", 
   "[java] Caused by: java.io.IOException: timeout waiting for server to respond to handshake", 
   "[java]     at com.sun.jini.jeri.internal.mux.MuxClient.newRequest(MuxClient.java:68)", 
   "[java]     at net.jini.jeri.connection.ConnectionManager$OutboundMux.newRequest(ConnectionManager.java:391)", 
   "[java]     at net.jini.jeri.connection.ConnectionManager$ReqIterator.next(ConnectionManager.java:665)", 
   "[java]     at net.jini.jeri.BasicObjectEndpoint$1.next(BasicObjectEndpoint.java:370)", 
   "[java]     at net.jini.jeri.BasicInvocationHandler.invokeRemoteMethodOnce(BasicInvocationHandler.java:708)", 
   "[java]     ... 7 more", 
   "I was reliably able to reproduce this on Solaris 10 sparc, 4 x 450MHz Ultra 80 with interleaved Ram.", 
   "java version \"1.6.0_30\"", 
   "Java(TM) SE Runtime Environment (build 1.6.0_30-b12)", 
   "Java HotSpot(TM) Server VM (build 20.5-b03, mixed mode)", 
   "Changing the field to volatile (state wasn't dependant on previous state and wouldn't cause deadlock) fixed the issue."
  ], 
  "revision_id": "1454793"
 }, 
 {
  "author": "stefan2", 
  "date": "2013-03-10T05:19:03.847194Z", 
  "msg": [
   "On the fsfs-format7 branch: sync with /trunk (up to r1454790).", 
   "No conflicts needed to be resolved."
  ], 
  "revision_id": "1454792"
 }, 
 {
  "author": "tomaz", 
  "date": "2013-03-10T05:12:06.812839Z", 
  "msg": [
   "Return inside the \"delete\" method."
  ], 
  "revision_id": "1454791"
 }, 
 {
  "author": "tomaz", 
  "date": "2013-03-10T05:10:50.295123Z", 
  "msg": [
   "Return path from the ShellOutSSHClient.put method."
  ], 
  "revision_id": "1454790"
 }, 
 {
  "author": "stefan2", 
  "date": "2013-03-10T05:09:32.531296Z", 
  "msg": [
   "The new (1.8) zero_copy_limit parameter in svn_repos_begin_report3", 
   "can only be used under certain circumstances.  Document those.", 
   "Since we use that interface at our RA layers only, the preconditions", 
   "are fulfilled.  However, our tests do create some things with this", 
   "API and this patch disables the zero copy optimization for those.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_begin_report3): mention limitation on zero_copy_limit", 
   "* subversion/tests/libsvn_repos/repos-test.c", 
   "(reporter_depth_exclude): make our tests comply to that limitation"
  ], 
  "revision_id": "1454789"
 }
]