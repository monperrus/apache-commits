[
 {
  "author": "", 
  "date": "2012-01-30T13:18:45.926058Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 23247", 
   "Author:   cframpto@adobe.com", 
   "Date:     2011-12-20T19:21:13.134833Z", 
   "Log Message:", 
   "-----------", 
   "Remove ADOBE SYSTEMS license and replace with Apache license in headers - frameworks.  A 2nd pass will be needed to get the files not handled up by the scripts.", 
   "Modified Paths:", 
   "--------------", 
   "4959 paths were modified"
  ], 
  "revision_id": "1259153"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T13:18:43.960696Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 23246", 
   "Author:   cframpto@adobe.com", 
   "Date:     2011-12-20T17:40:08.069454Z", 
   "Log Message:", 
   "-----------", 
   "Rollback 23243.  If comment followed header it was stripped as well.", 
   "Modified Paths:", 
   "--------------", 
   "2361 paths were modified"
  ], 
  "revision_id": "1259152"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T13:18:41.128969Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 23243", 
   "Author:   cframpto@adobe.com", 
   "Date:     2011-12-20T00:59:57.384047Z", 
   "Log Message:", 
   "-----------", 
   "In frameworks, remove Adobe headers from all files except xml/mxml file types.  There are also a few .txt files that are license files that I didn't touch yet.", 
   "Modified Paths:", 
   "--------------", 
   "2361 paths were modified"
  ], 
  "revision_id": "1259151"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T13:18:31.939062Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 14744", 
   "Author:   klin@adobe.com", 
   "Date:     2010-03-12T23:33:39.865284Z", 
   "Log Message:", 
   "-----------", 
   "Merge revision 14741 from 4.x to trunk.", 
   "Adding ILayoutDirectionElement to address issues with non-styled components such as embedded bitmaps. Also, addressed issues with changing layoutDirection at runtime.", 
   "-Added ILayoutDirectionElement.as with the layoutDirection property and invalidateLayoutDirection(). I took them out of IVisualElement.", 
   "-Moved the mirroring code from FlexBitmap to BitmapAsset as well as SpriteAsset. Also, implemented ILayoutDirectionElement in both.", 
   "-Addressed issues with layoutDirection changing at runtime by adding logic in UIComponent and Container to call invalidateLayoutDirection() on all of their ILayoutDirectionElement children.", 
   "-Updated various other components to use the new interface.", 
   "-Updated the dependency checker.", 
   "QE notes: No", 
   "Doc notes: No", 
   "Bugs: SDK-25656, SDK-25685, SDK-25726, SDK-25758 , SDK-25776 , SDK-25784 , SDK-25791, SDK-25806", 
   "Reviewer: Jason, Carol", 
   "Tests run: checkintests", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/core/SpriteVisualElement.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/supportClasses/GraphicElement.as</path>", 
   "<path kind=\"dir\" action=\"M\">/flex/sdk/trunk</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/IVisualElement.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/SpriteAsset.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/FlexBitmap.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/BitmapAsset.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/LayoutDirection.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/tools/dependencychecker/frameworkSwcExceptionsList.txt</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/managers/DragManagerImpl.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" copyfrom-path=\"/flex/sdk/branches/4.x/frameworks/projects/framework/src/mx/core/ILayoutDirectionElement.as\" copyfrom-rev=\"14741\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/ILayoutDirectionElement.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/Container.as</path>"
  ], 
  "revision_id": "1259150"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T13:18:29.950755Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 14581", 
   "Author:   klin@adobe.com", 
   "Date:     2010-03-04T17:58:14.319218Z", 
   "Log Message:", 
   "-----------", 
   "Merge revision 14567 from 4.x to trunk.", 
   "Fix for de-mirroring icons correctly including http://bugs.adobe.com/jira/browse/SDK-25657 and http://bugs.adobe.com/jira/browse/SDK-25684.", 
   "In general, the fix for de-mirroring icons involves saving the original transform matrix before applying our scaling and translation. Our current method only partially does this resulting in bugs such as the vertical flipping. After saving the matrix, we can restore the original transform matrix when applying most properties that would affect our calculations (width, height, scaleX, scaleY, x). We also use backing variables for scaleX and scaleY since they may be affected by the matrix calculations and by setting width and height. I\u2019ve also tried to simplify the case where we are switching back to not mirroring by restoring the original matrix and setting properties normally.", 
   "-Modified validateTransformMatrix to only handle the mirroring case. It saves the original matrix to a private variable, origMatrix, and applies matrix transformations on the current transform matrix. The transformations are similar to the pattern in AdvancedLayoutFeatures.build2DMatrix. We must use matrix transformations in order to make sure our transformations work with other transformations (e.g. rotation).", 
   "-In the addedHandler, I split the logic for mirroring and not mirroring. For the mirroring case, we also set the backing variables in addition to calling validateTransformMatrix. For the normal case, we restore the transform matrix to origMatrix.", 
   "-In each of the property setters, we first restore the transform matrix to origMatrix before setting the property. After setting the property, we apply de-mirroring by calling validateTransformMatrix.", 
   "QE notes: No", 
   "Doc notes: No", 
   "Bugs: SDK-25657, SDK-25684", 
   "Reviewer: Jason", 
   "Tests run: checkintests, Mirroring, Button, Alert, Tree", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"dir\" action=\"M\">/flex/sdk/trunk</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/FlexBitmap.as</path>"
  ], 
  "revision_id": "1259149"
 }
]