[
 {
  "author": "hwright", 
  "date": "2009-08-12T21:28:25.853929Z", 
  "msg": [
   "* subversion/libsvn_wc/entries.c", 
   "(svn_wc__get_entry_versioned): Ensure that we correctly emulate the behavior", 
   "of svn_wc__entry_versioned() by catching \"expected\" errors and translating", 
   "them into something the caller expects."
  ], 
  "revision_id": "878780"
 }, 
 {
  "author": "hwright", 
  "date": "2009-08-12T19:50:17.090223Z", 
  "msg": [
   "Remove another obsolute adm_access baton parameter.", 
   "* subversion/libsvn_client/merge.c", 
   "(get_full_mergeinfo, process_children_with_new_mergeinfo):", 
   "Update callers.", 
   "* subversion/libsvn_client/mergeinfo.c", 
   "(svn_client__get_wc_or_repos_mergeinfo): Remove adm_access baton parameter.", 
   "(svn_client__elide_mergeinfo, get_mergeinfo): Update caller.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__get_wc_or_repos_mergeinfo): Remove adm_access baton parameter."
  ], 
  "revision_id": "878779"
 }, 
 {
  "author": "hwright", 
  "date": "2009-08-12T19:42:19.388392Z", 
  "msg": [
   "* subversion/libsvn_client/mergeinfo.c", 
   "(svn_client__elide_mergeinfo_for_tree): Switch out another instance of", 
   "svn_wc_entry_versioned() for svn_wc__get_entry_versioned()."
  ], 
  "revision_id": "878778"
 }, 
 {
  "author": "hwright", 
  "date": "2009-08-12T18:47:50.917709Z", 
  "msg": [
   "Remove unneeded adm_access baton parameters.  These just weren't being used", 
   "anywhere, so we can remove them, and propagate the change up the call stack.", 
   "* subversion/libsvn_client/merge.c", 
   "(update_wc_mergeinfo): Remove access baton parameter.", 
   "(record_skips, get_mergeinfo_paths, do_file_merge,", 
   "process_children_with_new_mergeinfo, record_mergeinfo_for_dir_merge,", 
   "record_mergeinfo_for_added_subtrees): Update callers to not pass adm_access", 
   "baton.", 
   "* subversion/libsvn_client/copy.c", 
   "(calculate_target_mergeinfo): Same.", 
   "* subversion/libsvn_client/mergeinfo.c", 
   "(svn_client__get_wc_mergeinfo): Remove access baton parameter, and add an", 
   "access baton local in a tighter scope.", 
   "(svn_client__get_wc_or_repos_mergeinfo, svn_client__elide_mergeinfo):", 
   "Update callers to not pass an adm_access baton.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__get_wc_mergeinfo): Same."
  ], 
  "revision_id": "878777"
 }, 
 {
  "author": "hwright", 
  "date": "2009-08-12T18:16:02.450376Z", 
  "msg": [
   "Update another client API to use svn_wc__get_entry_versioned().  Propagate", 
   "access baton removal to several calling functions.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client_derive_location): Remove access baton, stipulate an absolute", 
   "path, and take a result_pool and scratch_pool.", 
   "* subversion/libsvn_client/merge.c", 
   "(filter_self_referential_mergeinfo, get_full_mergeinfo,", 
   "find_gaps_in_merge_source_history, calculate_left_hand_side):", 
   "Update some callers.", 
   "* subversion/libsvn_client/url.c", 
   "(svn_client_url_from_path): Create a wc context and update the call to", 
   "svn_client__derive_location().", 
   "(svn_client__derive_location): Fetch an entry without using an access baton.", 
   "Use scratch and result pools as appropriate.", 
   "* subversion/libsvn_client/ra.c", 
   "(svn_client__get_youngest_common_ancestor): Update caller.", 
   "* subversion/libsvn_client/mergeinfo.c", 
   "(svn_client__get_history_as_mergeinfo): Remove access baton parameter.", 
   "(svn_client_mergeinfo_log_merged, svn_client_mergeinfo_log_eligible):", 
   "Update callers.", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__get_history_as_mergeinfo): Remove access baton and update docs."
  ], 
  "revision_id": "878776"
 }
]