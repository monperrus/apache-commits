[
 {
  "author": "mikemccand", 
  "date": "2010-08-02T20:51:46.559493Z", 
  "msg": [
   "LUCENE-2582: allow setting the default codec for newly written segments, in the alg file"
  ], 
  "revision_id": "981685"
 }, 
 {
  "author": "stefan2", 
  "date": "2010-08-02T20:51:35.203325Z", 
  "msg": [
   "Bring the membuffer cache to its first use for the full text cache.", 
   "Also, provide functions to get / set the FSFS cache configuration", 
   "although not all of it is supported, yet.", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__cache_config_t): introduce this new config struct", 
   "(svn_fs_fs__get_cache_config, svn_fs_fs__set_cache_config):", 
   "declare new functions to get/set the FSFS cache configuration", 
   "* subversion/libsvn_fs_fs/caching.c", 
   "(internal_get_cache_config, get_global_membuffer_cache):", 
   "new singleton management functions", 
   "(svn_fs_fs__get_cache_config, svn_fs_fs__set_cache_config):", 
   "implement new functions to get/set the FSFS cache configuration", 
   "(svn_fs_fs__initialize_caches): use the membuffer cache for", 
   "full texts if memcached has not been configured"
  ], 
  "revision_id": "981684"
 }, 
 {
  "author": "rdonch", 
  "date": "2010-08-02T20:49:57.801531Z", 
  "msg": [
   "SWIG/Python: make svn_txdelta_window_t.ops work properly.", 
   "[in subversion/bindings/swig]", 
   "* svn_delta.i: disable the auto-generated accessors for", 
   "svn_txdelta_window_t.ops, for they assume it's a pointer", 
   "to a single element. Declare svn_txdelta_window_t_ops_get,", 
   "a replacement accessor.", 
   "* python/libsvn_swig_py/swigutil_py.c,", 
   "python/libsvn_swig_py/swigutil_py.h:", 
   "(svn_swig_py_txdelta_window_t_ops_get): A new function to power up the", 
   "aforementioned accessor.", 
   "* python/svn/delta.py: Graft the aforementioned accessor to the", 
   "svn_txdelta_window_t wrapper class."
  ], 
  "revision_id": "981683"
 }, 
 {
  "author": "tross", 
  "date": "2010-08-02T20:47:12.093194Z", 
  "msg": [
   "Bugfix: Schema cache in console.py could get locked in the state where", 
   "entries were partial (i.e. schema key is known but schema is not)."
  ], 
  "revision_id": "981682"
 }, 
 {
  "author": "veithen", 
  "date": "2010-08-02T20:47:03.107499Z", 
  "msg": [
   "Merged r981306 to the 1.5 branch after making sure that the set of unnecessary exclusions is indeed the same."
  ], 
  "revision_id": "981681"
 }
]