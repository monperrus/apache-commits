[
 {
  "author": "vgeorgescu", 
  "date": "2007-03-08T06:41:08.524106Z", 
  "msg": [
   "Use 'cyrus' and 'internal' instead of 'sasl' and 'simple' in file and", 
   "function names.", 
   "* subversion/libsvn_ra_svn/ra_svn.h", 
   "(svn_ra_svn__do_cyrus_auth): Rename from svn_ra_svn__do_sasl_auth.", 
   "(svn_ra_svn__do_internal_auth): Rename from svn_ra_svn__do_simple_auth.", 
   "Document the SVN_ERR_RA_SVN_NO_MECHANSIMS error return code.", 
   "* subversion/libsvn_ra_svn/internal_auth.c:", 
   "Rename from simple_auth.c.", 
   "(svn_ra_svn__do_internal_auth): Rename from svn_ra_svn__do_simple_auth.", 
   "* subversion/libsvn_ra_svn/cyrus_auth.c:", 
   "Rename from sasl_auth.c.", 
   "(svn_ra_svn__do_cyrus_auth): Rename from svn_ra_svn__do_sasl_auth. Adjust", 
   "for rename of svn_ra_svn__do_simple_auth.", 
   "* subversion/libsvn_ra_svn/client.c", 
   "(DO_AUTH): Adjust for renames of svn_ra_svn__do_sasl_auth and", 
   "svn_ra_svn__do_simple_auth.", 
   "* subversion/svnserve/cyrus_auth.c: Rename from sasl_auth.c.", 
   "* subversion/svnserve/server.h", 
   "(cyrus_auth_request): Rename from sasl_auth_request.", 
   "(cyrus_init): Rename from sasl_init.", 
   "* subversion/svnserve/serve.c", 
   "(internal_auth_request): Rename from simple_auth_request.", 
   "(auth_request): Adjust for rename of sasl_auth_request and", 
   "simple_auth_request.", 
   "* subversion/svnserve/main.c", 
   "(main): Adjust for rename of sasl_init.", 
   "Suggested by: dlr"
  ], 
  "revision_id": "863810"
 }, 
 {
  "author": "blair", 
  "date": "2007-03-08T01:45:45.122224Z", 
  "msg": [
   "* subversion/bindings/java/javahl/*.java:", 
   "Style fix: add a space after an if: 's/if\\(/if (/g."
  ], 
  "revision_id": "863809"
 }, 
 {
  "author": "blair", 
  "date": "2007-03-08T01:36:33.350741Z", 
  "msg": [
   "* subversion/bindings/java/javahl/src/org/tigris/subversion/javahl/*.java:", 
   "Set the svn:eol-style property to native."
  ], 
  "revision_id": "863808"
 }, 
 {
  "author": "malcolm", 
  "date": "2007-03-08T01:28:46.929880Z", 
  "msg": [
   "FSFS: Remove a redundant indirection.", 
   "Suggested by: dlr", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(library_vtable): Use svn_fs_fs__recover() directly, rather than", 
   "indirecting through the identical fs_recover() function.", 
   "(fs_recover): Remove.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(svn_fs_fs__recover): Note that this function implements a vtable", 
   "function."
  ], 
  "revision_id": "863807"
 }, 
 {
  "author": "malcolm", 
  "date": "2007-03-08T01:00:49.717473Z", 
  "msg": [
   "Followup to r23595.  Add cancellation support to FSFS recovery.", 
   "Suggested by: glasser", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_recover3): New version of svn_repos_recover2() with", 
   "cancellation callbacks.", 
   "(svn_repos_recover2): Deprecate.", 
   "(svn_repos_recover): Move after svn_repos_recover2(), and adjust", 
   "comments to match the style used elsewhere.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_recover): Add cancellation callbacks.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(struct fs_library_vtable_t): Add cancellation callbacks.", 
   "* subversion/libsvn_repos/repos.c", 
   "(svn_repos_recover3): New, from svn_repos_recover2().  Pass the", 
   "cancellation callbacks to svn_fs_recover().", 
   "(svn_repos_recover2): Call svn_repos_recover3() with NULL cancellation", 
   "callbacks.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_recover): Add cancellation callbacks and pass them to the vtable.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(base_bdb_recover): Change signature to match the changed FS vtable.", 
   "Note that the cancellation callbacks are ignored for BDB.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(fs_recover): Change signature to match the changed FS vtable, and", 
   "pass the cancellation callbacks to svn_fs_fs__recover().", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__recover): Add cancellation callbacks.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(struct recover_baton): New.  Proper baton for operating under the", 
   "write-lock.", 
   "(recover_body): Accept the new baton, and call the cancellation", 
   "callbacks before every revision.", 
   "(svn_fs_fs__recover): Add cancellation callbacks, pass new baton to", 
   "recover_body().", 
   "* subversion/svnadmin/main.c", 
   "(subcommand_recover): Adjust call to use svn_repos_recover3(), and pass in", 
   "svnadmin's cancellation callback."
  ], 
  "revision_id": "863806"
 }
]