[
 {
  "author": "orlikowski", 
  "date": "2001-06-01T00:35:48.000000Z", 
  "msg": [
   "Linux needs these options for the posix rwlocks to work.", 
   "Normally, _SVID_SOURCE and _BSD_SOURCE are defined by default.", 
   "However, we must re-define them if we define _XOPEN_SOURCE, which is needed for the rwlock definitions."
  ], 
  "revision_id": "61684"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2001-05-31T04:10:03.000000Z", 
  "msg": [
   "Dear Old Stockholm - 'Round About Midnight"
  ], 
  "revision_id": "61683"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2001-05-31T03:30:06.000000Z", 
  "msg": [
   "Implement read write locks.  This commit will support POSIX pthread", 
   "rw locks on Unix platforms.  This is based on earlier patches that I", 
   "posted to apr-dev, but did not receive feedback from others on.", 
   "Hence, I'm committing.", 
   "This will require a buildconf run for those of you who use Unix.", 
   "This has only really been tested on Solaris, but it should work", 
   "for those platforms that have POSIX rw locks.  Other Unix", 
   "platforms will simply return APR_ENOTIMPL.", 
   "Add apr_lock_acquire_rw().  Notice that the Unix implementation", 
   "will only allow a readwrite lock to be acquired via this function.", 
   "Technically, apr_lock_acquire could obtain some sort of readwrite", 
   "lock in this case, but that might lead to confusion.", 
   "Added test/testlock.c which will attempt to test *both* APR_MUTEX", 
   "and APR_READWRITE.  This was based off of the testthread.c, but has", 
   "been rewritten to use the new stdin/stdout/stderr code and just", 
   "make more sense overall.  testthread.c should probably be rewritten", 
   "to test threading more specifically.", 
   "Added framework that will hopefully still let BeOS, OS/2, and Win32", 
   "compile.  Any operation relating to an APR_READWRITE lock on these", 
   "platforms should just return APR_ENOTIMPL until the appropriate", 
   "people get around to it.  Some structure has been added to make what", 
   "they have to implement fairly obvious.  Again, I hope it compiles,", 
   "but I can't guarantee it.", 
   "Christian Gross has a Win32 readwrite lock patch floating around,", 
   "but I can't vouch for Win32 code.  The other platforms probably", 
   "have ways to do it, but I'm not sure what they are.", 
   "(Sorry, I write long commit messages...)"
  ], 
  "revision_id": "61682"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2001-05-31T00:11:12.000000Z", 
  "msg": [
   "Add apr_file_open_stdin - which allows the stdin file handle to be", 
   "obtained by an APR-based program in a portable fashion.  This completes", 
   "the stdin/stdout/stderr calls.", 
   "This is similar to the apr_file_open_std{out,err} calls.", 
   "The Win32 and OS/2 folks will have to verify that I got their respective", 
   "implementations right.  I don't have access to their compilers to ensure", 
   "that it is correct.  I blindly coded these up based on the", 
   "apr_file_open_std{out,err} implementations.", 
   "Submitted by: Aaron Bannert <abannert@ebuilt.com>", 
   "Reviewed by: Justin Erenkrantz"
  ], 
  "revision_id": "61681"
 }, 
 {
  "author": "dreid", 
  "date": "2001-05-30T11:15:36.000000Z", 
  "msg": [
   "Add some more stuff to the TODO"
  ], 
  "revision_id": "61680"
 }
]