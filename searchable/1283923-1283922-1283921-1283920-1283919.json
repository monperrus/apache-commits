[
 {
  "author": "", 
  "date": "2012-01-31T21:46:15.652758Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 17898", 
   "Author:   clucier@adobe.com", 
   "Date:     2010-09-28T18:42:23.767945Z", 
   "Log Message:", 
   "-----------", 
   "Effects with startDuration should now apply their end values when complete.", 
   "Added Window class to spark-manifest.", 
   "QE notes: None", 
   "Doc notes: None", 
   "Bugs: SDK-26189, SDK-27954", 
   "Reviewer: Jason, Darrell", 
   "Tests run: Full cyclone (Effects), Checkin", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/effects/animation/Animation.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/spark-manifest.xml</path>"
  ], 
  "revision_id": "1283923"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T21:46:13.714051Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 17200", 
   "Author:   clucier@adobe.com", 
   "Date:     2010-08-05T13:51:41.882441Z", 
   "Log Message:", 
   "-----------", 
   "Fix to Animation to treat zero duration effects a bit differently in start().", 
   "QE notes: None", 
   "Doc notes: None", 
   "Bugs: SDK-26691", 
   "Reviewer: Jason", 
   "Tests run: Mustella Cyclone, manual cyclone, checkin.", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/effects/animation/Animation.as"
  ], 
  "revision_id": "1283922"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T21:46:11.582770Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 17139", 
   "Author:   clucier@adobe.com", 
   "Date:     2010-07-30T18:34:09.362380Z", 
   "Log Message:", 
   "-----------", 
   "Fix for 0 duration autoReverse transitions.", 
   "QE notes: None", 
   "Doc notes: None", 
   "Bugs: SDK-26809", 
   "Reviewer: Jason", 
   "Tests run: Checkin, Mustella Cyclone", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/effects/animation/Animation.as"
  ], 
  "revision_id": "1283921"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T21:46:09.136291Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 17101", 
   "Author:   rfrishbe@adobe.com", 
   "Date:     2010-07-28T18:31:06.934256Z", 
   "Log Message:", 
   "-----------", 
   "Cleaning up lots of code, fixing some bugs, tweaking the API for List/Scroller, and tweaking the kinetics for Scroller.", 
   "Major API changes are:", 
   "1) Got rid of scrollAxis on IViewport.  We now just use horizontalScrollPolicy/verticalScrollPolicy.", 
   "2) No more overlay for horizontalScrollPolicy/verticalScrollPolicy.  Instead, we just key off of inputMode=\"touch\" to determine this", 
   "3) spark.events.TouchScrollEvent moved to mx.events.TouchScrollEvent", 
   "4) Added new API to help with testing: mx.utils.GetTimerUtil.mx_internal::getTimerFunction", 
   "We now use the distance scrolled as well as the velocity of that scroll to determine how far to throw the list", 
   "QE notes: Added new API for testing purposes", 
   "Doc notes: None", 
   "Bugs: SDK-27031, SDK-27021", 
   "Reviewer: None - will review with mobile list stuff later (very soon in fact)", 
   "Tests run: checkintests, mustella Scroller, List, and ListDND", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/utils/GetTimerUtil.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobiletheme/defaults.css</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/List.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/supportClasses/ScrollerLayout.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/supportClasses/TouchScrollingEasing.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/tools/dependencychecker/flex/tools/dependencychecker/FrameworkSwcDependencyRules.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/supportClasses/GroupBase.as</path>", 
   "<path kind=\"file\" action=\"D\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/events/TouchScrollEvent.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/Scroller.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/effects/animation/Animation.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/supportClasses/TrackBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/core/IViewport.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/supportClasses/ButtonBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/core/ScrollPolicy.as</path>", 
   "<path kind=\"file\" copyfrom-path=\"/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/events/TouchScrollEvent.as\" copyfrom-rev=\"17005\" action=\"A\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/events/TouchScrollEvent.as</path>"
  ], 
  "revision_id": "1283920"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T21:46:05.565050Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 16064", 
   "Author:   chaase@adobe.com", 
   "Date:     2010-05-12T15:37:49.345162Z", 
   "Log Message:", 
   "-----------", 
   "Initial checkin of \"true autoReverse\" feature. This feature adds no new API, but does add new behavior to the existing autoReverse property on Transition. Now, if autoReverse=\"true\", any transition declared from/to the opposite states of the currently-requested state change can be used as a transition for this state change, played in reverse. This essentially means that you can author a single reverse for a forward direction and have the system play that transition in reverse for the opposite direction. Previously, you needed to author both directions, and take care to make them symmetric, in order to get them to play correctly when reversing in the middle. Note that if you author a *-to-* Transition (any to any), the new reversing behavior does nothing for you, because there is no way for the system to detect the forward (and thus the reverse) direction, so that transition will always play in the declared direction.", 
   "The main functionality needed to get this working was bolstering the currentSupport for playReversedFromEnd that already existed in Effect (along with the playReversed functionality in effect instances). There was also some timing engine details in Animation to make it work correctly, especially with startDelay.", 
   "Some work was done to make Fade work correctly when playing in reverse, though there is still a problem with some of the auto-fade functionality (fading items because of visible/parent changes between states) when the Fade effect has a startDelay.", 
   "QE notes: Tested on existing effects tests to make sure new behavior didn't break anything. But need new tests specifically around this new behavior.", 
   "Doc notes: Added new docs to Transition.autoReverse to describe the new behavior", 
   "Bugs: None", 
   "Reviewer: Corey", 
   "Tests run: checkintests, Mustella spark/effects, mx/effects", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/Effect.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/supportClasses/AnimateInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/Animate.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/animation/Animation.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/effects/supportClasses/FadeInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/states/Transition.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/effectClasses/SequenceInstance.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/effects/effectClasses/ParallelInstance.as</path>"
  ], 
  "revision_id": "1283919"
 }
]