[
 {
  "author": "chris-dollin", 
  "date": "2004-09-06T17:33:15.000000Z", 
  "msg": [
   "Added tests and code for DisjointUnion (which is Union, but assuming the", 
   "grapsh are disjoint. Note - not MultiUnion.) Used it in SimpleReifier", 
   "(the triples from the complete and partial reifications are disjoint)."
  ], 
  "revision_id": "1111785"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2004-09-06T15:19:26.000000Z", 
  "msg": [
   "So that the graph-union for reified statement quadlets doesn't burn", 
   "store, we introduce DisjointUnion - which, in any case, has been", 
   "knocking for ages.", 
   "Also factored out ReifierFragmentsMap as an interface. We're nearly ready", 
   "to refactor GraphMem in terms of the different components (store, complete", 
   "reified statements, incomplete ditto), and then we'll be able to work", 
   "with GraphBDB the same way."
  ], 
  "revision_id": "1111784"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2004-09-06T14:30:27.000000Z", 
  "msg": [
   "Extracted ReifierTripleMap interface from SimpleReifierTripleMap and", 
   "tidied up the javadoc and some types."
  ], 
  "revision_id": "1111783"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2004-09-06T13:49:31.000000Z", 
  "msg": [
   "Specialised the clones FragmentMap into the SimpleReifierFragmentsMap", 
   "and SimpleReifierTripleMap."
  ], 
  "revision_id": "1111782"
 }, 
 {
  "author": "chris-dollin", 
  "date": "2004-09-06T12:54:11.000000Z", 
  "msg": [
   "Split the fragment map into two: one for complete triples, one for", 
   "partial (or over-specified) quads."
  ], 
  "revision_id": "1111781"
 }
]