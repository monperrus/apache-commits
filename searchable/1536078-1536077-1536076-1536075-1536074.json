[
 {
  "author": "oheger", 
  "date": "2013-10-27T09:59:57.854280Z", 
  "msg": [
   "LazyDynaBean now uses DynaBeanPropertyMapDecorator to expose its values as map.", 
   "This decorator class allows exposing the map with the generic types", 
   "<String, Object> rather than <Object, Object>."
  ], 
  "revision_id": "1536078"
 }, 
 {
  "author": "oheger", 
  "date": "2013-10-27T09:59:29.392668Z", 
  "msg": [
   "Added new DynaBeanPropertyMapDecorator.", 
   "This is a new decorator class providing Map-like access to a DynaBean which", 
   "uses the correct generic type parameters <String, Object>. It will be used", 
   "internally by DynaBean implementations to provide a Map-view on their data."
  ], 
  "revision_id": "1536077"
 }, 
 {
  "author": "oheger", 
  "date": "2013-10-27T09:59:03.851956Z", 
  "msg": [
   "DynaBeanMapDecorator now extends the new abstract decorator base class.", 
   "It still uses Object as key type and thus will be of limited use."
  ], 
  "revision_id": "1536076"
 }, 
 {
  "author": "oheger", 
  "date": "2013-10-27T09:58:37.729029Z", 
  "msg": [
   "Added new abstract base class for DynaBeanMapDecorators.", 
   "With DynaBeanMapDecorator there is the problem that the correct generic type", 
   "parameters cannot be used because this would break backwards compatibility.", 
   "Therefore, a new abstract base class was added which accepts a type parameter", 
   "for the decorated map's key type. This makes it very easy to create multiple", 
   "concrete decorator classes with different key types. So DynaBeanMapDecorator", 
   "can be kept as it is, and a new decorator class using String as key type can", 
   "be added easily. (We can think about deprecating DynaBeanMapDecorator in", 
   "favor of the new decorator with correct generic types.)"
  ], 
  "revision_id": "1536075"
 }, 
 {
  "author": "oheger", 
  "date": "2013-10-27T09:58:16.332330Z", 
  "msg": [
   "Fixed generics warnings in test class for DynaBeanMapDecorator."
  ], 
  "revision_id": "1536074"
 }
]