[
 {
  "author": "nd", 
  "date": "2009-06-07T12:53:56.805501Z", 
  "msg": [
   "apparently a paste error"
  ], 
  "revision_id": "782380"
 }, 
 {
  "author": "vsiveton", 
  "date": "2009-06-07T12:53:05.694778Z", 
  "msg": [
   "o removed beginDocument() call from head(): need to call this method separately.", 
   "o updated javadoc and test case"
  ], 
  "revision_id": "782379"
 }, 
 {
  "author": "veithen", 
  "date": "2009-06-07T12:47:43.895604Z", 
  "msg": [
   "Added a method that allows to determine whether a stream filter is read-only or modifies data in the stream."
  ], 
  "revision_id": "782378"
 }, 
 {
  "author": "bentmann", 
  "date": "2009-06-07T12:16:46.803472Z", 
  "msg": [
   "o Fixed propagation of project-level plugin dependencies by directly associating the mojo execution with the originating plugin instance. The key difference between a plugin instance and the g:a:v triplet are the dependencies in the plugin instance which can't be easily reconstructed from just the g:a:v but are crucial for construction of the plugin realm."
  ], 
  "revision_id": "782377"
 }, 
 {
  "author": "bentmann", 
  "date": "2009-06-07T12:12:54.958526Z", 
  "msg": [
   "o Fixed model building to account for default values that can't be set in the MDO. The use case we have for this is the scope for dependencies: Setting this in the MDO would cause injection of the default in the raw model and would interfere with the superposition of dependency management. The 2.x code handles this via a side effect of MavenMetadataSource.createArtifact() which doesn't look like a clean way to go."
  ], 
  "revision_id": "782376"
 }
]