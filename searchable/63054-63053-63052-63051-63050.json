[
 {
  "author": "bnicholes", 
  "date": "2002-02-22T15:51:49.000000Z", 
  "msg": [
   "NetWare version of filestat.c"
  ], 
  "revision_id": "63054"
 }, 
 {
  "author": "bnicholes", 
  "date": "2002-02-22T15:51:17.000000Z", 
  "msg": [
   "Added APIs for storing the global memory pool and the stat cache"
  ], 
  "revision_id": "63053"
 }, 
 {
  "author": "bnicholes", 
  "date": "2002-02-22T15:47:24.000000Z", 
  "msg": [
   "Removed global_mutex.c and added netware/filestat.c to the project"
  ], 
  "revision_id": "63052"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-02-22T07:11:29.000000Z", 
  "msg": [
   "No actual global_mutex implementation on Win32, it's simply a proc_lock.", 
   "Same commit needed for Netware - though I don't that build structure."
  ], 
  "revision_id": "63051"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-02-22T07:09:26.000000Z", 
  "msg": [
   "Per Aaron's consent that there is no more rational way to optimize this", 
   "relationship - allow Win32/Netware [and perhaps, some unix-ish platforms", 
   "that don't have a 'proc lock not typesafe' construct] to 'borrow' the", 
   "proc_mutex code.  Because the apr_thread_lock_create call differs so", 
   "significantly, global locks can never be implemented in terms of thread", 
   "locks [as well as the converse.]"
  ], 
  "revision_id": "63050"
 }
]