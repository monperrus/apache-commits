[
 {
  "author": "rhuijben", 
  "date": "2009-08-17T12:36:46.766439Z", 
  "msg": [
   "* subversion/libsvn_wc/node.c", 
   "(svn_wc__node_get_children): Avoid const cast inside the APR_ARRAY_PUSH()", 
   "call, by using a temporary variable."
  ], 
  "revision_id": "878845"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-08-17T12:17:53.467089Z", 
  "msg": [
   "[Reverted in r38772]", 
   "Stop assuming we are already at one database per working copy.", 
   "This fixes externals_tests.py 16.", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(parse_local_abspath): Don't just copy the wcroot value to all parent PDHs,", 
   "that don't have their own wcroot. In the current situation we still have", 
   "one wcroot per directory."
  ], 
  "revision_id": "878844"
 }, 
 {
  "author": "gstein", 
  "date": "2009-08-17T10:41:07.511268Z", 
  "msg": [
   "Rebuild a large chunk of the upgrade process to avoid access batons, and", 
   "to separate \"upgrade TO wc-ng\" from \"post-wc-ng upgrades\".", 
   "* subversion/libsvn_wc/lock.h:", 
   "(svn_wc__adm_is_cleanup_required, svn_wc__adm_set_wc_format): removed", 
   "* subversion/libsvn_wc/lock.c:", 
   "(svn_wc__adm_is_cleanup_required): removed in favor of a log API since", 
   "that is the actual core of this test.", 
   "(svn_wc__adm_set_wc_format): removed in favor of directly using the", 
   "wc_db API.", 
   "* subversion/libsvn_wc/log.h:", 
   "(svn_wc__logfile_present): new funtion to determine if a log file is", 
   "present (thus determining that cleanup is required).", 
   "* subversion/libsvn_wc/log.c:", 
   "(svn_wc__logfile_present): new implementation", 
   "(run_existing_logs): switch from adm_is_cleanup_required to", 
   "logfile_present, and tighten the scope of the boolean flag.", 
   "* subversion/libsvn_wc/entries.h:", 
   "(svn_wc__entries_upgrade): removed", 
   "(svn_wc__entries_write_new): new function to write entries into a DB", 
   "* subversion/libsvn_wc/entries.c:", 
   "(fetch_wc_id, check_file_external, read_entries_new, insert_base_node,", 
   "insert_working_node, insert_actual_node, write_entry): rename", 
   "'wc_db' parameters and local variables to 'sdb' to better match", 
   "convention and to avoid confusion with the wc_db APIs.", 
   "(svn_wc__entries_upgrade): removed. no longer required -- the upgrade", 
   "code handles this more directly.", 
   "(entries_write_body): renamed to ...", 
   "(svn_wc__entries_write_new): ... this. the 'wc_db' parameter is removed", 
   "in favor of fetching the 'sdb' internally. the iterpool is used as the", 
   "scratch_pool for some additional calls before reaching the iteration.", 
   "(entries_write): no need to fetch an sdb. track rename.", 
   "* subversion/libsvn_wc/wc_db.h:", 
   "(svn_wc__db_op_get_tree_conflict, svn_wc__db_op_set_tree_conflict):", 
   "leave a couple comments about potential renames of these funcs.", 
   "(svn_wc__db_upgrade_begin, svn_wc__db_upgrade_apply_dav_cache,", 
   "svn_wc__db_upgrade_finish): new functions to help manage the upgrade", 
   "process (to wc-ng).", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(SDB_FILE_UPGRADE): new (currently-unused) macro to hold an sdb while", 
   "the upgrade process is being performed", 
   "(fetch_wc_id): new function to fetch the ID of this working copy, which", 
   "only has one value unless/until we can aggregate wc metadata across", 
   "multiple working copies (e.g. metadata outside of the wcroot).", 
   "(parse_local_abspath): rip out code in favor of fetch_wc_id()", 
   "(create_db): create a new sdb using code ripped from svn_wc__db_init()", 
   "(svn_wc__db_init): use the new create_db() function", 
   "(svn_wc__db_upgrade_begin): construct an sdb for the upgrade process", 
   "(svn_wc__db_upgrade_apply_dav_cache): new function to apply a complete", 
   "set of wcprops to the nodes in a directory", 
   "(svn_wc__db_upgrade_finish): wrap up the upgrade process", 
   "* subversion/libsvn_wc/upgrade.c:", 
   "(convert_wcprops): removed. inlined into the upgrade process", 
   "(maybe_add_subdir): add a directory into an array if it is present on", 
   "the disk.", 
   "(get_versioned_subdirs): get the set of subdirectories which are", 
   "versioned and present on the disk. one of two mechanisms are used,", 
   "depending upon whether the directory has been converted to wc-ng.", 
   "(upgrade_working_copy): renamed 'path' param to 'dir_abspath' to more", 
   "properly reflect its content. use the iterpool for more work before", 
   "entering the loop. use get_versioned_subdirs() rather than using the", 
   "entries hash, thus simplifying the recursion code. use db/abspath in", 
   "the upgrade_format call rather than an access baton.", 
   "(upgrade_format): switch to db/abspath rather than an access baton.", 
   "don't bother to check for \"too new\" working copy, as that is caught", 
   "directly by wc_db. early-out if the dir is already at wc-ng rather", 
   "than \"current format\" (ie. correct the semantics). use", 
   "svn_wc__logfile_present instead of adm_is_cleanup_required. use", 
   "svn_wc__read_entries_old directly since we know this dir is in the old", 
   "format, and grab 'this_dir' directly from the hash. rather than using", 
   "svn_wc__entries_init (which inserts an unneeded entry), start the", 
   "upgrade process with svn_wc__db_upgrade_begin(). reset the format and", 
   "write the new-style entries directly rather than entries_upgrade.", 
   "inline the upgrade of wcprops using db_upgrade_apply_dav_cache.", 
   "lastly, call db_upgrade_finish to wrap up the upgrade process."
  ], 
  "revision_id": "878843"
 }, 
 {
  "author": "ivan", 
  "date": "2009-08-17T08:55:33.300644Z", 
  "msg": [
   "Improve utf conversion functions memory usage on Windows.", 
   "* subversion/libsvn_subr/win32_xlate.c", 
   "(svn_subr__win32_xlate_to_stringbuf): Create stringbuf of", 
   "required size at once instead of creating empty stringbuf and", 
   "then extending to required size."
  ], 
  "revision_id": "878842"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-08-16T23:10:11.154426Z", 
  "msg": [
   "* subversion/libsvn_wc/lock.c", 
   "(open_anchor): Only clear access batons for missing. In all other cases", 
   "we can't just detach the baton, as it will try to release itself from", 
   "the set at pool cleanup."
  ], 
  "revision_id": "878841"
 }
]