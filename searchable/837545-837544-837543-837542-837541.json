[
 {
  "author": "kfogel", 
  "date": "2000-10-07T21:07:19.000000Z", 
  "msg": [
   "(SVN_WC__ENTRIES_TOPLEVEL): replaces SVN_WC__ENTRIES_END and", 
   "SVN_WC__ENTRIES_START, since it's the only non-self-closing tag in", 
   "the entries format.  All callers changed.", 
   "(handle_start_tag): if see toplevel, then this must be an open tag."
  ], 
  "revision_id": "837545"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-07T20:57:28.000000Z", 
  "msg": [
   "Do a deletion."
  ], 
  "revision_id": "837544"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-07T20:52:23.000000Z", 
  "msg": [
   "(svn_wc_delete_file): make sure deletion doesn't affect version", 
   "number, by passing SVN_INVALID_VERNUM.", 
   "Tweaked tests."
  ], 
  "revision_id": "837543"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-07T20:35:29.000000Z", 
  "msg": [
   "More test data, and added proper xml headers to some old test data."
  ], 
  "revision_id": "837542"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-07T19:49:30.000000Z", 
  "msg": [
   "(add_or_replace_file): new func, abstracts common code from add_file()", 
   "and replace_file().", 
   "(add_file, replace_file): implement in terms of above.", 
   "(SVN_ERR_WC_ENTRY_NOT_FOUND): new error code, often not fatal.", 
   "(do_entry): if entry should have been found but wasn't, return above", 
   "error.", 
   "(svn_wc__entry_merge): tolerate absence of entry when merging.", 
   "(svn_wc__entry_get): set hash to NULL if returning error, but never", 
   "set hash if reference is null already.  Doc fix.", 
   "Tweaked test scripts."
  ], 
  "revision_id": "837541"
 }
]