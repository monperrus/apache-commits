[
 {
  "author": "jsc", 
  "date": "2014-02-24T10:45:33.146855Z", 
  "msg": [
   "#123593# merge final translation update for AOO 4.1"
  ], 
  "revision_id": "1571223"
 }, 
 {
  "author": "coheigea", 
  "date": "2014-02-24T10:38:34.712709Z", 
  "msg": [
   "Added BouncyCastle Crypto test"
  ], 
  "revision_id": "1571222"
 }, 
 {
  "author": "rgodfrey", 
  "date": "2014-02-24T10:38:11.374384Z", 
  "msg": [
   "QPID-5551 : Ignore 0-9 test failure die to change from channel exception to connection exception"
  ], 
  "revision_id": "1571221"
 }, 
 {
  "author": "fmeschbe", 
  "date": "2014-02-24T10:34:12.540656Z", 
  "msg": [
   "SLING-3409 Support parameters on the content type header", 
   "- Add logging to parameter parsing exceptions", 
   "- fold getContainerParamters method into getParameterMapInternal"
  ], 
  "revision_id": "1571220"
 }, 
 {
  "author": "jleroux", 
  "date": "2014-02-24T10:33:12.837821Z", 
  "msg": [
   "After reverting r1571198 (there was too much unwanted changes due to my \"Save Actions\" setting in Eclipse) doing it again with the only changes really wanted", 
   "A slightly modified patch from Praveen Agrawal for \"The getFeatureIdQtyMap function doesn't include the DISTINGUISHING_FEAT into the featureMap\" https://issues.apache.org/jira/browse/OFBIZ-5544", 
   "The getFeatureIdQtyMap function in ShoppingCartItem.java doesn't include the DISTINGUISHING_FEAT in featureMap so if we want to calculate the Shipping amount based on Distinguishing feature, this method doesn't return the Distinguishing Feature in Feature Map. If we add DISTINGUISHING_FEAT as productFeatureApplTypeId in filterExprs then the feature map would contain the Distinguishing feature in addition to Standard and Required Feature.", 
   "Also in ShoppingCartItem.java, putAdditionalProductFeatureAndAppl method, i think the OrderAdjustment should only be included when the amount is not null.", 
   "jleroux: When the amount is null it's now not added in the adjustement (I moved that in the block above where the amount is already tested for null). But the OrderAdjustment is still created because a recurringAmount could still exist . I just added a warning for when both amounts are null. We could decide to not create an adjustement when there are no amounts at all. But I preferred a warning, because it's a weird situation and people could prefer to be aware..."
  ], 
  "revision_id": "1571219"
 }
]