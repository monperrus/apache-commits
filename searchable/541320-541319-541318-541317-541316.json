[
 {
  "author": "gawor", 
  "date": "2007-05-24T15:17:27.488840Z", 
  "msg": [
   "pass other handler-chains params"
  ], 
  "revision_id": "541320"
 }, 
 {
  "author": "jmcconnell", 
  "date": "2007-05-24T15:17:03.144229Z", 
  "msg": [
   "added webapp configuration section, default setting for default-archiva.xml object, and associated test"
  ], 
  "revision_id": "541319"
 }, 
 {
  "author": "hindessm", 
  "date": "2007-05-24T15:14:00.067872Z", 
  "msg": [
   "It looks like these comments might refer to the OS/X man page but in fact", 
   "they refer to the FreeBSD man page so I thought I should make it obvious."
  ], 
  "revision_id": "541318"
 }, 
 {
  "author": "gdaniels", 
  "date": "2007-05-24T15:11:33.963072Z", 
  "msg": [
   "Do not clean up operation contexts when MCs are added.  This was preventing SOAP session based functionality from working.  We need a better solution to this, but for now unblock Afkham with this quick fix.  Note that this will leave OCs registered for now, and thus produce memory leakage!", 
   "I'll be fixing/cleaning up the whole way OCs and MCs are maintained, which affects asynchrony APIs, SOAP sessions, and general engine flow.  Will post to axis-dev with design before checkin.", 
   "Also remove the copy of the Options from req to resp in OutInAxisOperation, and switch over to using the static AxisEngine methods.", 
   "Also avoid reregistering OC in AddressingBasedDispatcher, and remove the test for isComplete() for right now."
  ], 
  "revision_id": "541317"
 }, 
 {
  "author": "azeez", 
  "date": "2007-05-24T15:09:17.526520Z", 
  "msg": [
   "Functionality for sending control messages between axis2 nodes in a cluster", 
   "At the moment, I've identified 2 control messages;", 
   "1. GetStateCommand - Sent by a node which is joining a cluster which already has one or more members. In such a case, it will send a request for the latest", 
   "node to a randomly selected member, and will wait till a reply is reveived. If such a reply is not received, it will retry by sending the same request to", 
   "another member, or until there are no members in the cluster. Unless a GetStateResponseCommand message is received, a node cannot start successfuly and join a", 
   "cluster, unless it is the very first node which is joining the cluster.", 
   "2. GetStateResponseCommand - Sent by the node which receives the GetStateCommand. It will populate this message with the latest state and send it out to the", 
   "requester."
  ], 
  "revision_id": "541316"
 }
]