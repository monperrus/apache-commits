[
 {
  "author": "", 
  "date": "2012-03-29T07:28:20.686358Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 20224", 
   "Author:   pfarland@adobe.com", 
   "Date:     2011-02-09T03:10:42.382147Z", 
   "Log Message:", 
   "-----------", 
   "Small change to modify the generated code for [RemoteClass] metadata.", 
   "(As a reminder, this metadata registers class aliases for strongly typed classes serialized in AMF data. It happens in special initialization code on Frame 1 for Flex applications so that the registration is completed before any AMF data is sent or received)", 
   "This change was suggested by Mark Bartel in SDK-28294 to allow for per-module application domain registration of classes, a new capability added in FP 10.1. Previously, aliases could only be registered at the top level application domain.", 
   "QE notes: I suggest modifying the bug test case to build an mxmlunit regression stest to ensure that subsequent module loading does not break registerClassAlias for the sub-application domains.", 
   "Doc notes: N/A", 
   "Bugs: SDK-28294", 
   "Reviewer: chris b", 
   "Tests run: checkintests, bug test case", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java"
  ], 
  "revision_id": "1320908"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T07:28:16.872410Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19843", 
   "Author:   pfarland@adobe.com", 
   "Date:     2011-01-20T21:40:15.316198Z", 
   "Log Message:", 
   "-----------", 
   "Modifying PreLink to fix SDK-28758.", 
   "The problem was that PreLink was only checking whether the number of Sources had changed after running PreLink. This is true the first time we run because we generate a new source for the CSS selectors that matched any type dependencies found in all compilation units. However, when one of those CSS selectors introduced a new type dependency, say a Skin ClassReference(), the new generated source would just replace the old one and while it would get compiled, pre-link would not run again to pick up yet more matching CSS selectors for that new type.", 
   "This change tries to determine whether a new source was actually generated for the matching CSS selectors rather than rely on the generated source count.", 
   "It's not pretty, but it's the least invasive change without re-architecting PreLink and CSS.", 
   "QE notes: Please add a test case that has a class -> style -> skin class -> style -> skin class dependency chain to show that arbitrary dependency chains solely via styles work.", 
   "Doc notes: N/A", 
   "Bugs: SDK-28758", 
   "Reviewer: chris b", 
   "Tests run: checkintests, cyclone", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/CompcPreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/PreLink.java</path>"
  ], 
  "revision_id": "1320907"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T07:28:12.184462Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19797", 
   "Author:   klin@adobe.com", 
   "Date:     2011-01-19T00:06:54.932970Z", 
   "Log Message:", 
   "-----------", 
   "Initial checkin of override default density mapping feature. Application and other classes delegate calculating runtimeDPI to a RuntimeDPIProvider class. Developers that wish to override how the runtimeDPI is calculated should subclass RuntimeDPIProvider and set it to the runtimeDPIProvider property on Application. Application actually calls DensityUtil.getRuntimeDPI() which creates the instance of the runtimeDPIProvider class and caches the runtimeDPI. I've also modified the compiler so that runtimeDPIProvider is recognized as a special attribute on Application. This checkin includes the PARB updates for changing DPI related properties and variables from ints to Numbers.", 
   "QE notes: Update tests", 
   "Doc notes: N/A", 
   "Bugs: SDK-28731", 
   "Reviewer: Evtim", 
   "Tests run: checkintests", 
   "Is noteworthy for integration: Yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/mxml/builder/DocumentBuilder.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobilecomponents/src/spark/components/supportClasses/ViewNavigatorBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/managers/SystemManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/utils/DensityUtil.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobiletheme/src/spark/skins/mobile/supportClasses/MobileSkin.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler_en.properties</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/core/DPIClassification.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobilecomponents/src/spark/components/BusyIndicator.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/utils/MediaQueryParser.as</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/src/mx/core/RuntimeDPIProvider.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/utils/MultiDPIBitmapSource.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobilecomponents/src/spark/components/LabelItemRenderer.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobiletheme/src/spark/skins/mobile/HSliderDataTip.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/primitives/BitmapImage.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/mobilecomponents/src/spark/components/IconItemRenderer.as</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/tools/dependencychecker/frameworkSwcExceptionsList.txt</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/spark/src/spark/components/Application.as</path>"
  ], 
  "revision_id": "1320906"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T07:28:08.964510Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19012", 
   "Author:   pfarland@adobe.com", 
   "Date:     2010-12-03T17:57:59.709024Z", 
   "Log Message:", 
   "-----------", 
   "Part 2 of CSS Media Query support. Now that Batik has been updated to support media query syntax for @media rules in Part 1, this change updates the Flex SDK compiler to process these new rules and generate conditional ActionScript that queries whether the media features match the runtime and thus the selectors should apply.", 
   "This change was complicated by the fact that the framework requires re-occuring selectors to be merged. The work around was to generate conditional checks inside the style protochain factory functions. Theoretically this means that the queries could be re-evaluated at runtime if needed too.", 
   "Part 3 of this change will be from the framework team to introduce an ActionScript API on style manager that will check if a media query applies. As a place holder for now the generated code assumes that API is on mx.styles.IStyleManager.acceptMediaQuery(query:String):Boolean. This is currently only generated when -keep is enabled.", 
   "One the final runtime ActionScript API is signed off, the direct-AST generation path will be updated to create an AST fragment to check the media query.", 
   "QE notes: Not yet", 
   "Doc notes: N/A", 
   "Bugs: N/A", 
   "Reviewer: For Chris B", 
   "Tests run: Checkintests, cyclone", 
   "Is noteworthy for integration: Yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleDef.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleDocumentHandler.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleDef.vm</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/mxml/ImplementationGenerator.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleDeclarationBlock.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleModule.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleModule.vm</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleProperty.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleDeclaration.java</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/MediaRule.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/mxml/gen/ClassDefLib.vm</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/MediaList.java</path>"
  ], 
  "revision_id": "1320905"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T07:28:04.989643Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 18954", 
   "Author:   dloverin@adobe.com", 
   "Date:     2010-12-02T15:02:57.238153Z", 
   "Log Message:", 
   "-----------", 
   "Display a warning for sub-apps and modules that will be leaked by a registerClassAlias() call.", 
   "Add to the generated code after the registerClassAlias() call to warn developers that a sub-application or module will be leaked by the call (if called by other than the top-level application). The new code is only added when the application it is compiled with debug=true. This will help out when trying to figure out why a module is leaking.", 
   "QE notes: None.", 
   "Doc notes: None.", 
   "Bugs: SDK-27970", 
   "Reviewer: Corey", 
   "Tests run: cyclone server", 
   "Is noteworthy for integration: No.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/frameworks/projects/framework/bundles/en_US/core.properties</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>"
  ], 
  "revision_id": "1320904"
 }
]