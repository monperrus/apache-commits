[
 {
  "author": "isabel", 
  "date": "2009-11-19T08:36:14.939431Z", 
  "msg": [
   "Added some general \"Which use cases can you solve with Mahout\"", 
   "information to the index page. (Thanks to ghostbuster for inspiration.)"
  ], 
  "revision_id": "882075"
 }, 
 {
  "author": "davsclaus", 
  "date": "2009-11-19T08:32:43.843132Z", 
  "msg": [
   "CAMEL-1791: upgraded to quartz 1.6.6"
  ], 
  "revision_id": "882074"
 }, 
 {
  "author": "jleroux", 
  "date": "2009-11-19T08:30:42.111648Z", 
  "msg": [
   "\"Applied fix from trunk for revision: 882072  \"", 
   "------------------------------------------------------------------------", 
   "r882072 | jleroux | 2009-11-19 09:25:48 +0100 (jeu. 19 nov. 2009) | 15 lignes", 
   "A patch from Philippe Mouawad \"OutOfMemory provoked by Cache overflow\" (https://issues.apache.org/jira/browse/OFBIZ-2186) - OFBIZ-2186", 
   "CacheLineTable and LRUMap do not synchronize on the same lock", 
   "* CacheLineTable synchronization use the CacheLineTable instance monitor", 
   "* LRUMap synchronization use the LRUMap instance monitor", 
   "the LRUMap (memoryTable) can be updated concurrently by 2 differents threads", 
   "* one in the CacheLineTable #put or CacheLineTable#remove", 
   "* another in the CacheLineTable#get", 
   "this leads to the corruption of the LRUMap which is not thread-safe", 
   "the CacheLineTable#get should be synchronized or the LRUMap should be replaced by a thead safe collection", 
   "------------------------------------------------------------------------", 
   "?\\026"
  ], 
  "revision_id": "882073"
 }, 
 {
  "author": "jleroux", 
  "date": "2009-11-19T08:25:48.261430Z", 
  "msg": [
   "A patch from Philippe Mouawad \"OutOfMemory provoked by Cache overflow\" (https://issues.apache.org/jira/browse/OFBIZ-2186) - OFBIZ-2186", 
   "CacheLineTable and LRUMap do not synchronize on the same lock", 
   "* CacheLineTable synchronization use the CacheLineTable instance monitor", 
   "* LRUMap synchronization use the LRUMap instance monitor", 
   "the LRUMap (memoryTable) can be updated concurrently by 2 differents threads", 
   "* one in the CacheLineTable #put or CacheLineTable#remove", 
   "* another in the CacheLineTable#get", 
   "this leads to the corruption of the LRUMap which is not thread-safe", 
   "the CacheLineTable#get should be synchronized or the LRUMap should be replaced by a thead safe collection"
  ], 
  "revision_id": "882072"
 }, 
 {
  "author": "amilas", 
  "date": "2009-11-19T08:18:13.047357Z", 
  "msg": [
   "moving the classes generated in default package to a axis2 specific package. otherwise those classes can not be accesed by other classes"
  ], 
  "revision_id": "882071"
 }
]