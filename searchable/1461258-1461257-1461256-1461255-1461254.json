[
 {
  "author": "smarru", 
  "date": "2013-03-26T18:32:18.132835Z", 
  "msg": [
   "Uncommenting temporary disabling of credential store"
  ], 
  "revision_id": "1461258"
 }, 
 {
  "author": "sseth", 
  "date": "2013-03-26T18:21:43.797921Z", 
  "msg": [
   "merge YARN-440 from trunk. Flatten RegisterNodeManagerResponse. Contributed by Xuan Gong."
  ], 
  "revision_id": "1461257"
 }, 
 {
  "author": "sseth", 
  "date": "2013-03-26T18:20:36.138990Z", 
  "msg": [
   "YARN-440. Flatten RegisterNodeManagerResponse. Contributed by Xuan Gong."
  ], 
  "revision_id": "1461256"
 }, 
 {
  "author": "liyin", 
  "date": "2013-03-26T18:19:08.359720Z", 
  "msg": [
   "[HBASE-5263] Auto Cache hot blocks on compaction v1", 
   "Author: rshroff", 
   "Summary:", 
   "This change will try to cache blocks which are hot on compaction.", 
   "The design is same as mentioned in the JIRA.", 
   "The implementation is very simple as of now:", 
   "1. Adds a boolean in the scan part to fetch the information, whether the KV was", 
   "obtained from a block present in cache or not.", 
   "2. The same information is relayed down to the writer during compaction.", 
   "3. The writer keeps a track of % of KV's obtained from cache and then", 
   "when it dumps a block, it will use that and compare it with the caching", 
   "threshold for compaction and cache the block if it meets the criteria.", 
   "4. It also adds knobs to enable/disable this feature and change the", 
   "caching threshold used during compaction.", 
   "I was planning to further improve upon the feature in the following", 
   "areas:", 
   "1. The cached block from which the KV was read might be a candidate for", 
   "next round of eviction. Hence, need to improve on that part, where we", 
   "can consider the probability whether or not the block is hot enough to", 
   "be cached after compaction, depending upon the number of times it was", 
   "accessed.", 
   "2. If recaching on compaction is trashing the cache, then we can limit", 
   "the number of blocks we should cache during compaction.", 
   "Wanted to get this diff out for review to get an early response of the", 
   "overall design and the change.", 
   "Test Plan:", 
   "Added 4 unit test cases to test the change. I will am also planning to", 
   "test this on dev cluster. Will update it with more results.", 
   "MR Unit test link:", 
   "http://hbasectrl056.ash3.facebook.com:50030/jobdetails.jsp?jobid=job_201209211223_44686", 
   "Reviewers: liyintang, aaiyer, manukranthk", 
   "Reviewed By: manukranthk", 
   "CC: hbase-eng@, manukranthk", 
   "Differential Revision: https://phabricator.fb.com/D686137", 
   "Task ID: 2016630"
  ], 
  "revision_id": "1461255"
 }, 
 {
  "author": "sseth", 
  "date": "2013-03-26T18:18:44.881342Z", 
  "msg": [
   "MAPREDUCE-5077. Remove mapreduce.util.ResourceCalculatorPlugin and related code. Contributed by Karthik Kambatla."
  ], 
  "revision_id": "1461254"
 }
]