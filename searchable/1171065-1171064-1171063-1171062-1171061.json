[
 {
  "author": "cschneider", 
  "date": "2011-09-15T11:55:04.185571Z", 
  "msg": [
   "CAMEL-4453 Fix compile error"
  ], 
  "revision_id": "1171065"
 }, 
 {
  "author": "jasha", 
  "date": "2011-09-15T11:51:56.660384Z", 
  "msg": [
   "RAVE-253 Use same binding method as in Shindig's PropertiesModule for host, port & contextroot (as constant)"
  ], 
  "revision_id": "1171064"
 }, 
 {
  "author": "cschneider", 
  "date": "2011-09-15T11:50:40.757008Z", 
  "msg": [
   "Fix for compile error"
  ], 
  "revision_id": "1171063"
 }, 
 {
  "author": "bodewig", 
  "date": "2011-09-15T11:46:02.239826Z", 
  "msg": [
   "don't rely on pack/unpack closing the input in exceptional situations"
  ], 
  "revision_id": "1171062"
 }, 
 {
  "author": "dblevins", 
  "date": "2011-09-15T11:31:07.385192Z", 
  "msg": [
   "OPENEJB-1665: @DataSourceDefinition support", 
   "- Support for deployment descriptor declared <data-source> elements", 
   "- @DataSourceDefinition annotations are translated into the equivalent JAXB object (not directly into a Resource object)", 
   "- JAXB DataSource definitions are translated into Resource objects prior to AutoConfig", 
   "- DataSources created from definitions are prefixed with the appName prior to binding into the private openejb/Resource/ namespace", 
   "- A single JNDI reference hardcoded to point to the DataSource definition will automatically created and added to all the consumers.", 
   "- Raw version of the DataSource definition properties are passed straight through to the DataSourceFactory so that it may use them to internally construct the DataSource via xbean-reflect", 
   "- Respect xml overriding -- ignore the annotation data if the DataSource is defined in xml"
  ], 
  "revision_id": "1171061"
 }
]