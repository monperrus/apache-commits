[
 {
  "author": "orudyy", 
  "date": "2014-04-25T11:45:43.473876Z", 
  "msg": [
   "QPID-5715: Change test utility method for virtual host configuration store creation to wipe out the store folder before creation a store"
  ], 
  "revision_id": "1590003"
 }, 
 {
  "author": "cziegeler", 
  "date": "2014-04-25T11:43:37.339005Z", 
  "msg": [
   "Remove unused private package statement"
  ], 
  "revision_id": "1590002"
 }, 
 {
  "author": "orw", 
  "date": "2014-04-25T11:39:20.121620Z", 
  "msg": [
   "124451: WW8 import - application of index entry template patterns", 
   "-- do not propagate tab stops of unused paragraph styles", 
   "-- do not propagate default tab stops"
  ], 
  "revision_id": "1590001"
 }, 
 {
  "author": "peter_firmstone", 
  "date": "2014-04-25T11:34:00.173520Z", 
  "msg": [
   "RIVER-336 Refactoring of work done by Sim & Gregg.  Updated all River code in the main src distribution to utilize ClassLoading, instead of RMIClassLoader, including marshaling and unmarshaling of MarshalledObject's using MarshalledInstance, this ensures that the replacement service provider mechanism is fully utilized, instead of using RMIClassLoader.  Since both replacement provider classes for RMIClassLoader, proposed to date, have identical methods to RMIClassLoaderSpi, RMIClassLoaderSpi has been retained, to ensure that existing providers can be utilized without requiring recompilation.  ServiceLoader is used to load RMIClassLoaderSpi, however this is done directly by ClassLoading, not RMIClassLoader and clients may specify which instance they want from a list of available providers by setting the system property \"net.jini.loader.ClassLoading.provider\".", 
   "ClassLoading was chosen to delegate to the provider, since it already contained two methods compatible with and delegated to RMIClassLoader and it only required two more static methods to replace RMIClassLoader functionality and delegate directly to an RMIClassLoaderSpi provider.", 
   "Tests that test PreferredClassProvider have been converted to utilize ClassLoading instead of RMIClassLoader.", 
   "ClassLoading also has a third method that delegates to the three argument version of Class.forName, this new method fixes a hotspot and source of lock contention in mahalo's RandomStressTest, by thread confining calls for each ClassLoader when loading classes, as a result the Class.forName hot spot has been reduced from 50% cpu to under 3% cpu.", 
   "In addition debug mode has been set back to false for transaction testing."
  ], 
  "revision_id": "1590000"
 }, 
 {
  "author": "rombert", 
  "date": "2014-04-25T11:25:57.450481Z", 
  "msg": [
   "SLING-3515 - New sling bundle project wizard fails -", 
   "java.lang.NoSuchMethodError", 
   "Code cleanup in EmbeddedArchetypeInstaller:", 
   "- use commons-io", 
   "- close resources on exception paths", 
   "- removed commented out code"
  ], 
  "revision_id": "1589999"
 }
]