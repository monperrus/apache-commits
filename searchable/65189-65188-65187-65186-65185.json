[
 {
  "author": "jorton", 
  "date": "2004-06-14T09:19:15.000000Z", 
  "msg": [
   "* locks/unix/proc_mutex.c (proc_mutex_proc_pthread_cleanup): Fix", 
   "memory leakup; always unmap the mmap'ed region.", 
   "PR: 24049", 
   "Submitted by: Kohn Emil Dan <emild cs.technion.ac.il>"
  ], 
  "revision_id": "65189"
 }, 
 {
  "author": "jorton", 
  "date": "2004-06-14T09:13:36.000000Z", 
  "msg": [
   "* locks/unix/proc_mutex.c (proc_mutex_pthread_create): Don't leak an", 
   "fd on mmap failure."
  ], 
  "revision_id": "65188"
 }, 
 {
  "author": "jorton", 
  "date": "2004-06-14T09:09:55.000000Z", 
  "msg": [
   "* locks/unix/proc_mutex.c (proc_mutex_posix_cleanup): Ignore", 
   "interproc->filedes, always close the semaphore.", 
   "(proc_mutex_posix_create): Don't call cleanup if sem_open failed,", 
   "don't set interproc->filedes to -1.", 
   "(proc_mutex_posix_acquire): Simplify error handling.", 
   "(proc_mutex_posix_release): Simplify.  Only clear curr_locked flag on", 
   "success."
  ], 
  "revision_id": "65187"
 }, 
 {
  "author": "jorton", 
  "date": "2004-06-14T09:09:05.000000Z", 
  "msg": [
   "* test/testprocmutex.c (test_exclusive): Take lock type parameter.", 
   "(proc_mutex): Pass lock type parameter.", 
   "(testprocmutex): Test all supported mutex types."
  ], 
  "revision_id": "65186"
 }, 
 {
  "author": "jorton", 
  "date": "2004-06-14T08:53:31.000000Z", 
  "msg": [
   "Support POSIX semaphores on LP64 platforms:", 
   "* configure.in: Don't disable POSIX semaphore support on LP64", 
   "platforms.", 
   "* include/arch/unix/apr_arch_proc_mutex.h (struct apr_proc_mutex_t):", 
   "Add a sem_t pointer field.", 
   "* locks/unix/proc_mutex.c (proc_mutex_posix_create,", 
   "proc_mutex_posix_cleanup, proc_mutex_posix_acquire,", 
   "prox_mutex_posix_release): Use the sem_t pointer not the fd for the", 
   "semaphore."
  ], 
  "revision_id": "65185"
 }
]