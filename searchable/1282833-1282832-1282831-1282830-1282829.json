[
 {
  "author": "", 
  "date": "2012-01-31T20:36:50.694468Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 9385", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-08-19T15:54:55.821661Z", 
   "Log Message:", 
   "-----------", 
   "SkinnableTextBase.as - remove code to redispatch UPDATE_COMPLETE event from RET.  For each property setter, even though they are just proxies to RET, call invalidateProperties() to generate UPDATE_COMPLETE events and add handler for the TextOperationEvent.CHANGE and call invalidateDisplayList() to generate UPDATE_COMPLETE events for RET size and display list changes.  SDK-22705", 
   "TextArea.as - remove code to set scroller horizontalScrollPosition to off if \"toFit\".  Need to do it \"virtually\" rather than actually change the scroller property.  SDK-22680", 
   "RichEditableText.as", 
   "Changes to rememasureText() and measure() since not all combinations of constrainted width/height worked correctly, particularly if auto sizing.  SDK-22727", 
   "Changes to textContainerManager_compositionCompleteHandler() to try to keep \"contentWidth\" seen by scroller constant if lineBreak=\"toFit\" so the scroller doesn't think it needs to add a horizontal scroll bar.  If the text is \"toFit\" there should never be a hsb.  SDK-22680", 
   "Change to updateDisplayList() to scroll after updating the container if it was delayed when EditManager.updateAllContainers() last ran. SDK-22705", 
   "Removed default params from scrollToRange() since they don't make sense.  SDK-22696.", 
   "Some cleanup based on TLF cleanup.", 
   "RichEditableTextContainerManager.as - in drawBackgroundAndSetScrollRect(), if auto sizing, should use the display list width and height for the scroll rect and background for the text rather than the content width and height.   SDK-22727 and SDK-22678 ended up fixed too.", 
   "RichEditableTextEditManager.as - flag to know if scroll is needed after updating the container in updateDisplayList.  SDK-22696", 
   "QE notes: be sure to make automated tests for SDK-22727, SDK-22705, SDK-22678 please", 
   "Doc notes:", 
   "Bugs: SDK-22727, SDK-22626, SDK-22680, SDK-22705, SDK-22696, SDK-22678", 
   "Reviewer: Gordon", 
   "Tests run: basictests, checkintests, TextArea, TextInput, NumericSteeper", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/TextArea.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/supportClasses/RichEditableTextContainerManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/supportClasses/RichEditableTextEditManager.as</path>"
  ], 
  "revision_id": "1282833"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:36:48.103658Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 9102", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-08-05T12:28:39.785686Z", 
   "Log Message:", 
   "-----------", 
   "In SkinnableTextBase, redispatch RichEditableText's UPDATE_COMPLETE events since SkinnableTextBase is a proxy and does no invalidation of its own.", 
   "Remove calls to invalidateProperties() in the setters that were there just to cause an UPDATE_COMPLETE event to be generated.", 
   "TextArea/TextInput properties such as width, height which are not proxied, do cause an UPDATE_COMPLETE event to be generated directly on the TextArea. It is possible if you set something like width and text on TextArea to get an UPDATE_COMPLETE event for each - one coming directly from TextArea for the width and one coming from RichEditableText for the text which is redispatched by TextArea.", 
   "QE notes: see last paragraph above", 
   "Doc notes:", 
   "Bugs: SDK-22476", 
   "Reviewer: Gordon", 
   "Tests run:", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as"
  ], 
  "revision_id": "1282832"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:36:45.848455Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8953", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-07-31T15:03:43.191943Z", 
   "Log Message:", 
   "-----------", 
   "Per the signoff, removed the debug code from RET.", 
   "SDK-22385.  Programatically giving focus to RET should work correctly now.", 
   "SDK-22384.  RET implements IFocusManagerComponent now so you can tab into one.", 
   "SDK-22391.  Fixed an autoSize bug in updateDisplayList().", 
   "Reworked the textFlow getter which wasn't quite right if there were uncommitted properties.", 
   "Change the selection behavior on focusIn to be consistent with Halo with one exception.  The focusIn behavior is still subject to change but this is closer to final than what we have now.", 
   "As of this change, on focusIn, if there is no selection, if multiline (ie TextArea and RET), the insertion pt is set to 0,0, and if !multiline (ie TextInput) all the text is selected.  If the text/textFlow is set while the component already has focus the insertion pt is set to 0,0 (for ex. NumericStepper clicking up or down arrow).", 
   "The only remaining difference I know of between spark and halo is for TextInput.  halo TextInput on focusIn only remembers the previous selection, whether set programatically or with the mouse, if a selection was programatically set at some point.  spark TextInput will remember a previous selection regardless of how it was set.  The halo behavior doesn't make sense to me but we may end up changing spark to match.", 
   "QE notes: since the focusIn change didn't break any TextArea/TextInput tests that means we don't have any", 
   "Doc notes:", 
   "Bugs: SDK-22385, SDK-22384, SDK-22391", 
   "Reviewer: Gordon", 
   "Tests run: mustella TextInput TextArea passed NumericStepper 2 failures because insertion pt is now 0,0 rather than end of text", 
   "Is noteworthy for integration: RET is now focusable with tab or programatically with setFocus(), insertion point on focusIn changes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>"
  ], 
  "revision_id": "1282831"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:36:43.595797Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8721", 
   "Author:   aharui@adobe.com", 
   "Date:     2009-07-21T22:11:37.692397Z", 
   "Log Message:", 
   "-----------", 
   "Hopefully final implementation of IME support.", 
   "QE Notes: None", 
   "Doc Notes: new API in IIMESupport", 
   "Bugs: SDK-22267, SDK-18516", 
   "Reviewer: Gordon", 
   "API Change: Yes", 
   "Is noteworthy for integration: Yes, new API in IIMESupport", 
   "tests: checkintests mustella/gumbo/components/TextInput mustella/gumbo/components/TextArea", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/ComboBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/dataGridClasses/DataGridColumn.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/List.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UITextField.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/TextArea.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/DataGrid.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework_textLayout/src/mx/core/UITLFTextField.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/TextInput.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/managers/FocusManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/controls/NumericStepper.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/IIMESupport.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/NumericStepper.as</path>"
  ], 
  "revision_id": "1282830"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T20:36:41.688442Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 8576", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-07-15T12:19:18.531995Z", 
   "Log Message:", 
   "-----------", 
   "RichEditableText will dispatch all the FlexEvent.COMMIT_VALUE events and SkinnableTextBase will redispatch them for TextInput and TextArea.  Dispatched on focusOut, set text/content/textFlow, and for the insertText() and appendText() API calls.", 
   "Also changed a few validateNow() calls to validateProperties() because that is all that is needed and it is a much safer call.", 
   "QA Notes:", 
   "Doc Notes: SDK-21991", 
   "Reviewers: Alex", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/primitives/RichEditableText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/TextArea.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/SkinnableTextBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/TextInput.as</path>"
  ], 
  "revision_id": "1282829"
 }
]