[
 {
  "author": "pmouawad", 
  "date": "2015-02-28T14:24:01.741952Z", 
  "msg": [
   "Fix Workbench documentation"
  ], 
  "revision_id": "1662943"
 }, 
 {
  "author": "stefan2", 
  "date": "2015-02-28T14:09:01.628250Z", 
  "msg": [
   "On the fsx-1.10 branch:", 
   "Replace the last direct element access to svn_fs_x__revision_file_t", 
   "with an accessor function.  Make the struct opaque.", 
   "* subversion/libsvn_fs_x/rev_file.h", 
   "(svn_fs_x__rev_file_info_t): Define a new (sub-)struct.", 
   "(svn_fs_x__revision_file_t): Remove definition here; moved to .c file.", 
   "(svn_fs_x__rev_file_info): Declare new access function.", 
   "* subversion/libsvn_fs_x/rev_file.c", 
   "(svn_fs_x__revision_file_t): Move definition here from header.", 
   "Use the new info sub-struct type.", 
   "(create_revision_file,", 
   "init_revision_file,", 
   "open_pack_or_rev_file,", 
   "auto_read_footer): Update struct users.", 
   "(svn_fs_x__rev_file_info): Implement.", 
   "* subversion/libsvn_fs_x/index.c", 
   "(get_l2p_header_body,", 
   "get_l2p_header,", 
   "get_p2l_header): Use the new access API."
  ], 
  "revision_id": "1662942"
 }, 
 {
  "author": "stefan2", 
  "date": "2015-02-28T13:51:49.523931Z", 
  "msg": [
   "On the fsx-1.10 branch:", 
   "Add an access function for svn_fs_x__revision_file_t's file element.", 
   "Make all callers use that instead of accessing the struct directly.", 
   "* subversion/libsvn_fs_x/rev_file.h", 
   "(svn_fs_x__rev_file_get): Declare new private API.", 
   "* subversion/libsvn_fs_x/rev_file.c", 
   "(svn_fs_x__rev_file_get): Implement it.", 
   "* subversion/libsvn_fs_x/cached_data.c", 
   "(read_delta_window): Use the new API.", 
   "* subversion/libsvn_fs_x/fs_x.c", 
   "(write_revision_zero): Same.", 
   "* subversion/libsvn_fs_x/pack.c", 
   "(copy_item_to_temp,", 
   "copy_rep_to_temp,", 
   "copy_node_to_temp,", 
   "append_revision): Same."
  ], 
  "revision_id": "1662941"
 }, 
 {
  "author": "nick", 
  "date": "2015-02-28T13:37:33.321423Z", 
  "msg": [
   "TIKA-1558 Support excluding (blacklisting) parsers from config, so you can use DefaultParser for all except certain parsers. Also supports child parsers of a composite parser from config, towards TIKA-1509"
  ], 
  "revision_id": "1662940"
 }, 
 {
  "author": "stefan2", 
  "date": "2015-02-28T13:36:53.020684Z", 
  "msg": [
   "On the fsx-1.10 branch:", 
   "Add an access function for svn_fs_x__revision_file_t's stream element.", 
   "Make all callers use that instead of accessing the struct directly.", 
   "* subversion/libsvn_fs_x/rev_file.h", 
   "(svn_fs_x__rev_file_stream): Declare new access function.", 
   "* subversion/libsvn_fs_x/rev_file.c", 
   "(svn_fs_x__rev_file_stream): Implement it.", 
   "* subversion/libsvn_fs_x/cached_data.c", 
   "(create_rep_state_body,", 
   "read_delta_window,", 
   "cache_windows,", 
   "read_rep_header): Use the new access function.", 
   "* subversion/libsvn_fs_x/pack.c", 
   "(copy_rep_to_temp,", 
   "copy_node_to_temp): Same."
  ], 
  "revision_id": "1662939"
 }
]