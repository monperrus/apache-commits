[
 {
  "author": "hwright", 
  "date": "2008-11-22T21:07:34.868910Z", 
  "msg": [
   "Followup to r34340: Don't check the checksum kind, since we do that already", 
   "in a deeper layer.", 
   "Found by: danielsh", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(fs_file_checksum): Dispense with checking the checksum kind before returning."
  ], 
  "revision_id": "874415"
 }, 
 {
  "author": "hwright", 
  "date": "2008-11-22T20:11:58.591425Z", 
  "msg": [
   "Followup to r34338: Return the requested checksum for FSFS.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(fs_file_checksum): Pass the requested kind down the stack.", 
   "(apply_textdelta): Request the appropriate checksum kind.", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(svn_fs_fs__noderev_same_rep_key): Return the requested checksum kind.", 
   "* subversion/libsvn_fs_fs/dag.h", 
   "* subversion/libsvn_fs_fs/dag.c", 
   "(svn_fs_fs__dag_file_checksum): Pass requested checksum down the stack.", 
   "(svn_fs_fs__dag_finalize_edits): Request the correct checksum kind."
  ], 
  "revision_id": "874414"
 }, 
 {
  "author": "rhuijben", 
  "date": "2008-11-22T20:02:51.606041Z", 
  "msg": [
   "Following up on r34337, replace abort calls with SVN_ERR_MALFUNCTION in", 
   "libsvn_ra_serf.", 
   "Most of these replaced aborts are triggerable from the network and should be", 
   "converted to non malfunction errors before serf is the default dav client.", 
   "* subversion/libsvn_ra_serf/commit.c", 
   "(absent_directory, close_edit, abort_edit): Replace abort calls in", 
   "unlikely http error conditions.", 
   "* subversion/libsvn_ra_serf/locks.c", 
   "(start_lock): Replace abort calls on invalid xml responses.", 
   "* subversion/libsvn_ra_serf/merge.c", 
   "(start_merge): Replace abort call on unknown xml response.", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(close_dir, close_all_dirs): Replace abort on internal references checks.", 
   "(cancel_fetch): Replace abort on broken request.", 
   "(handle_fetch,handle_stream): Replace aborts on broken network requests.", 
   "(fetch_file,start_report): Replace aborts on invalid responses.", 
   "(abort_report): Replace abort on aborting.", 
   "* subversion/libsvn_ra_serf/util.c", 
   "(svn_ra_serf__conn_closed): Replace abort on connection broken errors.", 
   "(svn_ra_serf__handle_xml_parser): Replace abort on unexpected http or", 
   "xml errors.", 
   "* subversion/libsvn_ra_serf/xml.c", 
   "(svn_ra_serf__expand_ns): Replace abort on expanding the namespace of a", 
   "unknown namespace reference."
  ], 
  "revision_id": "874413"
 }, 
 {
  "author": "hwright", 
  "date": "2008-11-22T19:38:32.968829Z", 
  "msg": [
   "Similar to r33975 with BDB, teach FSFS to store both MD5 and SHA1 checksums.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(read_rep_offsets): Parse both sha1 and md5 checksums from the node rev.", 
   "(representation_string): Put both the sha1 and md5 checksums, if they exist", 
   "(put the all-zero checksum if they don't).", 
   "(read_rep_baton): Rename context and checksum to reflect type.", 
   "(rep_read_get_baton): Initialize baton contents.", 
   "(rep_read_contents): Update the checksum with the appropriate contents.", 
   "(svn_fs_fs__get_file_delta_stream): More baton variable rename fixes.", 
   "(svn_fs_fs__file_checksum): Return the md5 checksum no matter the type", 
   "requested.", 
   "(svn_fs_fs__rep_copy): Update for new representation checksum members.", 
   "(rep_write_baton): Add contexts for both sha1 and md5.", 
   "(rep_write_contents): Update both contexts.", 
   "(rep_write_get_baton): Initialize both contexts.", 
   "(rep_write_contents_close): Finalize both checksums.", 
   "(write_final_rev): Update for new checksum variable names.", 
   "* subversion/libsvn_fs_fs/fs.h", 
   "(representation_t): Remove generic checksum member in favor of specifically", 
   "named checksum member.", 
   "* subversion/libsvn_fs_fs/rep-cache.c", 
   "(svn_fs_fs__get_rep_reference): Make sure only sha1 references are requested.", 
   "(svn_fs_fs__set_rep_reference): Make sure only sha1 references are inserted.", 
   "(svn_fs_fs__inc_rep_reuse): Update variable names.", 
   "* subversion/tests/cmdline/svnadmin_tests.py", 
   "(verify_incremental_fsfs): Update expected error."
  ], 
  "revision_id": "874412"
 }, 
 {
  "author": "rhuijben", 
  "date": "2008-11-22T19:23:18.936955Z", 
  "msg": [
   "Following up on r34334, replace abort() calls with SVN_ERR_MALFUNCTION", 
   "and SVN_ERR_ASSERT where possible. This patch should remove all abort calls", 
   "except those in the global library initialization, out of memory conditions", 
   "and those in libsvn_ra_serf.", 
   "* subversion/libsvn_delta/depth_filter_editor.c", 
   "(okay_to_edit): Replace call to abort with SVN_ERR_MALFUNCTION_NO_RETURN", 
   "and add return to remove compilation warning.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(default_warning_func): Call SVN_ERR_MALFUNCTION_NO_RETURN instead of abort.", 
   "* subversion/libsvn_fs_base/tree.c", 
   "(dag_node_cache_set): Call SVN_ERR_MALFUNCTION_NO_RETURN instead of abort in", 
   "unimplemented case.", 
   "* subversion/libsvn_fs_base/util/skel.c", 
   "(global): include svn_error.h", 
   "(unparse, svn_fs_base__prepend, svn_fs_base__append):", 
   "Replace abort calls with SVN_ERR_ASSERT_NO_RETURN.", 
   "* subversion/libsvn_repos/dump.c", 
   "(make_dir_baton): Replace abort with SVN_ERR_ASSERT_NO_RETURN.", 
   "* subversion/libsvn_subr/sqlite.c", 
   "(svn_sqlite__step): Replace abort with SVN_ERR_MALFUNCTION", 
   "* subversion/libsvn_subr/utf.c", 
   "(put_xlate_handle_node): Call SVN_ERR_MALFUNCTION when mutex calls fail.", 
   "* subversion/libsvn_wc/entries.c", 
   "(write_entry_xml): Use SVN_ERR_ASSERT to validate entry name.", 
   "* subversion/mod_dav_svn/util.c", 
   "(dav_svn__build_uri): Call SVN_ERR_MALFUNCTION_NO_RETURN when value out of", 
   "range."
  ], 
  "revision_id": "874411"
 }
]