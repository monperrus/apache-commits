[
 {
  "author": "ozeigermann", 
  "date": "2007-07-20T16:20:20.377142Z", 
  "msg": [
   "New to manager hierarchical locking as required by file resource manager."
  ], 
  "revision_id": "558040"
 }, 
 {
  "author": "gregames", 
  "date": "2007-07-20T16:20:10.813215Z", 
  "msg": [
   "the cost of synchronized SMP proof updates far outweighs the value of having", 
   "100% accurate MaxRequestsPerChild.", 
   "* it doesn't even count requests, it counts connections.", 
   "* all it is is a number someone pulls out of a hat in an attempt to deal with", 
   "resource leaks.", 
   "i.e., no strong need for accuracy.", 
   "atomic operations are relatively expensive and this is mainline code."
  ], 
  "revision_id": "558039"
 }, 
 {
  "author": "ozeigermann", 
  "date": "2007-07-20T16:19:46.219579Z", 
  "msg": [
   "Preparation for deadlock detection"
  ], 
  "revision_id": "558038"
 }, 
 {
  "author": "twgoetz", 
  "date": "2007-07-20T16:17:49.829384Z", 
  "msg": [
   "No Jira: delete legacy TODO file."
  ], 
  "revision_id": "558037"
 }, 
 {
  "author": "mamta", 
  "date": "2007-07-20T16:17:02.265901Z", 
  "msg": [
   "DERBY-2960", 
   "\"select\" query failed because we were generating SQLVarchar rather than CollatorSQLVarchar", 
   "create table alltypes (c char(10), v varchar(50));", 
   "insert into alltypes values ('duplicate', 'is duplicated');", 
   "select substr(c||v, 1, 4), count(*) from alltypes group by substr(c||v, 1, 4) ;", 
   "To fix the problem, I needed to override StringDataValue getNewVarchar() in CollatorSQLVarchar. Without this new method, we were generating SQLVarchar in territory based databased when the collation type was territory based."
  ], 
  "revision_id": "558036"
 }
]