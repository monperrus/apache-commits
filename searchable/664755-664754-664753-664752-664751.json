[
 {
  "author": "marc", 
  "date": "2006-08-15T00:21:31.000000Z", 
  "msg": [
   "Added namespace declaration", 
   "Added namespace declaration to thrift grammar", 
   "Modified C++ code generator to produce equivalent C++ namespace for thrift namespace if specified"
  ], 
  "revision_id": "664755"
 }, 
 {
  "author": "marc", 
  "date": "2006-08-14T23:30:37.000000Z", 
  "msg": [
   "You scream, I scream, We all scream for exceptions", 
   "Added exception defintions and specifiers to thrift grammar", 
   "Modified C++ code generator to to catch and serialize exceptions on the server side and unmarshall and throw them on the client side.", 
   "Modified grammar to require \",\"  after each service function declaration to keep it consistent with struct declaration syntax", 
   "This checkin officially breaks the old parser"
  ], 
  "revision_id": "664754"
 }, 
 {
  "author": "marc", 
  "date": "2006-08-12T00:32:53.000000Z", 
  "msg": [
   "Fixed a few typos - test client and server samples now working with new code generation"
  ], 
  "revision_id": "664753"
 }, 
 {
  "author": "marc", 
  "date": "2006-08-11T23:58:57.000000Z", 
  "msg": [
   "Added function name to read/writeMessageBegin args", 
   "Added cpp generator for master server message processor"
  ], 
  "revision_id": "664752"
 }, 
 {
  "author": "marc", 
  "date": "2006-08-11T23:33:08.000000Z", 
  "msg": [
   "Groundwork for exception support:", 
   "Auto generate result structs that combine return type and any thrown exceptions", 
   "Add __isset struct to all user defined and auto defined struct to mark fields that are explicilty read", 
   "Modified client and server generation code to marshal result structs", 
   "Added base facebook::thrift::Exception class"
  ], 
  "revision_id": "664751"
 }
]