[
 {
  "author": "vhennebert", 
  "date": "2014-02-11T18:31:36.853493Z", 
  "msg": [
   "Synchronise Checkstyle with FOP and also check test cases"
  ], 
  "revision_id": "1567273"
 }, 
 {
  "author": "smarru", 
  "date": "2014-02-11T18:30:00.939942Z", 
  "msg": [
   "committing patch from supun for AIRAVATA-981"
  ], 
  "revision_id": "1567272"
 }, 
 {
  "author": "rhuijben", 
  "date": "2014-02-11T18:29:48.211440Z", 
  "msg": [
   "* STATUS: Extend r1531014 group with recently found fix"
  ], 
  "revision_id": "1567271"
 }, 
 {
  "author": "liyin", 
  "date": "2014-02-11T18:28:40.160581Z", 
  "msg": [
   "[HBASE-10502] ParallelScanner: a client utility to perform multiple scan request in parallel.", 
   "Author: liyintang", 
   "Summary:", 
   "ParallelScanner is a utility class for the HBase client to perform multiple scan requests in parallel. It requires all the scan requests having the same caching size for the simplicity purpose.", 
   "This class provides 3 very basic functionalities: {@link #initialize()}, {@link #next()},  {@link #close()}.", 
   "* The initialize function will Initialize all the ResultScanners by calling {@link HTable#getScanner(Scan)} in parallel for each scan request.", 
   "* The next function will call the corresponding {@link ResultScanner#next(int numRows)} from each scan request in parallel, and then return all the results together as a list.  Also, if result list is empty, it indicates there is no data left for all the scanners and the user can call {@link #close()} afterwards.", 
   "* The close function will close all the scanners and shutdown the thread pool.", 
   "Also, this diff includes a unit test, TestParallelScanner, to cover the functionalities of ParallelScanner.", 
   "Test Plan: Run through all the scan related unit tests and TestParallelScanner", 
   "Reviewers: manukranthk", 
   "Reviewed By: manukranthk", 
   "CC: hbase-dev@, daviddeng", 
   "Differential Revision: https://phabricator.fb.com/D1167268"
  ], 
  "revision_id": "1567270"
 }, 
 {
  "author": "liyin", 
  "date": "2014-02-11T18:28:36.823864Z", 
  "msg": [
   "[master] Let HRegion get correct flushable size from each Store", 
   "Author: fan", 
   "Summary:", 
   "Current calculation of flushable size in HRegion is wrong when previous flush attempt fails. The bug messes up HRegion's total memstore size, which leads to a very serious data loss for all data in memstore(s) when region is closing.", 
   "This fix corrects the size change after flush succeeds.", 
   "Test Plan: TBD", 
   "Reviewers: aaiyer, liyintang, jiqingt", 
   "Reviewed By: jiqingt", 
   "CC: HBase Eng@, hbase-dev@, manukranthk", 
   "Differential Revision: https://phabricator.fb.com/D1158429", 
   "Task ID: 3621385"
  ], 
  "revision_id": "1567269"
 }
]