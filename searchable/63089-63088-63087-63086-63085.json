[
 {
  "author": "jim", 
  "date": "2002-03-06T13:05:11.000000Z", 
  "msg": [
   "These are redundant redundancies. We already wrap the whole file", 
   "with APR_HAS_THREADS.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "63089"
 }, 
 {
  "author": "stoddard", 
  "date": "2002-03-06T03:35:33.000000Z", 
  "msg": [
   "Warming up tomorrow..."
  ], 
  "revision_id": "63088"
 }, 
 {
  "author": "stoddard", 
  "date": "2002-03-06T03:23:23.000000Z", 
  "msg": [
   "Add the APR_FILE_NOCLEANUP flag to apr_file_open().", 
   "Adding the flag will prevent the file from being closed", 
   "when the pool passed in on apr_file_open() is destroyed.", 
   "This feature is useful when using apr_os_file_get|put()", 
   "to manage the apr_os_file_t in apr_file_t (ie, file handle", 
   "caching in the HTTP server) [Bill Stoddard]"
  ], 
  "revision_id": "63087"
 }, 
 {
  "author": "stoddard", 
  "date": "2002-03-06T02:47:34.000000Z", 
  "msg": [
   "Win32: Fix APR_XTHREAD support. A thread should have its own unique", 
   "apr_file_t structure (and its own io event and overlapped structure)", 
   "when doing cross thread overlapped i/o. The only application using this", 
   "support that I am aware of is the Apache 2.0 file handle cache."
  ], 
  "revision_id": "63086"
 }, 
 {
  "author": "bnicholes", 
  "date": "2002-03-05T22:08:39.000000Z", 
  "msg": [
   "Moved the memcpy() ahead of the hash table set to avoid a race condition.", 
   "This makes sure that there is valid data in the entry when it is set in the hash", 
   "table."
  ], 
  "revision_id": "63085"
 }
]