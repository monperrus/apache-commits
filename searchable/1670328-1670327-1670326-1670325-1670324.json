[
 {
  "author": "jim", 
  "date": "2015-03-31T12:58:59.944646Z", 
  "msg": [
   "Merge r1669289, r1669292 from trunk:", 
   "core_filters: restore/disable TCP_NOPUSH option after non-blocking sendfile.", 
   "CHANGES: follow up to r1669289.", 
   "Submitted by: ylavic", 
   "Reviewed/backported by: jim"
  ], 
  "revision_id": "1670328"
 }, 
 {
  "author": "tommaso", 
  "date": "2015-03-31T12:58:04.600792Z", 
  "msg": [
   "make distr.it work with latest snapshot"
  ], 
  "revision_id": "1670327"
 }, 
 {
  "author": "jim", 
  "date": "2015-03-31T12:57:46.854469Z", 
  "msg": [
   "Merge r1664071, r1664299 from trunk:", 
   "core: If explicitly configured, use the KeepaliveTimeout value of the", 
   "virtual host which handled the latest request on the connection, or by", 
   "default the one of the first virtual host bound to the same IP:port.", 
   "For non-async MPMs, use either r->server's or c->base_server's value in", 
   "ap_process_http_sync_connection() depending on a new server_rec's flag", 
   "called keep_alive_timeout_set and determined at config time.", 
   "For event MPM, use a queue per timeout value, chaining the queues per", 
   "type (keepalive wrt KeepAliveTimeout, write completion wrt to Timeout)", 
   "so that maintenance can be done on all the queues from the head, and such", 
   "that insertions/maintenance remain in O(1).", 
   "A server config is created and pointing to the queue of each vhost at", 
   "post_config time, hence the config can be associated to the connection", 
   "state (cs) at post_read_request time (keep_alive_timeout_set is used to", 
   "determine r->server vs c->base_server here), and we can simply insert", 
   "with TO_QUEUE_INSERT(cs->sc->q, cs).  PR56226.", 
   "While at it, since each queue now embeds it own timeout and hence the", 
   "expiration_time of the cs has changed to a queue_timestamp (the time it", 
   "was queued), we can detect clock skews and expire entries immediatly if", 
   "the system is set (eg. far) in the past during runtime and we want to", 
   "avoid waiting for (eg.) centuries before the current logic kills them.", 
   "Any entry which is registered above now + q->timeout is concerned, and", 
   "is now cleaned from the queue when encountered.  PR57374.", 
   "core: Follow up to r1664071: comments on new keep_alive_timeout_set flag.", 
   "Submitted by: ylavic", 
   "Reviewed/backported by: jim"
  ], 
  "revision_id": "1670326"
 }, 
 {
  "author": "jim", 
  "date": "2015-03-31T12:54:40.584157Z", 
  "msg": [
   "Merge r1668532, r1668535, r1668553 from trunk:", 
   "core: Initialize scoreboard's used optional functions on graceful restarts to", 
   "avoid a crash when relocation occurs.  PR 57177.", 
   "core: follow up to r1668532: CHANGES entry.", 
   "core: follow up to r1668532: always initialize optional_fn pointers in ap_create_scoreboard().", 
   "Submitted by: ylavic", 
   "Reviewed/backported by: jim"
  ], 
  "revision_id": "1670325"
 }, 
 {
  "author": "jim", 
  "date": "2015-03-31T12:53:00.293591Z", 
  "msg": [
   "Merge r1657636, r1657638, r1669130 from trunk:", 
   "mod_proxy_connect/wstunnel: If both client and backend sides get readable", 
   "at the same time, don't lose errors occuring while forwarding on the first", 
   "side when none occurs next on the other side, and abort.", 
   "CHANGES: Follow up to r1657636, clarify message.", 
   "mod_proxy_{connect,wstunnel}: follow up to r1657636.", 
   "Since rv is not used as an apr_status_t in the loop (it's logging is done by", 
   "proxy_{connect,wstunnel}_transfer() when necessary/relevent), use a boolean", 
   "instead to avoid the ugly ORs between APR error codes.", 
   "Submitted by: ylavic", 
   "Reviewed/backported by: jim"
  ], 
  "revision_id": "1670324"
 }
]