[
 {
  "author": "crossley", 
  "date": "2004-08-14T06:25:33.869632Z", 
  "msg": [
   "Added new section \"General upgrade tips\"."
  ], 
  "revision_id": "36379"
 }, 
 {
  "author": "rich", 
  "date": "2004-08-14T06:13:46.689785Z", 
  "msg": [
   "Missed this file in my last checkin..."
  ], 
  "revision_id": "36378"
 }, 
 {
  "author": "rich", 
  "date": "2004-08-14T06:06:05.338390Z", 
  "msg": [
   "Preliminary Shared Flow support.  This feature has the following characteristics:", 
   "- Every page flow has either zero or one shared flows.", 
   "- A page flow's shared flow is the nearest SharedFlowController-derived (and @Jpf.Controller-annotated) class in or above the page flow's package.  So, if the following classes exist:", 
   "foo.bar.baz.PageFlow1", 
   "* foo.bar.baz.SharedFlow1", 
   "foo.bar.PageFlow2", 
   "foo.PageFlow3", 
   "* foo.SharedFlow2", 
   "PageFlow1 sees SharedFlow1, and both PageFlow2 and PageFlow3 see SharedFlow2.", 
   "- Shared flow source files can exist in the webapp as \".jpfs\" files, and they can also exist as normal Java source files.  Unlike page flows, they are not web-addressable.", 
   "- When a page flow is hit, its associated shared flow is created and stored in the session.", 
   "- When an action is raised on a page flow, and the page flow does not handle it (with a @Jpf.Action), the action bubbles up to the shared flow.  The current page flow remains the same, unless the shared flow action forwards to another page flow.", 
   "- When an exception occurs in a page flow action, and the page flow does not handle it (with a @Jpf.Catch), the exception bubbles up to the shared flow.  The current page flow remains the same, unless the shared flow action forwards to another page flow.", 
   "- If a page flow contains a member field annotated with @Jpf.SharedFlowField, that field will be initialized with the associated shared flow instance.  This is useful for directly accessing shared flow state and functionality from a page flow.", 
   "- Shared flows can be deleted explicitly through methods on PageFlowUtils.", 
   "- (TBD) JSP tags can bind to the shared flow using the \"sharedFlow\" binding context.", 
   "Philosophical question: Why not just depend on inheritance for these features?  The main reason is that most often the state for a shared flow needs to be... shared, rather than duplicated across all page flows extending a common base class.  Shared flows have their own lifecycles, and can be managed independently of the page flows that depend on them.  Shared flows also avoid stealing the single spot in the inheritance hierarchy, so that various page flows under a single shared flow can extend the right base classes to provide inherited behavior and state.  Finally, avoiding inheritance also prevents confusing/inappropriate behavior surrounding forwards to relative paths from actions in the base class.", 
   "See netui/test/webapps/drt/coreWeb/pageFlowCore/sharedFlow/* for examples.", 
   "DRT: netui", 
   "buddy build: self"
  ], 
  "revision_id": "36377"
 }, 
 {
  "author": "crossley", 
  "date": "2004-08-14T05:51:37.123983Z", 
  "msg": [
   "Add section \"Various additions to skin configuration and new external DTD\""
  ], 
  "revision_id": "36376"
 }, 
 {
  "author": "crossley", 
  "date": "2004-08-14T05:43:32.101738Z", 
  "msg": [
   "Encourage to enhance existing capability rather than create new skins.", 
   "Add some section formatting."
  ], 
  "revision_id": "36375"
 }
]