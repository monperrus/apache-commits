[
 {
  "author": "dlr", 
  "date": "2006-09-11T18:00:53.733029Z", 
  "msg": [
   "Merge r21333 from trunk into the 1.4.x branch, adding a URL to the top", 
   "of the message that can lead the reader to a Trac, ViewVC or other", 
   "view of the commit when the 'commit_url' option is set", 
   "Votes: +1: blair, dlr"
  ], 
  "revision_id": "861505"
 }, 
 {
  "author": "dlr", 
  "date": "2006-09-11T17:59:06.095691Z", 
  "msg": [
   "Merge r21316 and r21429 from trunk into the 1.4.x branch, fixing a", 
   "JavaHL crash when using mismatched, pre-1.4 native libraries with 1.4", 
   "Java bytecode libraries.", 
   "Votes: +1: markphip, +0: djames, dlr"
  ], 
  "revision_id": "861504"
 }, 
 {
  "author": "dlr", 
  "date": "2006-09-11T17:54:59.406922Z", 
  "msg": [
   "A follow-up to r21316.", 
   "[ in subversion/bindings/java/javahl/ ]", 
   "* src/org/tigris/subversion/javahl/SVNClientInterface.java", 
   "(SVNClient): Elaborate the comment about passing the empty string to", 
   "setConfigDirectory()."
  ], 
  "revision_id": "861503"
 }, 
 {
  "author": "dlr", 
  "date": "2006-09-11T17:51:04.863588Z", 
  "msg": [
   "* STATUS: Vote for r21316, icky but necessary."
  ], 
  "revision_id": "861502"
 }, 
 {
  "author": "djames", 
  "date": "2006-09-11T17:42:06.915771Z", 
  "msg": [
   "Refactor the Python automatic memory management implementation", 
   "to avoid confusing interdependencies and duplicated code.", 
   "Simplify overly long typemaps for memory management by moving", 
   "the heavy lifting into helper functions in swigutil_py.c.", 
   "This commit reduces the size of the generated SWIG files for", 
   "the Python bindings from 4.9M to 3.2M (that's 1.7 megabytes", 
   "less code!).", 
   "[ In subversion/bindings/swig ]", 
   "* include/svn_global.swg", 
   "(_global_py_pool): Rename from _global_svn_swig_py_pool.", 
   "* include/svn_types.swg", 
   "(OUTPARAM): Adjust for rename of _global_svn_swig_py_pool.", 
   "Adjust for extra argument to svn_swig_NewPointerObj.", 
   "(POINTER_TYPES): Remove arginit typemap. Adjust for new calling", 
   "conventions to svn_swig_MustGetPtr and svn_swig_NewPointerObj.", 
   "Adjust for rename of _global_svn_swig_py_pool. Leverage new", 
   "svn_swig_py_get_pool_arg function.", 
   "(CALLABLE_CALLBACK): Explicitly grab parent pool from argument", 
   "list if _global_pool is NULL. Adjust for new calling", 
   "conventions to svn_swig_MustGetPtr and svn_swig_NewPointerObj.", 
   "Adjust for rename of _global_svn_swig_py_pool. Use null", 
   "pool for setting constants.", 
   "(PY_AS_VOID): Adjust for rename of _global_svn_swig_py_pool.", 
   "* include/svn_containers.swg", 
   "(%hash_argout_typemap): Adjust for rename of", 
   "_global_svn_swig_py_pool.", 
   "(cfg_hash): Ditto. Adjust for new calling", 
   "conventions to svn_swig_NewPointerObj.", 
   "(providers): Adjust for new calling conventions to", 
   "svn_swig_MustGetPtr.", 
   "* python/libsvn_swig_py/swigutil_py.c", 
   "(markValid): New constant.", 
   "(svn_swig_py_get_pool_arg): New function.", 
   "(svn_swig_py_get_parent_pool): New function.", 
   "(svn_swig_py_get_application_pool, proxy_get_pool): Remove functions.", 
   "(svn_swig_NewPointerObj): Add 'args' parameter. If the passed-in pool", 
   "is NULL, mark the object as owned by the parent pool of the first item", 
   "in 'args'.", 
   "(svn_swig_NewPointerObjString, make_ob_pool, convert_to_swigtype,", 
   "make_ob_##type): Adjust to account for extra parameter in", 
   "svn_swig_NewPointerObj.", 
   "(svn_swig_MustGetPtr): Don't extract the parent pool of the proxy", 
   "object anymore, as it is no longer necessary. Remove 'py_pool'", 
   "argument.", 
   "* python/libsvn_swig_py/swigutil_py.h", 
   "(svn_swig_get_pool_arg, svn_swig_get_parent_pool): New functions.", 
   "(svn_swig_NewPointerObj): Add 'args' parameter.", 
   "(svn_swig_MustGetPtr): Remove 'py_pool' argument.", 
   "* python/tests/client.py", 
   "(testBatonPlay): Add a few more pool-related tests."
  ], 
  "revision_id": "861501"
 }
]