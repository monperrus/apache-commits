[
 {
  "author": "sussman", 
  "date": "2005-03-01T02:49:06.345302Z", 
  "msg": [
   "Locking branch:  weekly merge of (trunk, r13109:13199) to branch."
  ], 
  "revision_id": "853275"
 }, 
 {
  "author": "breser", 
  "date": "2005-03-01T02:12:33.385030Z", 
  "msg": [
   "Make svn_repos_create() clean up after itself if it can't make the repository.", 
   "Currently, it will leave a broken repository directory behind.  If say the", 
   "user mistyped the filesystem type and then fixed it and ran the command again", 
   "then they'll get another error saying that the repo already exists.  This is", 
   "clumsy.", 
   "We can't just look to see if the filesystem type is supported because we can", 
   "only infer that by trying to load the library.  So we simply clean up the repo", 
   "if we fail.", 
   "* subversion/libsvn_repos/repos.c", 
   "(svn_repos_create): If svn_fs_create() fails then remove the repo directory", 
   "we made."
  ], 
  "revision_id": "853274"
 }, 
 {
  "author": "breser", 
  "date": "2005-03-01T01:37:43.128411Z", 
  "msg": [
   "Fix a potential segfault in svnserve found by Joe Orton.  Currently, the parser", 
   "of the network protocol does not enforce a recursion limit, so it is possible", 
   "to use up all the stack space and cause the process to segfault.", 
   "For most users of svnserve this is not a problem because the svnserve process", 
   "forks and as a result only the forked process segfaults.  However, for users", 
   "running in the threaded mode (Windows only uses threaded mode) it will segfault", 
   "the entire server.", 
   "* subversion/libsvn_ra_svn/marshal.c", 
   "(read_item): Add a level parameter that keeps track of how many recursions", 
   "we've had.  Limit the amount of recursion to 64 levels.", 
   "(svn_ra_svn_read_item): Pass 0 as the level parameter for the first call to", 
   "read_item()."
  ], 
  "revision_id": "853273"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-01T01:20:07.646031Z", 
  "msg": [
   "Make all the libsvn_fs_base/bdb functions which currently accept only", 
   "trail_t's also accept (and use, instead of trail->pool) explicit 'pool'", 
   "parameters.", 
   "Callers of these functions which themselves live in the", 
   "libsvn_fs_base/bdb area now provide *their* new pool as the value for", 
   "this new parameter; callers outside that area pass trail->pool as that", 
   "parameter.  The net affect, of course, is that no changes in memory", 
   "usage have happened at all.  But this is the first step of several", 
   "incremental commits which should give us the flexibility over pool", 
   "usage that we need in the BDB backend.", 
   "* subversion/libsvn_fs_base/bdb/changes-table.h,", 
   "subversion/libsvn_fs_base/bdb/changes-table.c", 
   "(svn_fs_bdb__changes_add, svn_fs_bdb__changes_delete,", 
   "svn_fs_bdb__changes_fetch, svn_fs_bdb__changes_fetch_raw): Add", 
   "'pool' parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/copies-table.h", 
   "(svn_fs_bdb__reserve_copy_id, svn_fs_bdb__create_copy,", 
   "svn_fs_bdb__delete_copy, svn_fs_bdb__get_copy): Add 'pool'", 
   "parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/copies-table.c", 
   "(put_copy, svn_fs_bdb__reserve_copy_id, svn_fs_bdb__create_copy,", 
   "svn_fs_bdb__delete_copy, svn_fs_bdb__get_copy): Add", 
   "'pool' parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/nodes-table.h,", 
   "subversion/libsvn_fs_base/bdb/nodes-table.c", 
   "(svn_fs_bdb__new_node_id, svn_fs_bdb__new_successor_id,", 
   "svn_fs_bdb__delete_nodes_entry, svn_fs_bdb__get_node_revision,", 
   "svn_fs_bdb__put_node_revision): Add", 
   "'pool' parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/reps-table.h,", 
   "subversion/libsvn_fs_base/bdb/reps-table.c", 
   "(svn_fs_bdb__read_rep, svn_fs_bdb__write_rep,", 
   "svn_fs_bdb__write_new_rep, svn_fs_bdb__delete_rep): Add", 
   "'pool' parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/rev-table.h,", 
   "subversion/libsvn_fs_base/bdb/rev-table.c", 
   "(svn_fs_bdb__get_rev, svn_fs_bdb__put_rev, svn_fs_bdb__youngest_rev): Add", 
   "'pool' parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/strings-table.c", 
   "(locate_key, svn_fs_bdb__string_read, get_key_and_bump,", 
   "svn_fs_bdb__string_append, svn_fs_bdb__string_clear,", 
   "svn_fs_bdb__string_size, svn_fs_bdb__string_delete,", 
   "svn_fs_bdb__string_copy): Add 'pool' parameter, and use it instead", 
   "of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/strings-table.h", 
   "(svn_fs_bdb__string_read, svn_fs_bdb__string_size,", 
   "svn_fs_bdb__string_append, svn_fs_bdb__string_clear,", 
   "svn_fs_bdb__string_delete, svn_fs_bdb__string_copy): Add 'pool'", 
   "parameter, and use it instead of trail's pool for allocations.", 
   "* subversion/libsvn_fs_base/bdb/txn-table.c", 
   "(svn_fs_bdb__put_txn, allocate_txn_id, svn_fs_bdb__create_txn,", 
   "svn_fs_bdb__delete_txn, svn_fs_bdb__get_txn): Add 'pool' parameter,", 
   "and use it instead of trail's pool for allocations.", 
   "(svn_fs_bdb__get_txn_list): Re-order parameters (this one already", 
   "had a 'pool' parameter).", 
   "* subversion/libsvn_fs_base/bdb/txn-table.h", 
   "(svn_fs_bdb__create_txn, svn_fs_bdb__delete_txn,", 
   "svn_fs_bdb__get_txn, svn_fs_bdb__put_txn): Add 'pool' parameter,", 
   "and use it instead of trail's pool for allocations.", 
   "(svn_fs_bdb__get_txn_list): Re-order parameters (this one already", 
   "had a 'pool' parameter).", 
   "* subversion/libsvn_fs_base/bdb/uuids-table.h,", 
   "subversion/libsvn_fs_base/bdb/uuids-table.c", 
   "(svn_fs_bdb__get_uuid, svn_fs_bdb__set_uuid): Add 'pool' parameter,", 
   "and use it instead of trail's pool for allocations."
  ], 
  "revision_id": "853272"
 }, 
 {
  "author": "philip", 
  "date": "2005-02-28T23:21:41.566782Z", 
  "msg": [
   "* subversion/svnserve/main.c (enable_message_translation): Use an", 
   "explicit \"void\" rather than an empty parameter list."
  ], 
  "revision_id": "853271"
 }
]