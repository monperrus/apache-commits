[
 {
  "author": "ianh", 
  "date": "2003-12-29T20:55:08.000000Z", 
  "msg": [
   "silence 2 doxygen warnings", 
   "submitted by: sander temme <sander at temmet dot net>"
  ], 
  "revision_id": "64849"
 }, 
 {
  "author": "jorton", 
  "date": "2003-12-29T15:31:39.000000Z", 
  "msg": [
   "* include/apr_thread_cond.h: Note when destroying a condvar gives", 
   "undefined results in a POSIX implementation.", 
   "* locks/unix/thread_cond.c (apr_thread_cond_create): Don't run cleanup", 
   "if pthread_cond_init fails since that gives undefined results.", 
   "(apr_thread_cond_destroy): Use apr_pool_cleanup_run so the cleanup is", 
   "always unregistered.", 
   "* test/testlock.c (test_cond): Test apr_thread_cond_destroy and use", 
   "apr_assert_success() a little more."
  ], 
  "revision_id": "64848"
 }, 
 {
  "author": "jorton", 
  "date": "2003-12-29T15:06:38.000000Z", 
  "msg": [
   "* include/arch/unix/apr_arch_thread_cond.h: Store a pthread_cond_t", 
   "object in struct apr_thread_cond_t rather than a pointer to one.", 
   "* locks/unix/thread_cond.c (apr_thread_cond_create): Adjust use of", 
   "->cond, remove ENOMEM handling.  (apr_thread_cond_wait,", 
   "apr_thread_cond_timedwait, apr_thread_cond_signal,", 
   "apr_thread_cond_broadcast): Adjust use of ->cond."
  ], 
  "revision_id": "64847"
 }, 
 {
  "author": "jorton", 
  "date": "2003-12-29T14:57:30.000000Z", 
  "msg": [
   "Spelling/grammar fixes."
  ], 
  "revision_id": "64846"
 }, 
 {
  "author": "trawick", 
  "date": "2003-12-23T14:54:55.000000Z", 
  "msg": [
   "fix a false failure with APR_CHECK_GETNAMEINFO_IPV4_MAPPED on z/OS", 
   "- NI_MAXHOST is not defined, so provide fall-back logic", 
   "(we could just skip NI_MAXHOST altogether, but showing the", 
   "fallback will remind folks of why we can't just use NI_MAXHOST)", 
   "- htonl is a macro in arpa/inet.h, so include that header so that", 
   "the link is successful"
  ], 
  "revision_id": "64845"
 }
]