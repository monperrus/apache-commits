[
 {
  "author": "brane", 
  "date": "2013-06-26T05:01:53.939483Z", 
  "msg": [
   "Refactor the JavaHL commit editor and implement EV2 copy.", 
   "[in subversion/bindings/javahl/src/org/apache/subversion/javahl]", 
   "* remote/CommitEditor.java: Remove native implementaiton methods;", 
   "make the ISVNRemote interface implementation native instead.", 
   "[in subversion/bindings/javahl/native]", 
   "* CommitEditor.h (CommitEditor): Remove session parameter from the", 
   "editor API methods ...", 
   "(CommitEditor::m_session): ... and remember the session here instead.", 
   "(CommitEditor::m_callback): Change type to PersistentCommitCallback.", 
   "(CommitEditor::m_extra_baton): Remove.", 
   "(CommitEditor::get_copysrc_kind_cb,", 
   "CommitEditor::m_callback_session,", 
   "CommitEditor::m_callback_session_url,", 
   "CommitEditor::m_callback_session_uuid): Helpers for EV2/EV1 shims.", 
   "* CommitEditor.cpp:", 
   "(CommitEditor::CommitEditor): Use private RA function to create editor.", 
   "(CommitEditor::copy, CommitEditor::complete, CommitEditor::abort):", 
   "Implement EV2 edit operations.", 
   "Rework boilerplate code for other EV2 operations.", 
   "* org_apache_subversion_javahl_remote_CommitEditor.cpp: Remove \"native\" from", 
   "the names of wrapper functions that changed in CommitEditor.java."
  ], 
  "revision_id": "1496733"
 }, 
 {
  "author": "violetagg", 
  "date": "2013-06-26T05:00:22.175422Z", 
  "msg": [
   "When AsyncContext.dispatch(...) is invoked do not cast request and response to HttpServletRequest/HttpServletResponse. AsyncContext.startAsync(ServletRequest,ServletResponse) can be invoked with custom ServletRequest/ServletResponse."
  ], 
  "revision_id": "1496732"
 }, 
 {
  "author": "dsmiley", 
  "date": "2013-06-26T04:44:26.045373Z", 
  "msg": [
   "SOLR-2345: refactor out GeoDistValueSourceParser from HaversineConstFunction"
  ], 
  "revision_id": "1496731"
 }, 
 {
  "author": "brane", 
  "date": "2013-06-26T04:41:20.713756Z", 
  "msg": [
   "The remote API in JavaHL has to maintain references to the commit", 
   "callback for a moderately long time, so do maintain a global reference", 
   "to the obejct.", 
   "[in subversion/bindings/javahl/native]", 
   "* CommitCallback.h (CommitCallback.m_callback): Make protected.", 
   "(PersistentCommitCallback): New, variant of CommitCallback.", 
   "* CommitCallback.cpp: Implement PersistentCommitCallback."
  ], 
  "revision_id": "1496730"
 }, 
 {
  "author": "brane", 
  "date": "2013-06-26T04:38:05.570910Z", 
  "msg": [
   "Do not create too many global references in JavaHL.", 
   "[in subversion/bindings/javahl/native]", 
   "* OperationContext.cpp (OperationContext::getSelf): Do not create a new", 
   "global reference to the Java context object; the C++ context already", 
   "maintains one.", 
   "* SVNClient.cpp (SVNClient::openRemoteSession): Adjust caller."
  ], 
  "revision_id": "1496729"
 }
]