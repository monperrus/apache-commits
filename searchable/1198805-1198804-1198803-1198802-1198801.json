[
 {
  "author": "simonetripodi", 
  "date": "2011-11-07T16:32:19.123992Z", 
  "msg": [
   "fixed sidebar enabled by default (it was totally ignored)"
  ], 
  "revision_id": "1198805"
 }, 
 {
  "author": "julianfoad", 
  "date": "2011-11-07T16:29:42.321981Z", 
  "msg": [
   "* subversion/libsvn_client/client.h", 
   "(svn_client__path_relative_to_root): Tweak the doc string."
  ], 
  "revision_id": "1198804"
 }, 
 {
  "author": "markrmiller", 
  "date": "2011-11-07T16:26:06.258081Z", 
  "msg": [
   "merge up to trunk r1198778"
  ], 
  "revision_id": "1198803"
 }, 
 {
  "author": "julianfoad", 
  "date": "2011-11-07T16:23:02.920639Z", 
  "msg": [
   "Eliminate svn_uri__is_child().", 
   "* subversion/include/svn_dirent_uri.h,", 
   "subversion/libsvn_subr/dirent_uri.c", 
   "(svn_uri__is_child): Delete.", 
   "* subversion/libsvn_client/cleanup.c", 
   "(fetch_repos_info): s/is_child/is_ancestor; benefit when relpath is \"\".", 
   "* subversion/libsvn_wc/upgrade.c", 
   "(ensure_repos_info): Same.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_repos_copy): s/is_child/skip_ancestor four times; in two cases", 
   "add a check for relpath \"\", and in the other two cases eliminate one.", 
   "Also fix an out-of-date comment and reduce scope of the variable.", 
   "(wc_to_repos_copy): s/is_child/skip_ancestor; it was clear that the", 
   "relpath is never \"\".", 
   "* subversion/libsvn_client/delete.c", 
   "(delete_urls_multi_repos): s/is_child/skip_ancestor twice; relpath \"\" is", 
   "not valid (and, in cases where relpath is \"\", it will merely crash at a", 
   "different place than it did before).", 
   "* subversion/libsvn_client/info.c", 
   "(push_dir_info): s/is_child/skip_ancestor; it was clear that the", 
   "relpath is never \"\".", 
   "* subversion/libsvn_client/merge.c", 
   "(make_conflict_versions): Same.", 
   "* subversion/libsvn_client/commit.c", 
   "(collect_lock_tokens): Eliminate an is_ancestor call by using the existing", 
   "skip_ancestor result.", 
   "* subversion/libsvn_client/util.c", 
   "(svn_client__path_relative_to_root): Same.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(svn_wc_add_repos_file4): Same.", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(reporter_link_path): Same.", 
   "(svn_ra_local__reparent): s/is_child/is_ancestor and eliminate a strcmp.", 
   "* subversion/libsvn_subr/target.c", 
   "(svn_path_remove_redundancies): s/is_child/skip_ancestor, both for URI and", 
   "dirent, and eliminate a strcmp.", 
   "* subversion/libsvn_wc/adm_files.c", 
   "(svn_wc__internal_ensure_adm): s/is_child/skip_ancestor; eliminate both", 
   "the check for relpath \"\" and an is_ancestor call in an assertion.", 
   "* subversion/libsvn_wc/entries.c", 
   "(write_entry): s/is_child/skip_ancestor three times; in two cases", 
   "eliminate checks for relpath \"\" and in the third case adjust the check.", 
   "* subversion/libsvn_wc/externals.c", 
   "(close_file, svn_wc__get_file_external_editor): s/is_child/skip_ancestor", 
   "twice; trust that the semantic change is unlikely to be harmful, since", 
   "it seems likely and passes tests, but the use of these paths is", 
   "insufficiently documented to be sure.", 
   "* subversion/svnsync/main.c", 
   "(do_initialize): s/is_child/strcmp, as the URL has to be either a child or", 
   "the same as the repository root so we just need to test whether it's the", 
   "same.", 
   "* subversion/tests/libsvn_subr/dirent_uri-test.c", 
   "(test_uri_is_child): Delete.", 
   "(test_list): Remove test_uri_is_child."
  ], 
  "revision_id": "1198802"
 }, 
 {
  "author": "kmcgrail", 
  "date": "2011-11-07T16:21:58.116422Z", 
  "msg": [
   "Found sought files orphaned on zone"
  ], 
  "revision_id": "1198801"
 }
]