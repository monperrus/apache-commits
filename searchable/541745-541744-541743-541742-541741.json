[
 {
  "author": "knopp", 
  "date": "2007-05-25T18:39:07.733440Z", 
  "msg": [
   "Removing the system.out.println line"
  ], 
  "revision_id": "541745"
 }, 
 {
  "author": "joakime", 
  "date": "2007-05-25T18:33:59.235792Z", 
  "msg": [
   "[MRM-331]: Finding an Artifact gives an HTTP 500"
  ], 
  "revision_id": "541744"
 }, 
 {
  "author": "jmsnell", 
  "date": "2007-05-25T18:14:20.655652Z", 
  "msg": [
   "Allow signing without a X509 cert.", 
   "Add a method for associating a public key with the signature", 
   "Allow for verification of signatures without embedded keyinfo", 
   "Provide signing options for signing atom:link/@href and atom:content/@src targets", 
   "Allow filtering of signed atom:link/@href's by rel attribute value", 
   "Add helper method for retrieving lists of links for a list of rel attributes values", 
   "Example:", 
   "public static void main(String... args) throws Exception {", 
   "FileWriter fw = new FileWriter(\"/media/store/www/test.dat\");", 
   "fw.write(\"testing\");", 
   "fw.close();", 
   "KeyPairGenerator keyGen =", 
   "KeyPairGenerator.getInstance(\"DSA\", \"IBMJCE\");", 
   "SecureRandom random =", 
   "SecureRandom.getInstance(\"SHA1PRNG\", \"IBMJCE\");", 
   "keyGen.initialize(1024, random);", 
   "random.setSeed(System.currentTimeMillis());", 
   "KeyPair pair = keyGen.generateKeyPair();", 
   "PrivateKey priv = pair.getPrivate();", 
   "PublicKey pub = pair.getPublic();", 
   "Abdera abdera = new Abdera();", 
   "Entry entry = abdera.newEntry();", 
   "entry.addLink(\"http://localhost/test.dat\", \"license\");", 
   "AbderaSecurity absec = new AbderaSecurity(abdera);", 
   "Signature sig = absec.getSignature();", 
   "SignatureOptions options = sig.getDefaultSignatureOptions();", 
   "options.setSigningKey(priv);", 
   "options.setSignLinks(true);            // sign atom:link targets the atom:content/src target", 
   "options.setSignedLinkRels(\"license\");  // filter links so that only license links are signed", 
   "entry = sig.sign(entry, options);      // the signature will not contain any key info", 
   "// set the public key used to verify the signature", 
   "options.setPublicKey(pub);", 
   "// signature will be valid", 
   "System.out.println(sig.verify(entry, options));", 
   "fw = new FileWriter(\"/media/store/www/test.dat\");", 
   "fw.write(\"foo\");", 
   "fw.close();", 
   "// signature will be invalid because the linked reference changed", 
   "System.out.println(sig.verify(entry, options));", 
   "}"
  ], 
  "revision_id": "541743"
 }, 
 {
  "author": "agilliland", 
  "date": "2007-05-25T18:09:41.528904Z", 
  "msg": [
   "cleanup and improve the theme selector page."
  ], 
  "revision_id": "541742"
 }, 
 {
  "author": "agilliland", 
  "date": "2007-05-25T18:09:04.282615Z", 
  "msg": [
   "fix the way the entry remove button works, it's now functioning like a link instead of posting unnecessary data to the entry removal action."
  ], 
  "revision_id": "541741"
 }
]