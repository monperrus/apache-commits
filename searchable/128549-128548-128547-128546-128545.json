[
 {
  "author": "dion", 
  "date": "2002-03-24T09:15:25.000000Z", 
  "msg": [
   "Fixed javadoc breakiterator issues"
  ], 
  "revision_id": "128549"
 }, 
 {
  "author": "", 
  "date": "2002-03-18T16:32:43.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create tag", 
   "'STRUTS_1_1_B1'."
  ], 
  "revision_id": "128548"
 }, 
 {
  "author": "craigmcc", 
  "date": "2002-03-18T16:32:43.000000Z", 
  "msg": [
   "Inspired by previous discussions on generalizing ConvertUtils, this patch", 
   "makes the standard Converters used (for all the primitive types) completely", 
   "pluggable, so there is no longer any concept of \"custom converters\".  Now,", 
   "you can replace how String->int conversions (for example) are done in your", 
   "application.", 
   "Besides the types previously supported by ConvertUtils (all of the Java", 
   "primitive types and their wrappers), ConvertUtils also includes standard", 
   "Converter implementations for the following Java classes:", 
   "- java.math.BigDecimal", 
   "- java.math.BigInteger", 
   "- java.sql.Date", 
   "- java.sql.Time", 
   "- java.sql Timestamp", 
   "that, in their default versions, simply use the default print format described", 
   "in the JDK JavaDocs.", 
   "One customization you might want to make is to have the standard Converters", 
   "throw ConversionException instead of returning a default value (which is the", 
   "standard behavior for backwards compatibility).  To accomplish this, the", 
   "standard converter implementations for primitives support two constructors --", 
   "one that takes a default value, and one that doesn't (and therefore will", 
   "return an exception on conversion errors).  So, if you wanted to switch to", 
   "exceptions for integer conversion errors, you would say:", 
   "ConvertUtils.register(new IntegerConverter(), Integer.TYPE);", 
   "ConvertUtils.register(new IntegerConverter(), Integer.class);", 
   "to cover both the wrapper class and the primitive type."
  ], 
  "revision_id": "128547"
 }, 
 {
  "author": "craigmcc", 
  "date": "2002-03-18T00:52:41.000000Z", 
  "msg": [
   "Add the ability to register custom Converter instances for String->Object", 
   "conversions performed by ConvertUtils.convert(Object, Class) and", 
   "ConvertUtils.convert(Object[], Class).  While this version works fine, I'm", 
   "going to generalize it shortly by making all of the standard conversion", 
   "methods into pluggable Converters, so you can replace (for example) the", 
   "standard String->Integer converter if you want to.", 
   "Submitted by:\tBased on a patch submitted by", 
   "Klaasjan Brand <brand@topicus.nl>"
  ], 
  "revision_id": "128546"
 }, 
 {
  "author": "craigmcc", 
  "date": "2002-03-16T04:11:04.000000Z", 
  "msg": [
   "In copyProperties(), skip write-only properties on the origin bean without", 
   "throwing an exception.", 
   "PR: Bugzilla #6217 (reported against Struts)", 
   "Submitted by:\tArnaud Heritier <aheritier at sopragroup.com>"
  ], 
  "revision_id": "128545"
 }
]