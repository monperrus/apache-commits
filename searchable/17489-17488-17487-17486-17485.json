[
 {
  "author": "mcconnell", 
  "date": "2003-07-03T04:28:53.000000Z", 
  "msg": [
   "New sources dealing with a more strict seperation of the meta-data from the derived meta-model.  These sources enable the construction of a serializable meta model (deployment directives including configuration, context information, parameters, etc). that can be crerated in an external environment (such as an editor) and passed to a kernel for execution. The classes include test cases for XML and sertialized persistence of the meta model and test cases dealing with model content validation."
  ], 
  "revision_id": "17489"
 }, 
 {
  "author": "crafterm", 
  "date": "2003-07-02T13:23:58.000000Z", 
  "msg": [
   "Initial cut at a Source implementation that uses the Jakarta Commons", 
   "HttpClient library.", 
   "To use this Source, make sure you have the commons-httpclient jar and the", 
   "commons-logging jar (required by httpclient) available in your classpath", 
   "somewhere."
  ], 
  "revision_id": "17488"
 }, 
 {
  "author": "crafterm", 
  "date": "2003-07-02T13:20:40.000000Z", 
  "msg": [
   "Removed unneeded 'public'"
  ], 
  "revision_id": "17487"
 }, 
 {
  "author": "crafterm", 
  "date": "2003-07-02T12:28:42.000000Z", 
  "msg": [
   "getResourceAsStream() returns null if the resource can't be loaded, I've", 
   "added a test for this to prevent Properties.load() from throwing an NPE if", 
   "it's given 'null' as an input parameter.", 
   "BTW - couldn't we use the source resolver for this ?"
  ], 
  "revision_id": "17486"
 }, 
 {
  "author": "crafterm", 
  "date": "2003-07-02T10:56:42.000000Z", 
  "msg": [
   "Fix location of the Fortress tools jar which is now in the base lib", 
   "directory. This fixes up automatic meta data generation during the source", 
   "resolver build."
  ], 
  "revision_id": "17485"
 }
]