[
 {
  "author": "costin", 
  "date": "2002-02-06T17:33:50.000000Z", 
  "msg": [
   "2 more methods - peekByte used to dispatch and \"Tag\", the message type.", 
   "Msg must be abstracted, it's still too Ajp13 specific.", 
   "Jk should work with any kind of messages - including soap or IIOP."
  ], 
  "revision_id": "296364"
 }, 
 {
  "author": "costin", 
  "date": "2002-02-06T17:32:19.000000Z", 
  "msg": [
   "Channel is just a handler ( the first in the chain ).", 
   "Note that at this moment the invoke command hardcodes the 'next' handler,", 
   "but that can be overriden ( it's just a default ).", 
   "The handler named 'dispatch' will be called ( if exists ), or 'request'.", 
   "A third handler 'container' is the default next for 'request'.", 
   "Again, similar ( but simpler ) with axis ( the idea of chains and", 
   "message paths )", 
   "XXX should we call it Transport ?"
  ], 
  "revision_id": "296363"
 }, 
 {
  "author": "costin", 
  "date": "2002-02-06T17:28:42.000000Z", 
  "msg": [
   "Removed webapp - jk should deal only with the communication.", 
   "The config generator will be refactored and included in a separate package.", 
   "Removed Worker - it's just a handler, no need for a special class ( and", 
   "different interface ! )"
  ], 
  "revision_id": "296362"
 }, 
 {
  "author": "costin", 
  "date": "2002-02-06T17:27:03.000000Z", 
  "msg": [
   "Renamed Endpoint to MsgContext. Added few common attributes ( that are used", 
   "all the times ). The MsgContext is a store for info exchanged between", 
   "handlers ( like notes in apache, etc )"
  ], 
  "revision_id": "296361"
 }, 
 {
  "author": "costin", 
  "date": "2002-02-06T17:25:07.000000Z", 
  "msg": [
   "Renamed Handler to JkHandler - the name is hugely overloaded, and likely to", 
   "create conflicts.", 
   "I think the architecture of jk2 is close to beeing finalized, the current", 
   "model should be powerfull enough for most of our needs. I copied", 
   "a lot from axis, which provides an extremely powerfull and flexible", 
   "model for message processing ( which is what jk2 is doing as well ).", 
   "JkHandler is the 'core' of the whole model - it supports the classic", 
   "'hook' pattern used in most apache products. Given that our", 
   "preferences are split, JkHandler supports both catalina-like", 
   "'recursive' hooks invocation ( using next ) and apache ( or 3.3 ) style", 
   "'iterative' invocation.", 
   "I've also renamed endpoint to MsgContext. The signature is different", 
   "from Axis's handler, in that we pass both the 'source' message and the", 
   "MsgContext. The reason is that Jk should be able to handle 'internal'", 
   "messages during the processing of the main message. The thread local", 
   "current MC is hacky."
  ], 
  "revision_id": "296360"
 }
]