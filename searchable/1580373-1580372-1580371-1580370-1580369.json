[
 {
  "author": "joes", 
  "date": "2014-03-22T23:37:52.867960Z", 
  "msg": [
   "test"
  ], 
  "revision_id": "1580373"
 }, 
 {
  "author": "joes", 
  "date": "2014-03-22T23:36:44.599986Z", 
  "msg": [
   "test"
  ], 
  "revision_id": "1580372"
 }, 
 {
  "author": "joes", 
  "date": "2014-03-22T23:35:26.165962Z", 
  "msg": [
   "test"
  ], 
  "revision_id": "1580371"
 }, 
 {
  "author": "joes", 
  "date": "2014-03-22T23:34:30.329845Z", 
  "msg": [
   "test"
  ], 
  "revision_id": "1580370"
 }, 
 {
  "author": "ate", 
  "date": "2014-03-22T23:34:20.393662Z", 
  "msg": [
   "SCXML-200:Normalize and complete the SCXML object model and parsing", 
   "See: https://issues.apache.org/jira/browse/SCXML-200", 
   "The Commons SCXML object model was rather 'flat' and de-normalized, and many of the current SCXML", 
   "specification features as well as restrictions were (thus) not fully mapped.", 
   "This commit restructures the SCXML model to bring it more/mostly in line with the specification", 
   "and normalizes the object hierarchy to cleaner separate and restrict the features belonging", 
   "to the right level and element.", 
   "The previous state and transition model hierarchy was like this:", 
   "TransitionTarget", 
   "<- Initial", 
   "<- History", 
   "<- State", 
   "<- Final", 
   "<- Parallel", 
   "Executable", 
   "<- Transition", 
   "With this restructuring it will now looks like this:", 
   "Initial", 
   "TransitionTarget", 
   "<- History", 
   "<- EnterableState -> DocumentOrder", 
   "<- TransitionalState", 
   "<- State", 
   "<- Parallel", 
   "<- Final", 
   "Executable", 
   "<- SimpleTransition", 
   "<- Transition -> DocumentOrder", 
   "With this restructuring, each of the model objects now cleanly represents their functional role", 
   "in the SCXML specification and only contains the features and relations they are supposed to have.", 
   "This also updates the SCXML document parsing of the model and the validation and post-processing,", 
   "and introduces some handy optimizations like adding a document order indicator to the EnterableState", 
   "and Transition objects which makes sorting them in document or reverse-document order,", 
   "as needed for implementing the SCXML processing algorithm, very trivial and fast.", 
   "And for each TransitionTarget its ancestor tree is derived once and cached as a fast navigable array.", 
   "These changes have a big impact on the internal API because not everything is passed around anymore", 
   "as a TransitionTarget but as strongly typed as possible.", 
   "But these changes make it much clearer to understand and use, and are an important improvement", 
   "needed for implementing the full SCXML specification."
  ], 
  "revision_id": "1580369"
 }
]