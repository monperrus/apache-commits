[
 {
  "author": "crogers", 
  "date": "2006-09-08T17:40:19.165681Z", 
  "msg": [
   "Made some changes in the JSP pages of the JSF test web app for JSP 2.1 changes. In JSP 2.0 #{} could be regarded as a string literal but in JSP 2.1 it is reserved for EL. In 2.1, #{} can only appears in a tag\u2019s attribute as an EL. I updated the JSP and testRecorder files to use the &#35; entity in the string literals.", 
   "NetUI jsfWeb for both myfaces and the JSF RI (WinXP)"
  ], 
  "revision_id": "441585"
 }, 
 {
  "author": "mikem", 
  "date": "2006-09-08T17:39:50.261731Z", 
  "msg": [
   "DERBY-1522", 
   "contributed by Deepa Remesh, dremesh@gmail.com", 
   "Attaching a patch 'derby1522_v2.diff. It includes a JUnit test for testing the", 
   "switch to SQL standard authorization. It tests following:", 
   "1. grant/revoke is not available if derby.database.sqlAuthorization property", 
   "is not set.", 
   "2. grant/revoke is available when derby.database.sqlAuthorization is set to true.", 
   "3. Once derby.database.sqlAuthorization is set to true, it cannot be set to any other value.", 
   "This patch also modifies DatabasePropertyTestSetup.tearDown method. The tearDown method resets the property values to old values. It will now ignore exceptions when property reset is not supported. I am including this small change in the above patch. (I had opened DERBY-1827 for the issue with tearDown method. ). I am using TestUtil.getConnection method to shutdown the database. I have opened DERBY-1826 to add methods to Derby's JUnit classes for shutdown."
  ], 
  "revision_id": "441584"
 }, 
 {
  "author": "brett", 
  "date": "2006-09-08T17:32:50.257604Z", 
  "msg": [
   "[MRM-77] fix for reports for distributions that are non-standard types"
  ], 
  "revision_id": "441583"
 }, 
 {
  "author": "jmsnell", 
  "date": "2006-09-08T17:25:44.510636Z", 
  "msg": [
   "RequestHandlers should be stateless and thread safe.", 
   "In order to make things a bit more efficient, introduce a pooling model for", 
   "RequestHandlers and provide an AbstractRequestHandlerFactory implementation", 
   "that provides a simple stack-based pool.  There's no max-instance limit on this", 
   "so folks in high-transaction environments should be careful."
  ], 
  "revision_id": "441582"
 }, 
 {
  "author": "jmsnell", 
  "date": "2006-09-08T17:21:27.885637Z", 
  "msg": [
   "Fix SignedResponseFilter so that it doesn't throw exceptions on error responses"
  ], 
  "revision_id": "441581"
 }
]