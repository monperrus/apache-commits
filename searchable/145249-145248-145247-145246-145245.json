[
 {
  "author": "jstrachan", 
  "date": "2002-09-24T16:48:54.000000Z", 
  "msg": [
   "Refactored some of the code for JellySwing to reuse the new UseBeanTag which simplifies the code quite a bit.", 
   "This also allows JellySwing widgets to be customized such as", 
   "<table class=\"com.acme.MyTable\" model=\"${mymodel}\"/>", 
   "Cleaned up the code so that either widgets/models are created and added to the parent widget, or they are just exported as a variable if the 'var' attribute is specified.", 
   "Also added an introductory <font> implementation. Though the createFont() factory method doesn't seem to work very well :-("
  ], 
  "revision_id": "145249"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-24T11:39:50.000000Z", 
  "msg": [
   "Added a <j:useBean> tag to both mimick the similar JSP tag but also to combine it with the <j:setProperties> tag so that a fully configured bean can be created easily by a single tag.", 
   "<j:useBean var=\"foo\" class=\"com.acme.MyCustomer\" name=\"James\" location=\"London\" role=\"Hacker\"/>", 
   "Where the above will create a new variable called 'foo' of type com.acme.MyCustomer and then will set the name, location and role properties to the values given.", 
   "This tag is also useful as a base class for constructing arbitrary objects of certain kinds that can be configured and used in some script - such as to plug in arbitrary Actions into a workflow style script or in a simple testing framework etc."
  ], 
  "revision_id": "145248"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-24T11:04:56.000000Z", 
  "msg": [
   "Added support for a <j:setProperties> tag which can make creating beans and setting properties on them much simpler.", 
   "e.g.", 
   "<j:new var=\"customer\" className=\"com.acme.MyCustomer\"/>", 
   "<j:setProperties object=\"${customer}\" name=\"James\" location=\"London\" orders=\"${foo.findOrders()}\"/>"
  ], 
  "revision_id": "145247"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-24T10:55:59.000000Z", 
  "msg": [
   "Added support for a <j:setProperties> tag which can make creating beans and setting properties on them much simpler.", 
   "e.g.", 
   "<j:new var=\"customer\" className=\"com.acme.MyCustomer\"/>", 
   "<j:setProperties object=\"${customer}\" name=\"James\" location=\"London\" orders=\"${foo.findOrders()}\"/>"
  ], 
  "revision_id": "145246"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-09-23T12:35:42.000000Z", 
  "msg": [
   "Added a new <setProperty> tag which allows properties to be set on the parent Ant task which are ignored if the expression is empty. This provides better handling of configurable properties on Ant Tasks when using Maven plugins.", 
   "e.g.", 
   "<jmxdoclet>", 
   "<setProperty name=\"destdir\" value=\"${maven.xdoclet.jmxdoclet.destdir}\"/>", 
   "</jmxdoclet>", 
   "The <setProperty> tag can also take an optional default you want to code in your plugin (to override the Ant task default).", 
   "e.g.", 
   "<jmxdoclet>", 
   "<setProperty name=\"destdir\" value=\"${maven.xdoclet.jmxdoclet.destdir}\" default=\"{0}Home\"/>", 
   "</jmxdoclet>", 
   "If the value expression of <setProperty> is null then the property is not set, preserving the underlying default in the Ant task."
  ], 
  "revision_id": "145245"
 }
]