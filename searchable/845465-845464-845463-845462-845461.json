[
 {
  "author": "cmpilato", 
  "date": "2003-03-19T19:04:37.390139Z", 
  "msg": [
   "Issue #1015 - binary property handling over ra_dav.  This patch", 
   "implements support for binary properties by base64-encoding XML-unsafe", 
   "properties, and passing this encoding fact along as XML attribute", 
   "data.  Many thanks to Joe Orton for his guiding hand.", 
   "At this time, clients and servers can understand the new 'encoding' XML", 
   "attribute used to specify that a property has been encoded.  But", 
   "clients and servers will not yet perform encodings on properties.  See", 
   "issue #1015 for more details on how this is being rolled out.", 
   "* subversion/include/svn_dav.h", 
   "(SVN_DAV_FEATURE_BINARY_PROPS): New #define (commented out for now).", 
   "* subversion/libsvn_ra_dav/ra_dav.h", 
   "(svn_ra_dav__get_props): Update comment to reflect new type of value --", 
   "we're storing 'const svn_string_t' now instead of 'const char *'.", 
   "(svn_ra_dav__do_proppatch): New.", 
   "* subversion/mod_dav_svn/deadprops.c", 
   "(dav_svn_db_define_namespaces): Add the ra-dav namespace.", 
   "(dav_svn_db_output_value): For non-XML-safe property values,", 
   "base64-encode those properties and add an encoding attribute to", 
   "the XML (but only include this functionality when", 
   "SVN_DAV_FEATURE_BINARY_PROPS is #defined).", 
   "(dav_svn_db_store): Base64-decode properties that have the encoding", 
   "XML attribute.", 
   "(dav_svn_db_first_name): Add some braces for code reability.", 
   "(dav_svn_db_get_rollback): Fix some 80-column-ness.", 
   "* subversion/libsvn_ra_dav/props.c", 
   "(prop_ctx_t): Add 'encoding' and 'hip' elements.", 
   "(neon_descriptions): Start paying attention to unknown elements.", 
   "(validate_element): Allow unknown properties through.", 
   "(start_element): Check for \"encoding\" attribute on property elems.", 
   "(end_element): If a property has an encoding property, handle it", 
   "accordingly.", 
   "(add_to_hash): Store value as an svn_string_t * now.", 
   "(svn_ra_dav__get_one_prop, svn_ra_dav__get_baseline_props,", 
   "svn_ra_dav__get_baseline_info): Update use of propset hash values.", 
   "(do_setprop): Moved from commit.c, and modified the handle binary", 
   "and empty props.", 
   "(svn_ra_dav__do_proppatch): New, with basically the guts from", 
   "commit.c:do_proppatch().", 
   "* subversion/libsvn_ra_dav/commit.c", 
   "(get_version_url): Update use of propset hash values.", 
   "(do_setprop): Remove.", 
   "(do_proppatch): Reduce to just a little wrapper around", 
   "svn_ra_dav__do_proppatch().", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(set_special_wc_prop): Make 'val' a 'const svn_string_t *', and", 
   "rework this function.", 
   "(store_vsn_url, filter_props, fetch_file, svn_ra_dav__get_dir):", 
   "Update use of propset hash values.  Update calls to", 
   "set_special_wc_prop().", 
   "(end_element): Update call to set_special_wc_prop().", 
   "(svn_ra_dav__change_rev_prop): Now use our custom proppatch routine,", 
   "svn_ra_dav__do_proppatch()."
  ], 
  "revision_id": "845465"
 }, 
 {
  "author": "philip", 
  "date": "2003-03-19T18:21:04.441811Z", 
  "msg": [
   "* tools/client-side/bash_completion (_svn): Remove get alias."
  ], 
  "revision_id": "845464"
 }, 
 {
  "author": "philip", 
  "date": "2003-03-19T18:19:16.802299Z", 
  "msg": [
   "Fix to avoid a gcc \"might be used uninitialized\" warning.  The only", 
   "problem was the presence of the warning, the code was well defined.", 
   "* subversion/libsvn_wc/diff.c (get_local_mimetypes): Remove flag and", 
   "use pointer directly."
  ], 
  "revision_id": "845463"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-03-19T18:03:30.156151Z", 
  "msg": [
   "Fix a bug that was causing properties with \\r in them to have their", 
   "values hosed by the time they hit the repository over ra-dav.", 
   "* subversion/libsvn_subr/xml.c", 
   "(xml_escape_cdata): Escape '\\r'."
  ], 
  "revision_id": "845462"
 }, 
 {
  "author": "sussman", 
  "date": "2003-03-19T13:32:28.782996Z", 
  "msg": [
   "Fix issue #1019:  don't run contextual diff on files marked as binary.", 
   "(Not closing this issue yet:  still need to write some specific", 
   "regression tests for this.)", 
   "This change solves the problem by passing any extant svn:mime-type", 
   "propvals to the vtable functions that perform diff (or merge).", 
   "This allows the implementor of the vtable to decide if/how to do the", 
   "differencing, and also paves the way for future 'pluggable' mime-type", 
   "diff programs.", 
   "* svn_wc.h (svn_wc_diff_callbacks_t): pass two svn:mime-type values", 
   "into vtable functions {file_changed, file_added, file_deleted}.", 
   "* libsvn_client/repos_diff.c (get_file_mime_types): new helper function.", 
   "(delete_entry, close_file):  use the helper function to pass", 
   "mimetypes into the vtable functions.", 
   "* libsvn_client/diff.c (diff_file_changed, diff_file_added,", 
   "diff_file_deleted_with_diff, diff_file_deleted_no_diff): take two", 
   "mimetype args.  If either mimetype is binary, don't attempt to", 
   "display diffs, just display a verbose warning instead.", 
   "(merge_file_changed, merge_file_added, merge_file_deleted): take two", 
   "new mimetype args, but don't use them.... yet.  :-)", 
   "(do_single_file_merge):  discover mimetypes in the two fetched", 
   "proplists, pass them to merge_file_changed.", 
   "* libsvn_wc/diff.c (load_base_props): new helper function.", 
   "(change_file_prop): use helper function.", 
   "(get_local_mimetypes):  major new helper func for callers below:", 
   "(file_diff, delete_entry): fetch svn:mime-type values from either", 
   "pristine or working props when necessary, and pass to the diff", 
   "callbacks.", 
   "(close_file):  look for svn:mime-type in propchanges, pristine", 
   "props, and possibly working props too.  pass to diff callbacks."
  ], 
  "revision_id": "845461"
 }
]