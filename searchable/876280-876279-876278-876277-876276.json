[
 {
  "author": "gstein", 
  "date": "2009-02-28T19:12:52.967828Z", 
  "msg": [
   "Implement a new function, svn_wc__db_scan_working(), to scan up the", 
   "WORKING tree to refine the status of a node in a WORKING tree. The", 
   "function will also return all the details of the operation which created", 
   "the target node.", 
   "A slight change was made to the schema for recording moves (as opposed to", 
   "copies). The source of a move did not have enough information, so we now", 
   "use the copyfrom_* fields and record a boolean for that information. This", 
   "is similar to the APIs in wc_db which talk about \"original\" locations of", 
   "nodes, rather than \"copyfrom\" locations. The schema will be renamed in a", 
   "future revision.", 
   "* subversion/libsvn_wc/wc-metadata.sql:", 
   "(WORKING_NODE.moved_from): renamed to ...", 
   "(WORKING_NODE.moved_here): ... this, and turned into a boolean.", 
   "* subversion/libsvn_wc/wc_db.h:", 
   "(svn_wc__db_scan_working): new function. huge docstring.", 
   "(svn_wc__db_scan_added_repos): removed. never imp'd and now obsolete.", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(struct svn_wc__db_pdh_t): add a copy of the wcroot abspath. when", 
   "computing move destinations, we use the local filesystem as the frame", 
   "of reference (rather than repos_relpath like copy/move sources), so we", 
   "need to know the root of the working copy.", 
   "(statements): follow rename of .moved_from to .moved_here", 
   "(scan_upwards_for_non_work): removed work-in-progress, unused function.", 
   "(parse_local_abspath): record the wcroot_abspath.", 
   "(navigate_to_parent): helper function to move to a parent PDH", 
   "(svn_wc__db_scan_added_repos): removed", 
   "(svn_wc__db_scan_working): new function. big, tricky implementation.", 
   "* subversion/libsvn_wc/entries.c:", 
   "(statements): follow rename of .moved_from to .moved_here", 
   "(db_working_node_t): rename MOVED_FROM field to MOVED_HERE and change", 
   "its type to boolean.", 
   "(fetch_working_nodes): populate MOVED_HERE field.", 
   "(insert_working_node): populate .moved_here column.", 
   "* subversion/tests/libsvn_wc/db-test.c:", 
   "(data_loading_sql): add an \"I\" base node to override by the working", 
   "nodes, since you aren't really supposed to override the root. add a", 
   "bunch of nodes for testing the scan_working() function.", 
   "(test_base_children): up to 9 children.", 
   "(test_working_info): the REPOS_* return values work now, so check them.", 
   "and test \"I\" rather than the root.", 
   "(test_scan_working): new test for the scan_working() function and a", 
   "bunch of the variant information it can return.", 
   "(test_funcs): add new test."
  ], 
  "revision_id": "876280"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2009-02-28T16:46:24.394834Z", 
  "msg": [
   "Fix build of libsvn_swig_py and Python on Mac OS X.", 
   "SWIG_PY_LIBS refers how to build *python* extensions.  On Mac OS X Python, this", 
   "means that it is a 'bundle' and *not* a dynamic library.  In Mach-O world,", 
   "bundles can *not* be loaded by other bundles.  However, the intention is for", 
   "libsvn_swig_py to be dynamically loaded by the 'real' Python extensions that we", 
   "create (such as _ra, _fs, _wc, etc.).  Therefore, just build it as a normal", 
   "dynamic library and not as a bundle.  Otherwise, we can get link-time errors.", 
   "* build.conf", 
   "(libsvn_swig_py): Just build libsvn_swig_py as a normal library."
  ], 
  "revision_id": "876279"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-02-28T00:23:31.290488Z", 
  "msg": [
   "* subversion/include/svn_dirent_uri.h", 
   "(svn_dirent_canonicalize, svn_uri_canonicalize): Update documentation to", 
   "match reality: returned canonical dirents and uris will always be", 
   "copied to the passed pool or be static.", 
   "The current uri and dirent rules are to expensive, to implement it as", 
   "copy when needed. You should only recanonicalize when really needed", 
   "(E.g. from user/external/network) and assume internal data is always", 
   "in canonical format.", 
   "* subversion/libsvn_subr/dirent_uri.c", 
   "(canonicalize): Return \"\" instead of the passed path for a passed empty", 
   "path to follow the documentation in this corner case, all other cases", 
   "are currently handled by copying."
  ], 
  "revision_id": "876278"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-02-27T22:57:15.416310Z", 
  "msg": [
   "* subversion/libsvn_ra_serf/commit.c", 
   "(handle_checkout): Resolve a potential future lifetime issue (Never used", 
   "by svn_uri_canonicalize implementation, as that leaves only \"\" in place).", 
   "Found by: ivan", 
   "[Reverted in r36293]"
  ], 
  "revision_id": "876277"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-02-27T21:50:27.771550Z", 
  "msg": [
   "Make libsvn_ra_serf canonicalize urls it receives to allow it to", 
   "use svn_path_url_add_component2. This resolves all obsolete warnings", 
   "in libsvn_ra_serf.", 
   "* subversion/libsvn_ra_serf/blame.c", 
   "(svn_ra_serf__get_file_revs): In all these ...", 
   "* subversion/libsvn_ra_serf/commit.c", 
   "(global): Include svn_dirent_uri.h.", 
   "(handle_checkout, checkout_dir, get_version_url, checkout_file,", 
   "setup_copy_dir_headers, post_headers_iterator_callback, open_root,", 
   "delete_entry, add_directory, open_directory, add_file, open_file,", 
   "close_file): ...", 
   "* subversion/libsvn_ra_serf/getlocations.c", 
   "(svn_ra_serf__get_locations): ...", 
   "* subversion/libsvn_ra_serf/getlocationsegments.c", 
   "(svn_ra_serf__get_location_segments): ...", 
   "* subversion/libsvn_ra_serf/getlocks.c", 
   "(svn_ra_serf__get_locks): ...", 
   "* subversion/libsvn_ra_serf/get_deleted_rev.c", 
   "(svn_ra_serf__get_deleted_rev): ...", 
   "* subversion/libsvn_ra_serf/locks.c", 
   "(svn_ra_serf__get_lock): ...", 
   "* subversion/libsvn_ra_serf/log.c", 
   "(svn_ra_serf__get_log): ...", 
   "* subversion/libsvn_ra_serf/mergeinfo.c", 
   "(svn_ra_serf__get_mergeinfo): ...", 
   "* subversion/libsvn_ra_serf/options.c", 
   "(global): Include svn_dirent_uri.h.", 
   "(end_options): ...", 
   "* subversion/libsvn_ra_serf/property.c", 
   "(global): Include svn_dirent_uri.h.", 
   "(svn_ra_serf__get_baseline_info): ...", 
   "* subversion/libsvn_ra_serf/serf.c", 
   "(fetch_path_props, svn_ra_serf__get_dir): ...", 
   "* subversion/libsvn_ra_serf/update.c", 
   "(svn_ra_serf__get_file): ... functions, make sure incoming and generated", 
   "urls are always canonical and use svn_path_url_add_component2() that", 
   "assumes the components are already canonical."
  ], 
  "revision_id": "876276"
 }
]