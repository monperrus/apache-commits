[
 {
  "author": "glasser", 
  "date": "2008-01-14T22:30:30.396383Z", 
  "msg": [
   "Augment a test to show that \"--depth infinity\" doesn't upgrade", 
   "shallower directories.  Make the test XFail.", 
   "However, this actually would pass, because the regexp in verify_depth", 
   "actually passes all the time, because of the part that succeeds when", 
   "matching blank lines.  While it would be possible to fix this by", 
   "making the regexp even more complicated, a much simpler solution is", 
   "just to add a version of run_and_verify_svn which only requires one", 
   "output line to match, which is what I do.  (Another solution would", 
   "have been to write run_and_verify_info, which would produce a hash of", 
   "info hashes.)", 
   "* subversion/tests/cmdline/depth_tests.py", 
   "(verify_depth): Call run_and_verify_svn_match_any, and pass a much", 
   "simpler regexp.", 
   "(depth_empty_update_bypass_single_file): Verify that the depth is", 
   "still empty, and then do a \"up --depth infinity\", and verify again", 
   "that the depth is still empty (which it isn't).", 
   "(depth_immediates_get_top_file_mod_only): Verify that the depth is", 
   "still \"immediates\".", 
   "(test_list): Mark depth_empty_update_bypass_single_file as XFail.", 
   "* subversion/tests/cmdline/svntest/actions.py", 
   "(run_and_verify_svn_match_any): New.", 
   "* subversion/tests/cmdline/svntest/verify.py", 
   "(verify_outputs): Take new ALL_STDOUT parameter."
  ], 
  "revision_id": "868980"
 }, 
 {
  "author": "glasser", 
  "date": "2008-01-14T21:51:48.496491Z", 
  "msg": [
   "Factor a verify_depth helper out of many of the depth tests which", 
   "parses the output of \"svn info\".", 
   "* subversion/tests/cmdline/depth_tests.py", 
   "(verify_depth): New.", 
   "(most tests): Use verify_depth."
  ], 
  "revision_id": "868979"
 }, 
 {
  "author": "cmpilato", 
  "date": "2008-01-14T21:18:10.555919Z", 
  "msg": [
   "Remove an unused baton member.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(struct edit_baton): Remove unused 'depth_is_sticky' member.", 
   "(make_editor): Stop populating now-absent baton member.", 
   "Suggested by: glasser"
  ], 
  "revision_id": "868978"
 }, 
 {
  "author": "cmpilato", 
  "date": "2008-01-14T20:59:53.767140Z", 
  "msg": [
   "Delete merged (and now obsolete) 'svn-update-new-depth' branch."
  ], 
  "revision_id": "868977"
 }, 
 {
  "author": "cmpilato", 
  "date": "2008-01-14T20:59:15.150118Z", 
  "msg": [
   "Merge all changes from the 'svn-update-new-depth' branch to trunk.", 
   "This introduces a new --set-depth option for 'svn update' and 'svn", 
   "switch', leaving --depth on those functions to behave the same way it", 
   "does for all other subcommands (as an operative filter).", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_get_update_editor3, svn_wc_get_switch_editor3): Add new", 
   "'depth_is_sticky' parameter.", 
   "(svn_wc_get_update_editor2, svn_wc_get_switch_editor2): Tweak docstrings.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_update3, svn_client_switch2): Add 'depth_is_sticky' parameter.", 
   "(svn_client_update2, svn_client_switch): Tweak docstrings.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(struct edit_baton): Add new 'depth_is_sticky' member.", 
   "(make_editor): Add new 'depth_is_sticky' parameter, and stuff the", 
   "value in the edit baton.  Test for invalid option combinations.", 
   "(svn_wc_get_update_editor3, svn_wc_get_switch_editor3): Add new", 
   "'depth_is_sticky' parameter.  Update calls to make_editor().", 
   "(svn_wc_get_update_editor, svn_wc_get_update_editor2,", 
   "svn_wc_get_switch_editor, svn_wc_get_switch_editor2): Update calls", 
   "to modified functions.", 
   "* subversion/libsvn_client/externals.c", 
   "(switch_external): Update calls to svn_client__update_internal() and", 
   "svn_client__switch_internal().", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__update_internal, svn_client__switch_internal): Add", 
   "'depth_is_sticky' parameter.", 
   "* subversion/libsvn_client/checkout.c", 
   "(svn_client__checkout_internal): Update calls to", 
   "svn_client__update_internal().", 
   "* subversion/libsvn_client/update.c", 
   "(svn_client__update_internal): Add new 'depth_is_sticky' parameter.", 
   "Update call to svn_wc_get_update_editor3().", 
   "(svn_client_update3): Add new 'depth_is_sticky' parameter; update", 
   "call to svn_client__update_internal().", 
   "(svn_client_update2): Update call to svn_client_update3().", 
   "(svn_client_update): Update call to svn_client__update_internal().", 
   "* subversion/libsvn_client/switch.c", 
   "(svn_client__switch_internal): Add new 'depth_is_sticky' parameter.", 
   "Update calls to svn_wc_get_switch_editor3().", 
   "(svn_client_switch2): Add new 'depth_is_sticky' parameter.  Update", 
   "call to svn_client__switch_internal().", 
   "(svn_client_switch): Update call to svn_client__switch_internal().", 
   "* subversion/svn/cl.h", 
   "(svn_cl__opt_state_t): Update comment for 'depth' member.  Add", 
   "'set_depth' member.", 
   "* subversion/svn/main.c", 
   "(svn_cl__longopt_t): New value 'opt_set_depth'.", 
   "(svn_cl__options): Tweak description of '--depth'; add support for new", 
   "'--set-depth' option.", 
   "(svn_cl__cmd_table): Tweak usage messages for, and add '--set-depth'", 
   "support to, 'update' and 'switch'.  Also, for switch, nest the", 
   "details so it is clear that they don't apply to the --relocate form.", 
   "(main): Add support for '--set-depth' option, but error if someone", 
   "tries using it with --depth.", 
   "* subversion/svn/update-cmd.c", 
   "(svn_cl__update): Deal with --depth and --set-depth, and update call", 
   "to svn_client_update3().", 
   "* subversion/svn/switch-cmd.c", 
   "(svn_cl__switch): Deal with --depth and --set-depth, and update call", 
   "to svn_client_switch2().", 
   "* subversion/tests/cmdline/getopt_tests_data/svn_help_log_switch_stdout", 
   "Update this test data to match the new reality.", 
   "* subversion/tests/cmdline/checkout_tests.py", 
   "(co_with_obstructing_local_adds): Re-work test to still cover the", 
   "same ground, but do so in a way that doesn't violate new", 
   "constraints on 'svn checkout -N'.", 
   "* subversion/tests/cmdline/depth_tests.py", 
   "(depth_immediates_fill_in_dir, depth_mixed_bring_in_dir,", 
   "depth_update_to_more_depth, diff_in_depthy_wc, upgrade_from_above,", 
   "status_in_depthy_wc): Tweak tests to use --set-depth instead of", 
   "--depth when trying to telescope working copy depth."
  ], 
  "revision_id": "868976"
 }
]