[
 {
  "author": "mrdon", 
  "date": "2006-09-14T03:17:51.928973Z", 
  "msg": [
   "Remove the deprecated view tag attributes 'labelPosition' (all UI tags) and 'show' (password tag)", 
   "WW-1447"
  ], 
  "revision_id": "443205"
 }, 
 {
  "author": "brett", 
  "date": "2006-09-14T02:59:51.443435Z", 
  "msg": [
   "fix imports"
  ], 
  "revision_id": "443204"
 }, 
 {
  "author": "mrdon", 
  "date": "2006-09-14T02:58:59.126324Z", 
  "msg": [
   "Removing the compiling classloader", 
   "WW-1446"
  ], 
  "revision_id": "443203"
 }, 
 {
  "author": "gvanmatre", 
  "date": "2006-09-14T02:58:57.653179Z", 
  "msg": [
   "I've been playing with the idea of storing the meta-data that clay uses to build the component tree in a RDBMS using JPA.  Currently, clay has three sources of this configuration data used to shape a view, XML, HTML and runtime.  The DB might be another option for very dynamic content.  The runtime option, the shapeValidator callback, looks like the best hook but I'm still playing with the idea.", 
   "In this testbed I started with an object model and generated the DB schema.  I didn't use any of the aggregate associations between entities because some of the relationships can not be easily enforced with DB RI.  I used serial ids as primary keys because of the hierarchically dependencies.  To enforce the data rules I created a service layer of POJO's to use the JPA entities.  These facade beans are only a few annotations away from being session beans \u2013 more of a logical layering than physical."
  ], 
  "revision_id": "443202"
 }, 
 {
  "author": "carlos", 
  "date": "2006-09-14T02:57:44.129922Z", 
  "msg": [
   "Reformat"
  ], 
  "revision_id": "443201"
 }
]