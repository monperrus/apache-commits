[
 {
  "author": "wrowe", 
  "date": "2002-12-28T20:43:59.000000Z", 
  "msg": [
   "Fix several bugs where handle creation failed.  Win32 doesn't (and other", 
   "platforms shouldn't) accept NULL as apr_file_close."
  ], 
  "revision_id": "64214"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-12-28T20:41:58.000000Z", 
  "msg": [
   "Grudgingly accept that folks may want to merge paths containing wildcard", 
   "characters... fail similarly to ENOENT/ENOTDIR, where we return the path", 
   "but emit the error as a precaution.  Folks interested in the results of", 
   "an invalid path merge need to look for those APR_STATUS_IS_xxx() results."
  ], 
  "revision_id": "64213"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-12-28T20:39:49.000000Z", 
  "msg": [
   "Introduce APR_EPATHWILD to designate that a given apr_file_[l]stat()", 
   "was against a filename that included wildcards (on platforms where", 
   "wildcards are invalid filename characters, e.g. OS2, Win32 etc.)"
  ], 
  "revision_id": "64212"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-12-28T20:36:21.000000Z", 
  "msg": [
   "Several StdHandles may be defined as the same handle, handle that case."
  ], 
  "revision_id": "64211"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-12-28T20:29:12.000000Z", 
  "msg": [
   "Remove the segfault from testfile.c and introduce new breakage.", 
   "If the filehandle we are closing corresponds to a standard handle,", 
   "we must protect against these dup2'ed handles in file_cleanup and", 
   "invalidate the corresponding StdHandle entries, or they may point", 
   "(in the future) to a newly reused handle identifier.", 
   "Why testfile.c thinks it can close a std handle and then simply", 
   "obtain it again is beyond me."
  ], 
  "revision_id": "64210"
 }
]