[
 {
  "author": "striker", 
  "date": "2002-04-25T13:30:06.945963Z", 
  "msg": [
   "* subversion/include/svn_diff.h", 
   "(output_common, output_conflict, output_diff_modified", 
   "output_diff_latest, output_diff_common): Update the", 
   "documentation to match the code.  Also rename the", 
   "arguments from xxx_end to xxx_length."
  ], 
  "revision_id": "841855"
 }, 
 {
  "author": "striker", 
  "date": "2002-04-25T10:34:12.399950Z", 
  "msg": [
   "* build/buildcheck.sh", 
   "Update our build requirements to require neon 0.19.4.", 
   "* INSTALL", 
   "(section I): Update the documentation to reflect that", 
   "our version requirements are 0.19.4 for neon and", 
   "2.0.36 for Apache."
  ], 
  "revision_id": "841854"
 }, 
 {
  "author": "striker", 
  "date": "2002-04-25T10:00:54.769504Z", 
  "msg": [
   "Convert the diff code to use the svn error API.", 
   "* subversion/include/svn_diff.h", 
   "(datasource_open, datasource_close): Change the return types to", 
   "svn_error_t *.", 
   "(datasource_get_next_token): Change the return type to", 
   "svn_error_t *.  Add an argument to pass a pointer to the token", 
   "placeholder.", 
   "(svn_diff, svn_diff3): Change the return type to svn_error_t *.", 
   "These functions will now return errors encountered when calling", 
   "datasource_open, datasource_close and datasource_get_next_token.", 
   "(output_common, output_conflict, output_diff_modified,", 
   "output_diff_latest): Change the return type to svn_error_t *.", 
   "(output_diff_common): Change the return type to svn_error_t *.", 
   "Update the documentation.", 
   "(svn_diff_output): Change the return type to svn_error_t *.  This", 
   "function will now return errors encountered when calling the", 
   "output_xxx functions.", 
   "(svn_diff_file, svn_diff3_file): Change the return type to", 
   "svn_error_t *, so that it matches up with svn_diff and svn_diff3.", 
   "* subversion/libsvn_delta/diff_file.c", 
   "(svn_diff__file_datasource_to_index): Renamed from datasource_to_index.", 
   "(svn_diff__file_datasource_open, svn_diff__file_datasource_close,", 
   "svn_diff__file_datasource_get_token): Change the return type", 
   "to svn_error_t *.  Return appropiate errors when failures are encountered", 
   "in file operations.  Remove the check for an invalid datasource (it could", 
   "never happen since the only callers are svn_diff and svn_diff3).", 
   "(svn_diff_file, svn_diff3_file): Change the return type to", 
   "svn_error_t *.", 
   "* subversion/libsvn_delta/diff.c", 
   "(svn_diff__tree_create): Change the return type to void since this function", 
   "can never return an error.", 
   "(svn_diff__get_tokens): Change the return type to svn_error_t *.", 
   "Exit and return errors encountered when calling datasource_open,", 
   "datasource_close or datasource_get_next_token.", 
   "(svn_diff__lcs): Add a comment about the algorithm used.", 
   "(svn_diff, svn_diff3): Change the return type to svn_error_t *.  Use", 
   "svn_pool_xxx functions instead of apr_pool_xxx functions.  Exit and", 
   "return errors when encountered.", 
   "(svn_diff_output): Change the return type to svn_error_t *.  Exit and", 
   "return errors encountered when calling the output_xxx functions.", 
   "Clean up the code as suggested by Philip Martin."
  ], 
  "revision_id": "841853"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-04-25T08:16:08.832206Z", 
  "msg": [
   "Make commits and imports support the --nonrecursive flag.  Somebody", 
   "mentioned this again on IRC, so I figured, hey, it's 2:40 on the", 
   "morning of my fourth wedding anniversary -- why not forsake sleep and", 
   "continue to work on Subversion?", 
   "* subversion/include/svn_client.h", 
   "(svn_client_import, svn_client_commit): Add 'nonrecursive' argument.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__harvest_committables): Add 'nonrecursive' argument.", 
   "* subversion/libsvn_client/commit.c", 
   "(import_dir, import, svn_client_import, svn_client_commit): Add", 
   "'nonrecursive' argument, and use it.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(harvest_committables, svn_client__harvest_committables): Add", 
   "'nonrecursive' argument, and use it.", 
   "(svn_client__get_copy_committables): Update call to harvest_committables.", 
   "* subversion/clients/cmdline/commit-cmd.c", 
   "(svn_cl__commit): Update call to svn_client_commit.", 
   "* subversion/clients/cmdline/import-cmd.c", 
   "(svn_cl__import): Update call to svn_client_import.", 
   "* subversion/clients/cmdline/main.c", 
   "(svn_cl__cmd_table): Add 'n' (nonrecursive) flag to help message for", 
   "`commit' and `import' subcommands."
  ], 
  "revision_id": "841852"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-04-25T07:15:15.553814Z", 
  "msg": [
   "Icky.  Fix some broken-ness in the new(er) reporter stuffs.  Oh, and", 
   "lose a couple of svn_stringbuf_t's!  Also, add switch-tests (and what,", 
   "another 3 minutes?) to 'make check', woo-hoo.", 
   "* subversion/libsvn_repos/reporter.c", 
   "(svn_repos_report_baton_t): Add 'linked_paths' member.  Rename", 
   "'path_rev_hash' to 'path_revs' (users changed throughout this file).", 
   "Make 'target' a const char *.", 
   "(add_to_path_map, get_from_path_map): New, yet copied *directly*", 
   "from mod_dav_svn/update.c.", 
   "(svn_repos_delete_path, svn_repos_set_path): Make 'from_path' a", 
   "const char *, and use svn_path_join to create it.  Use new", 
   "get_from_path_map() helper.  'target' is now a const char *, too.", 
   "(svn_repos_link_path): `Resolve' todo comment.  Make 'from_path' a", 
   "const char *, and use svn_path_join to create it.  Use new", 
   "add_to_path_map() helper.  'target' is now a const char *, too.", 
   "(svn_repos_begin_report, svn_repos_finish_report): 'target' is now a", 
   "const char *.", 
   "* subversion/tests/clients/cmdline/switch_tests.py", 
   "(get_routine_status_list): New", 
   "(do_routine_switching): Test the get_routine_status_list function", 
   "for consistency when 'verify' is set.", 
   "(commit_switched_things): Fix this broken test.", 
   "* build.conf", 
   "(fs-test-scripts): Add 'switch_tests.py' to the 'make check' rule."
  ], 
  "revision_id": "841851"
 }
]