[
 {
  "author": "sussman", 
  "date": "2001-05-21T20:32:42.000000Z", 
  "msg": [
   "(report_local_mods):  if a directory is *only* marked for deletion, do", 
   "not recurse into it.   Also:  if the current directory is marked for", 
   "addition, ignore all deleted items and local mods;  only further", 
   "additions are noticed."
  ], 
  "revision_id": "839390"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-05-21T14:48:45.000000Z", 
  "msg": [
   "* include/svn_wc.h", 
   "(SVN_WC_ENTRY_ADD): Renamed from SVN_WC_ENTRY_ADDED for more precise", 
   "representation of the flag syntax.", 
   "(SVN_WC_ENTRY_DELETE): Renamed from SVN_WC_ENTRY_DELETED for more", 
   "precise representation of the flag syntax, and to make way for an", 
   "actual \"deleted\" flag coming soon to a version control system near", 
   "you.", 
   "All existing uses of these two flags changed with M-x tags-query-replace ...", 
   "Hoping I got 'em all.", 
   "(SVN_WC_ENTRY_DELETED): New flag for when something has been deleted", 
   "from revision control but needs to still live in the entries file", 
   "(talk to Karl...I can't remember the detailed reasoning for this).", 
   "(SVN_WC_ENTRY_ATTR_DELETED): New #define for the \"deleted\" string", 
   "soon to be found in some select entries files.", 
   "* libsvn_wc/adm_crawler.c", 
   "* libsvn_wc/adm_ops.c", 
   "* libsvn_wc/entries.c", 
   "* libsvn_wc/log.c", 
   "* libsvn_wc/status.c", 
   "Sweeping renames of entries flags above."
  ], 
  "revision_id": "839389"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-05-21T03:04:42.000000Z", 
  "msg": [
   "* client/cl.h", 
   "(svn_cl__cmd_proc_t): Added svn_cl__unadd and svn_cl__undelete to", 
   "this function prototypes thingamabob.", 
   "* client/add-cmd.c", 
   "(svn_cl__add): Some prep work for when this thing understands a", 
   "request for recursive addition.", 
   "(svn_cl__unadd): New function for un-adding files and dirs.", 
   "* client/delete-cmd.c", 
   "(svn_cl__undelete): New function for un-deleting files and dirs.", 
   "* client/main.c", 
   "(svn_cl__cmd_table): Added \"unadd (unad)\" and \"undelete (undel,", 
   "unrm)\" subcommand support.", 
   "* include/svn_client.h", 
   "(svn_client_add): Added RECURSIVE argument.", 
   "(svn_client_unadd, svn_client_undelete): New function prototypes.", 
   "* libsvn_client/add.c", 
   "(svn_client_add): Added RECURSIVE argument/support.", 
   "(svn_client_unadd): New function.", 
   "* libsvn_client/delete.c", 
   "(svn_client_delete): Removed obsolete todo.", 
   "(svn_client_undelete): New function.", 
   "* include/svn_wc.h", 
   "(svn_wc_unadd, svn_wc_undelete): New function prototypes.", 
   "* libsvn_wc/adm_ops.c", 
   "(enum mark_tree_state): Enum for mark_tree helper function.", 
   "(mark_tree): Renamed for delete_tree, this sucka now does at least a", 
   "couple of recursionish things.", 
   "(svn_wc_unadd): New function -- doesn't really work.", 
   "(svn_wc_undelete): New function -- DEFINITELY doesn't work."
  ], 
  "revision_id": "839388"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-05-21T02:57:51.000000Z", 
  "msg": [
   "* libsvn_wc/entries.c", 
   "(interpret_changes): Be a little more picky about disallowing", 
   "certain adds."
  ], 
  "revision_id": "839387"
 }, 
 {
  "author": "gstein", 
  "date": "2001-05-20T12:27:51.000000Z", 
  "msg": [
   "\"libtool --mode=link\" generates an output file which will link the real", 
   "thing upon the first execution. When it does this, it uses the parameters", 
   "(files and libs) passed on the command line and *assumes* they are relative", 
   "to the program being linked. This means we must whack all the parameters to", 
   "be relative to the target, rather than the top of the SVN tree; then we must", 
   "cd into the target dir to perform the libtool link.", 
   "* change the output to have target_DEPS for the top-relative dependencies", 
   "and target_OBJECTS for the target-relative objects", 
   "* add a function to compute \"../../\" type strings to \"retreat\" from the", 
   "target directory up to the top dir, so we can compute relative paths for", 
   "the dependent libraries", 
   "(note: libraries which aren't targets (such as $(SVN_APR_LIBS)) must be", 
   "absolute since we won't be doing the retreat processing)"
  ], 
  "revision_id": "839386"
 }
]