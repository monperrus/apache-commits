[
 {
  "author": "jvanzyl", 
  "date": "2002-05-31T12:48:53.000000Z", 
  "msg": [
   "Giving xmlrpc-helma jar a version.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "220649"
 }, 
 {
  "author": "brekke", 
  "date": "2002-05-30T12:46:03.000000Z", 
  "msg": [
   "Updated project descriptor to work with maven-head.", 
   "x"
  ], 
  "revision_id": "220648"
 }, 
 {
  "author": "brekke", 
  "date": "2002-05-29T13:38:27.000000Z", 
  "msg": [
   "Patch submitted by Martin van den Bemt:", 
   "- The TurbineDefault.properties is an minimum based property file, which", 
   "is enough for tests I am doing in CSV/TSVParser.java", 
   "- CSVParserTest.java and TSVParser.java are testcases for the", 
   "CVSParserTest.java and the TSVParser.java and are only runnable via", 
   "maven:iutest.", 
   "- TSVParser.java and CSVParser.java : Hardly any code in it anymore, now", 
   "just calling super and setting the fieldSeperator. Also added my name :)", 
   "- DataStreamParser.java", 
   "Changed a lot of code there. The formerly abstract initTokenizer, it has", 
   "changed from an abstract method to a non abstract, since all the", 
   "settings are the same for both parsers (or any other fieldseperator you", 
   "can think of).", 
   "You just have to call the initTokenizer() in super (see CSVParser.java)", 
   "and the DataStreamParser.setSeparator(char);, which will handle setting", 
   "the ordinarychar correctly.", 
   "Since I don't have a use case (at the top of the file this thing is used", 
   "from Velocity), it is hard to determine if I can remove the abstract", 
   "from the class and just let people call setSeparator where appropiate", 
   "and deprecate the CSV/TSVParsers. So feedback on this will be", 
   "appreciated, so I can change this behaviour. My intention is this :", 
   "I want to be able to use all kinds of seperated files from anywhere,", 
   "just by calling DataStreamParser and setting the fieldSeperator.", 
   "I made it almost fool proof, so if you are a monkey, it will still work.", 
   "It now supports this :", 
   "- Empty fieldnames (say the field header is field1,,field3,,field5", 
   "It just makes up a fieldname where the fieldnames are empty.. It will", 
   "use the constant EMPTYFIELDNAME+the columnumber. If you actually type a", 
   "space there, you are too much a fool for me to handle, so that is not", 
   "covered ;)", 
   "- Empty field Values", 
   "The ValueParser will not show fields that don't have a value. So if you", 
   "think it should provide an empty string for whatever reason, let me know", 
   "I will put it in.", 
   "- Field names and field values", 
   "Of course, if you just supply all the values, it will still work."
  ], 
  "revision_id": "220647"
 }, 
 {
  "author": "brekke", 
  "date": "2002-05-29T13:33:26.000000Z", 
  "msg": [
   "Use correct urls for mailing list archives and scarab and ignore", 
   "cactus logs.  Patch from Martin van den Bemt."
  ], 
  "revision_id": "220646"
 }, 
 {
  "author": "brekke", 
  "date": "2002-05-28T19:56:14.000000Z", 
  "msg": [
   "Fail the build in the legacy testing script if the integration unit tests are", 
   "attempted."
  ], 
  "revision_id": "220645"
 }
]