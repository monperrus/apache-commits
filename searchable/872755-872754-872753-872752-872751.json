[
 {
  "author": "joeswatosh", 
  "date": "2008-08-24T18:35:36.316742Z", 
  "msg": [
   "To quiet SWIG warning, ignore function svn_compat_wrap_file_rev_handler that", 
   "is unused by Ruby bindings.", 
   "* subversion/bindings/swig/svn_delta.i", 
   "%ignore svn_compat_wrap_file_rev_handler when generating Ruby bindings."
  ], 
  "revision_id": "872755"
 }, 
 {
  "author": "joeswatosh", 
  "date": "2008-08-24T18:30:11.416790Z", 
  "msg": [
   "Include the port number in the name of the svnserve windows service so in the", 
   "future we'll be able to detect when another instance of the service is running", 
   "on a port (maybe testing a branch) and use a different port number.", 
   "* subversion/bindings/swig/ruby/test/windows_util.rb", 
   "(SvnTestUtil::Windows::Svnserve::SERVICE_NAME): Removed constant", 
   "(SvnTestUtil::Windows::Svnserve#service_name): Replacment for constant", 
   "(SvnTestUtil::Windows::Svnserve#service_control): Use the service_name", 
   "method instead of the SERVICE_NAME constant.", 
   "(SvnTestUtil::Windows::Svnserve#setup_svnserve): Use the last of the", 
   "@svnserve_ports instead of the first to avoid collisions with earlier", 
   "versions that didn't include the port number in te service name.  Use the", 
   "service_name method instead of the SERVICE_NAME constant."
  ], 
  "revision_id": "872754"
 }, 
 {
  "author": "blair", 
  "date": "2008-08-24T18:13:45.928693Z", 
  "msg": [
   "On the file externals branch.", 
   "* subversion/libsvn_client/externals.c", 
   "(handle_external_item_change):", 
   "Follow up to r32677; remove an unused variable."
  ], 
  "revision_id": "872753"
 }, 
 {
  "author": "arfrever", 
  "date": "2008-08-24T18:09:23.328605Z", 
  "msg": [
   "On the 'svnpatch-diff' branch:", 
   "svn_client.h / libsvn_client:", 
   "Fix backward compatibility with Subversion 1.5.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_diff5, svn_client_diff_peg5): New functions.", 
   "(svn_client_diff4, svn_client_diff_peg4): Delete 'svnpatch_format' argument.", 
   "(svn_client_patch): Update @since tag.", 
   "* subversion/libsvn_client/diff.c", 
   "(svn_client_diff5, svn_client_diff_peg5): New functions.", 
   "(svn_client_diff4, svn_client_diff_peg4): Delete 'svnpatch_format' argument.", 
   "(svn_client_diff4): Wrap svn_client_diff5().", 
   "(svn_client_diff_peg4): Wrap svn_client_diff_peg5().", 
   "(svn_client_diff3): Update call to svn_client_diff4().", 
   "(svn_client_diff_peg3): Update call to svn_client_diff_peg4().", 
   "(display_prop_diffs, diff_cmd_baton, diff_wc_wc, diff_repos_repos,", 
   "diff_repos_wc, do_diff): Update comments.", 
   "(unsupported_diff_error): Update error message.", 
   "* subversion/svn/diff-cmd.c", 
   "(svn_cl__diff): Call svn_client_diff5() or svn_client_diff_peg5().", 
   "* notes/svnpatch: s/svn_client_diff4/svn_client_diff5/."
  ], 
  "revision_id": "872752"
 }, 
 {
  "author": "blair", 
  "date": "2008-08-24T08:16:39.526375Z", 
  "msg": [
   "On the file externals branch.", 
   "* subversion/libsvn_client/externals.c", 
   "(handle_external_item_change):", 
   "Move the code that checks the node kind of external from the code", 
   "branch that is used only for checkouts and exports into the main", 
   "line if the external will be checked out, exported or updated.", 
   "This effectively changes external update failures from late to", 
   "early.", 
   "* subversion/tests/cmdline/externals_tests.py", 
   "(externals_test_setup):", 
   "Now that an 'svn update' will ask the server for the type of", 
   "external it is updating to, if the external URL is deleted, then", 
   "the update will fail, so use a peg revision to ensure that the URL", 
   "can still be checked out."
  ], 
  "revision_id": "872751"
 }
]