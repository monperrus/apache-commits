[
 {
  "author": "fitz", 
  "date": "2005-03-15T07:12:20.089545Z", 
  "msg": [
   "Fix the post-lock and post-unlock hooks to read a list of PATHS from", 
   "STDIN.  Currently, we only pass one lock at a time, but the objective", 
   "here is to have the post-(un)lock hook API done now for 1.2 so that we", 
   "can rev our ra layers to send multiple locks in one request without", 
   "having to worry about the hooks.", 
   "* subversion/libsvn_repos/fs-wrap.c (svn_repos_fs_lock,", 
   "svn_repos_fs_attach_lock, svn_repos_fs_unlock): Pass array of paths", 
   "(which just contains one path for now) to svn_repos__hooks_post_lock", 
   "and svn_repos__hooks_post_unlock.", 
   "* subversion/libsvn_repos/hooks.c (array_join): New private helper", 
   "function.", 
   "(svn_repos__hooks_post_lock, svn_repos__hooks_post_unlock): Pass", 
   "list of paths to the hook on stdin instead of passing a single path", 
   "as an ARG.", 
   "* subversion/libsvn_repos/repos.c (create_hooks): Fix pre-lock and", 
   "pre-unlock hooks to read the list of paths from STDIN.", 
   "(create_hooks): Adjust post-lock and post-unlock hooks to handle", 
   "multiple paths passed on STDIN.", 
   "* subversion/libsvn_repos/repos.h (svn_repos__hooks_post_lock,", 
   "svn_repos__hooks_post_unlock): Tweak function prototypes to take", 
   "arrays of paths instead of a single path."
  ], 
  "revision_id": "853490"
 }, 
 {
  "author": "sunny256", 
  "date": "2005-03-15T02:20:17.639073Z", 
  "msg": [
   "Move doc/book/misc-docs/, doc/book/tools/ and doc/book/Makefile up one", 
   "directory level so they are more easily found.", 
   "* doc/book/Makefile", 
   "* doc/book/misc-docs", 
   "* doc/book/tools", 
   "Moved from here...", 
   "* doc/Makefile", 
   "* doc/misc-docs", 
   "* doc/tools", 
   "...to here."
  ], 
  "revision_id": "853489"
 }, 
 {
  "author": "sunny256", 
  "date": "2005-03-15T01:50:41.032682Z", 
  "msg": [
   "Clean up doc/book/Makefile after the svnbook was moved out of the", 
   "repository in r13125. It now builds misc-docs without errors.", 
   "* doc/book/Makefile", 
   "(Renamed variables):", 
   "(DOC_TOP): Was BOOK_TOP.", 
   "(DOC_HTML_XSLTPROC_OPTS): Was BOOK_HTML_XSLTPROC_OPTS.", 
   "(DOC_PDF_XSLTPROC_OPTS): Was BOOK_PDF_XSLTPROC_OPTS.", 
   "(DOC_PS_XSLTPROC_OPTS): Was BOOK_PS_XSLTPROC_OPTS.", 
   "(Deleted variables):", 
   "(BOOK_HTML_CHUNK_DIR, BOOK_DIR, BOOK_HTML_TARGET,", 
   "BOOK_HTML_CHUNK_TARGET, BOOK_PDF_TARGET, BOOK_PS_TARGET,", 
   "BOOK_FO_TARGET, BOOK_XML_SOURCE, BOOK_VERSION_SOURCE,", 
   "BOOK_ALL_SOURCE, BOOK_IMAGES, BOOK_INSTALL_DIR): Removed.", 
   "(install): Removed install-book target.", 
   "(all-html): Removed book-html and book-html-chunk targets.", 
   "(all-pdf): Removed book-pdf target.", 
   "(all-ps): Removed book-ps target.", 
   "(all-misc-docs): Removed book-ps target.", 
   "(clean): Removed book-clean target.", 
   "(all-book, install-book, $(BOOK_VERSION_SOURCE), book-version,", 
   "book-html, $(BOOK_HTML_TARGET), book-html-chunk,", 
   "$(BOOK_HTML_CHUNK_TARGET), book-pdf, book-ps, $(BOOK_PDF_TARGET),", 
   "$(BOOK_PS_TARGET), $(BOOK_INSTALL_DIR), install-book-html,", 
   "install-book-html-chunk, install-book-pdf, install-book-ps,", 
   "book-clean): Deleted these rules."
  ], 
  "revision_id": "853488"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-15T00:14:07.740616Z", 
  "msg": [
   "Locking branch: Rename svn_fs_get_lock_from_path() to just", 
   "svn_fs_get_lock(), and make similar tweaks to related helper", 
   "functions.  (This verbose API name is leftover from days when there", 
   "was more than one way to fetch a lock.)  Callers of all renamed", 
   "functions updated.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_get_lock): Was svn_fs_get_lock_from_path().", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(fs_vtable_t): Rename svn_fs_get_lock_from_path to svn_fs_get_lock.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_get_lock): Was svn_fs_get_lock_from_path().  Update calls to", 
   "vtable functions.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(fs_vtable): Rename svn_fs_fs__get_lock_from_path to svn_fs_fs__get_lock.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(fs_vtable): Rename svn_fs_base__get_lock_from_path to svn_fs_base__get_lock.", 
   "* subversion/libsvn_fs_base/lock.h", 
   "(svn_fs_base__get_lock): Was svn_fs_base__get_lock_from_path().", 
   "(svn_fs_base__get_lock_helper): Was svn_fs_base__get_lock_from_path_helper().", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(svn_fs_base__get_lock_helper): Was svn_fs_base__get_lock_from_path_helper().", 
   "(txn_body_get_lock): Was txn_body_get_lock_from_path().", 
   "(svn_fs_base__get_lock): Was svn_fs_base__get_lock_from_path().", 
   "* subversion/libsvn_fs_fs/lock.h", 
   "(svn_fs_fs__get_lock): Was svn_fs_fs__get_lock_from_path().", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(get_lock):  Was get_lock_from_path().", 
   "(get_lock_helper): Was get_lock_from_path_helper().", 
   "(svn_fs_fs__get_lock): Was svn_fs_fs__get_lock_from_path().", 
   "* subversion/svnadmin/main.c,", 
   "subversion/libsvn_ra_local/ra_plugin.c,", 
   "subversion/svnlook/main.c,", 
   "subversion/mod_dav_svn/lock.c,", 
   "subversion/tests/libsvn_fs/locks-test.c,", 
   "subversion/libsvn_repos/reporter.c,", 
   "subversion/svnserve/serve.c", 
   "Update callers of renamed functions."
  ], 
  "revision_id": "853487"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-14T23:52:52.432700Z", 
  "msg": [
   "Locking branch:  Make the svn_fs_get_locks() implementation streamy.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_get_locks): Take a new callback and baton, and no longer", 
   "return a hash.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(fs_vtable_t): Tweak get_locks member to match calling semantics of", 
   "svn_fs_get_locks().", 
   "(struct svn_fs_access_t): Fix a typo.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_get_locks): Take a new callback and baton, and no longer", 
   "return a hash.", 
   "* subversion/libsvn_fs_fs/lock.h", 
   "(svn_fs_fs__get_locks): Update parameters to match svn_fs_get_locks().", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(get_locks_under_path): No longer take a hash parameter.  Instead,", 
   "take a new callback and baton, and call those things for each lock", 
   "we find.  Also, update recursive call.", 
   "(svn_fs_fs__get_locks): Update parameters to match", 
   "svn_fs_get_locks(), and update call to get_locks_under_path().", 
   "(verify_locks): Remove.", 
   "(get_locks_callback): New.", 
   "(svn_fs_fs__allow_locked_operation): Update call to svn_fs_fs__get_locks().", 
   "* subversion/libsvn_fs_base/bdb/locks-table.h", 
   "(svn_fs_bdb__locks_get): Take a new callback and baton, and no", 
   "longer return a hash.", 
   "* subversion/libsvn_fs_base/bdb/locks-table.c", 
   "(svn_fs_bdb__locks_get): Take a new callback and baton, and no", 
   "longer return a hash.", 
   "* subversion/libsvn_fs_base/lock.h", 
   "(svn_fs_base__get_locks): Update parameters to match svn_fs_get_locks().", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(struct locks_get_args): Lose the hash, add a callback and baton.", 
   "(svn_fs_base__get_locks): Update parameters to match", 
   "svn_fs_get_locks(), and populate the new fields in struct locks_get_args.", 
   "(verify_locks): Remove.", 
   "(get_locks_callback): New.", 
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(get_locks_baton_t, get_locks_callback): New.", 
   "(svn_repos_fs_get_locks): Update call to svn_fs_get_locks(), and let", 
   "the callback implementation do the auth checkery.", 
   "* subversion/svnadmin/main.c", 
   "(subcommand_lslocks): Use svn_repos_fs_get_locks() with no", 
   "authstuffs instead of svn_fs_get_locks().", 
   "* subversion/svnserve/serve.c", 
   "(get_locks): Use svn_repos_fs_get_locks() with no authstuffs instead", 
   "of svn_fs_get_locks().", 
   "* subversion/tests/libsvn_fs/locks-test.c", 
   "(get_locks_counter_callback): New.", 
   "(get_locks): Update call to svn_fs_get_locks(), using a cheap", 
   "integer-incrementing callback for our verification."
  ], 
  "revision_id": "853486"
 }
]