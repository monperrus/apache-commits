[
 {
  "author": "tobrien", 
  "date": "2003-05-21T15:10:51.000000Z", 
  "msg": [
   "project.properties changes.  1. The build will not fail on a failed", 
   "unit test, 2. The date/time and version are included in the xdoc", 
   "transformation, 3. JUnit is now forker, and 4. We use checkstyle.properties", 
   "to customize the behavior of Checkstyle."
  ], 
  "revision_id": "140849"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-21T14:21:15.000000Z", 
  "msg": [
   "Commited patch for issue 20112 from Phil Steitz.", 
   "EmpiricalDistribution -- represents an empirical probability distribution and", 
   "supports generation of data values that are \"like\" values in an input file", 
   "without making any assumptions about the functional form of the probability", 
   "distribution that the data come from.   This is useful in simulation", 
   "applications where historical data about component performance are", 
   "available but do not follow standard distributions (or any application that", 
   "requires random data generation from an empirical distribution). Also", 
   "generates data for grouped frequency histograms based on the input file.", 
   "ValueServer -- a wrapper for RandomData and EmpiricalDistribution that", 
   "generates values in each of the following modes:", 
   "* DIGEST_MODE -- uses an empirical distribution", 
   "* REPLAY_MODE -- replays data from an input file", 
   "* UNIFORM_MODE -- generates uniformly distributed random values", 
   "* EXPONENTIAL_MODE -- generates exponentially distributed random", 
   "values", 
   "* GAUSSIAN_MODE -- generates Gaussian distributed random values", 
   "* CONSTANT_MODE -- returns the same value every time."
  ], 
  "revision_id": "140848"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-21T06:46:26.000000Z", 
  "msg": [
   "Updated class javadoc for ContractableDoubleArray"
  ], 
  "revision_id": "140847"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-21T06:24:30.000000Z", 
  "msg": [
   "Added more substantial class javadoc to ExpandableDoubleArray"
  ], 
  "revision_id": "140846"
 }, 
 {
  "author": "tobrien", 
  "date": "2003-05-21T05:48:25.000000Z", 
  "msg": [
   "Added javadoc to FixedDA and altered exceptions in DoubleArray", 
   "* One should be able to use a DoubleArray in a similar way to a", 
   "regular double[], to this effect methods for accessing element", 
   "values will no longer throw NoSuchElementExceptions when an", 
   "index is outside of the element set.  These method all throw", 
   "ArrayIndexOutOfBoundException if a bad index is supplied.", 
   "* Filled out javadoc in FixedDoubleArray."
  ], 
  "revision_id": "140845"
 }
]