[
 {
  "author": "peterreilly", 
  "date": "2007-08-20T16:34:52.947385Z", 
  "msg": [
   "sync"
  ], 
  "revision_id": "567745"
 }, 
 {
  "author": "peterreilly", 
  "date": "2007-08-20T16:34:24.909827Z", 
  "msg": [
   "fix for bugzilla 43121 - war task inconsistent bahaviour"
  ], 
  "revision_id": "567744"
 }, 
 {
  "author": "jonesde", 
  "date": "2007-08-20T16:32:52.874407Z", 
  "msg": [
   "Added descriptions for the isFrozen and inGoodStanding indicators"
  ], 
  "revision_id": "567743"
 }, 
 {
  "author": "prasad", 
  "date": "2007-08-20T16:24:54.896676Z", 
  "msg": [
   "* removed dependency on tagged version of openjpa-persistence"
  ], 
  "revision_id": "567742"
 }, 
 {
  "author": "mamta", 
  "date": "2007-08-20T16:23:58.668534Z", 
  "msg": [
   "Merging revision 567735 from main into 10.3 codeline. The commit comments in main were as follows", 
   "DERBY-2961", 
   "This commit fixes the ASSERT failure thrown by the SELECT statement in following query", 
   "CREATE TABLE T_MAIN1 (ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY, V XML);", 
   "INSERT INTO T_MAIN1(V) VALUES NULL;", 
   "SELECT ID, XMLSERIALIZE(V AS CLOB), XMLSERIALIZE(V AS CLOB) FROM T_MAIN1 ORDER BY 1;", 
   "The SELECT statement was resulting in Assert Failure because the StringDataValue generated for V AS CLOB was not taking collation type into consideration ie it was always generating collation insensitive StringDataValue. I have fixed that problem by passing the current compilation schema's collation type to SqlXmlExecutor which then will get used in determining whether for instance we should generate SQLChar vs CollatorSQLChar. This collation information is required only for character string types."
  ], 
  "revision_id": "567741"
 }
]