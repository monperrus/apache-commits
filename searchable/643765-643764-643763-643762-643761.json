[
 {
  "author": "bommel", 
  "date": "2008-04-02T07:22:51.215362Z", 
  "msg": [
   "(TOBAGO-627) JNDI-Problem on Websphere Application Server"
  ], 
  "revision_id": "643765"
 }, 
 {
  "author": "ddas", 
  "date": "2008-04-02T07:20:57.671610Z", 
  "msg": [
   "HADOOP-3093. Adds Configuration.getStrings(name, default-value) and the corresponding setStrings. Contributed by Amareshwari Sriramadasu."
  ], 
  "revision_id": "643764"
 }, 
 {
  "author": "gseitz", 
  "date": "2008-04-02T07:13:39.564636Z", 
  "msg": [
   "WICKET-1468: set downloadSources=true as default"
  ], 
  "revision_id": "643763"
 }, 
 {
  "author": "dblevins", 
  "date": "2008-04-02T07:02:23.054940Z", 
  "msg": [
   "Check for a null xaResource before attempting to wrap"
  ], 
  "revision_id": "643762"
 }, 
 {
  "author": "jimk", 
  "date": "2008-04-02T06:58:26.314456Z", 
  "msg": [
   "HBASE-469   Streamline HStore startup and compactions", 
   "HMerge, HRegionServer", 
   "- changes that reflect changes to HRegion, CompactSplitThread and Flusher methods", 
   "ServerManager", 
   "- Return zero length array to region server if it is exiting or quiesced and Master is not yet ready to shut down.", 
   "QueueEntry", 
   "- removed. no longer used.", 
   "CompactSplitThread", 
   "- make compactionQueue a queue of HRegion.", 
   "- Add Set<HRegion> so we can quickly determine if a region is in the queue. BlockingQueue.contains() does a linear scan of the queue.", 
   "- Add a lock and interruptPolitely methods so that compactions/splits in progress are not interrupted.", 
   "- Don't add a region to the queue if it is already present.", 
   "Flusher", 
   "- change queue from DelayQueue to BlockingQueue, with HRegion entries instead of QueueEntry.", 
   "- Add Set<HRegion> to quickly determine if a region is already in the queue to avoid linear scan of BlockingQueue.contains().", 
   "- Only put regions in the queue for optional cache flush if the last time they were flushed is older than now - optionalFlushInterval.", 
   "- Only add regions to the queue if it is not already present.", 
   "HRegion", 
   "- don't request a cache flush if one has already been requested.", 
   "- Add setLastFlushTime so flusher can set it once it has queued an optional flush.", 
   "- Replace largestHStore with getLargestHStoreSize: returns long instead of HStoreSize object.", 
   "- Add midKey as parameter to splitRegion.", 
   "- Reorder start of splitRegion so it doesn't do any work before validating parameters.", 
   "- Remove needsSplit and compactIfNeeded - no longer needed.", 
   "- compactStores now returns midKey if split is needed.", 
   "- snapshotMemcaches now sets flushRequested to false and sets lastFlushTime to now.", 
   "- update does not request a cache flush if one has already been requested.", 
   "- Override equals and hashCode so HRegions can be stored in a HashSet.", 
   "HStore", 
   "- loadHStoreFiles now computes max sequence id and the initial size of the store.", 
   "- Add getter for family.", 
   "- internalCacheFlush updates store size, and logs both size of cache flush and resulting map file size (with debug logging enabled).", 
   "- Remove needsCompaction and hasReferences - no longer needed.", 
   "- compact() returns midKey if store needs to be split.", 
   "- compact() does all checking before actually starting a compaction.", 
   "- If store size is greater than desiredMaxFileSize, compact returns the midKey for the store regardless of whether a compaction was actually done.", 
   "- Added more synchronization in completeCompaction while iterating over storeFiles.", 
   "- completeCompaction computes new store size.", 
   "- New method checkSplit replaces method size. Returns midKey if store needs to be split and can be split.", 
   "HStoreSize", 
   "- removed. No longer needed.", 
   "HBaseTestCase", 
   "- only set fs if it has not already been set by a subclass.", 
   "TestTableIndex, TestTableMapReduce", 
   "- call FSUtil.deleteFully to clean up cruft left in local fs, by MapReduce"
  ], 
  "revision_id": "643761"
 }
]