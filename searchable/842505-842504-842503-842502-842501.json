[
 {
  "author": "cmpilato", 
  "date": "2002-07-08T15:22:43.319184Z", 
  "msg": [
   "* tools/cgi/tweak-log.cgi", 
   "(doInitialForm): Don't allow the display of previous logs to try", 
   "to examine revisions older than 1.", 
   "(doFetchLog): Don't try to quality where the history file lives,", 
   "just state the facts."
  ], 
  "revision_id": "842505"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-07-08T14:58:19.878795Z", 
  "msg": [
   "* build.conf", 
   "(test-scripts): Remove reference to target-test.sh.", 
   "* subversion/libsvn_fs/dag.c", 
   "(delete_entry): SVN_ERR_FS_DIR_NOT_EMPTY is now SVN_ERR_DIR_NOT_EMPTY.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(delete_mutables): SVN_ERR_FS_DIR_NOT_EMPTY is now SVN_ERR_DIR_NOT_EMPTY.", 
   "(delete): same."
  ], 
  "revision_id": "842504"
 }, 
 {
  "author": "philip", 
  "date": "2002-07-08T10:58:06.310576Z", 
  "msg": [
   "* subversion/libsvn_subr/utf.c (check_non_ascii): Correct bit test."
  ], 
  "revision_id": "842503"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-07-08T06:18:58.369815Z", 
  "msg": [
   "Continuing work on issue #494.", 
   "Apply the remainder of Marcus Comstedt's `svn_utf_2366_libs.patch',", 
   "with some tweaks.  This is the \"separate commit\" referred to in", 
   "revision 2424.  Marcus -- and anyone else -- please review :-).", 
   "Note that this leaves the code in a technically broken state until his", 
   "svn_utf_2366_client.patch is applied, which I'll do in an upcoming", 
   "commit.  That patch makes the command line client ensure that it's", 
   "passing UTF-8 paths down into the libraries, which are now expecting", 
   "that encoding.", 
   "It's only \"technically\" broken because in practice everything works", 
   "fine, and make check still passes, as long as you use ascii filenames", 
   "and/or don't pass the `--enable-utf8' flag to configure.", 
   "* subversion/libsvn_subr/io.c: Include svn_utf.h.", 
   "(svn_io_check_path, svn_io_open_unique_file, svn_io_copy_file,", 
   "svn_io_append_file, svn_io_copy_dir_recursively,", 
   "svn_io_make_dir_recursively, svn_io_file_affected_time,", 
   "svn_io_filesizes_different_p, svn_io_file_checksum,", 
   "svn_io_set_file_read_only, svn_io_set_file_read_write,", 
   "svn_io_set_file_executable, svn_string_from_file,", 
   "svn_io_remove_file, svn_io_run_cmd, svn_io_run_diff,", 
   "svn_io_run_diff3, svn_io_detect_mimetype, svn_io_file_open,", 
   "svn_io_stat, svn_io_file_rename, svn_io_dir_make, svn_io_dir_open,", 
   "svn_io_dir_remove_nonrecursive, svn_io_dir_read, svn_io_file_printf,", 
   "svn_io_dir_empty): Convert incoming/outgoing data from/to UTF-8 as", 
   "appropriate.  Also, consistify error messages.", 
   "(svn_io_remove_dir, svn_io_get_dirents): Same, plus check for \".\"", 
   "and \"..\" more efficiently.", 
   "(read_handler_apr, write_handler_apr, read_handler_stdio,", 
   "write_handler_stdio): Consistify error messages.", 
   "(svn_string_from_aprfile): Convert error message to UTF-8 first.", 
   "(apr_dir_is_empty): Check for \".\" and \"..\" more efficiently.", 
   "* subversion/include/svn_io.h", 
   "(svn_io_check_path, svn_io_open_unique_file, svn_io_copy_file,", 
   "svn_io_copy_dir_recursively, svn_io_make_dir_recursively,", 
   "svn_io_dir_empty, svn_io_append_file, svn_io_set_file_read_only,", 
   "svn_io_set_file_read_write, svn_io_set_file_executable,", 
   "svn_io_file_affected_time, svn_io_filesizes_different_p,", 
   "svn_io_file_checksum, svn_string_from_file, svn_io_remove_file,", 
   "svn_io_remove_dir, svn_io_get_dirents, svn_io_run_cmd,", 
   "svn_io_run_diff, svn_io_run_diff3, svn_io_detect_mimetype,", 
   "svn_io_file_open, svn_io_stat, svn_io_file_rename, svn_io_dir_make,", 
   "svn_io_dir_open, svn_io_dir_remove_nonrecursive, svn_io_dir_read,", 
   "svn_io_file_printf): Document UTF-8 conventions.", 
   "* subversion/libsvn_client/add.c", 
   "(add_dir_recursive): Use loop subpool for svn_io_dir_read.  Also,", 
   "check for \".\" and \"..\" more efficiently.", 
   "* subversion/libsvn_client/commit.c", 
   "(import_dir): Use loop subpool for svn_io_dir_read.", 
   "* subversion/libsvn_client/repos_diff.c: Include svn_io.h and", 
   "svn_utf.h.", 
   "(struct temp_file_cleanup_s): Note that path is not utf8-encoded.", 
   "(temp_file_plain_cleanup_handler): Add similar note.", 
   "(temp_file_cleanup_register): Convert path from UTF-8 to native.", 
   "* subversion/libsvn_fs/fs.c: Include svn_path.h and svn_utf.h.", 
   "(svn_fs_create_berkeley, svn_fs_open_berkeley,", 
   "svn_fs_berkeley_recover, svn_fs_delete_berkeley): Convert paths", 
   "from UTF-8 to native.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_create_berkeley, svn_fs_open_berkeley,", 
   "svn_fs_berkeley_recover, svn_fs_delete_berkeley,", 
   "svn_fs_berkeley_path): Document that paths are UTF-8.", 
   "* subversion/libsvn_subr/target.c: Include svn_utf.h.", 
   "(svn_path_get_absolute): Convert path from UTF-8 to native before", 
   "calling apr_filepath_merge, then convert result back to UTF-8.", 
   "(svn_path_split_if_file): Formatting fixes only.", 
   "* subversion/libsvn_subr/svn_error.c: Include svn_utf.h.", 
   "(svn_handle_error, svn_handle_warning): Convert text of error", 
   "message from UTF-8 to native before printing.", 
   "* subversion/libsvn_wc/props.c: Include svn_utf.h.", 
   "(append_prop_conflict): Convert property conflict description text", 
   "from UTF-8 to native before writing to file.", 
   "* subversion/libsvn_client/auth.c: Include svn_utf.h", 
   "(get_username): Convert username to UTF-8 before returning it.", 
   "* subversion/libsvn_client/client.h,", 
   "subversion/libsvn_client/commit_util.c", 
   "(svn_client__condense_commit_items): Take base_url as const.", 
   "* subversion/libsvn_client/copy.c", 
   "(wc_to_repos_copy): Declare base_url as const."
  ], 
  "revision_id": "842502"
 }, 
 {
  "author": "blair", 
  "date": "2002-07-08T02:05:23.665281Z", 
  "msg": [
   "* tools/hook-scripts/commit-email.pl:", 
   "(new_project): Return a new hash data structure for a new empty", 
   "project that matches any modifications to the repository.", 
   "(main):", 
   "Remove $blank_settings.", 
   "No longer use the Storable module and instead of using", 
   "Storable::dclone to do a deep clone of $blank_settings, use", 
   "&new_project to create a new hash.", 
   "Since the path to svnlook depends upon the local installation", 
   "preferences, check that the required programs exist to insure", 
   "that the administrator has set up the script properly."
  ], 
  "revision_id": "842501"
 }
]