[
 {
  "author": "yurize", 
  "date": "2012-12-16T22:29:48.671448Z", 
  "msg": [
   "Removes empty file."
  ], 
  "revision_id": "1422703"
 }, 
 {
  "author": "robweir", 
  "date": "2012-12-16T22:25:43.438795Z", 
  "msg": [
   "CMS commit to ooo-site by robweir"
  ], 
  "revision_id": "1422702"
 }, 
 {
  "author": "ate", 
  "date": "2012-12-16T22:15:14.163562Z", 
  "msg": [
   "PORTALS-23: Move portals site deployment to svnpubsub, jetspeed-2.1.3 multiproject batches"
  ], 
  "revision_id": "1422701"
 }, 
 {
  "author": "stefan2", 
  "date": "2012-12-16T21:59:56.866070Z", 
  "msg": [
   "Improve the workaround for issue #4031: since get_node_revision_body", 
   "will not be called for the root node in empty revisions, those would", 
   "still have the \"is-fresh-txn-root\" flag set in the rev file.", 
   "Therefore, simply reset all these flags unconditionally just before", 
   "writing the data to the rev file.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(get_node_revision_body): remove workaround here", 
   "(write_final_rev): and place it here; execute it unconditionally"
  ], 
  "revision_id": "1422700"
 }, 
 {
  "author": "stefan2", 
  "date": "2012-12-16T21:56:05.037752Z", 
  "msg": [
   "Implement the low-level part of the cache access synchronization mechanism", 
   "and declare a SVN-private API for it.", 
   "* subversion/include/private/svn_slot_lock.h", 
   "(): new header", 
   "(svn__slot_lock_token_t,", 
   "svn__slot_lock_t): declare new data types", 
   "(svn__slot_lock_size,", 
   "svn__slot_lock_initialize,", 
   "svn__slot_lock_create,", 
   "svn__slot_lock_try_get_shared_lock,", 
   "svn__slot_lock_get_shared_lock,", 
   "svn__slot_lock_release_shared_lock,", 
   "svn__slot_lock_try_get_exclusive_lock,", 
   "svn__slot_lock_get_exclusive_lock,", 
   "svn__slot_lock_release_exclusive_lock): declare new API", 
   "* subversion/libsvn_subr/slot_lock.c", 
   "(): new source file", 
   "(NO_TOKEN,", 
   "NO_LOCK,", 
   "MAX_BUSY_RETRIES): new constants", 
   "(svn__slot_lock_t): define data structure", 
   "(retry_policy): new utility function", 
   "(svn__slot_lock_size,", 
   "svn__slot_lock_initialize,", 
   "svn__slot_lock_create,", 
   "svn__slot_lock_try_get_shared_lock,", 
   "svn__slot_lock_get_shared_lock,", 
   "svn__slot_lock_release_shared_lock,", 
   "svn__slot_lock_try_get_exclusive_lock,", 
   "svn__slot_lock_get_exclusive_lock,", 
   "svn__slot_lock_release_exclusive_lock): implement new API"
  ], 
  "revision_id": "1422699"
 }
]