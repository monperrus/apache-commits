[
 {
  "author": "bnicholes", 
  "date": "2003-09-30T17:00:36.000000Z", 
  "msg": [
   "Go ahead and sync up the API to the prototype since Codewarrior on NetWare", 
   "won't compile with the mismatch"
  ], 
  "revision_id": "64669"
 }, 
 {
  "author": "jorton", 
  "date": "2003-09-29T19:38:35.000000Z", 
  "msg": [
   "Add comments for the sockaddr_{in6,storage} detection macros."
  ], 
  "revision_id": "64668"
 }, 
 {
  "author": "jorton", 
  "date": "2003-09-29T19:08:15.000000Z", 
  "msg": [
   "Revert rev1.38 on 0.9 branch pending further testing on HEAD;", 
   "rev1.38 was:", 
   "Use AI_ADDRCONFIG flag by default, where available.", 
   "* sockaddr.c (call_resolver): For lookups of AF_UNSPEC addresses, set", 
   "the AI_ADDRCONFIG flag; retry without the flag if getaddrinfo returns", 
   "EAI_BADFLAGS."
  ], 
  "revision_id": "64667"
 }, 
 {
  "author": "jorton", 
  "date": "2003-09-29T16:10:08.000000Z", 
  "msg": [
   "For platforms which have \"struct sockaddr_stroage\", allow", 
   "apr_sockaddr_t to be extended in the future whilst retaining", 
   "binary compatibility across builds with and without IPv6", 
   "enabled.", 
   "* build/apr_network.m4 (APR_CHECK_SOCKADDR_STORAGE): New", 
   "macro.", 
   "* configure.in: Use it.", 
   "* include/apr.h.in: Define APR_HAVE_SA_STORAGE.", 
   "* include/apr_network_io.h: Add a \"struct sockaddr_storage\"", 
   "field to the 'sa' union in apr_sockaddr_t."
  ], 
  "revision_id": "64666"
 }, 
 {
  "author": "bnicholes", 
  "date": "2003-09-29T16:10:00.000000Z", 
  "msg": [
   "Fix up the apr_atomic* APIs for NETWARE to conform to the latest changes"
  ], 
  "revision_id": "64665"
 }
]