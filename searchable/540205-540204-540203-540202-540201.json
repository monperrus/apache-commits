[
 {
  "author": "agilliland", 
  "date": "2007-05-21T17:23:19.710830Z", 
  "msg": [
   "struts2 validation for a number of actions."
  ], 
  "revision_id": "540205"
 }, 
 {
  "author": "bommel", 
  "date": "2007-05-21T17:06:00.303342Z", 
  "msg": [
   "fixed style error"
  ], 
  "revision_id": "540204"
 }, 
 {
  "author": "bravi", 
  "date": "2007-05-21T17:03:31.743392Z", 
  "msg": [
   "[YOKO-366] - Updates to the perf branch (more types support)."
  ], 
  "revision_id": "540203"
 }, 
 {
  "author": "djd", 
  "date": "2007-05-21T16:57:50.837668Z", 
  "msg": [
   "Minor cleanup in the types packages. Make the collation specific classes package-private as", 
   "there is no need to expose the classes outside the package. Cleanup some comments."
  ], 
  "revision_id": "540202"
 }, 
 {
  "author": "mamta", 
  "date": "2007-05-21T16:44:56.922304Z", 
  "msg": [
   "DERBY-2599", 
   "Commiting patch attached to DERBY2599_Set_collation_for_aggregates_v1_diff.txt which does the job of setting the correct collation type and", 
   "derivation for aggregates. As per SQL standard, if the operands of the aggregate methods are string operands and they do not all have the", 
   "same collation derivaiton and type on them, then the resultant string operand will have collation derivaiton of NONE. One thing that is", 
   "missing is as per SQL spec, in a comparison operator, as far as there is one operand with non-NONE collation derivation, the comparison", 
   "should work. I do not have that part working yet. If the two operands of the comparison operator do not have the same collation, the", 
   "comparison will fail. Also, if both the sides of the comparison operator have NONE collation, the current DERBY10.3 code will not catch", 
   "that. Both of these issues can go as a subsequent patch.", 
   "The aggregate methods that are covered by the patch are COALESCE, CONCATENATE, NULLIF, CASE"
  ], 
  "revision_id": "540201"
 }
]