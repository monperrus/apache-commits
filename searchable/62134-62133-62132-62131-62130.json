[
 {
  "author": "gstein", 
  "date": "2001-08-08T19:11:25.000000Z", 
  "msg": [
   "Don't use the name \"socket\" because certain GCC settings warn about", 
   "shadowing the global function socket()"
  ], 
  "revision_id": "62134"
 }, 
 {
  "author": "", 
  "date": "2001-08-08T05:54:41.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create tag", 
   "'APACHE_2_0_23'."
  ], 
  "revision_id": "62133"
 }, 
 {
  "author": "jwoolley", 
  "date": "2001-08-08T05:54:41.000000Z", 
  "msg": [
   "Fix a segfault on Win32 when hostname resolution fails.  We were looking", 
   "up the error but forgot to actually return with that error number.", 
   "Submitted by:\tIan Holsman <ianh@cnet.com>"
  ], 
  "revision_id": "62132"
 }, 
 {
  "author": "jwoolley", 
  "date": "2001-08-08T05:48:58.000000Z", 
  "msg": [
   "Clean up two warnings:", 
   "Warning #1 may or may not have ever existed (my mind is a blur), but this", 
   "change seems to be the most sensible way to go anyhow.  The len parameter", 
   "to getsockopt() seems to most want to be an apr_socklen_t in order to get", 
   "along with all platforms.", 
   "Warning #2 I definitely saw on Solaris 2.6, which was that parm 4 to", 
   "getsockopt() was an incompatible pointer type.  That's funky, because we", 
   "were passing in an int* to a function that generally expects a void*.  Right?", 
   "Wrong, not in this case.  Solaris 2.6 ifndef _XPG4_2 (and possibly Win32", 
   "as well according to msdn.microsoft.com) expect a char*!  That's wacky.", 
   "Anyway, casting the int* to a char* makes these platforms happy (ugly though", 
   "it is), and the sane platforms that just take a void* could care less", 
   "either way."
  ], 
  "revision_id": "62131"
 }, 
 {
  "author": "trawick", 
  "date": "2001-08-08T00:30:17.000000Z", 
  "msg": [
   "get sockets.c to compile and fix a bug in the error path", 
   "from getsockopt()", 
   "(not tested... 2 yr old is begging for a walk :) )"
  ], 
  "revision_id": "62130"
 }
]