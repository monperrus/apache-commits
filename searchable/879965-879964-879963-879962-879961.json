[
 {
  "author": "rhuijben", 
  "date": "2009-10-09T09:50:15.886497Z", 
  "msg": [
   "Fix my update conflicts (before r39890) properly...", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(commit_node): Fix scratch_pool references."
  ], 
  "revision_id": "879965"
 }, 
 {
  "author": "rhuijben", 
  "date": "2009-10-09T09:32:21.840580Z", 
  "msg": [
   "Add an optional scratch pool to the sqlite transaction callback", 
   "infrastructure and an optional result pool to svn_sqlite__column_blob().", 
   "This makes this last call similar to svn_sqlite__column_text(), and", 
   "hopefully helps avoiding passing dangling pointers to released data.", 
   "This patch also removes scratch pools from the passed batons and", 
   "in two cases an entire baton.", 
   "* subversion/include/private/svn_sqlite.h", 
   "(svn_sqlite__column_blob): Add result_pool argument.", 
   "(svn_sqlite__transaction_callback_t,", 
   "svn_sqlite__with_transaction): Add scratch_pool argument.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(commit_sqlite_txn_baton): Remove baton definition.", 
   "(commit_sqlite_txn_callback): Pass baton and scratch_pool.", 
   "(commit_body_rep_cache): Pass handed baton and scratch_pool.", 
   "* subversion/libsvn_subr/sqlite.c", 
   "(svn_sqlite__column_blob): Copy result if we have a result pool.", 
   "(svn_sqlite__column_properties): Pass result pool or the skel might", 
   "point to released data.", 
   "(upgrade_baton): Remove pool.", 
   "(upgrade_format): Update arguments.", 
   "(check_format): Update caller.", 
   "(svn_sqlite__with_transaction): Pass scratch_pool to callback.", 
   "* subversion/libsvn_wc/entries.c", 
   "(entries_write_baton): Remove scratch_pool.", 
   "(entries_write_new_cb): Add scratch_pool argument.", 
   "(svn_wc__entries_write_new): Update caller.", 
   "* subversion/libsvn_wc/upgrade.c", 
   "(bump15_baton): Remove baton.", 
   "(bump_database_to_15): Update prototype.", 
   "(bump_to_15): Update caller.", 
   "* subversion/libsvn_wc/wc_db.c", 
   "(insert_base_baton_t): Remove pool.", 
   "(insert_base_node): Add pool argument.", 
   "(svn_wc__db_init,", 
   "svn_wc__db_base_add_directory,", 
   "svn_wc__db_base_add_file,", 
   "svn_wc__db_base_add_symlink,", 
   "svn_wc__db_base_add_absent_node,", 
   "svn_wc__db_temp_base_add_subdir): Update callers.", 
   "(set_changelist_baton): Remove pool.", 
   "(set_changelist_txn): Update arguments.", 
   "(svn_wc__db_op_set_changelist): Update caller.", 
   "(set_tc_baton): Remove pool.", 
   "(set_tc_txn): Update arguments.", 
   "(svn_wc__db_op_set_tree_conflict): Update caller.", 
   "(relocate_baton): Remove pool.", 
   "(relocate_txn): Update arguments.", 
   "(svn_wc__db_global_relocate): Update caller.", 
   "(commit_baton): Remove pool.", 
   "(commit_node): Update arguments and set result pool for", 
   "call to svn_sqlite__column_blob().", 
   "(svn_wc__db_global_commit): Update caller.", 
   "(svn_wc__db_wq_fetch): Pass result pool to svn_sqlite__column_blob"
  ], 
  "revision_id": "879964"
 }, 
 {
  "author": "danielsh", 
  "date": "2009-10-09T08:51:13.689728Z", 
  "msg": [
   "In the Windows build and tests, be more robust when invoking Python scripts", 
   "by using the full path to the Python interpreter.  (This avoids assuming", 
   "that 'python foo.py' or 'foo.py' will run the script.)", 
   "Thanks to Bert and gstein.", 
   "* build/generator/svn_config.vcproj.ezt", 
   "(sql):  Add the Python interpreter's path to the command.", 
   "* build/generator/gen_vcnet_vcproj.py", 
   "(Generator.write):  Pass the interpreter's pass to the template.", 
   "* subversion/tests/cmdline/svneditor.bat:", 
   "Run svneditor.py using the python in %SVN_TEST_PYTHON%.", 
   "* subversion/tests/cmdline/svntest/main.py", 
   "(use_editor):", 
   "Set SVN_TEST_PYTHON."
  ], 
  "revision_id": "879963"
 }, 
 {
  "author": "gstein", 
  "date": "2009-10-09T05:52:19.662080Z", 
  "msg": [
   "Continued evolution of the commit logic in wc_db.", 
   "Add a KEEP_CHANGELIST parameter, corresponding to the command-line switch", 
   "to keep a node assigned to a changelist post-commit. After the update of", 
   "the BASE_NDOE table is done, then whack the WORKING_NODE and manage the", 
   "ACTUAL_NODE rows appropriately.", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(struct commit_baton): add 'keep_changelist' member", 
   "(commit_node): gather the changelist from ACTUAL_NODE for later munging", 
   "of the row. after the BASE_NODE is updated, toss the other tables'", 
   "rows. tweak code to allow NEW_DATE==0.", 
   "(svn_wc__db_global_commit): take a new KEEP_CHANGELIST parameter, and", 
   "pass it along to commit_node().", 
   "* subversion/libsvn_wc/wc_db.h:", 
   "(svn_wc__db_global_commit): update docstring some more, and add a", 
   "KEEP_CHANGELIST parameter.", 
   "* subversion/libsvn_wc/wc-queries.sql:", 
   "(STMT_RESET_ACTUAL_WITH_CHANGELIST): new statement"
  ], 
  "revision_id": "879962"
 }, 
 {
  "author": "bhuvan", 
  "date": "2009-10-09T05:43:35.607324Z", 
  "msg": [
   "This fix adds the ability to print the time taken to execute each test.", 
   "The time taken is printed in the log file, if specified; otherwise in", 
   "the stdout interface.", 
   "* build/run_tests.py", 
   "import time", 
   "(TestHarness._run_test): Print the time taken by each test using", 
   "following format:", 
   "ELAPSED: test_name HH:MM:SS", 
   "Reviewed by: julianfoad", 
   "brane"
  ], 
  "revision_id": "879961"
 }
]