[
 {
  "author": "wrowe", 
  "date": "2003-10-14T23:47:29.000000Z", 
  "msg": [
   "Implement apr_socket_atmark, similar to socket_atmark except 1) it's", 
   "portable, and 2) the return value is passed by a boolean (int) ref,", 
   "with errors returned as an apr_status_t.", 
   "The question is, how portable?  sys/sockio.h seems sufficent for me", 
   "on hp/ux, solaris, linux, osx, and this works on Win32.  The Netware", 
   "and OS2 implementations are best guesses.", 
   "Submitted by: Jim Jagielski and William Rowe"
  ], 
  "revision_id": "64684"
 }, 
 {
  "author": "jorton", 
  "date": "2003-10-05T10:48:26.000000Z", 
  "msg": [
   "* test/testfileinfo.c (finfo_equal, test_stat_eq_finfo): Avoid", 
   "triggering a gcc 2.9x structure passing bug on IA64 Linux by", 
   "passing pointers to structures"
  ], 
  "revision_id": "64683"
 }, 
 {
  "author": "jorton", 
  "date": "2003-10-04T11:56:50.000000Z", 
  "msg": [
   "* test/testrand.c (rand_exists): Don't ask for so much random", 
   "data."
  ], 
  "revision_id": "64682"
 }, 
 {
  "author": "jorton", 
  "date": "2003-10-04T11:46:24.000000Z", 
  "msg": [
   "* include/arch/unix/apr_arch_thread_rwlock.h: Store a pthread_rwlock_t", 
   "object in struct apr_thread_rwlock_t rather than a pointer to one.", 
   "* locks/unix/thread_rwlock.c (apr_thread_rwlock_create): Adjust use of", 
   "->rwlock, simplify to a single palloc call, and remove ENOMEM handling.", 
   "(apr_thread_rwlock_rdlock, apr_thread_rwlock_tryrdlock,", 
   "apr_thread_rwlock_wrlock, apr_thread_rwlock_trywrlock,", 
   "apr_thread_rwlock_unlock): Adjust use of ->rwlock appropriately."
  ], 
  "revision_id": "64681"
 }, 
 {
  "author": "jorton", 
  "date": "2003-10-03T15:30:57.000000Z", 
  "msg": [
   "* locks/unix/thread_rwlock.c (apr_thread_rwlock_destroy): Simplify", 
   "to use apr_pool_cleanup_run."
  ], 
  "revision_id": "64680"
 }
]