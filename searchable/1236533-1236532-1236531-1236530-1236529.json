[
 {
  "author": "jpeach", 
  "date": "2012-01-27T05:27:31.723789Z", 
  "msg": [
   "TS-1083: Compile time detection of NextProtocolNegotiation."
  ], 
  "revision_id": "1236533"
 }, 
 {
  "author": "eric", 
  "date": "2012-01-27T05:26:09.057332Z", 
  "msg": [
   "Remove badly committed svn:externals"
  ], 
  "revision_id": "1236532"
 }, 
 {
  "author": "briang", 
  "date": "2012-01-27T05:18:48.815736Z", 
  "msg": [
   "Added new proposasls for backport"
  ], 
  "revision_id": "1236531"
 }, 
 {
  "author": "eric", 
  "date": "2012-01-27T05:11:40.894925Z", 
  "msg": [
   "Add mangesieve to externals"
  ], 
  "revision_id": "1236530"
 }, 
 {
  "author": "jfarrell", 
  "date": "2012-01-27T04:48:26.701020Z", 
  "msg": [
   "THRIFT-1394:Treatment of optional fields is not consistent between C++ and Java", 
   "Client: cpp", 
   "Patch: Diwaker Gupta", 
   "In CPP, all optional fields are guarded by the isset helper struct. On Java, however, the generated code takes advantage of nullable types: for containers, structs, exceptions, enums, and, notably, strings, the generator elides explicit use of an \"isset\" bit vector and instead emits checks of the form \"field null\". This leads to varying behavior between the two languages: an optional string field with a default value will have {{isset[fieldid]}} false on C, but the equivalent test in Java will be true."
  ], 
  "revision_id": "1236529"
 }
]