[
 {
  "author": "luc", 
  "date": "2014-02-18T14:33:57.036986Z", 
  "msg": [
   "Removed interfaces in the fluent API that do not add any value."
  ], 
  "revision_id": "1569363"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:33:49.764068Z", 
  "msg": [
   "Fixed checkstyle and compiler warnings."
  ], 
  "revision_id": "1569362"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:33:41.699857Z", 
  "msg": [
   "Expand Evaluation tests, use weighted values.", 
   "Added more test cases to EvaluationTest to test the other methods of", 
   "DenseWeightedEvaluation/UnweightedEvaluation.", 
   "Fixed a bug in DenseWeightedEvaluation.computeValue() where the the", 
   "weights were not applied to the return value."
  ], 
  "revision_id": "1569361"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:33:33.542005Z", 
  "msg": [
   "Qualify Evaluation in interfaces.", 
   "Use LeastSquaresProblem.Evaluation in the public interfaces for", 
   "readability."
  ], 
  "revision_id": "1569360"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-18T14:33:28.033917Z", 
  "msg": [
   "JUnit directly executes least squares tests", 
   "Previously JUnit would make the call to test a specific optimizer, and", 
   "then that method would call all of the individual test cases relevant to", 
   "that optimizer.,Now JUnit will directly call each individual test case.", 
   "The same test coverage is preserved. The GaussNewtonOptimizerTest is", 
   "split into two classes, one for each decomposition algorithm it can use.", 
   "There is a significant amount of duplicated code between", 
   "GaussNewtonOptimizerWithLUTest and GaussNewtonOptimizerWithQRTest."
  ], 
  "revision_id": "1569359"
 }
]