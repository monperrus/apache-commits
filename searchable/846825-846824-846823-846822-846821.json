[
 {
  "author": "clkao", 
  "date": "2003-08-16T11:20:26.109673Z", 
  "msg": [
   "The Perl Bindings for Subversion, and more wrapping to existing swig", 
   "maps.", 
   "NOTE: the member function invokers (ra, reporter, editor) are only", 
   "enabled for perl. Feel free to remove the ifdef if maintainers", 
   "of other swig language bindings would like to incorporate them.", 
   "* INSTALL: build and test instructions for perl.", 
   "* apr.i, core.i, svn_client.i, svn_delta.i, svn_fs.i, svn_ra.i,", 
   "svn_repos.i, svn_string.i, svn_types.i, svn_wc.i:", 
   "Typemaps for perl.", 
   "* core.i:", 
   "Ignore svn_opt_print_generic_help due to bad pool convention.", 
   "Wrap apr_file_open_std{err,out} and svn_config.", 
   "* svn_delta.i:", 
   "Wrap driver side of delta_editor.", 
   "* svn_fs.i", 
   "* svn_repos.i", 
   "* svn_types.i", 
   "Move typemaps of svn_log_message_receiver_t, svn_stream_t ** and", 
   "svn_node_kind_t * to svn_types.i since they are used in other", 
   "places.", 
   "* svn_string.i", 
   "Move apr_array_header_t *paths from with svn_log_message_receiver_t", 
   "as it is used in other places.", 
   "* svn_types.i:", 
   "(Perl only)", 
   "Default pool handling.", 
   "Wrap svn_opt_revision_t and guess the kind of its union.", 
   "* svn_ra.i:", 
   "Ignore svn_ra_{dav,local,svn}_init.", 
   "Wrap ra_plugin and ra_reporter, also create thunk callers for", 
   "ra_callback.", 
   "* svn_repos.i:", 
   "Wrap commit_editor.", 
   "* swigutil_pl.c", 
   "* swigutil_pl.h", 
   "* perl/Base.pm", 
   "* perl/Client.pm", 
   "* perl/Core.pm", 
   "* perl/Delta.pm", 
   "* perl/Fs.pm", 
   "* perl/Makefile.PL", 
   "* perl/Ra.pm", 
   "* perl/Repos.pm", 
   "* perl/Wc.pm", 
   "* perl/h2i.pl", 
   "* perl/t/1repos.t", 
   "* perl/t/2fs.t", 
   "* swigutil_pl.h", 
   "New files."
  ], 
  "revision_id": "846825"
 }, 
 {
  "author": "dws", 
  "date": "2003-08-16T05:16:31.641222Z", 
  "msg": [
   "* doc/book/book/ch06.xml : Small grammar fix."
  ], 
  "revision_id": "846824"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-08-16T03:47:04.094959Z", 
  "msg": [
   "Finish issue #495 - mod_dav_svn needs to delete activities.", 
   "* subversion/include/mod_dav_svn.h", 
   "(dav_svn_delete_activity): New.", 
   "* subversion/mod_dav_svn/activity.c", 
   "(dav_svn_get_txn): Test for existence before trying to read the value.", 
   "(dav_svn_delete_activity): New.", 
   "* subversion/mod_dav_svn/repos.c", 
   "(dav_svn_get_parent_resource): Generate a private resource for the", 
   "parent of an activity.", 
   "(dav_svn_remove_resource): Add support for DELETE on an activity.", 
   "* subversion/libsvn_ra_dav/commit.c", 
   "(delete_activity, commit_abort_edit): New.", 
   "(commit_close_edit): Now calls delete_activity() on success.", 
   "(svn_ra_dav__get_commit_editor): Add commit_abort_edit() to the", 
   "vtable filling.", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_commit): Don't claim that a commit is no longer in", 
   "progress until it *successfully* finishes.", 
   "* subversion/tests/clients/cmdline/commit_tests.py", 
   "(test_list): No longer expect failed_commit() to fail.  (Huh?)"
  ], 
  "revision_id": "846823"
 }, 
 {
  "author": "sussman", 
  "date": "2003-08-16T01:54:36.355689Z", 
  "msg": [
   "Fix issue 919, \"another ghudson bug\".  Basically, if we fore- or", 
   "back-date an item until it no longer exists, we were completely", 
   "removing the entry, rather than marking it 'deleted' (which we now", 
   "do.)", 
   "With this fix, we get the usual 'deleted' behavior as expected:", 
   "running 'svn up [-r X]' on the parent directory will either bring the", 
   "item back, or rightly destroy the 'deleted' entry.", 
   "* libsvn_wc/update_editor.c (struct edit_baton): new 'target_deleted'", 
   "boolean field.", 
   "(delete_entry): if the thing being deleted is the update target,", 
   "recreate a 'deleted' entry (with target revnum), so that parent can", 
   "continue to give accurate update-reports about itself.", 
   "(close_edit): if the update did nothing but delete the target, then", 
   "do *not* run cleanup on the target, as it will only remove the", 
   "'deleted' entry.", 
   "* cmdline/update_tests.py (update_to_deletion): new regression test.", 
   "(another_hudson_problem): remove XFAIL from Philip's original #919", 
   "regression test!", 
   "* svntest/tree.py (build_tree_from_checkout): when parsing command", 
   "output, allow whitespace between the status code and path.  There's", 
   "no reason our tests should be sensitive to this, especially since", 
   "different notification signals print different amounts of whitespace."
  ], 
  "revision_id": "846822"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-08-15T21:23:44.606483Z", 
  "msg": [
   "With Ben, add a regression test for issue #1472: checking out an empty", 
   "directory results in a working copy with \"incomplete\" (\"!\") status.", 
   "* subversion/tests/clients/cmdline/update_tests.py", 
   "(checkout_empty_dir): New regression test.", 
   "(test_list): Run it XFail."
  ], 
  "revision_id": "846821"
 }
]