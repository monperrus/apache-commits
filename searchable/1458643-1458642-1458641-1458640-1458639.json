[
 {
  "author": "stefan2", 
  "date": "2013-03-20T05:39:58.474709Z", 
  "msg": [
   "On the cache-server branch:  Eliminate 70+% of the cache access overhead", 
   "caused by calculating expensive hash sums.", 
   "We use two approaches here.  First, cache the combined_key (i.e. hash)", 
   "values from the last access and skip the calculation if the same key is", 
   "being used again.  This is very effective because we often probe a cache", 
   "with a specific key and then set a value for that key.", 
   "Secondly, we leverage the fact that most keys in fsfs-format7 code will", 
   "be fixed-size 16 byte keys (80+% up from ~50%).  Simply combining those", 
   "with the respective cache prefix will already produce a unique key.  We", 
   "add some scrambling code to distribute their values somewhat more evenly", 
   "over the key space.", 
   "* subversion/libsvn_subr/cache-membuffer.c", 
   "(): update / correct global doc", 
   "(get_group_index): compensate for the worsened key value distribution", 
   "(last_access_key_t): new data structure", 
   "(svn_membuffer_cache_t): add cache for the last combine_key() result", 
   "(combine_long_key): split from combine_key(); use cached values", 
   "(combine_key): split; add fast code for short fixed-size keys", 
   "(svn_cache__create_membuffer_cache): update"
  ], 
  "revision_id": "1458643"
 }, 
 {
  "author": "bodewig", 
  "date": "2013-03-20T05:33:33.174528Z", 
  "msg": [
   "KEYS now collected on dist.apache.org"
  ], 
  "revision_id": "1458642"
 }, 
 {
  "author": "bodewig", 
  "date": "2013-03-20T05:28:55.058006Z", 
  "msg": [
   "unballanced tags"
  ], 
  "revision_id": "1458641"
 }, 
 {
  "author": "bodewig", 
  "date": "2013-03-20T05:26:46.973509Z", 
  "msg": [
   "use KEYS on dist.apache.org"
  ], 
  "revision_id": "1458640"
 }, 
 {
  "author": "ggregory", 
  "date": "2013-03-20T05:24:27.740089Z", 
  "msg": [
   "Sort members in AB order."
  ], 
  "revision_id": "1458639"
 }
]