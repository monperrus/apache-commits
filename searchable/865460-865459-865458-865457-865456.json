[
 {
  "author": "cmpilato", 
  "date": "2007-06-13T16:56:44.058408Z", 
  "msg": [
   "Massage the libsvn_ra_serf code into warning-less build happiness.", 
   "* subversion/libsvn_ra_serf/ra_serf.h", 
   "(UNUSED_CTX): New macro for shush compiler warnings about unused variables.", 
   "* subversion/libsvn_ra_serf/merge.c,", 
   "* subversion/libsvn_ra_serf/locks.c,", 
   "* subversion/libsvn_ra_serf/getlocks.c,", 
   "* subversion/libsvn_ra_serf/getdate.c,", 
   "* subversion/libsvn_ra_serf/util.c,", 
   "* subversion/libsvn_ra_serf/blame.c,", 
   "* subversion/libsvn_ra_serf/log.c,", 
   "* subversion/libsvn_ra_serf/update.c,", 
   "* subversion/libsvn_ra_serf/property.c,", 
   "* subversion/libsvn_ra_serf/replay.c", 
   "Throughout these files, use the new UNUSED_CTX() macro to silence", 
   "compiler warnings about unused context batons.  Remove or optimize", 
   "away some unused variables.  Basically make these things compile", 
   "warning-free under my GCC."
  ], 
  "revision_id": "865460"
 }, 
 {
  "author": "dlr", 
  "date": "2007-06-13T15:52:13.699001Z", 
  "msg": [
   "A follow-up to r25357, fixing a syntax error.", 
   "* subversion/tests/cmdline/svntest/testcase.py", 
   "(Skip.__init__): Fully qualify svntest.Failure."
  ], 
  "revision_id": "865459"
 }, 
 {
  "author": "glasser", 
  "date": "2007-06-13T15:37:33.577363Z", 
  "msg": [
   "Support building both ra_dav and ra_serf, allowing the user to choose", 
   "which one to use in their servers config file.", 
   "Note: unlike everything else in the servers config file, the new", 
   "http-library is *only* supported in the [global] section, not the", 
   "host-specific section.  We should fix this before 1.5, but this", 
   "probably requires moving some code from libsvn_ra_dav into libsvn_ra.", 
   "* build/ac-macros/serf.m4:", 
   "Remove check that prevents building both ra_dav and ra_serf.", 
   "* subversion/include/svn_config.h", 
   "(SVN_CONFIG_OPTION_HTTP_LIBRARY): New config option \"http-library\".", 
   "* subversion/libsvn_subr/config_file.c", 
   "(svn_config_ensure): Document SVN_CONFIG_OPTION_HTTP_LIBRARY in the", 
   "generated servers file.", 
   "* subversion/libsvn_ra/ra_loader.c", 
   "(): Change comment about conflicting RA libraries to mention the", 
   "assumptions that svn_ra_open2 is making.", 
   "(MUST_CHOOSE_DAV): Define this symbol if we are linking both DAV", 
   "libraries.", 
   "(svn_ra_open2): If MUST_CHOOSE_DAV is defined, look up the", 
   "http-library value in the servers config file global section,", 
   "validate that it is \"dav\" or \"serf\", and skip the other library.", 
   "* subversion/libsvn_ra_serf/README:", 
   "Mention that you don't need to disable Neon if you set the", 
   "http-library option.", 
   "* INSTALL", 
   "(I.B Dependency Overview): Mention that you can use both Neon and", 
   "Serf.", 
   "(I.C Dependencies in Detail): Provide more detail about using both."
  ], 
  "revision_id": "865458"
 }, 
 {
  "author": "epg", 
  "date": "2007-06-13T03:25:53.911433Z", 
  "msg": [
   "Add option to resolve conflicts by selecting a specific file by adding", 
   "support to the svn executable to handle the \"--accept\" flag. The", 
   "\"resolved\" subcommand is the only subcommand using this new flag as", 
   "part of this patch. (Issue 2784)", 
   "* subversion/include/svn_client.h", 
   "(svn_client_resolved): Revved to svn_client_resolved2() to handle the", 
   "svn_accept_t enum.", 
   "* subversion/include/svn_types.h", 
   "(svn_accept_t): Created an enum to handle the different accept options.", 
   "(svn_accept_from_word): Function prototype to return the proper", 
   "svn_accept_t based on the accept word.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_resolved_conflict): Revved to svn_wc_resolved_conflict3 to", 
   "handle the svn_accept_t enum.", 
   "* subversion/libsvn_client/resolved.c", 
   "(svn_client_resolved): Implementation of svn_client_resolved2()", 
   "which now handles svn_accept_t as an argument.", 
   "* subversion/libsvn_subr/kitchensink.c", 
   "(svn_accept_from_word): Implementation of svn_accept_from_word()", 
   "which will return an svn_accept_t based on the passed accept string.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(resolve_conflict_on_entry): Updated this function to handle an", 
   "svn_accept_t argument. This is also where the real work of", 
   "automatic conflict resolution happens.", 
   "(resolve_callback_baton): Updated the structure to have a", 
   "placeholder for the svn_accept_t argument so that", 
   "resolve_found_entry_callback() can pass the necessary information", 
   "to resolve_conflict_on_entry().", 
   "(svn_wc_resolved_conflict): Implementation of", 
   "svn_wc_resolved_conflict3() which now handles the svn_accept_t as", 
   "an argument.", 
   "* subversion/svn/cl.h", 
   "(svn_cl__opt_state_t): Updated to have a place holder for the accept", 
   "flag passed to the svn executable.", 
   "(svn_cl__long_opt_t): Updated to handle the svn_accept_t as a long", 
   "svn executable argument.", 
   "* subversion/svn/cl.h", 
   "(svn_cl__opt_state_t): Updated to have a place holder for the accept", 
   "flag passed to the svn executable.", 
   "(svn_cl__long_opt_t): Updated to handle the svn_accept_t as a long", 
   "svn executable argument.", 
   "* subversion/svn/main.c", 
   "(svn_cl__options): Updated to have all necessary information for the", 
   "svn executable to provide help for, and handle, the accept flag.", 
   "(svn_cl__cmd_table): Updated to have the resolved subcommand handle", 
   "the passing of the accept flag.", 
   "(svn_cl__limit_opt): Added case statement to handle parsing the", 
   "accept flag and erroring when an invalid argument was passed. If a", 
   "valid argument is passed, it is then turned into the svn_accept_t enum", 
   "based on the svn_accept_from_word() function in", 
   "subversion/libsvn_subr/kitchensink.c.", 
   "* subversion/svn/resolved-cmd.c", 
   "(svn_cl__resolved): Updated to call the revved svn_client_resolved()", 
   "which is now at svn_client_resolved2().", 
   "* subversion/tests/cmdline/basic_test.py", 
   "(automatic_conflict_resolution): Created a new test to test the", 
   "handling of the new accept flag for the resolved subcommand.", 
   "(test_list): Added the automatic_conflict_resolution test to the test list.", 
   "Patch by: Jeremy Whitlock <jcscoobyrs@gmail.com>", 
   "(Tweaked by me.)"
  ], 
  "revision_id": "865457"
 }, 
 {
  "author": "epg", 
  "date": "2007-06-12T22:52:07.434128Z", 
  "msg": [
   "Fix svn_ra_get_commit_editor3 for Python.", 
   "* subversion/bindings/swig/include/svn_containers.swg", 
   "(%typemap(in) apr_hash_t *PROPHASH): Add global pool handling so", 
   "this will work for attribute setters.  Also, apply this to", 
   "apr_hash_t *revprop_table for both Python and Ruby, so", 
   "svn_ra_get_commit_editor3 will work in Python.", 
   "* subversion/bindings/swig/python/tests/ra.py", 
   "(test_commit3): New test."
  ], 
  "revision_id": "865456"
 }
]