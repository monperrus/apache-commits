[
 {
  "author": "swu", 
  "date": "2012-12-12T18:23:59.284931Z", 
  "msg": [
   "allow sharpknowtatorxmlreader to take in \"TextURI\" UIMA parameter"
  ], 
  "revision_id": "1420903"
 }, 
 {
  "author": "stsp", 
  "date": "2012-12-12T18:23:42.974122Z", 
  "msg": [
   "* subversion/libsvn_ra_svn/cyrus_auth.c", 
   "(svn_ra_svn__sasl_common_init): Wrap the call to svn_mutex__init() in", 
   "the SVN_ERR() macro, instead of returning its return value directly.", 
   "This avoids a 'will never be executed' warning when compiling with", 
   "threaded APR. The 'return SVN_NO_ERROR' at the bottom of the function", 
   "won't ever be run if we unconditionally return where svn_mutex__init()", 
   "is called. And this also fixes error tracing in maintainer builds."
  ], 
  "revision_id": "1420902"
 }, 
 {
  "author": "metskem", 
  "date": "2012-12-12T18:18:33.645367Z", 
  "msg": [
   "Index: src/com/ecyrd/jspwiki/util/PriorityList.java", 
   "===================================================================", 
   "--- src/com/ecyrd/jspwiki/util/PriorityList.java\t(revision 1362567)", 
   "+++ src/com/ecyrd/jspwiki/util/PriorityList.java\t(working copy)", 
   "@@ -21,7 +21,7 @@", 
   "package com.ecyrd.jspwiki.util;", 
   "import java.util.AbstractList;", 
   "-import java.util.ArrayList;", 
   "+import java.util.concurrent.CopyOnWriteArrayList;", 
   "/**", 
   "*  Builds a simple, priority-based List implementation.  The list", 
   "@@ -32,11 +32,10 @@", 
   "*  Priority is an integer, and the list is sorted in descending order", 
   "*  (that is, 100 is before 10 is before 0 is before -40).", 
   "*/", 
   "-@SuppressWarnings(\"unchecked\")", 
   "public class PriorityList", 
   "extends AbstractList", 
   "{", 
   "-    private ArrayList<Object> m_elements = new ArrayList<Object>();", 
   "+    private CopyOnWriteArrayList<Item> m_elements = new CopyOnWriteArrayList<Item>();", 
   "/**", 
   "*  This is the default priority, which is used if no priority", 
   "@@ -57,7 +56,7 @@", 
   "for( ; i < m_elements.size(); i++ )", 
   "{", 
   "-            Item item = (Item) m_elements.get(i);", 
   "+            Item item = m_elements.get(i);", 
   "if( item.m_priority < priority )", 
   "{", 
   "@@ -93,7 +92,7 @@", 
   "*/", 
   "public Object get( int index )", 
   "{", 
   "-        return ((Item)m_elements.get( index )).m_object;", 
   "+        return m_elements.get( index ).m_object;", 
   "}", 
   "/**", 
   "Index: src/com/ecyrd/jspwiki/Release.java", 
   "===================================================================", 
   "--- src/com/ecyrd/jspwiki/Release.java\t(revision 1362567)", 
   "+++ src/com/ecyrd/jspwiki/Release.java\t(working copy)", 
   "@@ -77,7 +77,7 @@", 
   "*  <p>", 
   "*  If the build identifier is empty, it is not added.", 
   "*/", 
   "-    public static final String     BUILD         = \"13\";", 
   "+    public static final String     BUILD         = \"14\";", 
   "/**", 
   "*  This is the generic version string you should use", 
   "Index: ChangeLog", 
   "===================================================================", 
   "--- ChangeLog\t(revision 1362567)", 
   "+++ ChangeLog\t(working copy)", 
   "@@ -1,3 +1,9 @@", 
   "+2012-12-12  Harry Metske <metskem@apache.org>", 
   "+", 
   "+       * 2.8.5-svn-14", 
   "+", 
   "+        * fixed JSPWIKI-742 NullPointerException in PriorityList (reported by Rakesh K. Cherukuri)", 
   "+", 
   "2012-04-18  Harry Metske <metskem@apache.org>", 
   "* 2.8.5-svn-13"
  ], 
  "revision_id": "1420901"
 }, 
 {
  "author": "jfthomps", 
  "date": "2012-12-12T18:17:15.281302Z", 
  "msg": [
   "added vcl broker"
  ], 
  "revision_id": "1420900"
 }, 
 {
  "author": "danielsh", 
  "date": "2012-12-12T18:16:52.077020Z", 
  "msg": [
   "* build/run_tests.py: Change string literal to facilitate grepping for it."
  ], 
  "revision_id": "1420899"
 }
]