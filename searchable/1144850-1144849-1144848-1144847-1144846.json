[
 {
  "author": "simonw", 
  "date": "2011-07-10T12:36:54.953615Z", 
  "msg": [
   "init CFS output on writer init and release output lock if stream creation fails."
  ], 
  "revision_id": "1144850"
 }, 
 {
  "author": "jbonofre", 
  "date": "2011-07-10T12:29:34.930713Z", 
  "msg": [
   "[KARAF-645] Add a flag to suppress --help option output in maven plugin."
  ], 
  "revision_id": "1144849"
 }, 
 {
  "author": "fdmanana", 
  "date": "2011-07-10T12:22:04.963868Z", 
  "msg": [
   "Cheaper request authentication", 
   "Parsing the auth handlers on every request is more expensive then", 
   "it needs to be. Just the regexp split operation by itself is rather", 
   "expensive:", 
   "2> Conf = couch_config:get(\"httpd\", \"authentication_handlers\").", 
   "\"{couch_httpd_oauth, oauth_authentication_handler}, {couch_httpd_auth, cookie_authentication_handler}, {couch_httpd_auth, default_authentication_handler}\"", 
   "3>", 
   "3> timer:tc(re, split, [Conf, \"(?<=})\\\\s*,\\\\s*(?={)\", [{return, list}]]).", 
   "{289,", 
   "[\"{couch_httpd_oauth, oauth_authentication_handler}\",", 
   "\"{couch_httpd_auth, cookie_authentication_handler}\",", 
   "\"{couch_httpd_auth, default_authentication_handler}\"]}", 
   "4> timer:tc(re, split, [Conf, \"(?<=})\\\\s*,\\\\s*(?={)\", [{return, list}]]).", 
   "{292,", 
   "[\"{couch_httpd_oauth, oauth_authentication_handler}\",", 
   "\"{couch_httpd_auth, cookie_authentication_handler}\",", 
   "\"{couch_httpd_auth, default_authentication_handler}\"]}", 
   "5> timer:tc(re, split, [Conf, \"(?<=})\\\\s*,\\\\s*(?={)\", [{return, list}]]).", 
   "{297,", 
   "[\"{couch_httpd_oauth, oauth_authentication_handler}\",", 
   "\"{couch_httpd_auth, cookie_authentication_handler}\",", 
   "\"{couch_httpd_auth, default_authentication_handler}\"]}", 
   "6> timer:tc(re, split, [Conf, \"(?<=})\\\\s*,\\\\s*(?={)\", [{return, list}]]).", 
   "And so is the parsing of each auth handler function:", 
   "1> timer:tc(couch_httpd, make_arity_1_fun, [\"{couch_httpd_auth, default_authentication_handler}\"]).", 
   "{63,#Fun<couch_httpd.6.41794127>}", 
   "2> timer:tc(couch_httpd, make_arity_1_fun, [\"{couch_httpd_auth, default_authentication_handler}\"]).", 
   "{58,#Fun<couch_httpd.6.41794127>}", 
   "3> timer:tc(couch_httpd, make_arity_1_fun, [\"{couch_httpd_auth, default_authentication_handler}\"]).", 
   "{56,#Fun<couch_httpd.6.41794127>}", 
   "4> timer:tc(couch_httpd, make_arity_1_fun, [\"{couch_httpd_auth, default_authentication_handler}\"]).", 
   "{58,#Fun<couch_httpd.6.41794127>}", 
   "5> timer:tc(couch_httpd, make_arity_1_fun, [\"{couch_httpd_auth, default_authentication_handler}\"]).", 
   "{59,#Fun<couch_httpd.6.41794127>}", 
   "Getting the preprocessed auth handler functions from the application", 
   "environment is however much cheaper:", 
   "6> timer:tc(application, get_env, [couch, auth_handlers]).", 
   "{13,", 
   "{ok,[{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_oauth, oauth_authentication_handler}\">>},", 
   "{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_auth, cookie_authentication_handler}\">>},", 
   "{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_auth, default_authentication_handler}\">>}]}}", 
   "7> timer:tc(application, get_env, [couch, auth_handlers]).", 
   "{14,", 
   "{ok,[{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_oauth, oauth_authentication_handler}\">>},", 
   "{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_auth, cookie_authentication_handler}\">>},", 
   "{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_auth, default_authentication_handler}\">>}]}}", 
   "8> timer:tc(application, get_env, [couch, auth_handlers]).", 
   "{13,", 
   "{ok,[{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_oauth, oauth_authentication_handler}\">>},", 
   "{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_auth, cookie_authentication_handler}\">>},", 
   "{#Fun<couch_httpd.6.41794127>,", 
   "<<\"{couch_httpd_auth, default_authentication_handler}\">>}]}}", 
   "The application environment is backed by an ets and created when", 
   "the couch OTP application is started."
  ], 
  "revision_id": "1144848"
 }, 
 {
  "author": "sarowe", 
  "date": "2011-07-10T12:20:06.847195Z", 
  "msg": [
   "SOLR-2452: Put back Solr-specific clover properties & targets"
  ], 
  "revision_id": "1144847"
 }, 
 {
  "author": "fdmanana", 
  "date": "2011-07-10T12:18:53.012667Z", 
  "msg": [
   "Faster required content-type check", 
   "string:tokens/2 is more efficient then re:split/3", 
   "1> timer:tc(re, split, [\"application/json\", \";\", [{return, list}]]).", 
   "{20,[\"application/json\"]}", 
   "2> timer:tc(re, split, [\"application/json\", \";\", [{return, list}]]).", 
   "{50,[\"application/json\"]}", 
   "3> timer:tc(re, split, [\"application/json\", \";\", [{return, list}]]).", 
   "{50,[\"application/json\"]}", 
   "4> timer:tc(re, split, [\"application/json\", \";\", [{return, list}]]).", 
   "{57,[\"application/json\"]}", 
   "5> timer:tc(re, split, [\"application/json\", \";\", [{return, list}]]).", 
   "{48,[\"application/json\"]}", 
   "6>", 
   "6> timer:tc(string, tokens, [\"application/json\", \";\"]).", 
   "{11,[\"application/json\"]}", 
   "7> timer:tc(string, tokens, [\"application/json\", \";\"]).", 
   "{11,[\"application/json\"]}", 
   "8> timer:tc(string, tokens, [\"application/json\", \";\"]).", 
   "{7,[\"application/json\"]}", 
   "9> timer:tc(string, tokens, [\"application/json\", \";\"]).", 
   "{8,[\"application/json\"]}", 
   "10> timer:tc(string, tokens, [\"application/json\", \";\"]).", 
   "{11,[\"application/json\"]}", 
   "11>", 
   "11> timer:tc(re, split, [\"application/json; text/plain\", \";\", [{return, list}]]).", 
   "{28,[\"application/json\",\" text/plain\"]}", 
   "12> timer:tc(re, split, [\"application/json; text/plain\", \";\", [{return, list}]]).", 
   "{67,[\"application/json\",\" text/plain\"]}", 
   "13> timer:tc(re, split, [\"application/json; text/plain\", \";\", [{return, list}]]).", 
   "{66,[\"application/json\",\" text/plain\"]}", 
   "14> timer:tc(re, split, [\"application/json; text/plain\", \";\", [{return, list}]]).", 
   "{26,[\"application/json\",\" text/plain\"]}", 
   "15> timer:tc(re, split, [\"application/json; text/plain\", \";\", [{return, list}]]).", 
   "{65,[\"application/json\",\" text/plain\"]}", 
   "16>", 
   "16> timer:tc(string, tokens, [\"application/json; text/plain\", \";\"]).", 
   "{9,[\"application/json\",\" text/plain\"]}", 
   "17> timer:tc(string, tokens, [\"application/json; text/plain\", \";\"]).", 
   "{10,[\"application/json\",\" text/plain\"]}", 
   "18> timer:tc(string, tokens, [\"application/json; text/plain\", \";\"]).", 
   "{10,[\"application/json\",\" text/plain\"]}", 
   "19> timer:tc(string, tokens, [\"application/json; text/plain\", \";\"]).", 
   "{9,[\"application/json\",\" text/plain\"]}"
  ], 
  "revision_id": "1144846"
 }
]