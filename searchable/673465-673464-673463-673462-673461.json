[
 {
  "author": "rsivaram", 
  "date": "2008-07-02T19:00:21.547188Z", 
  "msg": [
   "Move Felix jars upto latest released version"
  ], 
  "revision_id": "673465"
 }, 
 {
  "author": "jonesde", 
  "date": "2008-07-02T18:56:14.518091Z", 
  "msg": [
   "Added relationship for rateUomId"
  ], 
  "revision_id": "673464"
 }, 
 {
  "author": "jonesde", 
  "date": "2008-07-02T18:54:10.125442Z", 
  "msg": [
   "Added fields to RateType for normal rates, to be overridden by PartyRate or WEA Rate, also added rateUomId"
  ], 
  "revision_id": "673463"
 }, 
 {
  "author": "davsclaus", 
  "date": "2008-07-02T18:43:58.133711Z", 
  "msg": [
   "CAMEL-653: JMS Component now preserves java identifiers as header names to support etc. bean method names and file component filename set in headers."
  ], 
  "revision_id": "673462"
 }, 
 {
  "author": "chabotc", 
  "date": "2008-07-02T18:42:58.002201Z", 
  "msg": [
   "New http caching header functionality for the proxy service. This is still", 
   "somewhat experimental, and while it has been tried in all the major browsers", 
   "it hasn't been tested with every gadget yet.", 
   "What it does is add propper http header handling for e-tags and if-modified-since", 
   "headers, where it:", 
   "- always ignores the remote party's etag and generate our own (md5(content))", 
   "- use the remote party's last-modified if it's available, otherwise", 
   "use the time that the request was last made.", 
   "- If the e-tag matches, 304 is returned and if-modified-since is not evaluated", 
   "else it checks the if-modified-since", 
   "The idea is that most modern browsers support e-tags just fine, so that's our", 
   "prefered mechanism for returning 304 Not Modified to requests. However there", 
   "are proxy servers (and old browsers) that do not support e-tags, however they", 
   "do support last-modified / if-modified-since, so that's our fallback mechanism.", 
   "To further try to improve the cachability of the proxied requests, the code", 
   "also sets a Cache-Control:public, maxAge={refreshInterval} header, and a", 
   "Expires : (time + refreshInterval) header, as to save the round trip on things", 
   "that should be cachable.", 
   "The refreshInterval used is either the one specified in the request (&refresh=<seconds>)", 
   "and if non is set, the global caching time policy is used. (One day in the default", 
   "config).", 
   "Any and all feedback is very welcome!"
  ], 
  "revision_id": "673461"
 }
]