[
 {
  "author": "vgeorgescu", 
  "date": "2007-03-25T15:59:29.763740Z", 
  "msg": [
   "When running the test suite on Windows, copy all library dependency DLLs to the", 
   "root of the build tree (currently we only copy APR & friends, and require all", 
   "others to be somewhere in PATH).", 
   "To accomplish this, move some of the path detection and initialization", 
   "logic from WinGeneratorBase to GeneratorBase, which we already use in", 
   "win-tests.py for other reasons.", 
   "* build/generator/gen_win.py", 
   "(GeneratorBase.parse_options, GeneratorBase._find_bdb): Moved from", 
   "WinGeneratorBase, minus the parts that print to stderr.", 
   "(GeneratorBase.__init__): Call parse_options() and _find_bdb().", 
   "(WinGeneratorBase.__init__): Move the parent class initialization to the", 
   "start of the function. Check some of the values that we need and print", 
   "warnings or errors if they are not found.", 
   "* win-tests.py", 
   "Read the options from 'gen-make.opts', use them when creating gen_obj (an", 
   "instance of GeneratorBase).", 
   "(copy_changed_file): Print a human-friendly error message if the file isn't", 
   "found.", 
   "(_locate_libs): Remove the get() function. Use gen_obj's attributes to", 
   "determine which DLLs should be copied and from where.", 
   "Suggested by: Joe Swatosh <joe.swatosh@gmail.com>", 
   "djh", 
   "Review by: Joe Swatosh <joe.swatosh@gmail.com>", 
   "djh"
  ], 
  "revision_id": "864190"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T12:05:20.843723Z", 
  "msg": [
   "Support svn_wc_committed_queue_create().", 
   "* subversion/bindings/swig/svn_wc.i", 
   "(%ignore svn_wc_committed_queue_create): Don't generate a wrapper of", 
   "needless function.", 
   "(%extend svn_wc_committed_queue_t): Define constructor.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_committed_queue_new): New test."
  ], 
  "revision_id": "864189"
 }, 
 {
  "author": "lgo", 
  "date": "2007-03-25T11:36:14.534083Z", 
  "msg": [
   "Make it clear that svn_path_is_root only accepts directories, not uri's.", 
   "* subversion/include/svn_path.h", 
   "* subversion/libsvn_subr/path.c", 
   "(svn_path_is_root): renamed this function ...", 
   "(svn_dirent_is_root): ... to this, thereby removing ambiguity on the type", 
   "of paths that are accepted. Also rename the path parameter to dirent.", 
   "(is_canonical): replace svn_path_is_root with svn_dirent_is_root.", 
   "Replace svn_path_is_root with svn_dirent_is_root in all these places:", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_commit4)", 
   "* subversion/libsvn_client/merge.c", 
   "(get_wc_merge_info)", 
   "* subversion/libsvn_repos/repos.c", 
   "(svn_repos_find_root_path)", 
   "* subversion/libsvn_subr/target.c", 
   "(svn_path_condense_targets)", 
   "* subversion/libsvn_subr/lock.c", 
   "(svn_wc_adm_open_anchor):", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(check_wc_root)", 
   "* subversion/tests/libsvn_subr/path-test.c", 
   "(test_is_root)"
  ], 
  "revision_id": "864188"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T10:39:19.094249Z", 
  "msg": [
   "Fix double memory allocation when some objects are instantiated.", 
   "* subversion/bindings/swig/core.i", 
   "(%ignore svn_auth_open,", 
   "%ignore svn_diff_file_options_create,", 
   "%ignore svn_create_commit_info,", 
   "%ignore svn_commit_info_dup),", 
   "subversion/bindings/swig/svn_wc.i", 
   "(%ignore svn_wc_external_item_create,", 
   "%ignore svn_wc_external_item_dup,", 
   "%ignore svn_wc_external_item2_dup,", 
   "%ignore svn_wc_revision_status),", 
   "subversion/bindings/swig/svn_client.i", 
   "(%ignore svn_client_create_context,", 
   "%ignore svn_client_commit_item_create,", 
   "%ignore svn_client_commit_item2_dup,", 
   "%ignore svn_client_commit_item3_dup): Don't generate wrapper of", 
   "needless function.", 
   "* subversion/bindings/swig/core.i", 
   "(%extend svn_auth_baton_t,", 
   "%extend svn_diff_file_options_t,", 
   "%extend svn_commit_info_t),", 
   "subversion/bindings/swig/svn_wc.i", 
   "(%extend svn_wc_external_item2_t,", 
   "%extend svn_wc_revision_status_t),", 
   "subversion/bindings/swig/svn_client.i", 
   "(%extend svn_client_ctx_t,", 
   "%extend svn_client_commit_item3_t): Define constructor.", 
   "* subversion/bindings/swig/include/svn_global.swg", 
   "(static VALUE vresult,", 
   "static VALUE *_global_vresult_address): New file local variable to", 
   "work pool related typemap with constructor.", 
   "* subversion/bindings/swig/include/svn_types.swg", 
   "(%typemap(argout) apr_pool_t *pool): Use self as pool holder target if", 
   "file locale vresult is used.", 
   "* subversion/bindings/swig/ruby/svn/core.rb", 
   "(Svn::Core::AuthBaton.new, Svn::Core::AuthBaton#initialize,", 
   "Svn::Core::DiffFileOptions.new, Svn::Core::CommitInfo.new),", 
   "subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::ExternalItem2.new, Svn::Wc::ExternalItem2.dup,", 
   "Svn::Wc::RevisionStatus.new, Svn::Wc::RevisionStatus#initialize),", 
   "subversion/bindings/swig/ruby/svn/client.rb", 
   "(Svn::Client::CommitItem3.new,", 
   "Svn::Client::Context.new, Svn::Client::Context#initialize):", 
   "Use method generated by SWIG.", 
   "* subversion/bindings/swig/ruby/svn/core.rb", 
   "(Svn::Core::CommitInfo#date): Clean up.", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "* subversion/bindings/swig/ruby/test/test_client.rb", 
   "(SvnClientTest#test_not_new, SvnClientTest#test_new_commit_item): Remove.", 
   "(SvnClientTest#test_commit_item): Unify test_not_now and", 
   "test_new_commit_item."
  ], 
  "revision_id": "864187"
 }, 
 {
  "author": "kou", 
  "date": "2007-03-25T08:24:47.600233Z", 
  "msg": [
   "Support svn_wc_delete3().", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::AdmAccess#delete): Use Svn::Wc.delete3 instead of Svn::Wc.delete2.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_delete): New test."
  ], 
  "revision_id": "864186"
 }
]