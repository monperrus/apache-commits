[
 {
  "author": "sussman", 
  "date": "2001-09-27T21:00:06.778164Z", 
  "msg": [
   "Tiny user-friendliness tweak.", 
   "* auth.c (get_user_and_pass): pass username to get_password()", 
   "(get_password):  print the username in the password prompt."
  ], 
  "revision_id": "840245"
 }, 
 {
  "author": "sussman", 
  "date": "2001-09-27T19:52:09.199731Z", 
  "msg": [
   "Make 'svn st -u' show (impending) added items.  This completes our", 
   "revamping of 'svn status'.  We now return you to your regularly", 
   "scheduled programming task.", 
   "* status_editor.c", 
   "(close_file): don't ignore added items.", 
   "(close_directory):  same.", 
   "(tweak_statushash): if adding an 'added' item to hash, build a", 
   "statstruct manually.", 
   "* cmdline/status.c (print_long_format): if the status struct is", 
   "'added' in the repository, don't print anything in the local_rev column.", 
   "* tree.py (build_tree_from_status):   change regexp, and ignore any", 
   "lines that are 'added' items.  The python tests aren't expecting them.", 
   "* libsvn_wc/status.c (svn_wc_status): bugfix: prevent segfault.", 
   "* path.c (svn_path_is_single_path_component): handle a NULL input."
  ], 
  "revision_id": "840244"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-09-27T19:05:19.613676Z", 
  "msg": [
   "* reps-strings.c", 
   "(struct write_string_set_baton, window_write_t): New structures.", 
   "(write_string_set): New function.", 
   "(svn_fs__rep_deltify): Write each svndiff window to its own string,", 
   "and write out a representation according to Branko's new plan."
  ], 
  "revision_id": "840243"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-09-27T18:44:24.292148Z", 
  "msg": [
   "* fs-test.c", 
   "(large_file_integrity): Rename repository to match the function", 
   "name.  I can never find that stupid repository..."
  ], 
  "revision_id": "840242"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-09-26T18:58:29.774921Z", 
  "msg": [
   "* libsvn_fs/node-rev.c", 
   "(deltify_args): remove RECURSIVE field...recursivity will be", 
   "dealt with prior to this baton's usage.", 
   "(txn_body_deltify): Implement some semblance of a sensible algorithm", 
   "for finding a deltification source.", 
   "(svn_fs_undeltify): Don't put RECURSIVE into the baton any more.", 
   "(svn_fs_deltify): Don't put RECURSIVE into the baton any more.", 
   "* libsvn_fs/reps-strings.c", 
   "(DELTIFYING): Re-disable deltification (oops in the last commit)", 
   "* include/svn_fs.h", 
   "(svn_fs_deltify, svn_fs_undeltify): Modify docstring.", 
   "* tests/libsvn_fs/fs-test.c", 
   "(undeltify_deltify): Renamed from undeltify().  Changed to", 
   "re-deltify files after verifying their undeltified contents."
  ], 
  "revision_id": "840241"
 }
]