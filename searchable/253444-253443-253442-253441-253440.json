[
 {
  "author": "scheu", 
  "date": "2002-02-08T16:52:12.000000Z", 
  "msg": [
   "Enhanced the javaType -> qname processing in Java2WSDL"
  ], 
  "revision_id": "253444"
 }, 
 {
  "author": "scheu", 
  "date": "2002-02-08T15:24:22.000000Z", 
  "msg": [
   "Minor fixes per axis-dev and Greg Truty requests."
  ], 
  "revision_id": "253443"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-02-08T14:45:02.000000Z", 
  "msg": [
   "Framework for static WSDL generation from the EchoHandler."
  ], 
  "revision_id": "253442"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-02-08T03:18:48.000000Z", 
  "msg": [
   "Missed a couple of static refs."
  ], 
  "revision_id": "253441"
 }, 
 {
  "author": "gdaniels", 
  "date": "2002-02-08T03:09:26.000000Z", 
  "msg": [
   "Get rid of AxisClassLoader, which was trying to wear too many hats.", 
   "Split the code functionality into JWSClassLoader, a simple ClassLoader", 
   "extension which allows us to reload JWS classes easily, and ClassCache,", 
   "a repository for JavaClass objects.", 
   "MessageContext.getClassLoader() now always returns the thread's", 
   "contextClassLoader EXCEPT when that has been replaced by the", 
   "JWSProcessor with a JWSClassLoader.", 
   "So... 1) our code is simpler, and 2) changing a JWS file now actually", 
   "causes the class to reload on the next hit (this hadn't been working for", 
   "some time now).", 
   "NOTES:", 
   "I've left the AxisClassLoader class for now, although the only thing that", 
   "references it is the JUnit test which tests that class.  I plan to delete it", 
   "entirely if people are happy with these changes.", 
   "I'm a little dubious about the lookups in JavaMethod, which seem to be the", 
   "only real reason for having the ClassCache around in the first place.  Do", 
   "these really improve performance that much?"
  ], 
  "revision_id": "253440"
 }
]