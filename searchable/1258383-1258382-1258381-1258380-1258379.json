[
 {
  "author": "", 
  "date": "2012-01-30T12:14:28.999963Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 4634", 
   "Author:   gosmith@adobe.com", 
   "Date:     2009-01-23T01:38:56.754915Z", 
   "Log Message:", 
   "-----------", 
   "First part of glue code for allowing Halo components to use the new Text Layout Framework, in order to get functionality such as bidirectional text.", 
   "Background:", 
   "TLF is making this possible by implementing a TLFTextField class. It is a Sprite that uses TLF to implement the same properties and methods as the legacy TextField class in the Player. Thanks to the createInFontContext() bottleneck method in UIComponent, it can be used by a properly-written Halo component (such as those in Flex 3) without any modifications to the component.", 
   "Note: Text should render similarly -- but is unlikely to render identically -- when a component uses TLFTextField vs. TextField. The width and height may be different, affecting layout; text could wrap differently; etc. This is a fact-of-life based on the fact that TLF/FTE and TextField are completely different text engines.", 
   "Whether a Halo component uses TLF or not to render text will be determined in Flex 4 by a new style, textFieldClass. (Gumbo components always use TLF.)", 
   "TLFTextField is currently only partially implemented. It does not yet support scrolling, selection, editing, multiple formats, or htmlText. Therefore it can only be used for simple display text, such as a Button label.", 
   "Details:", 
   "The TextStyles.as bucket 'o text styles now includes a non-inheriting textFieldClass style. It can be set to either mx.core.UITextField or mx.core.UITLFTextField. These are the Flex framework's wrapper classes around the lower-level classes flash.text.TextField (in the Player) and its TLF-based workalike, flashx.textLayout.controls.TLFTextField.", 
   "The global selector in defaults.css currently sets it to mx.core.UITextField using a ClassReference directive. For the time being, all Halo components will continue to use the \"real\" TextField.", 
   "The new UITLFTextField is a copy of UITextField, except that it extends TLFTextField instead of TextField. This class has been added to FrameworkClasses.as because no classes in framework.swc have a dependency on it. It will get soft-linked into applcations via the textFieldClass style.", 
   "The TLFTextField class currently lives in a fourth TLF SWC, textLayout_textField.swc. This SWC has been added to various build scripts. The external-library-path for building framework.swc now includes all four TLF SWCs, because UITLFTextField can't be compiled and linked without them. However, since they are external they aren't linked into framework.swc.", 
   "Properly-written Halo UIComponents access their text fields only through the IUITextField interface, and they create text fields like this:", 
   "textField = IUITextField(createInFontContext(UITextField));", 
   "(The reason for using createInFontContext() is to support embedded fonts that are embedded in a different SWF.)", 
   "The createInFontContext() method of UIComponent has been modified to use the textFieldClass style to determine whether to create a UITextField or a UITLFTextField.", 
   "With these changes, you can now write code like", 
   "<mx:Button label=\"OK\"/>", 
   "<mx:Button label=\"OK\" textFieldClass=\"mx.core.UITLFTextField\"/>", 
   "to get two Buttons, the first of which uses UITextField (because this is the value of textFieldClass in the global selector) and the second of which uses UITLFTextField. They look very similar, which is good!", 
   "Currently, both Buttons are being measured by using an offscreen TextField. A subsequent checkin will make components rendering using UITLFTextField measure themselves using an offscreen TLFTextField so that measurement and rendering are consistent.", 
   "QE Notes: None", 
   "Doc Notes: None", 
   "Bugs: None", 
   "Reviewer: Deepa", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/build.xml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/metadata/TextStyles.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/build.xml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/defaults.css</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/asdoc/build.xml</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UITLFTextField.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>"
  ], 
  "revision_id": "1258383"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T12:14:26.918827Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 4073", 
   "Author:   rfrishbe@adobe.com", 
   "Date:     2008-11-11T22:09:40.130593Z", 
   "Log Message:", 
   "-----------", 
   "Add IViewport properties to FxContainer and FxDataContainer.  This is using a new property delegation pattern.  This pattern may be refined later on.  For part of it, we are doing bit manipulation to store a set of booleans efficiently.  I removed the Flags32 class and replaced it with static helpers because it's more efficient without the object overhead.  So I cleaned up Button and ToggleButton to use the new static helper class.", 
   "Ran checkintests and mustella tests for: List, FxContainer, FxDataContainer, Button, ToggleButton, CheckBox, RadioButton.", 
   "QE Notes: Need to test these new properties (how they facade, setting them explicitly, what happens when skins changed, bindability of these properties, etc...)", 
   "Doc Notes: None", 
   "Bugs: -", 
   "Reviewer: Hans, Evtim", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/components/FxButton.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/components/FxDataContainer.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/components/FxToggleButton.as</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/utils/Flags32.as</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/utils/BitFlagUtil.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/components/FxContainer.as</path>"
  ], 
  "revision_id": "1258382"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T12:14:24.518201Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 3930", 
   "Author:   egreenfi@adobe.com", 
   "Date:     2008-10-28T16:30:24.729265Z", 
   "Log Message:", 
   "-----------", 
   "Step 1 of memory improvements", 
   "GraphicElement now optimizes away its AdvancedLayoutFeatures as long is has a trivial (translation only) transform matrix.", 
   "Added a new OnDemandEventDispatcher class that only allocates memory for event dispatcher functionality when it gets its first listener.", 
   "GraphicElement, OverrideBase, and LayoutBase extend OnDemandEventDispatcher.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/states/OverrideBase.as</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/utils/OnDemandEventDispatcher.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/graphics/LinearGradientStroke.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/graphics/RadialGradientStroke.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/graphics/LinearGradient.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/graphics/graphicsClasses/GraphicElement.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/mx/layout/LayoutBase.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/graphics/RadialGradient.as</path>"
  ], 
  "revision_id": "1258381"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T12:14:21.370188Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 3594", 
   "Author:   pfarland@adobe.com", 
   "Date:     2008-10-13T18:00:52.025975Z", 
   "Log Message:", 
   "-----------", 
   "Initial check-in for Advanced CSS selector support. Note that since direct AST generation for advanced styles (i.e. equivalent code of StyleModule.vm, StyleDef.vm, ClassDefLib.vm) is not yet implemented and as such advanced selector support is only enabled when the compiler -keep=true is enabled at this time. Direct AST generation to follow.", 
   "This change adds support for descendant type selectors (e.g. Panel VBox Button), non-global class selectors (e.g. Button.special), id selectors (e.g. Button#button14), and combinations of these types of selectors (e.e. Panel.special VBox.box12 Button.cancel). Pseudo selector awareness is included but it is not yet wired up to the runtime states mechanism as an efficient method of reacting to state changes is still being developed. Combinator conditional global selectors will be supported soon (i.e. the scenario of combining both an id and class selector at the top level, e.g. .foo#foo12, this requires a more expensive search of global class selectors).", 
   "This change juggles both the introduction of advanced selector support while retaining legacy styles APIs. The major difference with advanced styles is that multiple styles need to be considered for a type. This requires new data structures to keep track of selectors by subject. Performance analysis will be conducted to ensure these new data structures do not add unacceptable overhead to the style subsystem.", 
   "For the compiler this change consolidates styles processing in the base StyleModule class and then MXML-specific overrides (i.e. inline <Styles> nodes and SWC defaults.css) are in the StylesContainer.java class, which now extends StyleModule. The existing structure for legacy simple style codegen was retained and advanced style codegen wedged in.", 
   "QA: Yes", 
   "Doc: Not yet", 
   "Checkintests: Pass 100%", 
   "mxunit styles tests: Pass 100% (note that styles modules include tests you need to manually compile the .css files to swf and they're currently cleaned out each time a build runs... QE please correct this).", 
   "mustella styles tests: QE's select list of components testsuites pass 100%. Any failures in the full suite will be addressed in the next-checkin.", 
   "Reviewers: Glenn (framework), Paul (compiler)", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/CssCompiler.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/mxml/rep/MxmlDocument.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/tools/dependencychecker/frameworkSwcExceptionsList.txt</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/IStyleManager3.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/rpc/src/mx/messaging/config/ConfigMap.as</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleSelector.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleProperty.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleDeclaration.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/CSSSelectorKind.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/CSSConditionKind.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/FontFaceRule.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/mxml/ImplementationGenerator.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/IStyleClient.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/StyleManagerImpl.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/CSSStyleDeclaration.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleSheet.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleDocumentHandler.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/StyleProtoChain.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/CSSSelector.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/managers/SystemManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/StyleManager.as</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/StyleProperty.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/StyleModule.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/StyleModule.vm</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/IAdvancedStyleClient.as</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/styles/CSSCondition.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/mxml/gen/ClassDefLib.vm</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/Rule.java</path>", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleCondition.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/StyleDef.java</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/css/StyleDef.vm</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/modules/compiler/src/java/flash/css/StyleParser.java</path>"
  ], 
  "revision_id": "1258380"
 }, 
 {
  "author": "", 
  "date": "2012-01-30T12:14:18.758593Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 2905", 
   "Author:   clucier@adobe.com", 
   "Date:     2008-08-19T20:45:59.993275Z", 
   "Log Message:", 
   "-----------", 
   "Changes to allow UIComponent to take advantage of the new bindable filters (bindable wrappers around DropShadowFilter, GlowFilter, etc. that will force the filter stack to be re-evaluated when one or more of the filter parameters change). Checkin-tests: PASS", 
   "Reviewer: Jason", 
   "Bugs: SDK-16311", 
   "QA: Yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/graphics/Parser.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/ConvolutionFilter.as</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/BaseDimensionFilter.as</path>", 
   "<path kind=\"file\" copyfrom-path=\"/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/BaseDimensionFilter.as\" copyfrom-rev=\"2873\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/filters/BaseDimensionFilter.as</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/IBitmapFilter.as</path>", 
   "<path kind=\"file\" copyfrom-path=\"/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/IBitmapFilter.as\" copyfrom-rev=\"2873\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/filters/IBitmapFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/GradientGlowFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/graphics/graphicsClasses/GraphicElement.as</path>", 
   "<path kind=\"dir\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/filters</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/graphics/BitmapGraphic.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/BevelFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/GradientFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/ColorMatrixFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/BlurFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/core/Group.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/DisplacementMapFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/graphics/StrokedElement.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/GlowFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/tools/dependencychecker/flex/tools/dependencychecker/FrameworkSwcDependencyRules.java</path>", 
   "<path kind=\"file\" action=\"D\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/BaseFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/DropShadowFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/GradientBevelFilter.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/UIComponent.as</path>", 
   "<path kind=\"file\" copyfrom-path=\"/flex/sdk/trunk/frameworks/projects/flex4/src/flex/filters/BaseFilter.as\" copyfrom-rev=\"2873\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/filters/BaseFilter.as</path>"
  ], 
  "revision_id": "1258379"
 }
]