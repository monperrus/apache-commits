[
 {
  "author": "kfogel", 
  "date": "2007-08-22T07:01:57.741238Z", 
  "msg": [
   "Issue #2882: make 'commit --depth=foo' work.", 
   "* subversion/include/svn_client.h, subversion/libsvn_client/commit.c", 
   "(svn_client_commit4): Change recurse parameter to depth.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__harvest_committables): Take depth instead of nonrecursive.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(svn_client__harvest_committables): Take depth instead of nonrecursive.", 
   "(harvest_committables): Same, and remove a longstanding TODO with a", 
   "satisfying \"*thwack*!\".", 
   "(svn_client__get_copy_committables): Pass svn_depth_infinity,", 
   "not nonrecursive=FALSE, to harvest_committables.", 
   "* subversion/svn/commit-cmd.c", 
   "(svn_cl__commit): Pass opt_state->depth directly.", 
   "* subversion/tests/cmdline/depth_tests.py", 
   "(commit_propmods_with_depth_empty): New test.", 
   "(test_list): Run it.", 
   "* subversion/tests/cmdline/commit_tests.py", 
   "(commit_nonrecursive): Adjust to expect the new behavior."
  ], 
  "revision_id": "866315"
 }, 
 {
  "author": "rooneg", 
  "date": "2007-08-22T02:25:47.573169Z", 
  "msg": [
   "Inch closer to making mod_dontdothat return useful errors with all httpd", 
   "versions.  This gets us a useful error code, but doesn't include any kind", 
   "of useful error message.", 
   "* contrib/server-side/mod_dontdothat/mod_dontdothat.c", 
   "Include http_protocol.h.", 
   "(dontdothat_filter): Pass back a new brigade that contains only an error", 
   "bucket and eos.  Add comments about potential future work."
  ], 
  "revision_id": "866314"
 }, 
 {
  "author": "ehu", 
  "date": "2007-08-21T23:07:11.273782Z", 
  "msg": [
   "* subversion/libsvn_wc/props.c: Use SVN_ERR_W macro instead of manual wrapping."
  ], 
  "revision_id": "866313"
 }, 
 {
  "author": "ehu", 
  "date": "2007-08-21T23:03:28.434331Z", 
  "msg": [
   "Start cleaning up path calculations", 
   "now the loggy system doesn't require them anymore.", 
   "* subversion/libsvn_wc/props.h", 
   "* subversion/libsvn_wc/props.c", 
   "(svn_wc__merge_props,", 
   "svn_wc__install_props,", 
   "svn_wc__load_props): Convert from base name to path argument.", 
   "* subversion/libsvn_wc/props.c", 
   "(get_existing_prop_reject_file):", 
   "Convert from base name to path argument.", 
   "* subversion/libsvn_wc/copy.c", 
   "* subversion/libsvn_wc/lock.c", 
   "* subversion/libsvn_wc/update_editor.c", 
   "Update callers and delete the most obviously", 
   "now useless variables."
  ], 
  "revision_id": "866312"
 }, 
 {
  "author": "rooneg", 
  "date": "2007-08-21T22:29:03.415588Z", 
  "msg": [
   "Convert old svn_hash_read calls in fs_fs.c to new svn_hash_read2.  This", 
   "ends up saving 4 file system calls per transaction.  Much of the change", 
   "is concerned with handling the semantic difference betweent he two, where", 
   "svn_hash_read silently handles empty files and svn_hash_read2 does not.", 
   "This case is avoided by simply not creating the empty files in the first", 
   "place.", 
   "Patch by: Dan Christian <dchristian@google.com>", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(svn_fs_fs__revision_proplist): Switch to svn_hash_read2, and fix a minor", 
   "memory leak that happened if we retried on ESTALE.", 
   "(get_txn_proplist, get_txn_mergeinfo): Open without APR_CREATE and switch", 
   "to svn_hash_read2.", 
   "(svn_fs_fs__change_txn_prop, svn_fs_fs__change_txn_mergeinfo): Handle", 
   "file not existing yet."
  ], 
  "revision_id": "866311"
 }
]