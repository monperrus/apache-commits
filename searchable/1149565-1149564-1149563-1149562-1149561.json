[
 {
  "author": "ltheussl", 
  "date": "2011-07-22T10:58:42.950649Z", 
  "msg": [
   "ITs passed for me locally, let's see what Jenkins says"
  ], 
  "revision_id": "1149565"
 }, 
 {
  "author": "joern", 
  "date": "2011-07-22T10:56:29.244746Z", 
  "msg": [
   "OPENNLP-235 Added a sorter to the table."
  ], 
  "revision_id": "1149564"
 }, 
 {
  "author": "joern", 
  "date": "2011-07-22T10:55:57.146073Z", 
  "msg": [
   "OPENNLP-235 searchEntities now searches for intersecting entities, instead of entities with identical bounds."
  ], 
  "revision_id": "1149563"
 }, 
 {
  "author": "rwesten", 
  "date": "2011-07-22T10:50:21.006346Z", 
  "msg": [
   "STANBOL-297: Implementation of multiple text constraint that are treaded as OR", 
   "TextConstraint:", 
   "* For API changes please see the STANBOL-297", 
   "* Decided to return null instead of an empty list for getTexts() in case no TextConstraint is set. This will not require to change code if users just rename getText() to getTexts() and want to check if no textConstraint is set", 
   "* Empty an NULL elements parsed as Text Constraints are filtered. If after filtering no textConstraints are left, than null will be returned by getTexts()", 
   "SPARQL implementation:", 
   "* For Virtuoso the bif:contain feature is used for implementation", 
   "* For Larq the documentation says that the normal Lucene query syntax can be used. However the implementation was not tested because no LARQ server was available for testing", 
   "* For standard SPARQL 1.0 multiple filters are connected with '||'", 
   "* Score Boosts are not implemented. However an implementation for LARQ and Virtuoso should be possible.", 
   "Solr implementation:", 
   "* Queries are translated to nested OR and AND", 
   "* Scores are automatically provided by Solr", 
   "Documetnation:", 
   "* Updated the Documentation of the Query interface in the RESTful API documentation of the Entityhub to reflect this new feature", 
   "BugFix:", 
   "* Corrected a Bug in the SolrQuery generation. But I think nobody encountered it yet because in such case invalid SolrQueries would have had generated.", 
   "* Deleted the duplicate JSONToFieldQuery class that got somehow re-added to SVN after renaming it"
  ], 
  "revision_id": "1149562"
 }, 
 {
  "author": "vanto", 
  "date": "2011-07-22T10:48:35.735919Z", 
  "msg": [
   "distro lib folder should only contain :jar packages, nothing else."
  ], 
  "revision_id": "1149561"
 }
]