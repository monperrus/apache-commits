[
 {
  "author": "jmcnally", 
  "date": "2002-03-22T02:19:37.000000Z", 
  "msg": [
   "some changes related to my misunderstanding about calls to super()"
  ], 
  "revision_id": "228219"
 }, 
 {
  "author": "jmcnally", 
  "date": "2002-03-22T01:52:46.000000Z", 
  "msg": [
   "turns out you can't prevent the super() from being executed, so we cannot", 
   "call setRegion in BaseFooManager, or the manager cannot run in a cacheless", 
   "mode.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "228218"
 }, 
 {
  "author": "kaz", 
  "date": "2002-03-22T01:42:48.000000Z", 
  "msg": [
   "Temporarily removing the caching-howto until John feels comfortable with", 
   "the code."
  ], 
  "revision_id": "228217"
 }, 
 {
  "author": "jon", 
  "date": "2002-03-21T23:49:40.000000Z", 
  "msg": [
   "use the non-deprecated version of this method", 
   "-jon"
  ], 
  "revision_id": "228216"
 }, 
 {
  "author": "dlr", 
  "date": "2002-03-21T16:40:18.000000Z", 
  "msg": [
   "With prompting from Fedor, Bill Schneider <bschneider@vecna.com> has", 
   "run tests for us which show that standard JDBC escapes work in Oracle:", 
   "> > If Oracle has problems _with_ JDBC escapes it means that the driver is", 
   "not", 
   "> > JDBC compliant (I think this is unlikely).", 
   "> > Could Oracle users check that?", 
   ">", 
   "> Bill, did you try using the default implementation of", 
   "> getDateString(Date) from DB.java (in the same adapters package)?", 
   "the default implementation in DB.java actually works, I've found.   Oracle", 
   "lets you do {ts ' ... '} escapes, which I didn't know was part of the JDBC", 
   "spec.  The original DBOracle was broken because it overrode the default", 
   "method with one that didn't work.", 
   "-- Bill"
  ], 
  "revision_id": "228215"
 }
]