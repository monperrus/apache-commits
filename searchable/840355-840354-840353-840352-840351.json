[
 {
  "author": "cmpilato", 
  "date": "2001-10-22T21:50:50.048428Z", 
  "msg": [
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(dir_item_t, report_baton_t): Add fetch_props field.", 
   "(start_element): Delay fetching of properties until end_element.", 
   "(add_node_props): New helper function.", 
   "(end_element): Promoted to the position of being fully responsible", 
   "for fetching properties."
  ], 
  "revision_id": "840355"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-10-22T20:04:14.741941Z", 
  "msg": [
   "Patches very similar to those submitted by Mark Benedetto King", 
   "<bking@answerfriend.com> (I started writing this code on the train", 
   "before realizing someone else was already doing it).  I'm using", 
   "apr_strtok though to hopefully solve the newline \"issue\".", 
   "* subversion/include/svn_types.h", 
   "(SVN_PROP_IGNORE): New #define for ignore patterns.", 
   "* subversion/libsvn_wc/wc.h", 
   "(SVN_WC_SVNIGNORE): Removed obsolete #define.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(add_ignore_patterns): New function.", 
   "(load_ignore_file): Removed obsolete function.", 
   "(report_revisions): Use new add_ignore_patterns() instead of", 
   "load_ignore_file().", 
   "* .", 
   "* ac-helpers", 
   "* doc", 
   "* doc/programmer/design", 
   "* doc/user/manual", 
   "* doc/user/svn_for_cvs_users", 
   "* expat-lite", 
   "* subversion/bindings/guile", 
   "* subversion/bindings/java", 
   "* subversion/bindings/java/jni/org/tigris/subversion", 
   "* subversion/bindings/java/jni/org/tigris/subversion/lib", 
   "* subversion/bindings/perl", 
   "* subversion/bindings/python", 
   "* subversion/bindings/ruby", 
   "* subversion/bindings/tcl", 
   "* subversion/clients/cmdline", 
   "* subversion/clients/win32/svn_com", 
   "* subversion/include", 
   "* subversion/libsvn_client", 
   "* subversion/libsvn_delta", 
   "* subversion/libsvn_fs", 
   "* subversion/libsvn_ra", 
   "* subversion/libsvn_ra_dav", 
   "* subversion/libsvn_ra_local", 
   "* subversion/libsvn_repos", 
   "* subversion/libsvn_subr", 
   "* subversion/libsvn_wc", 
   "* subversion/mod_dav_svn", 
   "* subversion/svnadmin", 
   "* subversion/svnlook", 
   "* subversion/tests", 
   "* subversion/tests/clients/cmdline", 
   "* subversion/tests/clients/cmdline/svntest", 
   "* subversion/tests/clients/cmdline/xmltests", 
   "* subversion/tests/libsvn_delta", 
   "* subversion/tests/libsvn_fs", 
   "* subversion/tests/libsvn_ra_local", 
   "* subversion/tests/libsvn_repos", 
   "* subversion/tests/libsvn_subr", 
   "* subversion/tests/libsvn_wc", 
   "* tools/hook-scripts", 
   "* www", 
   "svn:ignore property set on these directories, based on the", 
   "respective contents of...", 
   "* .svnignore", 
   "* ac-helpers/.svnignore", 
   "* doc/.svnignore", 
   "* doc/programmer/design/.svnignore", 
   "* doc/user/manual/.svnignore", 
   "* doc/user/svn_for_cvs_users/.svnignore", 
   "* expat-lite/.svnignore", 
   "* subversion/bindings/guile/.svnignore", 
   "* subversion/bindings/java/.svnignore", 
   "* subversion/bindings/java/jni/org/tigris/subversion/.svnignore", 
   "* subversion/bindings/java/jni/org/tigris/subversion/lib/.svnignore", 
   "* subversion/bindings/perl/.svnignore", 
   "* subversion/bindings/python/.svnignore", 
   "* subversion/bindings/ruby/.svnignore", 
   "* subversion/bindings/tcl/.svnignore", 
   "* subversion/clients/cmdline/.svnignore", 
   "* subversion/clients/win32/svn_com/.svnignore", 
   "* subversion/include/.svnignore", 
   "* subversion/libsvn_client/.svnignore", 
   "* subversion/libsvn_delta/.svnignore", 
   "* subversion/libsvn_fs/.svnignore", 
   "* subversion/libsvn_ra/.svnignore", 
   "* subversion/libsvn_ra_dav/.svnignore", 
   "* subversion/libsvn_ra_local/.svnignore", 
   "* subversion/libsvn_repos/.svnignore", 
   "* subversion/libsvn_subr/.svnignore", 
   "* subversion/libsvn_wc/.svnignore", 
   "* subversion/mod_dav_svn/.svnignore", 
   "* subversion/svnadmin/.svnignore", 
   "* subversion/svnlook/.svnignore", 
   "* subversion/tests/.svnignore", 
   "* subversion/tests/clients/cmdline/.svnignore", 
   "* subversion/tests/clients/cmdline/svntest/.svnignore", 
   "* subversion/tests/clients/cmdline/xmltests/.svnignore", 
   "* subversion/tests/libsvn_delta/.svnignore", 
   "* subversion/tests/libsvn_fs/.svnignore", 
   "* subversion/tests/libsvn_ra_local/.svnignore", 
   "* subversion/tests/libsvn_repos/.svnignore", 
   "* subversion/tests/libsvn_subr/.svnignore", 
   "* subversion/tests/libsvn_wc/.svnignore", 
   "* tools/hook-scripts/.svnignore", 
   "* www/.svnignore", 
   "...these files, which are now removed from revision control."
  ], 
  "revision_id": "840354"
 }, 
 {
  "author": "kevin", 
  "date": "2001-10-22T15:42:03.897837Z", 
  "msg": [
   "Fix the behaviour of the status command with respect to the", 
   "non-recursive option", 
   "* libsvn_wc/status.c:svn_wc_statuses - Only fetch directory statuses if", 
   "descend is set to true.  This makes the behaviour of status consistent with", 
   "update, et. al in that it won't show directory entries if --nonrecursive", 
   "is passed.", 
   "* libsvn_wc/status_editor.c:tweak_statushash - Remove the code related to", 
   "filtering recursive responses from the ra layer, since svn_repos_dir_delta", 
   "can now handle non-recursive behaviour, and so doesn't send those messages."
  ], 
  "revision_id": "840353"
 }, 
 {
  "author": "kevin", 
  "date": "2001-10-22T14:55:30.477858Z", 
  "msg": [
   "Make nonrecursive checkouts work. (I know this was low priority, but it was", 
   "easy once I got nonrecursive updates working).", 
   "* include/svn_ra.h:do_checkout - Add recurse argument.", 
   "* libsvn_ra_local/ra_plugin.c:do_checkout - Add recurse argument, pass to", 
   "svn_ra_local__checkout", 
   "* libsvn_ra_local/ra_local.h:svn_ra_local__checkout - Add recurse arg.", 
   "* libsvn_ra_local/checkout.c:walk_tree - take recurse arg.  Only recurse", 
   "if it is true.", 
   "* libsvn_ra_local/checkout.c:svn_ra_local__checkout - Take new recurse arg,", 
   "pass to walk_tree.", 
   "* libsvn_client/checkout.c:svn_client_checkout - Pass recurse arg to", 
   "ra_lib->do_checkout.", 
   "* libsvn_ra_dav/ra_dav.h:svn_ra_dav__do_checkout - Take new recurse arg.", 
   "* libsvn_ra_dav/fetch.c:svn_ra_dav__do_checkout - Take new recurse arg,", 
   "use it instead of always using a variable equal to 1."
  ], 
  "revision_id": "840352"
 }, 
 {
  "author": "sussman", 
  "date": "2001-10-22T14:43:21.193334Z", 
  "msg": [
   "(SVN_VER_NAME): duh, set to M5."
  ], 
  "revision_id": "840351"
 }
]