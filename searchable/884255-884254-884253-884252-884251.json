[
 {
  "author": "taylor", 
  "date": "2009-11-25T20:36:43.370477Z", 
  "msg": [
   "https://issues.apache.org/jira/browse/JS2-1085", 
   "A Bug surfaced in Category Portlet Selector when storing defaults, the selector threw an NPE during store to persistent preferences. Discovered that the selector was still coded against 2.1.3 apis, and needed to be updated. Then discovered the PortletDefinitionImpl never keeps a copy of the Preferences collection, but always delegates to the Preferences Provider to retrieve preferences, and then wrappers the result from the provider with every accessor call. The selector was often dereferencing the prefs collection. This should not be a problem in a normal transactional environment... For now, the problem can be avoided by only dereferencing once, making manipulations to the held Preferences, and then 'committing' with a new storeDefaults api which takes a second Preferences handle. Also got bogged down in an OJB debugging session that turned out to be a simple typo in the OJB mapping file (username is not a primary key(!))."
  ], 
  "revision_id": "884255"
 }, 
 {
  "author": "taylor", 
  "date": "2009-11-25T20:35:29.224188Z", 
  "msg": [
   "https://issues.apache.org/jira/browse/JS2-1085", 
   "A Bug surfaced in Category Portlet Selector when storing defaults, the selector threw an NPE during store to persistent preferences. Discovered that the selector was still coded against 2.1.3 apis, and needed to be updated. Then discovered the PortletDefinitionImpl never keeps a copy of the Preferences collection, but always delegates to the Preferences Provider to retrieve preferences, and then wrappers the result from the provider with every accessor call. The selector was often dereferencing the prefs collection. This should not be a problem in a normal transactional environment... For now, the problem can be avoided by only dereferencing once, making manipulations to the held Preferences, and then 'committing' with a new storeDefaults api which takes a second Preferences handle. Also got bogged down in an OJB debugging session that turned out to be a simple typo in the OJB mapping file (username is not a primary key(!))."
  ], 
  "revision_id": "884254"
 }, 
 {
  "author": "olegk", 
  "date": "2009-11-25T20:34:26.258172Z", 
  "msg": [
   "Updated release notes for 4.1-alpha1 release"
  ], 
  "revision_id": "884253"
 }, 
 {
  "author": "pgier", 
  "date": "2009-11-25T20:32:46.421421Z", 
  "msg": [
   "[MANTTASKS-4] Fix path when dependencies have system scope.  Always create a fileset ref for each artifact and deprecate option addArtifactFileSetRefs."
  ], 
  "revision_id": "884252"
 }, 
 {
  "author": "jleroux", 
  "date": "2009-11-25T20:31:38.982226Z", 
  "msg": [
   "Fix a typo in JavaDoc found by Eclipse"
  ], 
  "revision_id": "884251"
 }
]