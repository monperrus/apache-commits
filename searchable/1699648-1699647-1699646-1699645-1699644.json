[
 {
  "author": "lgo", 
  "date": "2013-08-06T19:56:20.798558Z", 
  "msg": [
   "Remove socket cleanup handler, as apr sets such handler automatically.", 
   "This avoids \"invalid file descriptor -1 in syscall close()\" when run under", 
   "valgrind.", 
   "* test/server/test_server.c", 
   "(cleanup_server): Remove.", 
   "(setup_test_server): Don't set cleanup handler."
  ], 
  "revision_id": "1699648"
 }, 
 {
  "author": "lgo", 
  "date": "2013-08-06T19:25:41.588465Z", 
  "msg": [
   "Don't ignore error status.", 
   "* auth/auth_digest.c:", 
   "(build_digest_ha1, build_digest_ha2,", 
   "build_auth_header): Return apr_status_t, return result as out parameter.", 
   "(random_cnonce, serf__handle_digest_auth,", 
   "serf__setup_request_digest_auth,", 
   "serf__validate_response_digest_auth): Update calls to the above changed", 
   "functions, handle status if not APR_SUCCESS."
  ], 
  "revision_id": "1699647"
 }, 
 {
  "author": "lgo", 
  "date": "2013-08-06T19:09:17.248166Z", 
  "msg": [
   "* test/server/test_server.c", 
   "(replay, proxy_replay): Fix 'incompatible pointer' compiler warnings and", 
   "narrow variable scope."
  ], 
  "revision_id": "1699646"
 }, 
 {
  "author": "lgo", 
  "date": "2013-08-06T19:03:00.397684Z", 
  "msg": [
   "Fix unitialized value in the test suite.", 
   "* test/CuTest.c", 
   "(CuAssertStrnEquals_LineMsg): Check for expected length == 0 first, the", 
   "actual data pointer is not necessarily initialized in that case."
  ], 
  "revision_id": "1699645"
 }, 
 {
  "author": "lgo", 
  "date": "2013-08-05T09:59:59.034640Z", 
  "msg": [
   "On the 1.3.x branch:", 
   "* serf.h: set patch version for 1.3.1."
  ], 
  "revision_id": "1699644"
 }
]