[
 {
  "author": "cmpilato", 
  "date": "2012-10-30T00:23:38.401741Z", 
  "msg": [
   "Tweak the server-side logic which validates update report source and", 
   "target revision values so that they always get checked for validity,", 
   "not only when doing non-client-pegged updates.", 
   "* subversion/mod_dav_svn/reports/update.c", 
   "(validate_input_revision): New helper function.", 
   "(dav_svn__update_report): Always query the youngest FS revision, and", 
   "use it (via validate_input_revision()) to raise errors when the", 
   "client requests an update to a revision younger than is available", 
   "or reports that it has objects whose revision is greater than the", 
   "youngest.", 
   "* subversion/tests/cmdline/update_tests.py", 
   "(update_to_HEAD_plus_1): Look for an error code, not a particular", 
   "string."
  ], 
  "revision_id": "1403588"
 }, 
 {
  "author": "erans", 
  "date": "2012-10-30T00:21:20.783746Z", 
  "msg": [
   "MATH-884", 
   "Added methods \"isSymmetric\" and \"checkSymmetric\"."
  ], 
  "revision_id": "1403587"
 }, 
 {
  "author": "cmpilato", 
  "date": "2012-10-30T00:11:16.665472Z", 
  "msg": [
   "We *really* shouldn't be passing a 0 error code of to our mod_dav_svn", 
   "create-an-xml-error-tag logic anyway, but just in case, teach our", 
   "helper functions to keep at least a sane default value on standby.", 
   "* subversion/mod_dav_svn/dav_svn.h,", 
   "* subversion/mod_dav_svn/util.c", 
   "(dav_svn__new_error, dav_svn__new_error_tag): If the provided error", 
   "code is 0, use SVN_ERR_RA_DAV_REQUEST_FAILED."
  ], 
  "revision_id": "1403586"
 }, 
 {
  "author": "rhs", 
  "date": "2012-10-30T00:09:11.485481Z", 
  "msg": [
   "added missing typedefs for swig interface; fixed UUID tostring"
  ], 
  "revision_id": "1403585"
 }, 
 {
  "author": "ansell", 
  "date": "2012-10-29T23:58:14.279951Z", 
  "msg": [
   "fix nquads specification URL and cleanup source code on site/supported-formats.html"
  ], 
  "revision_id": "1403584"
 }
]