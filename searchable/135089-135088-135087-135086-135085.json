[
 {
  "author": "jstrachan", 
  "date": "2002-07-22T08:00:36.000000Z", 
  "msg": [
   "Added some initial documentation of the JellyUnit features and the JUnit library in Jelly"
  ], 
  "revision_id": "135089"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-07-22T07:58:49.000000Z", 
  "msg": [
   "Patched the tag class names so that the auto generated tag reference documentation matches the real names of the tags"
  ], 
  "revision_id": "135088"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-07-22T07:16:52.000000Z", 
  "msg": [
   "Enhanced the JUnit tag library so that TestSuite and TestCase objects can be created in Jelly script so that unit testing becomes easy to do via Jelly scripts.", 
   "This also means that Jelly can be integrated easily into existing test runners.", 
   "See the src/test/org/apache/commons/jelly/junit/ directory for details of how this works; there you'll find a suite.jelly which is the test suite and a TestJUnit.java class which is a simple class to bind the suite.jelly into Ant's default JUnit test runner.", 
   "This class should be usable in any JUnit test runner, since it provides a class with a static suite() method, yet internally it uses one or more Jelly scripts to actually create the individual TestCase objects.", 
   "So the new JellyUnit capabilities can be seamlessly integrated with traditional Java test cases. So users can now use either Java or Jelly; intermixing the two to use the best tool for the job. So now Jelly could be used for XML, SOAP, SQL, HTTP & JMS testing and such like."
  ], 
  "revision_id": "135087"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-07-20T08:12:04.000000Z", 
  "msg": [
   "Added the core features of a JUnit library for Jelly.", 
   "So usual JUnit style operations can be performed in an Ant script such as..", 
   "<assert test=\"${foo.bar != null}\">oh dear its broken</assert>", 
   "or XPath assertions", 
   "<assert xpath=\"/foo/bar[count(beer) != 0]\">bar is dry!</assert>", 
   "or a helper for testing equality", 
   "<assertEquals actual=\"${foo}\" expected=\"${xyz}\"/>", 
   "<fail>this test has failed</fail>"
  ], 
  "revision_id": "135086"
 }, 
 {
  "author": "plynch", 
  "date": "2002-07-20T07:55:16.000000Z", 
  "msg": [
   "o adding a workaround for Ant 1.5 <manifest> task. IN Ant 1.4.1 manifest was only inside a jar task. In Ant 1.5 it can also be standalone. Couldn't find a better way to detect this than checking the tagname. If the check is not there, processing fails because it treats it as the manifest attribute of the jar task and complains about \"file\" attribute being required.", 
   "This change should unaffect ant 1.4.1 users."
  ], 
  "revision_id": "135085"
 }
]