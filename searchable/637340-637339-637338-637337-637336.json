[
 {
  "author": "brianf", 
  "date": "2008-03-15T03:03:48.200390Z", 
  "msg": [
   "shortened the method names to match the patterns"
  ], 
  "revision_id": "637340"
 }, 
 {
  "author": "dwoods", 
  "date": "2008-03-15T02:39:51.244854Z", 
  "msg": [
   "upgrade to latest released geronimo-activation level"
  ], 
  "revision_id": "637339"
 }, 
 {
  "author": "brianf", 
  "date": "2008-03-15T02:36:09.192692Z", 
  "msg": [
   "reversed the order of the tests: new tests that are more likely to fail will be towards the top and having it count down to zero provides a better judge of how far a test run has to go."
  ], 
  "revision_id": "637338"
 }, 
 {
  "author": "gdamour", 
  "date": "2008-03-15T02:31:20.624672Z", 
  "msg": [
   "* Add two AspectJ related project and plugin:", 
   "- plugins/aspectj/geronimo-aspectj: define an AspectJLTWeaver GBean", 
   "installing a org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter with", 
   "the TransformerCollection. Thanks to David J. who explained me how", 
   "ClassFileTransformers can be registered via GBeans; and", 
   "- plugins/aspectj/aspectj: define a configuration importing the necessary", 
   "AspectJ dependencies and register the above LTW service.", 
   "This allows application developers to easily achieve load-time-weaving of", 
   "AspectJ aspects through the definition of META-INF/aop.xml resources within", 
   "their configurations when they are children of the aspectj configuration.", 
   "Fixes GERONIMO-3922 - Addition of an AspectJ configuration enabling the", 
   "load-time-weaving of aspects defined by children configurations", 
   "* Upgrade to AspectJ 1.5.4 as suggested by Donald.", 
   "* Make wadi-clustering a child configuration of aspectj so that wadi-aop", 
   "aspects are lod-time-woven, if need be."
  ], 
  "revision_id": "637337"
 }, 
 {
  "author": "dkulp", 
  "date": "2008-03-15T02:29:41.206261Z", 
  "msg": [
   "More fixes to allow a better header."
  ], 
  "revision_id": "637336"
 }
]