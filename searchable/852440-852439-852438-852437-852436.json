[
 {
  "author": "jszakmeister", 
  "date": "2004-12-18T12:34:52.672787Z", 
  "msg": [
   "Merge r11483, r12072, r12157, r12158, and r12180 (Issue #2091):", 
   "Unitialized variable on Win98.", 
   "Approved by:", 
   "+1: jszakmeister, dionisos, maxb"
  ], 
  "revision_id": "852440"
 }, 
 {
  "author": "jpieper", 
  "date": "2004-12-18T11:57:45.886360Z", 
  "msg": [
   "Make the checkout subcommand accept peg revisions and follow history.", 
   "Update the test suite so that tests which refer to past revisions do", 
   "not rely on the default value of the peg revision in order to pass.", 
   "* subversion/include/svn_client.h", 
   "(svn_client_checkout2): New API that provides a peg revision parameter.", 
   "(svn_client_checkout): Deprecated.", 
   "* subversion/libsvn_client/client.h", 
   "(svn_client__checkout_internal): Extend to accept a peg revision", 
   "parameter.", 
   "* subversion/libsvn_client/externals.c", 
   "(handle_external_item_change): Use the new form of", 
   "svn_client__checkout_internal.  Set the peg revision to be the", 
   "same as the desired revision, so as to maintain backwards", 
   "compatible externals definitions.", 
   "* subversion/libsvn_client/checkout.c", 
   "(svn_client__checkout_internal): Accept a peg revision parameter and", 
   "use svn_client__ra_lib_from_path to get the RA connection.", 
   "(svn_client_checkout2): New, implement.", 
   "(svn_client_checkout): Implement in terms of svn_client_checkout2.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_wc_copy): Update the the new", 
   "svn_client__checkout_internal.  For now set the peg revision the", 
   "same as the desired revision, until the 'svn copy' subcommand", 
   "starts accepting peg revisions.", 
   "* subversion/clients/cmdline/checkout-cmd.c", 
   "(svn_cl__checkout): Accept peg revisions and use", 
   "svn_client_checkout2.", 
   "* subversion/clients/cmdline/main.c", 
   "(svn_cl__cmd_table): Update the help text for 'svn checkout'.", 
   "* subversion/tests/clients/cmdline/stat_tests.py: (status_on_forward_deletion)", 
   "* subversion/tests/clients/cmdline/basic_tests.py: (basic_checkout_deleted)", 
   "* subversion/tests/clients/cmdline/update_tests.py: (nested_in_read_only)", 
   "Specify the appropriate peg revisions to 'svn checkout'."
  ], 
  "revision_id": "852439"
 }, 
 {
  "author": "ehu", 
  "date": "2004-12-18T09:50:39.886961Z", 
  "msg": [
   "Add FAQ about svnadmin hotcopy failing on 2Gb+ strings tables.", 
   "* www/project_faq.html (hotcopy-large-repos): New."
  ], 
  "revision_id": "852438"
 }, 
 {
  "author": "fitz", 
  "date": "2004-12-18T06:08:25.146056Z", 
  "msg": [
   "When checking for locks, if checking a directory non-recursively, it", 
   "won't have a lock on it since directory locking is not supported, so", 
   "return immediately.", 
   "With this commit, all tests in tests/libsvn_fs now pass, which, of", 
   "course, means nothing other than the fact that we have poor test", 
   "coverage. :)", 
   "* libsvn_fs_fs/lock.c (svn_fs_fs__allow_locked_operation): Return", 
   "SVN_NO_ERROR when passed a directory with RECURSE set to False."
  ], 
  "revision_id": "852437"
 }, 
 {
  "author": "fitz", 
  "date": "2004-12-18T05:39:07.697408Z", 
  "msg": [
   "Finish integrating locking functionality with the rest of fs_fs.", 
   "Revision_link uses copy_helper, which is already checking for locks.", 
   "* libsvn_fs_fs/tree.c (apply_text, apply_textdelta): Check for locked paths if", 
   "SVN_FS_TXN_CHECK_LOCKS is set in txn_flags."
  ], 
  "revision_id": "852436"
 }
]