[
 {
  "author": "stylesen", 
  "date": "2009-10-22T09:18:45.571759Z", 
  "msg": [
   "Follow up r40146.", 
   "* subversion/libsvn_fs_base/bdb/changes-table.c", 
   "(svn_fs_bdb__changes_fetch): Use svn_uri_is_child().", 
   "See http://svn.haxx.se/dev/archive-2009-10/0549.shtml", 
   "Suggested by: rhuijben"
  ], 
  "revision_id": "880245"
 }, 
 {
  "author": "gstein", 
  "date": "2009-10-22T09:15:47.455909Z", 
  "msg": [
   "Record the proper depth when committing a node.", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(commit_node): if the node is a directory, then fetch the depth (string)", 
   "from the WORKING_NODE or the BASE_NODE table, then bind it for the", 
   "update/insert."
  ], 
  "revision_id": "880244"
 }, 
 {
  "author": "gstein", 
  "date": "2009-10-22T06:01:03.722445Z", 
  "msg": [
   "Generalize the (de)serialization code from the sqlite support.", 
   "* subversion/include/svn_checksum.h:", 
   "(svn_checksum_serialize, svn_checksum_deserialize): new declarations", 
   "* subversion/libsvn_subr/checksum.c:", 
   "(svn_checksum_serialize, svn_checksum_deserialize): new implementation,", 
   "based on the code from sqlite.c", 
   "* subversion/libsvn_subr/sqlite.c:", 
   "(svn_sqlite__bind_checksum): replace code with svn_checksum_serialize", 
   "(svn_sqlite__column_checksum): replace code with a call to", 
   "svn_checksum_deserialize."
  ], 
  "revision_id": "880243"
 }, 
 {
  "author": "joeswatosh", 
  "date": "2009-10-22T05:38:28.950183Z", 
  "msg": [
   "Don't pass nulls to svn_wc_ensure_admin4.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnTestWc#test_adm_ensure): Pass non-nils to Svn::Wc.ensure_admin so", 
   "non-nulls are passed to svn_wc_ensure_admin4 for path and uuid arguments."
  ], 
  "revision_id": "880242"
 }, 
 {
  "author": "gstein", 
  "date": "2009-10-22T03:16:18.741136Z", 
  "msg": [
   "Prepare log_do_committed() for heavy-lifting over to workqueue.c. Update", 
   "the params to typical wc-ng style.", 
   "* subversion/libsvn_wc/log.c:", 
   "(log_do_committed): switch to a DB/LOCAL_ABSPATH pair, and take all the", 
   "values for the new revision. pass a SCRATCH_POOL. adjust all", 
   "references to loggy->db to simply DB. uses of loggy->adm_abspath are", 
   "typically on the directory-branch of the logic, so just use", 
   "local_abspath.", 
   "(state_handler): revamp the call to log_do_committed(). most params are", 
   "not available, so we just use fill-in constants."
  ], 
  "revision_id": "880241"
 }
]