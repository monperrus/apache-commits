[
 {
  "author": "seelmann", 
  "date": "2011-07-28T21:23:18.549424Z", 
  "msg": [
   "Fix more compilation errors"
  ], 
  "revision_id": "1152005"
 }, 
 {
  "author": "johnh", 
  "date": "2011-07-28T21:13:50.476736Z", 
  "msg": [
   "Decline to inject ___jsl.u=\"\" or \"null\" when an empty value is present."
  ], 
  "revision_id": "1152004"
 }, 
 {
  "author": "stack", 
  "date": "2011-07-28T21:12:50.250109Z", 
  "msg": [
   "HBASE-3065  Retry all 'retryable' zk operations; e.g. connection loss; addendum... split log zk code url encodes which interacts w/ new naming of znodes that this patch introduces... this commit fixes testslitlogworker"
  ], 
  "revision_id": "1152003"
 }, 
 {
  "author": "johnh", 
  "date": "2011-07-28T21:12:45.566771Z", 
  "msg": [
   "Improve exportJs() in the face of potentially nonexistent symbols.", 
   "When exportJs(...) is used in deferred-binding mode, its namespaces usually don't already exist. Example for fictional API foo.bar.baz:", 
   "exportJs(\"foo.bar\", [foo,foo.bar], {baz:\"baz\"}, 1);", 
   "This is problematic because the namespaced vars, when interpreted by the browser, do not yet exist and thus throw an error. To get around this with the root namespace, we prepended \"window.\", but this simply supports one-layer NS.", 
   "This CL changes the pattern to:", 
   "exportJs(\"foo.bar\", { foo: \"foo\", bar: \"bar\" }, { baz: \"baz\" }, 1);", 
   "The export method uses the second argument's symbol map to generate/upsert namespaces based on the possibly-obfuscated symbol expansions. Support in the JS is provided for both new- and old-style (array and Object) for a time to prevent version skew issues. The Array-based approach will be removed later."
  ], 
  "revision_id": "1152002"
 }, 
 {
  "author": "danielsh", 
  "date": "2011-07-28T21:05:14.163802Z", 
  "msg": [
   "On the revprop-packing branch, merge r1151916 r1151954 r1151957 from trunk,", 
   "resolving conflicts, with a 1.7.0-beta1 client."
  ], 
  "revision_id": "1152001"
 }
]