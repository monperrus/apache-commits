[
 {
  "author": "glyn", 
  "date": "2002-02-20T13:46:09.000000Z", 
  "msg": [
   "Add interop. round 3, group E tests.", 
   "Note that the InteropTestDocLit runs with rpc/enc until Axis supports doc/lit", 
   "on the server side.", 
   "These tests do not export any new endpoints from apache.org and do not call any", 
   "endpoints on the internet."
  ], 
  "revision_id": "253529"
 }, 
 {
  "author": "scheu", 
  "date": "2002-02-19T22:46:41.000000Z", 
  "msg": [
   "TestClient runs 2B Interop Tests if -A is specified"
  ], 
  "revision_id": "253528"
 }, 
 {
  "author": "tomj", 
  "date": "2002-02-19T20:55:00.000000Z", 
  "msg": [
   "Add a 'dotnet' internal switch to the symbol table to prevent treating", 
   "document style WSDL as rpc.  Right now this switch gets turned on", 
   "when we encounter an <attribute> tag in the XML Schema types.", 
   "Validate the service name to prevent emitting strange empty filenames.", 
   "Comming soon, emit the correct bean function for attributes to direct Axis to", 
   "serialize/deserialize bean properties as attributes."
  ], 
  "revision_id": "253527"
 }, 
 {
  "author": "tomj", 
  "date": "2002-02-19T20:50:46.000000Z", 
  "msg": [
   "First step to supporting <attribute> in schema types:", 
   "Add support for bean properties which are attributes instead of element.", 
   "If the bean has a static getAttributeElements() function, which returns a", 
   "Vector of property names, we use this to serialize/deserialize those properties", 
   "as attributes on the element."
  ], 
  "revision_id": "253526"
 }, 
 {
  "author": "scheu", 
  "date": "2002-02-19T17:38:23.000000Z", 
  "msg": [
   "The following changes are submitted by Richard Sitze.", 
   "Summary of Changes:", 
   "Use the org.apache.common.logging apis as a common logging interface.", 
   "1. Changed all of the source files to use the new logging interface.", 
   "Example:", 
   "Before:", 
   "<     static Category category =", 
   "<             Category.getInstance(AxisEngine.class.getName());", 
   "<         if (category.isDebugEnabled())", 
   "<             category.debug(JavaUtils.getMessage(\"enter00\", \"AxisEngine::init\"));", 
   "After:", 
   ">     static Log log =", 
   ">             LogFactory.getLog(AxisEngine.class.getName());", 
   ">         if (log.isDebugEnabled())", 
   ">             log.debug(JavaUtils.getMessage(\"enter00\", \"AxisEngine::init\"));", 
   "2.  log4j.properties:  I renamed \"A1\" to \"CONSOLE\", and added a new", 
   "appender named \"LOGFILE\".  The CONSOLE appender will ignore logging below", 
   "the FATAL threshold (consistent with original use).  The LOGFILE appender", 
   "is not used by default.  If enabled, it captures INFO message or higher.", 
   "The properties file can now be easily modified to capture DEBUG messages", 
   "(change INFO to DEBUG) to a file without dumping EVERYTHING to the", 
   "console...", 
   "3.  attachments/MimeUtils.java: minor changes to comments that allowed", 
   "Rational Rose to reverse engineer this file...", 
   "4.  New file TestSrcContent.java.  This is a generic test tool that looks", 
   "for strings to \"avoid\" in the content of the source tree.  It is based on", 
   "TestMessages.java.  Currently it only checks for \"org.apache.log4j\" (which", 
   "covers imports or other references to the package or classes in the", 
   "package).  In the future we might consider adding \"System.out.println\" to", 
   "that...", 
   "5. Added the commons-logging.jar file and license."
  ], 
  "revision_id": "253525"
 }
]