[
 {
  "author": "hwright", 
  "date": "2007-05-25T05:24:45.485490Z", 
  "msg": [
   "On the merge-sensitive-log branch:", 
   "* subversion/include/svn_mergeinfo.h,", 
   "subversion/libsvn_subr/mergeinfo.c", 
   "(svn_rangelist_to_revs): Const-ify a constant parameter."
  ], 
  "revision_id": "865215"
 }, 
 {
  "author": "hwright", 
  "date": "2007-05-25T05:19:34.647860Z", 
  "msg": [
   "On the merge-sensitive-log branch:", 
   "Include merged revisions in the list of log messages returned by the", 
   "repository, if requested.", 
   "This patch, in my mind, is the crux of the merge-sensitive-log issue.  It works", 
   "for simple cases, and I'll be updating the command-line client shortly to", 
   "use the new information returned from the repository.", 
   "There are probably still bugs, and I haven't thoroughly tested nested merges,", 
   "but this goes a long way toward accomplishing the merge sensitive log goal.", 
   "* subversion/libsvn_repos/log.c", 
   "(get_combined_rangelist, get_merge_changed_rangelist, send_child_revs):", 
   "New helper functions.", 
   "(send_change_rev): If requested, check for merged revisions, and send them", 
   "after sending the original revision.", 
   "(svn_repos_get_logs4): Pass extra parameters fo send_change_rev()."
  ], 
  "revision_id": "865214"
 }, 
 {
  "author": "hwright", 
  "date": "2007-05-25T04:54:29.773492Z", 
  "msg": [
   "On the merge-sensitive-log branch:", 
   "Add an API to split the individual revisions out of a rangelist.", 
   "* subversion/include/svn_mergeinfo.h", 
   "(svn_rangelist_to_revs): New prototype.", 
   "* subversion/libsvn_subr/mergeinfo.c", 
   "(svn_rangelist_to_revs): New function.", 
   "* subversion/tests/libsvn_subr/mergeinfo-test.c", 
   "(test_rangelist_to_revs): New test.", 
   "(test_funcs): Add the new test to the list of tests to run."
  ], 
  "revision_id": "865213"
 }, 
 {
  "author": "hwright", 
  "date": "2007-05-25T04:27:21.048971Z", 
  "msg": [
   "On the merge-sensitive-log branch:", 
   "Add a new API used to determine all of the mergeinfo for each path, and its", 
   "children, in a set of paths.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(root_vtable_t): Add get_children_mergeinfo().", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_get_children_mergeinfo): New function.", 
   "* subversion/libsvn_fs_base/tree.c,", 
   "subversion/libsvn_fs_fs/tree.c", 
   "(root_vtable): Add svn_fs_mergeinfo__get_children_mergeinfo().", 
   "* subversion/libsvn_fs_util/mergeinfo-sqlite-index.c", 
   "(get_mergeinfo_for_children): New function.", 
   "(svn_fs_mergeinfo__get_children_mergeinfo): New function.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_get_children_mergeinfo): New prototype.", 
   "* subversion/include/private/svn_fs_mergeinfo.h", 
   "(svn_fs_mergeinfo__get_children_mergeinfo): New prototype."
  ], 
  "revision_id": "865212"
 }, 
 {
  "author": "djh", 
  "date": "2007-05-25T00:09:42.649503Z", 
  "msg": [
   "Fix the undefined behavior invoked when the fs module is dynamically", 
   "unloaded and the bdb cache tries to clean itself up.", 
   "This occurred because the bdb cache was allocated in the global pool", 
   "which gets cleaned up *after* the fs module has been unloaded from", 
   "memory (meaning the cleanup hook code may or may not still", 
   "actually be there depending on what the OS does with the newly freed", 
   "memory).", 
   "The fix is to pass the fs module's common_pool down to the fs_base", 
   "and fs_fs module's init routines so that they can allocate fs global", 
   "stuff and know that they can clean it up before they are unloaded.", 
   "In addition, this changes the fs modules vtables to get rid of the", 
   "serialized_init function.  Instead, we serialize open/create calls", 
   "passing them the common_pool and they then call their own init", 
   "functions internally as needed.", 
   "* subversion/libsvn_fs_base/bdb/env.h", 
   "(svn_fs_bdb__init): Add a pool parameter that we can use to store", 
   "the bdb cache in since it is fs module scoped.", 
   "* subversion/libsvn_fs_base/bdb/env.c", 
   "(svn_fs_bdb__init, bdb_init_cb): Add and use the new fs module", 
   "scoped pool for the bdb cache.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(fs_vtable): Drop serialized_init function.", 
   "(base_create, base_open, base_open_for_recovery): Add common_pool", 
   "parameter and pass it on to the internal init functions as needed.", 
   "(svn_fs_base__init): Add common_pool parameter and pass it on", 
   "to the underlying init functions.", 
   "* subversion/include/svn_fs.h:", 
   "(svn_fs_initialize): Update docs to note that undefined behavior can", 
   "result if the fs module is dynamically loaded and the bdb fs is used.", 
   "* subversion/include/private/svn_atomic.h", 
   "(svn_atomic__init_once): Add pool parameter.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(fs_library_vtable_t): Add common_pool parameter to create, open", 
   "and open_for_recovery functions.", 
   "(fs_init_func_t): Add common_pool parameter.", 
   "(svn_fs_base__init, svn_fs_fs__init): Add common_pool parameter.", 
   "(fs_vtable_t): Get rid of the serialized_init function which is now called", 
   "internally by the open or create functions.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(common_pool): Document usage changes for common_pool.", 
   "(serialized_init): Dropped and moved the best-effort common_pool init to...", 
   "(get_library_vtable_direct): here in order to init it earlier when", 
   "svn_fs_initialize is not called.  Also pass the common_pool on", 
   "to the init function for the underlying fs module.", 
   "(acquire_fs_mutex, release_fs_mutex): New functions to get and drop", 
   "the mutex guarding the fs module's common_pool.", 
   "(svn_fs_create, svn_fs_open, svn_fs_recovery, svn_fs_create_berkeley,", 
   "svn_fs_open_berkeley): Pass the common_pool parameter on to the", 
   "underlying fs' functions after acquiring the fs mutex to serialize the", 
   "calls.", 
   "* subversion/libsvn_subr/atomic.c", 
   "(svn_atomic__init_once): Add pool parameter and pass it to", 
   "the init_func.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(fs_vtable): Drop the serialized_init function which is now called internally", 
   "by the open/create/open_for_recovery functions as needed.", 
   "(fs_create, fs_open, fs_open_for_recovery): Add common_pool parameter", 
   "and pass it on to internal init functions as needed.", 
   "(svn_fs_fs__init): Add common_pool parameter."
  ], 
  "revision_id": "865211"
 }
]