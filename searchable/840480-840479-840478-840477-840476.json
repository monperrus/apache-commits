[
 {
  "author": "cmpilato", 
  "date": "2001-11-06T19:09:40.524091Z", 
  "msg": [
   "This is the second in the series of patches from by Matt Kraai", 
   "<kraai@alumni.carnegiemellon.edu> to fix issue #406.  It converts the", 
   "argument types of svn_fs_{node,txn,revision}_prop.  I made some minor", 
   "changes/additions to this patch in order to accommodate the moving", 
   "target known as our source codebase :-)", 
   "Patch by: Matt Kraai <kraai@alumni.carnegiemellon.edu>", 
   "(Tweaked by me.)", 
   "* subversion/svnadmin/main.c", 
   "(main): Use svn_string_t instead of svn_stringbuf_t for properties.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_txn_prop, svn_fs_node_prop, svn_fs_revision_prop):", 
   "Convert \"propname\" to const char * and \"value_p\" to svn_string_t **.", 
   "* subversion/include/svn_time.h", 
   "(svn_time_to_nts): Renamed from svn_time_to_string(), and returns", 
   "const char * now instead of svn_stringbuf_t *.  Callers changed.", 
   "(svn_time_from_nts): New.", 
   "(svn_time_from_string): Removed.", 
   "* subversion/include/svn_xml.h", 
   "(svn_xml_escape_string, svn_xml_unescape_string): New.", 
   "* subversion/libsvn_fs/proplist.c", 
   "(svn_fs__get_prop): Convert \"name\" to const char * and \"value_p\" to", 
   "svn_string_t **.", 
   "* subversion/libsvn_fs/proplist.h", 
   "(svn_fs__get_prop): Convert \"name\" to const char * and \"value_p\" to", 
   "svn_string_t **.", 
   "* subversion/libsvn_fs/txn-table.c", 
   "(struct txn_prop_args, svn_fs_txn_prop): Convert \"propname\" to", 
   "const char * and \"value_p\" to svn_string_t **, and update call to", 
   "svn_fs__get_prop().", 
   "* subversion/libsvn_fs/tree.c", 
   "(struct node_prop_args, svn_fs_node_prop): Convert \"propname\" to", 
   "const char * and \"value_p\" to svn_string_t **, and update call to", 
   "svn_fs__get_prop().", 
   "* subversion/libsvn_fs/rev-table.c", 
   "(struct revision_prop_args, svn_fs_revision_prop): Convert propname to", 
   "const char * and value_p to svn_string_t ** and update call to", 
   "svn_fs__get_prop().", 
   "* subversion/libsvn_subr/time.c", 
   "(svn_time_to_nts): Renamed from svn_time_to_string(), and now", 
   "returns const char * instead of svn_stringbuf_t *.", 
   "(svn_time_from_nts): Was svn_time_from_string(), now accepts const", 
   "char *, and is public.  Callers changed.", 
   "* subversion/libsvn_wc/entries.c", 
   "(svn_wc__atts_to_entry): Use svn_time_from_nts().", 
   "(normalize_entry): Update call to svn_time_to_nts().", 
   "* subversion/libsvn_wc/questions.c", 
   "(timestamps_equal_p): Update calls to svn_time_to_nts() and", 
   "svn_time_from_nts().", 
   "* subversion/libsvn_subr/xml.c", 
   "(svn_xml_escape_data_and_len): New.", 
   "(svn_xml_escape_string): Accept svn_string_t and call", 
   "svn_xml_escape_data_and_len().", 
   "(svn_xml_escape_stringbuf, svn_xml_unescape_string): New.", 
   "(svn_xml_make_open_tag_hash): Call svn_xml_escape_stringbuf().", 
   "* subversion/svnlook/main.c", 
   "(get_property): Change \"prop_value\" to an svn_string_t * and \"prop_name\" to", 
   "a const char *.", 
   "(do_log): Update call to get_property().", 
   "(do_date): Update call to get_property().", 
   "(do_author): Update call to get_property().", 
   "* subversion/mod_dav_svn/deadprops.c", 
   "(get_repos_propname): Change \"repos_propname\" to a char **.", 
   "(get_value): Change \"pvalue\" to a svn_string_t **, and update calls", 
   "to get_repos_propname(), svn_fs_txn_prop(), svn_fs_revision_prop(), and", 
   "svn_fs_node_prop().", 
   "(save_value): Update call to get_repos_propname().", 
   "(dav_svn_db_output_value): Update call to get_value().", 
   "(dav_svn_db_remove): Update call to get_repos_propname().", 
   "(dav_svn_db_exists): Update calls to get_repos_propname(),", 
   "svn_fs_txn_prop(), svn_fs_revision_prop(), and svn_fs_node_prop().", 
   "(dav_svn_db_get_rollback): Update call to get_value().", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(call_functions_with_unopened_fs): Update call to svn_fs_revision_prop().", 
   "(revision_props): Update call to svn_fs_revision_prop().", 
   "(transaction_props): Update call to svn_fs_txn_prop().", 
   "(node_props): Update call to svn_fs_node_prop().", 
   "(commit_date): Update call to svn_fs_revision_prop().", 
   "* subversion/libsvn_repos/rev_hunt.c", 
   "(get_time): Update call to svn_fs_revision_prop().", 
   "* subversion/libsvn_repos/log.c", 
   "(svn_repos_get_logs): Update call to svn_fs_revision_prop().", 
   "* subversion/libsvn_fs/txn.c", 
   "(svn_fs_begin_txn): Update call to svn_time_to_nts().", 
   "* subversion/libsvn_fs/dag.c", 
   "(txn_body_dag_init_fs, svn_fs__dag_commit_txn): Update call to", 
   "svn_time_to_nts()."
  ], 
  "revision_id": "840480"
 }, 
 {
  "author": "sussman", 
  "date": "2001-11-06T17:44:26.051472Z", 
  "msg": [
   "'svn mv/cp' should now work over both ra_local and ra_dav on *files*.", 
   "(Don't try directories yet.  And also, we haven't upgraded", 
   "svn.collab.net yet.)", 
   "* repos.c (is_our_resource): if we close down a redundant repository,", 
   "be sure to regenerate the resource's \"root\" object based on the new", 
   "fs.  This was causing svn_fs_copy() to choke.", 
   "* commit.c (commit_add_file):  remove stupid debugging printf's.", 
   "* adm_crawler.c (do_apply_textdelta): don't copy the working file to", 
   ".svn/tmp/text-base here anymore;  assume it's done by the caller.", 
   "(do_postfix_text_deltas): copy the working-file to", 
   ".svn/tmp/text-base in this loop instead, regardless of whether we", 
   "need to send a txdelta.", 
   "* commit_tests.py (get_standard_status_list): fix syntax error in", 
   "docstring; use triple quotes, karl.  :-)", 
   "Python tests forthcoming..."
  ], 
  "revision_id": "840479"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-11-06T15:15:41.657863Z", 
  "msg": [
   "Bugfix for a SEGFAULT occuring when 'svn propget'ing a non-existant", 
   "property.", 
   "Patch by: Philip Martin <pmartin@uklinux.net>", 
   "* subversion/libsvn_client/prop_commands.c:", 
   "svn_client_propget(): handle non-existent property"
  ], 
  "revision_id": "840478"
 }, 
 {
  "author": "kfogel", 
  "date": "2001-11-06T15:06:59.850674Z", 
  "msg": [
   "* commit_tests.py (get_standard_status_list): Doc fix."
  ], 
  "revision_id": "840477"
 }, 
 {
  "author": "kfogel", 
  "date": "2001-11-05T22:42:07.107990Z", 
  "msg": [
   "* log_tests.py: Get the old commit test cruft out of here, get the new", 
   "plan in place.", 
   "(guarantee_repos_and_wc, plain_log): New functions."
  ], 
  "revision_id": "840476"
 }
]