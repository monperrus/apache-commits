[
 {
  "author": "djencks", 
  "date": "2006-09-22T00:47:33.105778Z", 
  "msg": [
   "GERONIMO-2421 use only one corba spec jar.  Maybe we will eventually find out if this one works"
  ], 
  "revision_id": "448755"
 }, 
 {
  "author": "sebor", 
  "date": "2006-09-22T00:42:16.678428Z", 
  "msg": [
   "2006-09-21  Martin Sebor  <sebor@roguewave.com>", 
   "* aliases.cpp (get_installed_locales): Redirected locale's stderr", 
   "to /dev/null to prevent it from cluttering our own. Eliminated", 
   "the handling of invalid category values.", 
   "* charmap.h (<list>): Included.", 
   "(portable_charset): Declared.", 
   "(get_n_cmap, get_rn_cmap, get_w_cmap, get_rw_cmap): Documented.", 
   "(get_n_cmap2, get_rn_cmap2, get_strval_map, increment_val): Renamed...", 
   "(get_mb_cmap, get_rmb_cmap, get_symnames_list, increment_wchar): ...to", 
   "this.", 
   "(get_strval_map): Replaced...", 
   "(get_symnames_list): ...with this.", 
   "(process_ellipsis): Changed to return the number of characters denoted", 
   "by the ellipsis instead of void.", 
   "(increment_strval): Renamed...", 
   "(increment_encoding): ...to this for clarity and changed it to return", 
   "true on success and false otherwise.", 
   "(verify_portable_charset): Made const.", 
   "(parse_ext_strval): Renamed...", 
   "(encoding_to_mbchar): ...to this for clarity.", 
   "(add_to_cmaps): Added a bool argument.", 
   "(n_cmap2_, rn_cmap2_): Renamed...", 
   "(mb_cmap_, rmb_cmap_): ...to this for clarity.", 
   "(valid_mb_set_, valid_wchar_set_, strval_map_): Removed unused members.", 
   "(symnames_list_): Added new member.", 
   "* def.h (process_abs_ellipsis): New.", 
   "(process_sym_ellipsis): Returned the number of characters denoted by", 
   "the ellipsis instead of void.", 
   "(hex_increment, dec_increment): Removed (defined as static non-members", 
   "in collate.cpp).", 
   "(process_mask): Added an argument denoting the human readable name", 
   "of the mask for progress diagnostics.", 
   "(process_transliteration, process_transliteration_statement,", 
   "generate_xliteration_data): Renamed...", 
   "(process_xlit, process_xlit_statement, gen_xlit_data): ...to this for", 
   "brevity.", 
   "(extract_string_array): New.", 
   "(ctype_offset_tab_t): Renamed...", 
   "(codecvt_offset_tab_t): ...to this.", 
   "(wchar_off_map_, mb_char_offs_, wchar_offs_, wchar_utf8_to_ext_,", 
   "utf8_offs_, valid_codecvt_utf8_set_, utf8_map_, next_codecvt_tab_num_,", 
   "next_wchar_codecvt_tab_num_, next_utf8_codecvt_tab_num_, codecvt_out_):", 
   "Removed data members.", 
   "(mb_char_offs_iter, wchar_offs_iter, utf8_offs_iter, utf8_map_iter,", 
   "(gen_valid_codecvt_wchar_set, gen_valid_codecvt_utf8_set, gen_utf8_map,", 
   "generate_wchar_codecvt_table, generate_utf8_codecvt_table):", 
   "Replaced member functions...", 
   "(gen_mbchar_tables, gen_wchar_tables, gen_utf8_tables): ...with these.", 
   "* diagnostic.h (E_NOTSUP, W_NOTSUP, W_CHARMAP, I_SKIP): Added.", 
   "(W_COLVAL): Removed.", 
   "* scanner.h (token_id): Arranged enumerators by LC_XXX section and", 
   "documented. Added enumerators for LC_ADDRESS and other sections defined", 
   "by ISO/IEC TR 14652.", 
   "(tok_ellipsis, tok_dellipsis, tok_qellipsis, tok_doub_inc_ellipsis):", 
   "Renamed...", 
   "(tok_abs_ellipsis, tok_hex_ellipsis, tok_dec_ellipsis,", 
   "tok_dbl_ellipsis): ...to this for better correspondence to ISO/IEC", 
   "TR 14652 names.", 
   "(tok_eof, tok_cont_line): Removed unused names.", 
   "(tok_octal_value, tok_decimal_value, tok_hex_value): Replaced...", 
   "(tok_char_value): ...with this for simplicity.", 
   "* charmap.cpp (convert_escape): Removed dead code.", 
   "(portable_charset): Defined.", 
   "(convert_to_wc): Simplified, added comments.", 
   "(increment_val): Renamed...", 
   "(increment_wchar): ...to this, renamed locals for clarity, and replaced", 
   "hardcoded 0xff with UCHAR_MAX (is this really correct when char is more", 
   "that 8 bits wide?).", 
   "(increment_strval): Renamed...", 
   "(increment_encoding): ...to this, removed local statics, and optimized.", 
   "The function is unused since it is not possible to increment a multibyte", 
   "character so that its last byte overflows (i.e., wraps around to 0). It", 
   "should/will be removed in a future commit.", 
   "(parse_ext_strval): Renamed...", 
   "(encoding_to_mbchar): ...to this and renamed locals.", 
   "(convert_sym_to_ucs): Tightened up the checking of symbolic character", 
   "names for validity (expect a hex digit after the leading \"<U\" prefix).", 
   "Used strtoul instead strtol for simplicity.", 
   "(convert_to_ucs): Adjusted formatting.", 
   "(add_to_cmaps): Added an argument indicating whether the encoding", 
   "is multibyte or whether it should be converted to it. Optimized and", 
   "added inline comments.", 
   "(process_ellipsis): Renamed locals, added inline comments and adjusted", 
   "formatting for clarity. Corrected sprintf format. Avoided calling", 
   "increment_strval and instead incremented the last byte of a multibyte", 
   "character, detecting and diagnosing overflow, for efficiency.", 
   "(process_chars): Added a progress message at the beginning of the", 
   "function. Counted the number of tokens, ellipses, and characters", 
   "processed. Added inline comments. Simplified the handling of numeric", 
   "character values (tok_char_value). Used tok_abs_ellipsis,", 
   "tok_hex_ellipsis, and tok_dec_ellipsis.  Added a progress message", 
   "at the end of the function indicating the number of of tokens, ellipses,", 
   "and characters processed.", 
   "* codecvt.cpp (gen_valid_codecvt_mb_set, gen_valid_codecvt_wchar_set,", 
   "gen_valid_codecvt_utf8_set, generate_codecvt_table, gen_utf8_map,", 
   "generate_wchar_codecvt_table, -generate_utf8_codecvt_table): Replaced...", 
   "(gen_mbchar_tables, gen_wchar_tables, gen_utf8_tables): ...with these", 
   "functions and simplified by replacing member variables with function", 
   "arguments wherever possible.", 
   "(create_wchar_utf8_table): Moved to collate.cpp where the function", 
   "is actually used.", 
   "(generate_xliteration_data): Renamed...", 
   "(gen_xlit_data): ...to this.", 
   "(write_codecvt): Called gen_mbchar_tables, gen_wchar_tables, and", 
   "gen_utf8_tables for better locality of reference and documented.", 
   "* collate.cpp (lc_name): New.", 
   "(create_wchar_utf8_table): Moved from codecvt.cpp.", 
   "(dec_increment, hex_increment): Made static non-members.", 
   "(process_weights, add_missing_values, process_collate, write_collate):", 
   "Used preincrement instead of postincrement with iterators for better", 
   "efficiency.", 
   "* ctype.cpp (lc_name): New.", 
   "(convert_literal_to_ucs4): Handled tok_char_value instead of", 
   "tok_octal_value, tok_decimal_value, and tok_hex_value.", 
   "(process_abs_ellipsis): New function.", 
   "(process_sym_ellipsis): Simplified.", 
   "(process_mask): Added an argument, displayed progress message, and", 
   "simplified.", 
   "(process_upper_lower): Displayed progress message, and simplified.", 
   "(process_transliteration, process_transliteration_statement): Renamed...", 
   "(process_xlit, process_xlit_statement): ...to this.", 
   "(process_ctype): Added a progress diagnostic.", 
   "* def.cpp (convert_to_ext): Used rmb_cmap_iter.", 
   "(process_input): Removed progress diagnostics.", 
   "(verify_portable_charset): Used portable_charset.", 
   "* diagnostic.cpp (issue_diag): Used fputs instead of fprintf where", 
   "appropriate and simplified.", 
   "* messages.cpp (lc_name): New.", 
   "(process_messages): Used lc_name, issued an informative diagnostic,", 
   "and simplified ever so slightly.", 
   "* monetary.cpp (lc_name): New.", 
   "(process_monetary): Used lc_name. Issued an informative diagnostic.", 
   "* numeric.cpp (lc_name): New.", 
   "(process_numeric): Used lc_name, issued an informative diagnostic,", 
   "and simplified ever so slightly.", 
   "* time.cpp (lc_name): New.", 
   "(parse_era): Handled empty era strings and constified locals.", 
   "(extract_string_array): Defined new member function of class Def.", 
   "(process_time): Used lc_name, issued an informative diagnostic,", 
   "called extract_string_array.", 
   "(write_time): Issued an informative diagnostic and simplified ever", 
   "so slightly.", 
   "* scanner.cpp (ScannerContext): Declared copy ctor and assignment", 
   "operator private and removed definitions.", 
   "(process_token): Simplified the handling of numeric character values,", 
   "removed unnecessary qualification from the definition of tok_map array", 
   "elements.", 
   "(next_token): Used the new names tok_abs_ellipsis, tok_hex_ellipsis,", 
   "tok_dec_ellipsis, and tok_dbl_ellipsis, eliminated a C-style const", 
   "cast to avoid a gcc warning.", 
   "* localedef.cpp (--notes): Documented option.", 
   "* locale.cpp: Declared all definitions static, renamed many locals for", 
   "clarity and/or brevity.", 
   "(collate_charmap, ctype_charmap, time_charmap, num_charmap, mon_charmap,", 
   "messages_charmap, current_locales, is_env_set): Removed globals (moved", 
   "into get_charmap()).", 
   "(sect_charmap, sect_lc_all, sect_lc_collate, sect_lc_ctype, ect_lc_time,", 
   "sect_lc_messages, sect_lc_monetary, sect_lc_numeric): Defined new global", 
   "constants.", 
   "(UChar): New convenience typedef.", 
   "(validate): Tweaked text of error message.", 
   "(initialize_struct): Renamed...", 
   "(init_struct): ...to this for brevity, removed redundant arguments", 
   "and added their static local equivalents.", 
   "(initialize): Renamed...", 
   "(init_section): ...to this and removed redundant arguments.", 
   "(initialize_structs): Renamed...", 
   "(init_sections): ...to this. Called init_section with fewer arguments.", 
   "(get_charmap): Added static locals for better encapsulation and locality", 
   "of reference.", 
   "(escape_value): New function to handling the formatting of characters", 
   "and weights using escape sequences.", 
   "(create_str): Simolified.", 
   "(print_section, print_keyword): New helper functions.", 
   "(print_weight): Simplified.", 
   "(write_coll_info): Renamed locals.", 
   "(print_ce_info): Added comments, adjusted code formatting.", 
   "(print_lc_collate, print_lc_ctype, print_lc_messages, print_lc_numeric,", 
   "print_lc_time, print_lc_all): Printed comments on stdout with additional", 
   "detail about each section. Simplified.", 
   "(print_int): New helper to handle the printing of numeric values.", 
   "(print_time_keyword): New helper to handle the printing of LC_TIME", 
   "keywords.", 
   "(print_mask, print_toupper, print_tolower): Simplified, added inline", 
   "comments, adjusted formatting.", 
   "(print_frac_digits, ...): Called print_int or print_time_keyword", 
   "as appropriate for simplicity and to avoid code duplication.", 
   "(print_help_msg): Renamed...", 
   "(print_help): ...to this.", 
   "(initialize_env_vars): Removed (done in get_charmap).", 
   "(print_locale_name): Removed.", 
   "(print_charmap): Collected character statistics.", 
   "(print_charmap): Added a default argument, computed additional stats.", 
   "(print_lc_var): New function to handle the formatting of localization", 
   "environment variables according to POSIX rules.", 
   "(handlers): New array of command line argument handlers.", 
   "(main): Used handlers. Added -p to force locale to use symbolic", 
   "character names from the Portable Character Set whenever possible."
  ], 
  "revision_id": "448754"
 }, 
 {
  "author": "remm", 
  "date": "2006-09-22T00:41:49.444306Z", 
  "msg": [
   "- Add a connection tracking valve for Comet, which I did not test, but should implement the general concept.", 
   "- Next would be changing the Adapter.event to pass an int or an enum instead of the boolean to differentiate timeout,", 
   "disconnect errors, etc. I will try to check handling of the timeout, and treat it like a periodic event,", 
   "where the servlet has the opportunity to close the connection (by calling event.close) but may choose", 
   "to keep the connection open event if there was no client activity (in which case, the connection will timeout", 
   "again after the usual amount of time)."
  ], 
  "revision_id": "448753"
 }, 
 {
  "author": "djencks", 
  "date": "2006-09-22T00:38:45.906269Z", 
  "msg": [
   "openejb is in the apache incubator now"
  ], 
  "revision_id": "448752"
 }, 
 {
  "author": "jsdelfino", 
  "date": "2006-09-22T00:34:44.513341Z", 
  "msg": [
   "Adjusted svn:ignore properties"
  ], 
  "revision_id": "448751"
 }
]