[
 {
  "author": "hwright", 
  "date": "2009-03-10T19:23:40.277998Z", 
  "msg": [
   "WC-NG: When writing entries, also truncate the ACTUAL table.", 
   "* subversion/libsvn_wc/entries.c", 
   "(statement_keys, statements): New statement.", 
   "(entries_write_body): Before doing any insertions, delete everything from the", 
   "ACTUAL table."
  ], 
  "revision_id": "876540"
 }, 
 {
  "author": "gstein", 
  "date": "2009-03-10T19:21:19.504082Z", 
  "msg": [
   "Rationalize the imports in the svntest package. It is a bit tricky because", 
   "of circular imports. The easiest solution is to just import the package,", 
   "and defer looking for modules within that package until really needed.", 
   "* subversion/tests/cmdline/svntest/wc.py:", 
   "(): just import the package", 
   "* subversion/tests/cmdline/svntest/__init__.py:", 
   "(): import all the submodules in a specific order", 
   "* subversion/tests/cmdline/svntest/tree.py:", 
   "(): import just the package. alter references accordingly.", 
   "(SVNTreeNode.as_state, SVNTreeNode.as_item): remove svntest.wc imports", 
   "* subversion/tests/cmdline/svntest/actions.py:", 
   "(): import the package, then grab the submodules from there", 
   "* subversion/tests/cmdline/svntest/main.py:", 
   "(): import the package. alter references accordingly. remove import of", 
   "actions from the bottom of the module.", 
   "* subversion/tests/cmdline/svntest/verify.py:", 
   "(): import just the package. alter references."
  ], 
  "revision_id": "876539"
 }, 
 {
  "author": "stsp", 
  "date": "2009-03-10T19:05:22.778140Z", 
  "msg": [
   "* www/tasks.html", 
   "(tree-conflicts-ui): Issue #3342 has nothing to do with tree conflict", 
   "resolution, don't link to it."
  ], 
  "revision_id": "876538"
 }, 
 {
  "author": "stsp", 
  "date": "2009-03-10T18:47:02.138370Z", 
  "msg": [
   "* www/tasks.html", 
   "(tree-conflicts-ui): New task idea."
  ], 
  "revision_id": "876537"
 }, 
 {
  "author": "gstein", 
  "date": "2009-03-10T18:42:10.585687Z", 
  "msg": [
   "Implement a simple equality check for State and StateItem objects.", 
   "For debugging, implement a method to convert an old-style tree into a", 
   "State object, and examine whether the transformations are lossless in", 
   "either direction (answer: old-style tree cannot represent everything, so", 
   "transformations are lossy).", 
   "* subversion/tests/cmdline/svntest/wc.py:", 
   "(State.old_tree): add some debug code for examining transforms in a", 
   "little more details.", 
   "(State.__eq__): compare two State objects for equality", 
   "(State.__ne__): compare two State objects for inequality", 
   "(StateItem.__eq__): compare two StateItem objects for equality", 
   "(StateItem.__ne__): compare two StateItem objects for inequality", 
   "* subversion/tests/cmdline/svntest/tree.py:", 
   "(SVNTreeNode.as_state): new method to return a State object", 
   "(SVNTreeNode.as_item): new method to return a StateItem object"
  ], 
  "revision_id": "876536"
 }
]