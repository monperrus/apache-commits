[
 {
  "author": "chamikara", 
  "date": "2006-01-27T12:34:33.498366Z", 
  "msg": [
   "Bug fixes"
  ], 
  "revision_id": "372825"
 }, 
 {
  "author": "sahan", 
  "date": "2006-01-27T12:34:29.259776Z", 
  "msg": [
   "Added error codes for null soap envelope"
  ], 
  "revision_id": "372824"
 }, 
 {
  "author": "tcurdt", 
  "date": "2006-01-27T12:34:16.131259Z", 
  "msg": [
   "compile for 1.3"
  ], 
  "revision_id": "372823"
 }, 
 {
  "author": "rickhall", 
  "date": "2006-01-27T12:31:01.867376Z", 
  "msg": [
   "EXPERIMENTAL!", 
   "The changes reflect a major refactoring to the Module Loader layer in", 
   "Felix. They are necessary for a variety of reasons, but were instigated", 
   "by the immediate need to find a clean way to implement Bundle.getEntry()", 
   "related methods, which entailed changing the module abstraction of", 
   "the Module Loader.", 
   "Previously, a module was largely defined as being a set of resource", 
   "sources that returned bytes that were converted into either resources", 
   "or classes by the module's class loader. The resource sources were mapped", 
   "onto the bundle JAR file and any corresponding embedded JAR files. One", 
   "issue with this approach is that it was not cleanly possible to access", 
   "the \"raw\" module contents without breaking the module abstraction, which", 
   "was necessary for Bundle.getEntry() related methods. Another issue is", 
   "that there is no clean way for a module to have a source for classes", 
   "that is not a set of bytes; for example, the system bundle actually has", 
   "the system class loader as a source, since it needs to fake exporting", 
   "classes on the class path.", 
   "The new module abstraction addresses these sorts of issues by defining", 
   "a module as having a content loader. The content loader is defined as", 
   "having content, where the interpretation of that content is determined", 
   "by the content loader implementation. For example, an OSGi content loader", 
   "knows about embedded JAR files and bundle class path. Access to the \"raw\"", 
   "module content is made possible through the content object.", 
   "It is very likely that these interfaces will change, so only look at", 
   "this code to get an understanding of what it going on."
  ], 
  "revision_id": "372822"
 }, 
 {
  "author": "werner", 
  "date": "2006-01-27T12:14:41.931513Z", 
  "msg": [
   "Store processed security elements during parsing. This enables back references to these elements and the data contained in these elements.", 
   "Another step to Policy language handling."
  ], 
  "revision_id": "372821"
 }
]