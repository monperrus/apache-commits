[
 {
  "author": "kfogel", 
  "date": "2000-10-18T01:54:58.000000Z", 
  "msg": [
   "APR *_snames working again, so make timestamp code live.", 
   "(svn_wc__string_to_time): set tm_mon correctly.", 
   "Ben, the timestamp code works now."
  ], 
  "revision_id": "837700"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-18T01:13:06.000000Z", 
  "msg": [
   "(svn_io_check_path): ahem, *cough* ... implement using apr_stat", 
   "... *cough thanks Greg Stein cough* ..."
  ], 
  "revision_id": "837699"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-18T01:01:43.000000Z", 
  "msg": [
   "(svn_wc__compose_paths): new name for svn_wc_compose_paths, which is", 
   "internally public, not externally public."
  ], 
  "revision_id": "837698"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-18T00:28:17.000000Z", 
  "msg": [
   "(svn_wc_compose_paths): replaces compose_paths, because this will have", 
   "to be an internally public function.  But also #ifdef out, because no", 
   "one is ready to use it yet."
  ], 
  "revision_id": "837697"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-18T00:09:16.000000Z", 
  "msg": [
   "* io.c (svn_io_check_path): new file, new func.  All callers changed.", 
   "* libsvn_wc (svn_wc__file_exists_p): removed, in favor of", 
   "svn_io_check_path.", 
   "Also, we're not going to have a generic recursion function, because", 
   "recursing is easy and genericizing it actually results in more code", 
   "than not.  Thank goodness for the phone call with Jim!  So:", 
   "(svn_wc__entries_recurse, svn_wc__recurse_enter_dir_t,", 
   "svn_wc__recurse_leave_dir_t, svn_wc__recurse_handle_file_t): removed.", 
   "(compose_paths): replaces remove_redundancies.  But not removed, as", 
   "will still be useful."
  ], 
  "revision_id": "837696"
 }
]