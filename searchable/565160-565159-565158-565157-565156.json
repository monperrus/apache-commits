[
 {
  "author": "dlydick", 
  "date": "2007-08-12T21:34:47.750931Z", 
  "msg": [
   "Added jvm_attribute_index_native."
  ], 
  "revision_id": "565160"
 }, 
 {
  "author": "dlydick", 
  "date": "2007-08-12T21:33:59.752976Z", 
  "msg": [
   "Only include 'tmparea' pointer conditionally based on whether", 
   "or not a temporary area is compiled into the code.", 
   "Reference 'pjvm' via 'pjvm.h' instead of directly."
  ], 
  "revision_id": "565159"
 }, 
 {
  "author": "dlydick", 
  "date": "2007-08-12T21:32:27.930883Z", 
  "msg": [
   "Added 'jvm_argv_initialized'", 
   "Conditionally declare 'jvm_tmparea_initialized' and", 
   "contitionally invoke tmparea_init() and tmparea_shutdown().", 
   "Declared 'jvm_model_initialized' and 'jvm_heap_initialized'", 
   "to be static.", 
   "Declare jvm_model_init() and jvm_model_shutdown() to be static.", 
   "Call HEAP_INIT() with '&jvm_heap_initialized' flag.", 
   "Load up starting class by searching CLASSPATH, which may", 
   "now include Java archive files, and parse manifest for", 
   "starting class where appropriate."
  ], 
  "revision_id": "565158"
 }, 
 {
  "author": "dlydick", 
  "date": "2007-08-12T21:27:05.367294Z", 
  "msg": [
   "Oops-- Original checkin comment for previous", 
   "revision overlooked.  It adds a bit more", 
   "info to what was done:", 
   "Allow JVMCFG_OVERRIDE_HEAP_TYPE to overide configuration rules", 
   "and declare specific heap type for utility programs that do not", 
   "need complex heap management.", 
   "Modified HEAP_INIT() and HEAP_SHUTDOWN() to use a heap", 
   "initialization flag instead of having no parameters."
  ], 
  "revision_id": "565157"
 }, 
 {
  "author": "dlydick", 
  "date": "2007-08-12T21:23:56.440807Z", 
  "msg": [
   "Added heap_init_flag parameter to heap_init_simple() and", 
   "heap_shutdown_simple()."
  ], 
  "revision_id": "565156"
 }
]