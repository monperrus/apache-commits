[
 {
  "author": "jstrachan", 
  "date": "2002-06-11T16:06:10.000000Z", 
  "msg": [
   "removed temporary file added by accident"
  ], 
  "revision_id": "128864"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-06-11T16:05:21.000000Z", 
  "msg": [
   "Applied Martin's patches, which are quite numerous...", 
   "- Indention", 
   "The indention didn't work the way it supposed to. If you set the", 
   "indention level to eg 2 spaces, it would add 4 spaces.", 
   "The default is now 2 spaces (which was what it was meant to be).", 
   "- wrapCollectionsInElement", 
   "This wasn't implemented at all. The default behaviour was to wrap them", 
   "in collections and I kept it that way (even though the default was not", 
   "to). It now correctly parses xml files in the format (when setting this", 
   "option to false):", 
   "<element>", 
   "<subelement/>", 
   "<subelement/>", 
   "</element>", 
   "The default behaviour of this will be :", 
   "<element>", 
   "<subelements>", 
   "<subelement/>", 
   "<subelement/>", 
   "</subelements>", 
   "<element>", 
   "I needed to add an extra getter/setter to the ElementDescriptor to get", 
   "this done correctly and without changing to much code.", 
   "- setNameMapper", 
   "Deprecated this in favour if setElementNameMapper and", 
   "setAttributeNameMapper. If you just set setElementNameMapper, the", 
   "setAttributeNameMapper will use the same NameMapper that is used in", 
   "setElemementNameMapper. This is the way it worked, and we need to keep", 
   "backward compatible. The original nameMapper works as the", 
   "ElementNameMapper.", 
   "- DefaultPluralStemmer", 
   "Was a bit freely implemented when multiple matches were found.", 
   "Say the property to get was \"y\" and the valaues in the map are \"y\",", 
   "\"yes\", \"yesno\", it could return eg yesno, when you actually want y.", 
   "I added a \"best match\" policy, which will always return the equals, when", 
   "it is found or the closest match. (the match with the minimum length).", 
   "Don't know if in real life this can actually happen, but in the testcase", 
   "it can ;). It does a log.warn to actually say that we are using a", 
   "certain match.", 
   "Tests :", 
   "- The tests currently in cvs are all passing, without change.", 
   "- Tested maven from cvs with the new jar and it works (I will also", 
   "supply a patch for maven when this is committed).", 
   "- Didn't test the current scarab (John, just your NameMapper call is", 
   "giving a deprecated message on compile)", 
   "- Adjusted the maven testcase in betwixt to use the ElementNameMapper.", 
   "- Added testcases for the strategy package, so we can insure the current", 
   "behaviour will stay the same and if not, we actually get a failing", 
   "testcase.", 
   "- Added testcase for my specific xml file, which started all this", 
   "programming in the first place. I added a new test package called", 
   "org.apache.commons.betwixt.schema. The testcase is pretty well", 
   "documented and can be used nicely as example code."
  ], 
  "revision_id": "128863"
 }, 
 {
  "author": "rdonkin", 
  "date": "2002-06-10T21:27:20.000000Z", 
  "msg": [
   "Replaced TODO message in package doc comments with entry in mavenized project TODO list."
  ], 
  "revision_id": "128862"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-06-10T17:54:23.000000Z", 
  "msg": [
   "move of betwixt from the sandbox over to the commons proper"
  ], 
  "revision_id": "128861"
 }, 
 {
  "author": "jstrachan", 
  "date": "2002-06-10T17:53:35.000000Z", 
  "msg": [
   "move of betwixt from the sandbox over to the commons proper"
  ], 
  "revision_id": "128860"
 }
]