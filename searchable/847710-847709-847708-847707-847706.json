[
 {
  "author": "cmpilato", 
  "date": "2003-11-05T07:02:18.065394Z", 
  "msg": [
   "* subversion/libsvn_fs/util/fs_skels.c", 
   "(svn_fs__unparse_copy_skel, svn_fs__parse_copy_skel): Oops.  When I", 
   "renamed svn_fs__copy_kind_hard to svn_fs__copy_kind_real, I seem", 
   "to have missed these.  Weird."
  ], 
  "revision_id": "847710"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-11-05T05:40:36.222247Z", 
  "msg": [
   "Big ol' libsvn_fs cleanups.  And it ain't even Spring.", 
   "* svn-trunk/subversion/include/svn_fs.h", 
   "(svn_fs_delete): Was svn_fs_delete_tree().", 
   "(svn_fs_rename, svn_fs_delete_tree): Removed.", 
   "* svn-trunk/subversion/libsvn_fs/tree.c", 
   "(merge): Remove speculative comment about using the now-absent", 
   "svn_fs__dag_link().  We're a couple of years into this thing, and", 
   "haven't needed the change yet.  Let's trust our memories and our", 
   "version control tool in case we every find a relevant problem with", 
   "this code.  Oh, and use explicit node-kind checks (with", 
   "svn_fs__dag_node_kind()) instead of using svn_fs__dag_is_directory()", 
   "(which is now also gone).  Oh, and track the rename of", 
   "svn_fs__dag_delete_tree() to just svn_fs__dag_delete().", 
   "(struct delete_args): Remove 'delete_tree' flag.", 
   "(txn_body_delete): Unconditionally call svn_fs__dag_delete() (which", 
   "used to be svn_fs__dag_delete_tree()).  Also, move the really", 
   "cheap root-type sanity check to prior to the not-so-cheap", 
   "open_path().  And track the rename of svn_fs__dag_delete_tree() to", 
   "just svn_fs__dag_delete().", 
   "(svn_fs_delete): Was svn_fs_delete_tree().  Stop populating the", 
   "now-absent 'delete_tree' baton flag.", 
   "(svn_fs_delete_tree, svn_fs_rename): Removed.", 
   "* svn-trunk/subversion/libsvn_fs/dag.c", 
   "(svn_fs__dag_link, svn_fs__dag_is_file, svn_fs__dag_is_directory): Buh-bye.", 
   "(delete_entry): Removed, moving all its code into", 
   "svn_fs__dag_delete().", 
   "(svn_fs__dag_delete): Was svn_fs__dag_delete_tree().  Now contains", 
   "all the guts from delete_entry(), except that the logic for", 
   "requiring that a directory target be empty is gone.  Also, check", 
   "the node kind explicitly instead of using svn_fs__dag_is_directory().", 
   "(svn_fs__dag_delete_tree): Removed.", 
   "(svn_fs__dag_get_contents, svn_fs__dag_file_length,", 
   "svn_fs__dag_file_checksum, svn_fs__dag_get_edit_stream,", 
   "svn_fs__dag_finalize_edits, make_entry, svn_fs__dag_set_entry,", 
   "svn_fs__dag_delete_if_mutable): Explicitly compare the node's kind", 
   "field against the desired node kind -- svn_fs__dag_is_file() and", 
   "svn_fs__dag_is_directory() are no more.", 
   "* svn-trunk/subversion/libsvn_fs/dag.h", 
   "(svn_fs__dag_delete): Was svn_fs__dag_delete_tree().", 
   "(svn_fs__dag_link, svn_fs__dag_delete_tree, svn_fs__dag_is_file,", 
   "svn_fs__dag_is_directory): Removed.", 
   "* svn-trunk/subversion/libsvn_repos/commit.c", 
   "(delete_entry): Track the rename of svn_fs__dag_delete_tree() to", 
   "just svn_fs__dag_delete().", 
   "* svn-trunk/subversion/tests/libsvn_fs/fs-test.c", 
   "Track the rename of svn_fs_delete_tree() to svn_fs_delete()", 
   "throughout, but also...", 
   "(delete_mutables): Remove internal tests \"3\" and \"7\", and renumber", 
   "accordingly.", 
   "(delete): Don't expect failure from svn_fs_delete() any more -- it", 
   "ain't the same deletion routine you're Mama told you about.", 
   "* svn-trunk/subversion/libsvn_repos/load.c", 
   "* svn-trunk/subversion/libsvn_repos/reporter.c", 
   "* svn-trunk/subversion/mod_dav_svn/repos.c", 
   "* svn-trunk/subversion/tests/fs-helpers.c", 
   "* svn-trunk/subversion/tests/libsvn_repos/dir-delta-editor.c", 
   "* svn-trunk/subversion/tests/libsvn_repos/repos-test.c", 
   "Track the rename of svn_fs_delete_tree() to svn_fs_delete()", 
   "throughout."
  ], 
  "revision_id": "847709"
 }, 
 {
  "author": "kfogel", 
  "date": "2003-11-04T21:26:26.237286Z", 
  "msg": [
   "With Ben, get Apache subrequests for authz working.", 
   "Note that there is still a problem with updates on switched working", 
   "copies; see comment in mod_dav_svn/update.c:authz_read() for details.", 
   "* subversion/include/mod_dav_svn.h", 
   "(struct dav_resource_private): Add new 'r' field to hold the", 
   "original request.", 
   "* subversion/mod_dav_svn/repos.c", 
   "(dav_svn_get_resource): Cache the original request in the resource.", 
   "* subversion/mod_dav_svn/update.c: Include http_request.h, http_log.h.", 
   "(struct authz_read_baton): New baton type.", 
   "(dav_svn__update_report): Construct the baton, storing the", 
   "repository root and the request.", 
   "(authz_read): Rewrite to do subrequests."
  ], 
  "revision_id": "847708"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-11-04T21:08:43.058885Z", 
  "msg": [
   "Make the history code return no false positives for any path in the", 
   "(amazingly complex, from an FS history perspective) Codespeak", 
   "repository.", 
   "* subversion/libsvn_fs/tree.c", 
   "(svn_fs_node_history): Change 0 and 1 to FALSE and TRUE,", 
   "respectively, in calls to assemble_history().", 
   "(txn_body_history_prev): Change 0 and 1 to FALSE and TRUE,", 
   "respectively, in calls to assemble_history().  Also, if our copy", 
   "hunt returns a soft copy, retry.  And by \"retry\", I mean simply", 
   "mark the returned history object as uninteresting (because I've", 
   "also moved the existing retry code out of here).", 
   "(svn_fs_history_prev): If the returned history object is marked as", 
   "uninteresting, keep looking.", 
   "* subversion/tools/dev/verify-history.py", 
   "New debugging tool."
  ], 
  "revision_id": "847707"
 }, 
 {
  "author": "cmpilato", 
  "date": "2003-11-04T18:21:37.724318Z", 
  "msg": [
   "Teach the filesystem to remember the difference between a real copy", 
   "operation (the immediate result of someone exercising the svn_fs_copy", 
   "code) and a \"soft\" copy (used when copy ID inheritance rules require", 
   "that a node earn a new copy -- or \"branch\" -- ID).", 
   "* subversion/libsvn_fs/fs.h", 
   "(svn_fs__copy_kind_t): New.", 
   "(svn_fs__copy_t): Add 'kind' field.", 
   "* subversion/libsvn_fs/util/fs_skels.c", 
   "(is_valid_copy_skel): Learn about the new soft copy kind.", 
   "(svn_fs__parse_copy_skel, svn_fs__unparse_copy_skel): Parse/unparse", 
   "the new kind field.", 
   "* subversion/libsvn_fs/bdb/copies-table.h", 
   "* subversion/libsvn_fs/bdb/copies-table.c", 
   "(svn_fs__bdb_create_copy): Switch order of the 'fs' and 'copy_id'", 
   "parameters, and add 'kind'.", 
   "* subversion/libsvn_fs/tree.c", 
   "(make_path_mutable): Update call to svn_fs__bdb_create_copy(),", 
   "passing 'soft' kind.", 
   "(examine_copy_inheritance): Now return an error, and populate", 
   "pointers for the return copy-ID and a copy structure (if we fetched", 
   "it).  Make the code treat soft copies as uninteresting.", 
   "(txn_body_history_prev): Update call to examine_copy_inheritance(),", 
   "and only fetch the copy structure if it wasn't already fetched.", 
   "* subversion/libsvn_fs/dag.c", 
   "(txn_body_dag_init_fs): Update call to svn_fs__bdb_create_copy(),", 
   "passing 'real' kind.", 
   "(svn_fs__dag_copy): Update call to svn_fs__bdb_create_copy(),", 
   "passing 'real' kind.", 
   "* subversion/libsvn_fs/structure", 
   "Update documentation to reflect the two types of COPY skel."
  ], 
  "revision_id": "847706"
 }
]