[
 {
  "author": "jensg", 
  "date": "2014-02-19T20:33:06.414370Z", 
  "msg": [
   "Half-baked duplicate of a sentence removed."
  ], 
  "revision_id": "1569908"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-19T20:32:43.239265Z", 
  "msg": [
   "Make QR the default in GaussNewtonOptimizer", 
   "Theoretically QR offers the best blend of speed and numerical stability.", 
   "Empirically the QR implementation is slightly faster than the Cholesky", 
   "implementation."
  ], 
  "revision_id": "1569907"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-19T20:32:20.571524Z", 
  "msg": [
   "Add Cholesky option to GaussNewtonOptimizer", 
   "Since the normal matrix is symmetric positive (semi-)definite, the", 
   "Cholesky decomposition is theoretically faster."
  ], 
  "revision_id": "1569906"
 }, 
 {
  "author": "luc", 
  "date": "2014-02-19T20:31:47.249225Z", 
  "msg": [
   "Make QR in GaussNewton faster and more accurate", 
   "Re-factored the code in GaussNewtonOptimizer so that the decomposition", 
   "algorithm sees the Jacobian and residuals instead of the normal", 
   "equation. This lets the QR algorithm operate directly on the Jacobian", 
   "matrix, which is faster and less sensitive to numerical errors. As a", 
   "result, one test case that threw a singular matrix exception now passes", 
   "with the QR decomposition.", 
   "The refactoring also include a speed improvement when computing the", 
   "normal matrix for the LU decomposition. Since the normal matrix is", 
   "symmetric only half of is computed, which results in a factor of 2 speed", 
   "up in computing the normal matrix for problems with many more", 
   "measurements than states."
  ], 
  "revision_id": "1569905"
 }, 
 {
  "author": "jensg", 
  "date": "2014-02-19T20:29:35.893812Z", 
  "msg": [
   "-r switch not here"
  ], 
  "revision_id": "1569904"
 }
]