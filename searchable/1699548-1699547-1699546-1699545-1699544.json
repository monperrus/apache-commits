[
 {
  "author": "lgo", 
  "date": "2013-07-05T17:34:35.863631Z", 
  "msg": [
   "Improve conformance to RFC2616: don't expect body for certain responses.", 
   "* buckets/response_buckets.c", 
   "(expect_body): New function, decides if the response can have a body.", 
   "(serf_bucket_response_create): Use expect_body instead of only the head", 
   "request check. If the response must not have a body, don't create the", 
   "body bucket.", 
   "* test/test_buckets.c", 
   "(test_response_no_body_expected): New test.", 
   "(test_buckets): Run the new test."
  ], 
  "revision_id": "1699548"
 }, 
 {
  "author": "lgo", 
  "date": "2013-07-05T16:35:22.778806Z", 
  "msg": [
   "* serf.h: add missing closing comment delimiter."
  ], 
  "revision_id": "1699547"
 }, 
 {
  "author": "ivan", 
  "date": "2013-07-05T14:55:11.051580Z", 
  "msg": [
   "Implement serf_bucket_get_remaining() for LIMIT buckets.", 
   "* buckets/limit_buckets.c", 
   "(serf_limit_get_remaining): New.", 
   "(serf_bucket_type_limit): Add serf_limit_get_remaining()."
  ], 
  "revision_id": "1699546"
 }, 
 {
  "author": "ivan", 
  "date": "2013-07-05T14:09:26.119911Z", 
  "msg": [
   "Add new serf_bucket_get_remaining() function and implement it for AGGREGATE,", 
   "BARRIER, FILE, MMAP and SIMPLE buckets.", 
   "* serf.h", 
   "(SERF_LENGTH_UNKNOWN): New constant.", 
   "(serf_bucket_type_t): Add read_bucket_v2 and get_remaining vtable methods.", 
   "(serf_buckets_are_v2): Declare.", 
   "(serf_bucket_get_remaining): New.", 
   "* buckets/buckets.c", 
   "(serf_buckets_are_v2): New.", 
   "* buckets/aggregate_buckets.c", 
   "(serf_simple_get_remaining): New.", 
   "(serf_bucket_type_simple): Declare as v2 bucket type and add", 
   "serf_simple_get_remaining().", 
   "* buckets/barrier_buckets.c", 
   "(serf_barrier_get_remaining): New.", 
   "(serf_bucket_type_barrier): Declare as v2 bucket type and add", 
   "serf_barrier_get_remaining().", 
   "* buckets/file_buckets.c", 
   "(file_context_t): Add REMAINING member.", 
   "(serf_bucket_file_create): Initialize REMAINING to file size.", 
   "(serf_file_read, serf_file_readline): Update ctx->remaining after", 
   "successful read.", 
   "(serf_file_get_remaining): New.", 
   "(serf_bucket_type_file): Declare as v2 bucket type and add", 
   "serf_file_get_remaining().", 
   "* buckets/mmap_buckets.c", 
   "(serf_mmap_get_remaining): New.", 
   "(serf_bucket_type_mmap): Declare as v2 bucket type and add", 
   "serf_mmap_get_remaining().", 
   "* buckets/simple_buckets.c", 
   "(serf_simple_get_remaining): New.", 
   "(serf_bucket_type_simple): Declare as v2 bucket type and add", 
   "serf_simple_get_remaining().", 
   "* test/test_buckets.c", 
   "(test_aggregate_buckets): Test serf_bucket_get_remaining()."
  ], 
  "revision_id": "1699545"
 }, 
 {
  "author": "ivan", 
  "date": "2013-07-05T12:48:50.519905Z", 
  "msg": [
   "* buckets/file_buckets.c", 
   "(serf_bucket_file_create): Get file size by handle using", 
   "apr_file_info_get() function instead apr_file_name_get() and apr_stat()."
  ], 
  "revision_id": "1699544"
 }
]