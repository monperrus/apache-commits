[
 {
  "author": "gstein", 
  "date": "2002-06-14T00:17:32.353251Z", 
  "msg": [
   "A couple minor tweaks to fix issues in rev 2200.", 
   "* build/gen_base.py (MakefileGenerator.write): just use tlib.output", 
   "rather than trying to manually construct the library name.", 
   "generate RA_FOO_DEPS symbols from the dependent outputs.", 
   "* configure.in: SVN_RA_LIB_DEPS should refer to the new RA_FOO_DEPS", 
   "symbols rather than the convenience targets."
  ], 
  "revision_id": "842275"
 }, 
 {
  "author": "gstein", 
  "date": "2002-06-14T00:08:43.986838Z", 
  "msg": [
   "Fix issue 643. Install headers into a subdir of the configured include", 
   "directory, and insert version numbers into the libraries (distinct", 
   "from the .so version number).", 
   "* build/gen_base.py:", 
   "(_GeneratorBase.__init__): extract the version number from the (new)", 
   "[options] section in the configuration file. for library modules", 
   "(that aren't apache modules), pass that version to the _Target()", 
   "instantation for insertion into the target output filename.", 
   "(MakefileGenerator.write): collect the RA modules into a list", 
   "(identified by the new 'custom=ra-module' config option). insert", 
   "the version number into the libs to link against (*). when writing", 
   "out the installation of the includes, insert a 'subversion-VSN'", 
   "subdir. for each RA module found, construct a new RA_FOO_LINK", 
   "variable for use by the Makefile; this variable holds the libs to", 
   "link against for the RA_FOO module.", 
   "(_Target.__init__): take an optional version number [string] and", 
   "insert that into the output file name.", 
   "(_predef_sections): [options] is new and is *not* an output target,", 
   "so insert it here.", 
   "* build.conf: insert copyright. insert new [options] section. remove", 
   "silly comments for each test script (the C/Python part is", 
   "irrelevant, and the purpose of the test is described in/by the", 
   "test program itself) (ah... much cleaner looking). add the new", 
   "custom flag to the RA modules.", 
   "* configure.in: for SVN_RA_LIB_DEPS, just use the convenience make", 
   "target rather than the library name (**). for SVN_RA_LIB_LINK, use", 
   "the new RA_FOO_LINK variables as appropriate.", 
   "(*) I just realized this might not be necessary, but I'll test/fix in", 
   "a separate commit", 
   "(**) crap. just found this doesn't do dependencies right. the", 
   "convenience target never \"exists\", so it always rebuilds. will", 
   "fix separately, after this bulky change."
  ], 
  "revision_id": "842274"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-06-13T22:36:56.515717Z", 
  "msg": [
   "* branches/issue-662-dev/:", 
   "NOTE: This is on a branch because it's too destabilizing to go into", 
   "trunk right now, given that the current goal is just to get", 
   "modules working.  Much of this will be merged into trunk right", 
   "away, however.", 
   "Remove before_editor/before_edit_baton, after_editor/after_edit_baton", 
   "from most interfaces; use notify_func and notify_baton instead.", 
   "This mostly resolves issue #662, except for the svn_client_merge", 
   "interface hasn't been changed yet, and except for tweaking the output.", 
   "* Throughout the code:", 
   "Rename svn_wc_notify_state `text_state' variables to", 
   "`content_state', so they can eventually reflect changes to directory", 
   "contents as well as file contents.  Also consistify dereferencing of", 
   "notify_func pointers.", 
   "* subversion/clients/cmdline/feedback.c", 
   "(notify): Replaces update_notify.  This will be the One True", 
   "notification function.", 
   "(struct notify_baton, struct update_notify_baton): Merged into just", 
   "`struct notify_baton'.", 
   "(svn_cl__notify_func): Removed, code moved to notify.", 
   "(svn_cl__get_checkout_notifier): Initialize the sent_first_txdelta", 
   "field in the baton.", 
   "(svn_cl__make_notify_baton): Removed.", 
   "(svn_cl__get_notifier): Replaces svn_cl__get_checkout_notifier.", 
   "(notify_commit_postfix_txdelta): Removed...", 
   "(notify_added): Commented out, left for reference only.", 
   "* subversion/clients/cmdline/cl.h", 
   "(SVN_CL_NOTIFY, svn_cl__notify_func, svn_cl__make_notify_baton,", 
   "svn_cl__get_trace_commit_editor): Removed.", 
   "(svn_cl__get_trace_update_editor): Mark as obsolete", 
   "(svn_cl__get_notifier): Replaces svn_cl__get_checkout_notifier.", 
   "* subversion/clients/cmdline/trace-update.c: Not removed, because", 
   "merge-cmd.c still needs it.  When that changes over to the new", 
   "notification system, this file can finally go away.", 
   "* subversion/clients/cmdline/trace-commit.c: Left for reference, but", 
   "commented out to avoid warnings.  When the changeover to the new", 
   "notification system is complete, this can finally go away.", 
   "* subversion/clients/cmdline/revert-cmd.c (svn_cl__revert):", 
   "* subversion/clients/cmdline/move-cmd.c (svn_cl__move):", 
   "* subversion/clients/cmdline/mkdir-cmd.c (svn_cl__mkdir):", 
   "* subversion/clients/cmdline/resolve-cmd.c (svn_cl__resolve):", 
   "* subversion/clients/cmdline/delete-cmd.c (svn_cl__delete):", 
   "* subversion/clients/cmdline/switch-cmd.c (svn_cl__switch):", 
   "* subversion/clients/cmdline/add-cmd.c (svn_cl__add):", 
   "* subversion/clients/cmdline/commit-cmd.c (svn_cl__commit):", 
   "* subversion/clients/cmdline/update-cmd.c (svn_cl__update):", 
   "* subversion/clients/cmdline/copy-cmd.c (svn_cl__copy):", 
   "* subversion/clients/cmdline/import-cmd.c (svn_cl__import):", 
   "Use the new notification system, remove all trace editors.", 
   "* subversion/clients/cmdline/merge-cmd.c", 
   "(svn_cl__merge): Don't use the new notification system, but do obey", 
   "the opt_state->quiet flag.", 
   "* subversion/bindings/ruby/client.c", 
   "(cl_commit): Binding not adjusted.", 
   "* subversion/include/svn_client.h: Consistify documentation of", 
   "notify_func througout this file.", 
   "(svn_client_commit, svn_client_switch, svn_client_copy): Don't take", 
   "before and after editors anymore.", 
   "(svn_client_import, svn_client_update): Same, and take new", 
   "parameters notify_func and notify_baton.", 
   "(svn_client_merge): Don't take after_editor and after_baton anymore,", 
   "take notify_func and notify_baton instead.", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_commit): Same as header change.", 
   "(svn_client_import): Same as header change.  Use a", 
   "notify_path_offset internally to clip paths appropriately.", 
   "(import, import_dir, import_file): Take notify_func, notify_baton,", 
   "invoke them and pass them along in recursion.  Update comments.", 
   "Document the `files' parameter.", 
   "* subversion/libsvn_client/switch.c", 
   "(svn_client_switch): Same as header change.", 
   "* subversion/libsvn_client/update.c", 
   "(svn_client_update): Same as header change.", 
   "* subversion/libsvn_client/diff.c", 
   "(merge_cmd_baton): New notify_func and notify_baton fields.", 
   "(svn_client_merge): Same as header change.  Store the new notify_func", 
   "and notify_baton in the merge_cmd_baton.", 
   "(do_single_file_merge): Take notify_func and notify_baton, instead", 
   "of trace_editor and trace_editor_baton.", 
   "* subversion/include/svn_wc.h", 
   "(svn_wc_get_update_editor, svn_wc_get_switch_editor): Take", 
   "notify_func and notify_baton.  XXX can merge with .c file change?", 
   "(svn_wc_notify_state_t): Add svn_wc_notify_state_inapplicable.", 
   "(svn_wc_notify_func_t): Add mime_type parameter.  Tentativize the", 
   "design notes in the doc string.  More details are needed about the", 
   "indicator flags.", 
   "* subversion/libsvn_wc/update_editor.c", 
   "(svn_wc_get_update_editor, svn_wc_get_switch_editor): Take", 
   "notify_func and notify_baton, pass them along to make_editor.", 
   "* subversion/libsvn_client/copy.c", 
   "(setup_copy): Don't take before and after editors.  Pass notify_func", 
   "and notify_baton where formerly passed editors.", 
   "(wc_to_repos_copy, repos_to_wc_copy): Don't take before and after", 
   "editors, use notify_func and notify_baton instead.", 
   "(svn_client_move): Adjust call to setup_copy.", 
   "(svn_client_copy): Same as header change.", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_add): Pass mimetype to the notify_func.", 
   "(svn_wc_resolve_conflict): Format to 80 columns.", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "(report_revisions, svn_wc_crawl_revisions): Report node kind when", 
   "notifying of restoring files.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(do_item_commit): Report node kind when notifying.  Also report text", 
   "vs prop mods to notifier, when committing a modified item.", 
   "(svn_client__do_commit): Report node kind to notifier when sending", 
   "postfix text deltas.", 
   "Unrelated changes:", 
   "* subversion/libsvn_client/apply_edits.c: Removed.  This file was", 
   "entirely unused.  Go figure.", 
   "[Note: removal committed to trunk in revision 2203.]", 
   "* subversion/libsvn_fs/tree.c, subversion/include/svn_fs.h", 
   "(svn_fs_revision_root_revision): Return SVN_INVALID_REVNUM, not", 
   "hardcoded -1.", 
   "[Note: this fix was committed to trunk in revision 2204.]", 
   "* subversion/tests/clients/cmdline/getopt_tests.py", 
   "(getopt_help_bogus_cmd): Set the svn:executable property."
  ], 
  "revision_id": "842273"
 }, 
 {
  "author": "kfogel", 
  "date": "2002-06-13T22:20:51.302212Z", 
  "msg": [
   "* branches/issue-662-dev: New branch, don't lose the work done so far :-)."
  ], 
  "revision_id": "842272"
 }, 
 {
  "author": "brane", 
  "date": "2002-06-13T22:01:37.218553Z", 
  "msg": [
   "Port r2196 from /trunk to fs-convert-2092 branch."
  ], 
  "revision_id": "842271"
 }
]