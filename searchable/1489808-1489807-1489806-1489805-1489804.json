[
 {
  "author": "pkluegl", 
  "date": "2013-06-05T10:56:09.830330Z", 
  "msg": [
   "no jira - check on cast for external script files"
  ], 
  "revision_id": "1489808"
 }, 
 {
  "author": "olamy", 
  "date": "2013-06-05T10:50:45.620411Z", 
  "msg": [
   "dependency plugin version"
  ], 
  "revision_id": "1489807"
 }, 
 {
  "author": "olamy", 
  "date": "2013-06-05T10:49:54.002060Z", 
  "msg": [
   "dependency plugin version defined in parent pom"
  ], 
  "revision_id": "1489806"
 }, 
 {
  "author": "mduerig", 
  "date": "2013-06-05T10:45:19.017002Z", 
  "msg": [
   "OAK-775 Implement backward compatible observation", 
   "move listener registration to from ContentRepository to ContentSession"
  ], 
  "revision_id": "1489805"
 }, 
 {
  "author": "stefan2", 
  "date": "2013-06-05T10:44:02.802079Z", 
  "msg": [
   "On the fsfs-format7 branch:  Instead of using a set of flags,", 
   "use a single enum value to determine the type / format of a", 
   "representation.  Update all users.", 
   "* subversion/libsvn_fs_fs/low_level.h", 
   "(svn_fs_fs__rep_type_t): declare new private API type", 
   "(svn_fs_fs__rep_header_t): use that instead of boolean flags", 
   "* subversion/libsvn_fs_fs/low_level.c", 
   "(svn_fs_fs__read_rep_header,", 
   "svn_fs_fs__write_rep_header): update parsers and writers", 
   "* subversion/libsvn_fs_fs/cached_data.c", 
   "(dgb__log_access,", 
   "create_rep_state_body,", 
   "svn_fs_fs__rep_chain_length,", 
   "build_rep_list,", 
   "svn_fs_fs__get_file_delta_stream,", 
   "block_read_windows): update users", 
   "* subversion/libsvn_fs_fs/pack.c", 
   "(copy_rep_to_temp): ditto", 
   "* subversion/libsvn_fs_fs/recovery.c", 
   "(recover_find_max_ids): ditto", 
   "* subversion/libsvn_fs_fs/transaction.c", 
   "(rep_write_get_baton,", 
   "write_hash_delta_rep): ditto"
  ], 
  "revision_id": "1489804"
 }
]