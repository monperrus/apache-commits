[
 {
  "author": "craigmcc", 
  "date": "2001-01-23T02:53:03.000000Z", 
  "msg": [
   "Fourth of four commits for the Valves API changes.", 
   "Update all existing Valve implementations to reflect the new API changes."
  ], 
  "revision_id": "285564"
 }, 
 {
  "author": "craigmcc", 
  "date": "2001-01-23T02:52:00.000000Z", 
  "msg": [
   "Third of four commits for the Valve API change.", 
   "Changes reflect the fact that the Context implementation delegates to a", 
   "Pipeline implementation, rather than implementing Pipeline directly."
  ], 
  "revision_id": "285563"
 }, 
 {
  "author": "craigmcc", 
  "date": "2001-01-23T02:51:16.000000Z", 
  "msg": [
   "Second of four check-ins for the Valve API change.", 
   "Add a StandardPipeline implementation of the Pipeline interface.  Make", 
   "ContainerBase (and therefore all containers that inherit from it)", 
   "reference a Pipeline as a separate object to which valve management is", 
   "delegated, rather than implementing Pipeline directly."
  ], 
  "revision_id": "285562"
 }, 
 {
  "author": "craigmcc", 
  "date": "2001-01-23T02:49:37.000000Z", 
  "msg": [
   "First of several check-ins that implement the changes to the Valve API,", 
   "per the revised release plan.  The changes simplify Valve creation and", 
   "reduce dependencies on the implementation of pipelines.  For most valves", 
   "(that extend ValveBase), only two changes are required:", 
   "(1) Change the invoke() method signature to:", 
   "public void invoke(Reqeust request, Response response,", 
   "ValveContext valveContext)", 
   "throws IOException, ServletException;", 
   "(2) Change calls to invokeNext() to:", 
   "valveContext.invokeNext(request, response);", 
   "Additional changes include:", 
   "- Pipeline is now implemented as a separate object, with a class that can", 
   "be reused across Container implementations.", 
   "- New \"Contained\" interface encapsulates the method signatures required", 
   "when a class has a relationship with exactly one Container.", 
   "- New \"ValveContext\" interface encapsulates the functionality necessary", 
   "to call the next Valve in a Pipeline (if any) without exposing anything", 
   "about the mechanism actually used.  This interface is analogous to the", 
   "javax.servlet.FilterConfig interface in the 2.3 servlet API.", 
   "Other check-ins are split to avoid going over the line count limit."
  ], 
  "revision_id": "285561"
 }, 
 {
  "author": "remm", 
  "date": "2001-01-18T20:20:55.000000Z", 
  "msg": [
   "- Fix inclusion problems by catching the IllegalStateException which", 
   "can be thrown by the servlet container."
  ], 
  "revision_id": "285560"
 }
]