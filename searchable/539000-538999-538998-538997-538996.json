[
 {
  "author": "jerenkrantz", 
  "date": "2007-05-17T16:24:32.061756Z", 
  "msg": [
   "Reply to rpluem and propose another round of cache fixes for backport."
  ], 
  "revision_id": "539000"
 }, 
 {
  "author": "dmiddlem", 
  "date": "2007-05-17T16:21:44.629670Z", 
  "msg": [
   "Cleanup for demo"
  ], 
  "revision_id": "538999"
 }, 
 {
  "author": "nbubna", 
  "date": "2007-05-17T16:20:52.302608Z", 
  "msg": [
   "clean up handling of combined tool properties"
  ], 
  "revision_id": "538998"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2007-05-17T16:20:06.913883Z", 
  "msg": [
   "mod_disk_cache: When renegotiating an already cached Vary'd response, do not", 
   "let us later throw away the renegotiated content due to a name mismatch.", 
   "We do not need to update the ->name field just before writing the headers as", 
   "the computed ->name on open and create is sufficient.  Updating ->name here is", 
   "essentially a no-op - except in the case of Vary where the key has internally", 
   "changed (to account for the Vary prefix), but the original name has not.", 
   "However, writing the Vary'd-accounted key means that when we read the cache", 
   "next that we will error out and disregard the just renegotiated response and", 
   "fetch the content all over again - oops!", 
   "(This is largely a case where I think we may have overthought ourselves; hence", 
   "the explanation is here in the commit rather than in the file itself.)", 
   "* modules/cache/mod_disk_cache.c", 
   "(store_headers): The originally opened ->name is sufficient.", 
   "* CHANGES: Combined with r538992, note that renegotiation for Vary's seem to", 
   "work far better."
  ], 
  "revision_id": "538997"
 }, 
 {
  "author": "djd", 
  "date": "2007-05-17T16:19:38.196978Z", 
  "msg": [
   "Remove unused & trivial methods in ExecutionFactory related to old replication code."
  ], 
  "revision_id": "538996"
 }
]