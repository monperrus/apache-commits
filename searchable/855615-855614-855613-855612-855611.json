[
 {
  "author": "sussman", 
  "date": "2005-08-01T21:32:23.282340Z", 
  "msg": [
   "* STATUS:  vote for things."
  ], 
  "revision_id": "855615"
 }, 
 {
  "author": "philip", 
  "date": "2005-08-01T20:57:49.664053Z", 
  "msg": [
   "* STATUS: Nominate r15516"
  ], 
  "revision_id": "855614"
 }, 
 {
  "author": "xsteve", 
  "date": "2005-08-01T20:02:54.142384Z", 
  "msg": [
   "New option: svn-status-display-full-path", 
   "* trunk/contrib/client-side/psvn/psvn.el:", 
   "Based on a patch from Vesa Karvonen <vesa.karvonen@cs.helsinki.fi>", 
   "svn-status-display-full-path: New option to display the full path", 
   "for nested directories", 
   "(svn-insert-line-in-status-buffer): Use svn-status-display-full-path", 
   "(svn-status-toggle-display-full-path): New function to interactively", 
   "toggle svn-status-display-full-path. It is bound to O f"
  ], 
  "revision_id": "855613"
 }, 
 {
  "author": "kou", 
  "date": "2005-08-01T15:39:54.244166Z", 
  "msg": [
   "Implement some callbacks for Svn::Client::Context.", 
   "* subversion/bindings/swig/ruby/svn/client.rb:", 
   "(Svn::Client::Context#initialize): Call init_callbacks.", 
   "(Svn::Client::Context#init_callbacks,", 
   "Svn::Client::Context#set_log_msg_func,", 
   "Svn::Client::Context#set_notify_func,", 
   "Svn::Client::Context#set_notify_func2,", 
   "Svn::Client::Context#set_cancel_func): New method.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_swig_rb_notify_func,", 
   "svn_swig_rb_notify_func2,", 
   "svn_swig_rb_cancel_func): New function.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c", 
   "(svn_swig_rb_notify_func,", 
   "svn_swig_rb_notify_func2,", 
   "svn_swig_rb_cancel_func): New function.", 
   "* subversion/bindings/swig/svn_types.i", 
   "(%typemap(ruby, in) void *CALLBACK_BATON): New typemap.", 
   "* subversion/bindings/swig/svn_wc.i", 
   "(%typemap(ruby, in)", 
   "(svn_wc_notify_func_t notify_func, void *notify_baton),", 
   "%typemap(ruby, in)", 
   "(svn_wc_notify_func2_t notify_func2, void *notify_baton2)):", 
   "New typemap.", 
   "* subversion/bindings/swig/svn_client.i", 
   "(%typemap(ruby, in) svn_client_get_commit_log_t log_msg_func):", 
   "Don't handle log_msg_baton.", 
   "(%typemap(ruby, in) svn_cancel_func_t cancel_func,", 
   "%typemap(ruby, in) svn_wc_notify_func_t notify_func,", 
   "%typemap(ruby, in) svn_wc_notify_func2_t notify_func2):", 
   "New typemap.", 
   "(%apply void *CALLBACK_BATON): New.", 
   "(%typemap(ruby, in, numinputs=0)", 
   "apr_array_header_t **result_revs (apr_array_header_t *temp)):", 
   "Fix indentation.", 
   "* subversion/bindings/swig/ruby/test/util.rb", 
   "(SvnTestUtil#make_context): Use new log_msg_func interface.", 
   "* subversion/bindings/swig/ruby/test/test_client.rb", 
   "(SvnClientTest#test_switch): Add notify tests."
  ], 
  "revision_id": "855612"
 }, 
 {
  "author": "kou", 
  "date": "2005-08-01T13:52:19.332676Z", 
  "msg": [
   "Implement Svn::Client::Context#switch.", 
   "* subversion/bindings/swig/ruby/svn/client.rb", 
   "(Svn::Client::Context#switch): New method.", 
   "* subversion/bindings/swig/ruby/test/test_client.rb", 
   "(SvnClientTest#test_switch): New test."
  ], 
  "revision_id": "855611"
 }
]