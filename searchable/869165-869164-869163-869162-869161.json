[
 {
  "author": "glasser", 
  "date": "2008-01-31T00:35:39.896723Z", 
  "msg": [
   "Change FSFS directory contents reader to allocate its return value in", 
   "the caller's pool instead of in an internal cache.  This means that", 
   "the caller doesn't need to copy the result in order to avoid", 
   "clobbering, which makes it much easier to verify that the directory", 
   "cache entries are not used improperly.  Now the cache is explicitly", 
   "copied into and out of.  Also, we don't cache mutable directory", 
   "contents at all (previously, we would cache them and just refuse to", 
   "serve them from the cache).  Remove some code that is only relevant", 
   "for mutable cached directory contents, which don't exist anymore.", 
   "The few callers which actually took advantage of the fact that the", 
   "function didn't allocate its return value in the caller's pool now use", 
   "subpools.", 
   "(This is somewhat of a follow-up to r27256; in stress tests we've", 
   "observed that a similar sort of repository corruption appears to still", 
   "be possible, so this simplification of the code may help.)", 
   "* subversion/libsvn_fs_fs/dag.c", 
   "(dir_entry_id_from_node): Make sure that the record value is", 
   "allocated in the caller's pool, but allocate a directory hash in a", 
   "subpool.", 
   "(svn_fs_fs__dag_dir_entries): Take an extra pool argument, used for", 
   "the node_revision_t in the DAG node (which may need to live longer", 
   "than the directory hash).", 
   "(svn_fs_fs__dag_delete): Call svn_fs_fs__rep_contents_dir with a", 
   "subpool.", 
   "(svn_fs_fs__dag_delete_if_mutable): Adjust call to", 
   "svn_fs_fs__dag_dir_entries; don't copy results.", 
   "* subversion/libsvn_fs_fs/dag.h", 
   "(svn_fs_fs__dag_dir_entries): Update description of pool usage and", 
   "add argument.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(copy_dir_entries): Renamed and moved from", 
   "svn_fs_fs__copy_dir_entries.", 
   "(svn_fs_fs__rep_contents_dir): Allocate all results in passed-in", 
   "pool.  Separate cache-related code from the rest of the function.", 
   "(svn_fs_fs__set_entry): Call svn_fs_fs__rep_contents_dir with a", 
   "subpool.  Don't try to adjust a cache entry, since mutable", 
   "directory contents should be cached anyway.", 
   "(write_final_rev): Don't copy results of", 
   "svn_fs_fs__rep_contents_dir.", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__rep_contents_dir): Adjust description of pool usage.", 
   "(svn_fs_fs__copy_dir_entries): Remove.", 
   "* subversion/libsvn_fs_fs/tree.c", 
   "(merge, fs_dir_entries, crawl_directory_dag_for_mergeinfo): Adjust", 
   "call to svn_fs_fs__dag_dir_entries; don't copy results."
  ], 
  "revision_id": "869165"
 }, 
 {
  "author": "pburba", 
  "date": "2008-01-31T00:24:50.184534Z", 
  "msg": [
   "Doc string tweak to svn_client__get_history_as_mergeinfo().", 
   "* subversion/libsvn_client/mergeinfo.h", 
   "(svn_client__get_history_as_mergeinfo): Unlike, say", 
   "svn_client__repos_locations(), this function requires that the peg rev be", 
   "at least as young as the start revision."
  ], 
  "revision_id": "869164"
 }, 
 {
  "author": "cmpilato", 
  "date": "2008-01-30T22:29:35.449028Z", 
  "msg": [
   "On the 'svnadmin-upgrade' branch, disallow FSFS upgrading until the", 
   "code to do so is actually written.", 
   "(Maybe some nice volunteer will come along and do the work.)", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(svn_fs_fs__upgrade): For now, always return SVN_ERR_FS_UNSUPPORTED_UPGRADE."
  ], 
  "revision_id": "869163"
 }, 
 {
  "author": "cmpilato", 
  "date": "2008-01-30T21:48:13.240490Z", 
  "msg": [
   "On the 'svnadmin-upgrade' branch, remove an unnecessary warning.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_upgrade): Remove warning about exclusive access", 
   "requirements, since callers won't have a way to get such with FSFS.", 
   "Suggested by: glasser"
  ], 
  "revision_id": "869162"
 }, 
 {
  "author": "cmpilato", 
  "date": "2008-01-30T21:22:11.890029Z", 
  "msg": [
   "On the 'svnadmin-upgrade' branch, take a first pass at implementing", 
   "the 'svnadmin upgrade' subcommand and supporting APIs.", 
   "NOTE: I'm not confident in the area of serialized access to the", 
   "various backends, and what's safe to do, and what's not.  Peer", 
   "review would be lovely.", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_UNSUPPORTED_UPGRADE, SVN_ERR_REPOS_UNSUPPORTED_UPGRADE):", 
   "New error codes.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_upgrade): New.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_upgrade): New.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(fs_library_vtable_t): Add 'upgrade_fs' vtable member.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(svn_fs_upgrade): New.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(base_upgrade): New function.", 
   "(library_vtable): Populate new 'upgrade_fs' vtable slot with base_upgrade().", 
   "* subversion/libsvn_repos/repos.c", 
   "(svn_repos_upgrade): New function.", 
   "* subversion/libsvn_fs_fs/fs_fs.h", 
   "(svn_fs_fs__upgrade): New function.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(write_format): Add 'overwrite' parameter, and logic to handle", 
   "overwriting an existing 'format' file if that parameter is set.", 
   "Callers updated.", 
   "(svn_fs_fs__upgrade): New function.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(library_vtable): Populate new 'upgrade_fs' vtable slot with", 
   "svn_fs_fs__upgrade().", 
   "* subversion/svnadmin/main.c", 
   "(cmd_table): Add 'upgrade' subcommand.", 
   "(upgrade_started, subcommand_upgrade): New functions."
  ], 
  "revision_id": "869161"
 }
]