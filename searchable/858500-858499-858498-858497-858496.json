[
 {
  "author": "brane", 
  "date": "2006-02-10T23:33:20.682239Z", 
  "msg": [
   "Fix two warnings.", 
   "* subversion/mod_dav_svn/repos.c (svn_dav__negotiate_encoding_prefs):", 
   "Comparing 'i' to 'encoding_prefs->nelts' in the loop condition gave", 
   "a signed/unsigned mismatch warning. 'i' is only used to count the", 
   "'nelts', so it should be the same type.", 
   "* subversion/libsvn_delta/svndiff.c (svn_txdelta_to_svndiff):", 
   "Don't return a value from a void function."
  ], 
  "revision_id": "858500"
 }, 
 {
  "author": "rooneg", 
  "date": "2006-02-10T23:32:37.030780Z", 
  "msg": [
   "Make function pointer arguments non-const, for consistency with the", 
   "declaration of svn_repos_replay2.", 
   "* subversion/libsvn_repos/replay.c", 
   "(svn_repos_replay2, add_subdir): Make authz_read_func non-const."
  ], 
  "revision_id": "858499"
 }, 
 {
  "author": "dlr", 
  "date": "2006-02-10T23:28:49.358982Z", 
  "msg": [
   "Accept \"Reviewed by\" as an alias for \"Review by\".", 
   "This implementation has the side effect of generating HTML with log", 
   "messages which don't exactly match what's in the repository, because", 
   "canonical names (e.g. \"Review by\") are used in place of provided names", 
   "(e.g. \"Reviewed by\").", 
   "* tools/dev/contribulyze.py", 
   "(Field.__init__): Accept an optional ALIAS argument which creates an", 
   "instance field of the same name.", 
   "(field_aliases): A dict of alias names to field names", 
   "(e.g. \"Reviewed\" to \"Review\").", 
   "(graze): When instantiating and using Field objects, take field", 
   "aliases into account."
  ], 
  "revision_id": "858498"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2006-02-10T23:18:31.313508Z", 
  "msg": [
   "Minor memory leak bugfix.", 
   "* subversion/libsvn_ra_serf/property.c", 
   "(deliver_props): Free the XML parser if we're reusing the prop_ctx."
  ], 
  "revision_id": "858497"
 }, 
 {
  "author": "malcolm", 
  "date": "2006-02-10T23:15:40.826105Z", 
  "msg": [
   "Change the behaviour of 'svn checkout' so that the default operative", 
   "revision will be taken from the target's peg revision (if so provided),", 
   "for consistency with most of the other 'svn' commands.", 
   "This is a minor change to existing behaviour: if a peg revision is", 
   "provided without an explicit revision, we will now checkout the directory", 
   "as it was at rPEG, rather than at HEAD.", 
   "* subversion/svn/checkout-cmd.c", 
   "(svn_cl__checkout): If no operative revision was specified, use the", 
   "peg revision, or, if there was no peg revision, use HEAD as before.", 
   "Introduce a local variable to hold the operative revision, since it's", 
   "now possible for each target to have a different operative revision."
  ], 
  "revision_id": "858496"
 }
]