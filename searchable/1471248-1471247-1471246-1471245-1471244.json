[
 {
  "author": "stack", 
  "date": "2013-04-24T04:46:55.131566Z", 
  "msg": [
   "HBASE-5472 LoadIncrementalHFiles loops forever if the target table misses a CF -- RE-RE-APPLY"
  ], 
  "revision_id": "1471248"
 }, 
 {
  "author": "stack", 
  "date": "2013-04-24T04:45:44.049322Z", 
  "msg": [
   "HBASE-5472 LoadIncrementalHFiles loops forever if the target table misses a CF -- REVERT -- ANOTHER OVERCOMMIT"
  ], 
  "revision_id": "1471247"
 }, 
 {
  "author": "stack", 
  "date": "2013-04-24T04:44:09.674042Z", 
  "msg": [
   "HBASE-5472 LoadIncrementalHFiles loops forever if the target table misses a CF -- REAPPLY"
  ], 
  "revision_id": "1471246"
 }, 
 {
  "author": "dag", 
  "date": "2013-04-24T04:37:28.695628Z", 
  "msg": [
   "DERBY-6125 Code clean up in client driver.", 
   "derby-6125-rename-c which renames the name overloaded JDBC classes in", 
   "the client driver thus:", 
   "am/<JDBCClassName>.java -> am/Client<JDBCClassName>.java", 
   "This allows import statements to be used for all JDBC and Derby", 
   "classes. The rest of the patch implements such usage instead of full", 
   "pathnames in usages. After this patch, the only overload that needs", 
   "explicit package path is \"java.util.Date\" which would otherwise", 
   "collide with java.sql.Date. In one instance, I let a full path remain", 
   "in order to avoid a compiler warning: the deprecated use of", 
   "StringBufferInputStream in ClientClob.java."
  ], 
  "revision_id": "1471245"
 }, 
 {
  "author": "sarowe", 
  "date": "2013-04-24T04:11:55.109798Z", 
  "msg": [
   "fix well-formedness issues"
  ], 
  "revision_id": "1471244"
 }
]