[
 {
  "author": "scheu", 
  "date": "2001-12-22T04:38:14.000000Z", 
  "msg": [
   "Added support in WSDL2Java, Java2WSDL and the BeanSerializer for", 
   "indexed fields.  This support is not yet defined by JAX-RPC", 
   "but we have a lot of requests for this behaviour (like Mark Roder's note today).", 
   "If a Java class has a Java Bean indexed property.  For example:", 
   "void setBar(Foo[] v);", 
   "Foo[] getBar();", 
   "void setBar(int i, Foo v);", 
   "Foo  getBar(int i);", 
   "then the xml schema field representing the element is emitted as", 
   "<element name=\"Bar\" type=\"Foo\" maxOccurs=\"unbounded\" />", 
   "and the BeanSerializer will properly serialize a series of Bar elements (not as an array):", 
   "<Bar xsi:type=\"Foo\"> whatever1 </Bar>", 
   "<Bar xsi:type=\"Foo\"> whatever2 </Bar>", 
   "<Bar xsi:type=\"Foo\"> whatever3 </Bar>", 
   "The bean serializer and deserializer use the indexed getter and setter to access the", 
   "indexed values.  Also WSDL2Java is changed to produce the indexed accessors.", 
   "Changed the test/array testcase to use an indexed property.", 
   "------------------------------------------------------------------------------------", 
   "Added support in the parsers and BeanSerializer so that", 
   "a \"get\" class for a boolean property uses \"is\" instead of \"get\".", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "246124"
 }, 
 {
  "author": "scheu", 
  "date": "2001-12-21T21:14:57.000000Z", 
  "msg": [
   "Now users have a way to provide their own operation overloading resolution, parameter name", 
   "mapping, bean field determination, etc.", 
   "/**", 
   "* Java2WSDLFactory is part of the Java2WSDL framework.", 
   "* To extend the functionality, implement this interface with your own factory and", 
   "* supply your implementation to Java2WSDL (via command line option -f or", 
   "* by extending Java2WSDL).", 
   "*", 
   "* By default the DefaultFactory is used.  You may wish to extend the DefaultFactory", 
   "* instead of directly implementing Java2WSDLFactory.  Thus if new methods are", 
   "* added you will automatically pick up the default implementation.", 
   "*", 
   "* The Java2WSDL emitter operates on ClassRep, MethodRep, FieldRep & ParamRep", 
   "* objects that are built from Class objects.  These Rep objects allow users", 
   "* to add, rename, remove, etc. the various names and types in order to", 
   "* affect the WSDL generation. (The classes are very simple, see ClassRep for details)", 
   "*", 
   "* There are two ClassRep builder interfaces, one for building the", 
   "* ClassRep for the PortType Class/Interface, and one for building the", 
   "* ClassRep for the referenced Bean Classes.  The DefaultFactory", 
   "* uses DefaultBuilderPortTypeClassRep and DefaultBuilderBeanClassRep.", 
   "* You may want to examine/extend these builder classes to provide", 
   "* your own functionality.", 
   "*", 
   "*/", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "246123"
 }, 
 {
  "author": "rubys", 
  "date": "2001-12-21T12:13:40.000000Z", 
  "msg": [
   "Simplify chain processing.", 
   "Submitted by: Glyn Normington <glyn_normington@uk.ibm.com>"
  ], 
  "revision_id": "246122"
 }, 
 {
  "author": "scheu", 
  "date": "2001-12-20T21:25:33.000000Z", 
  "msg": [
   "bug found by Ganga Sah"
  ], 
  "revision_id": "246121"
 }, 
 {
  "author": "scheu", 
  "date": "2001-12-20T19:51:32.000000Z", 
  "msg": [
   "The following changes were made:", 
   "1) In Bean Deserialization, accept an element name if it matches", 
   "a class property ignoring the case of the first letter.", 
   "2) In Bean Serialization, new constructors are provided to allow a", 
   "client to force the first letter of property element names to upper (or lower) case.", 
   "3) Changed the class BeanSerFactory to BeanDeserFactory!  After all it is a", 
   "deserialization factory!  Changed the samples and documentation to reflect", 
   "the name change.", 
   "4) Minor change in Java2WSDL", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "246120"
 }
]