[
 {
  "author": "gstein", 
  "date": "2003-10-27T21:49:02.820016Z", 
  "msg": [
   "Set up a new header to define supporting utilities for implementing", 
   "buckets. Most users of serf will not require this information (which means", 
   "it shouldn't be in the primary interface header: serf.h)", 
   "* serf/branches/gen2/serf.h:", 
   "(serf_bucket_create, serf_default_set_metadata,", 
   "serf_default_get_metadta, serf_default_read_bucket,", 
   "serf_default_destroy): moved to serf_bucket_util.h", 
   "* serf/branches/gen2/serf_bucket_util: new header", 
   "* serf/branches/gen2/serf_bucket_types.h: updated copyright year"
  ], 
  "revision_id": "54"
 }, 
 {
  "author": "gstein", 
  "date": "2003-10-27T21:14:32.174188Z", 
  "msg": [
   "Change the read() function to allow reading up to a specific number of", 
   "bytes, rather than always doing \"all available\". Also provide a new", 
   "readline() function.", 
   "* serf/branches/gen2/serf.h:", 
   "(SERF_READ_ALL_AVAIL): new constant to define \"read all available data\".", 
   "(SERF_NEWLINE_CR, SERF_NEWLINE_CRLF, SERF_NEWLINE_LF, SERF_NEWLINE_ANY,", 
   "SERF_NEWLINE_NONE): new constants to define different newline types.", 
   "(bucket.read): take a new parameter to specify the (maximum) number of", 
   "bytes to read from the bucket. this prevents protocol read overruns.", 
   "(bucket.readline): new function to read a line of text from the bucket."
  ], 
  "revision_id": "53"
 }, 
 {
  "author": "gstein", 
  "date": "2003-10-27T14:29:03.342411Z", 
  "msg": [
   "Add more documentation, and bare skeleton of the basic functions.", 
   "* serf/branches/gen2/serf.h:", 
   "(serf_bucket_create): new basic bucket creation function", 
   "(serf_default_read_bucket): new function for a default read-bucket", 
   "function.", 
   "(serf_default_destroy): new function for a default bucket destroy", 
   "function.", 
   "* serf/branches/gen2/serf_bucket_type.h:", 
   "(serf_bucket_aggregate_become): new function to alter a bucket structure", 
   "to become an aggregate bucket.", 
   "* serf/branches/gen2/context.c: new file. basic context functions.", 
   "* serf/branches/gen2/connection.c: new file. basic connection functions.", 
   "* serf/branches/gen2/buckets/buckets.c: new file. basic bucket functions."
  ], 
  "revision_id": "52"
 }, 
 {
  "author": "gstein", 
  "date": "2003-10-27T12:43:21.934916Z", 
  "msg": [
   "Add commentary and the connection \"acceptor\" concept.", 
   "* serf/branches/gen2/serf.h:", 
   "(serf_response_acceptor_t): new function callback type for assembling", 
   "wrapper buckets around the incoming socket.", 
   "(serf_connection_create): take an acceptor callback and its baton", 
   "(...): add commentary"
  ], 
  "revision_id": "51"
 }, 
 {
  "author": "gstein", 
  "date": "2003-10-27T09:47:25.461555Z", 
  "msg": [
   "Refine the bucket types a bit and add some supporting functions.", 
   "* branches/gen2/serf_bucket_types.h:", 
   "(serf_bucket_request_create): new function to create a request bucket", 
   "(serf_bucket_response_create): new function to create a response bucket", 
   "(serf_bucket_response_status): new function to return the HTTP status", 
   "code from the response.", 
   "(serf_bucket_response_reason): new func to return the HTTP reason text", 
   "(serf_bucket_response_protocol): new func to return the HTTP protocol", 
   "version.", 
   "(serf_bucket_aggregate_create): new func to create an aggregate bucket", 
   "(serf_bucket_aggregate_prepend): new func to prepend a bucket into an", 
   "aggregate's list of buckets.", 
   "(serf_bucket_aggregate_append): new func to append a bucket onto an", 
   "aggregate's list of buckets.", 
   "(serf_bucket_file_create): new function to create a file bucket", 
   "(serf_bucket_file_borrow): new function to borrow a reference to the", 
   "bucket's file object.", 
   "(serf_bucket_socket_create): new function to create a socket bucket", 
   "(serf_bucket_mmap_create): new function to create an mmap bucket", 
   "(serf_bucket_type_empty): removed", 
   "(SERF_BUCKET_IS_EMPTY): removed", 
   "(serf_bucket_type_pipe): removed", 
   "(SERF_BUCKET_IS_PIPE): removed"
  ], 
  "revision_id": "50"
 }
]