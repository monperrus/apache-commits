[
 {
  "author": "leosimons", 
  "date": "2005-01-20T17:02:37.820860Z", 
  "msg": [
   "* Hmm. Something was wrong with the tests. Things compile again now. Another hmm.", 
   "* document 'gump run' properly using optparse built-in functionality.", 
   "* remove the --project for now as its not actually supported."
  ], 
  "revision_id": "125789"
 }, 
 {
  "author": "stefan", 
  "date": "2005-01-20T16:24:14.964243Z", 
  "msg": [
   "optimized the following methods:", 
   "Node.addNode", 
   "Node.getProperty", 
   "Node.hasProperty", 
   "Node.getNode", 
   "Node.hasNode", 
   "Node.save", 
   "avoid unnecessary throwing & catching of exceptions", 
   "avoid unnecessary building & resolving of paths", 
   "avoid unnecessary regexp evaluations"
  ], 
  "revision_id": "125788"
 }, 
 {
  "author": "nlehuen", 
  "date": "2005-01-20T16:23:20.222625Z", 
  "msg": [
   "test_PythonOption_remove2 : the assertation was wrong, fixed."
  ], 
  "revision_id": "125787"
 }, 
 {
  "author": "nlehuen", 
  "date": "2005-01-20T16:11:43.846627Z", 
  "msg": [
   "There is *NO* possibility of collision ;)"
  ], 
  "revision_id": "125786"
 }, 
 {
  "author": "nlehuen", 
  "date": "2005-01-20T15:55:36.056393Z", 
  "msg": [
   "This should fix [#MODPYTHON-6]. Finally, I set empty values in local configurations by marking it with an empty string. The empty strings are stripped in get_config() so the removed keys aren't visible in req.get_config().", 
   "- fixed both mod_python.c and requestobject.c for the new behaviour", 
   "- updated the unit tests", 
   "- updated the documentation"
  ], 
  "revision_id": "125785"
 }
]