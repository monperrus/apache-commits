[
 {
  "author": "slaws", 
  "date": "2007-08-07T22:39:33.776995Z", 
  "msg": [
   "TUSCANY-1512", 
   "Move sca binding xml processing into its own module"
  ], 
  "revision_id": "563685"
 }, 
 {
  "author": "awiner", 
  "date": "2007-08-07T22:37:26.095690Z", 
  "msg": [
   "Enable lazy renderer loading on the 1.2 side of things"
  ], 
  "revision_id": "563684"
 }, 
 {
  "author": "aconway", 
  "date": "2007-08-07T22:28:06.177862Z", 
  "msg": [
   "* Summary: new Frame type to replace AMQFrame. Instead of holding", 
   "a shared_ptr to a heap-allocated AMQBody subclass, it holds the", 
   "body in-line in a boost::variant of all the concrete AMQBody", 
   "subclasses. Actually there are nested variants, the compiler", 
   "does not cope well with a single variant of 130-some types.", 
   "Creating, encoding and decoding a local Frame doess 0 heap", 
   "allocation apart from that done by the concrete", 
   "AMQBody::encode/decode - e.g. method bodies with std::string", 
   "fields.  for method bodies", 
   "All variants contain type boost::blank. This guarantees 0 heap", 
   "alloocation by the variant and represents the \"uninitialized\"", 
   "state. variant.h provides NoBlankVisitor to help write visitors", 
   "for variants containing blank.", 
   "* src/qpid/framing/MethodHolder.h, .cpp: Holds a variant", 
   "containing a method body.", 
   "* src/qpid/framing/Frame.h, .cpp: New Frame holds body in a", 
   "variant rather than via heap allocation.", 
   "* src/qpid/framing/variant.h: Utilities for using boost::variant.", 
   "* src/qpid/framing/amqp_types.h: Added FrameType typedef.", 
   "* src/qpid/framing/AMQMethodBody.h: Friends with MethodHolder.", 
   "* src/Makefile.am:", 
   "- Improved ruby generation rule.", 
   "- Run method_variants template.", 
   "- Added new source files", 
   "- Pre-compiled header rule for method_variants.h", 
   "* rubygen/templates/method_variants.rb: Generate variants", 
   "to hold methods of each class, and MethodVariant to hold all", 
   "the class variants.", 
   "* rubygen/cppgen.rb: variant, tuple methods.", 
   "* MethodBodyClass.h.tmpl: Added default constructor to method bodies.", 
   "* amqpgen.rb (AmqpRoot::merge): fix bug in merge."
  ], 
  "revision_id": "563683"
 }, 
 {
  "author": "sebor", 
  "date": "2007-08-07T22:24:10.280947Z", 
  "msg": [
   "2007-08-07  Martin Sebor  <sebor@roguewave.com>", 
   "* once.h: New implementation-private header. Declares __rw_once_t", 
   "and __rw_once() for portable, thread-safe one-time initialization.", 
   "* once.cpp: New. Defines the above."
  ], 
  "revision_id": "563682"
 }, 
 {
  "author": "jmcconnell", 
  "date": "2007-08-07T22:23:26.772354Z", 
  "msg": [
   "update to p-u 1.4.2 and the more exacting cli code that john originally had"
  ], 
  "revision_id": "563681"
 }
]