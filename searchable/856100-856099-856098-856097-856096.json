[
 {
  "author": "dlr", 
  "date": "2005-09-01T21:13:53.130977Z", 
  "msg": [
   "* subversion/include/svn_error_codes.h", 
   "Correct formatting of the \"start\" token for Doxygen throughout this", 
   "source file, by changing \"/*\" to \"/**\"."
  ], 
  "revision_id": "856100"
 }, 
 {
  "author": "kou", 
  "date": "2005-09-01T14:20:21.136417Z", 
  "msg": [
   "Add some tests for Svn::Wc.", 
   "* subversion/bindings/swig/INSTALL", 
   "(STATUS OF THE SWIG BINDINGS): Update the Ruby bindings status.", 
   "* subversion/bindings/swig/svn_wc.i", 
   "(%apply SWIGTYPE **OUTPARAM): Add 'svn_wc_status2_t **'.", 
   "(%apply apr_hash_t **PROPHASH): Add 'apr_hash_t **original_props'.", 
   "(%apply const char *MAY_BE_NULL): Add 'const char *uuid',", 
   "'const char *repos', 'const char *copyfrom_url',", 
   "'const char *rev_date' and 'const char *rev_author'.", 
   "(%apply const char **OUTPUT): New apply.", 
   "(%typemap(ruby, in, numinputs=0) apr_hash_t **externals_old,", 
   "%typemap(ruby, argout, fragment=\"output_helper\")", 
   "apr_hash_t **externals_old,", 
   "%typemap(ruby, in, numinputs=0) apr_hash_t **externals_new,", 
   "%typemap(ruby, argout, fragment=\"output_helper\")", 
   "apr_hash_t **externals_new): New typemap.", 
   "* subversion/bindings/swig/include/svn_types.swg", 
   "(%typemap(ruby, out, fragment=\"output_helper\") svn_boolean_t,", 
   "%typemap(ruby, argout, fragment=\"output_helper\") svn_boolean_t *):", 
   "Support multiple boolean return.", 
   "* subversion/bindings/swig/ruby/svn/wc.rb (Svn::Wc::AdmAccess::open)", 
   "(Svn::Wc::AdmAccess.probe_open,", 
   "Svn::Wc::AdmAccess.open_anchor", 
   "Svn::Wc::AdmAccess.probe_try): Accept block. cancel_func is just argument.", 
   "(Svn::Wc::AdmAccess#maybe_set_repos_root,", 
   "Svn::Wc::Notify#dup): Fix typo.", 
   "(Svn::Wc::AdmAccess#update_editor,", 
   "Svn::Wc::AdmAccess#switch_editor,", 
   "Svn::Wc::AdmAccess#diff_editor,", 
   "Svn::Wc::AdmAccess#status_editor): Setup Svn::Delta::Editor.", 
   "(Svn::Wc::AdmAccess#add,", 
   "Svn::Wc::AdmAccess#process_committed): Add default argument value.", 
   "(Svn::Wc::Entry.new): New class method.", 
   "(Svn::Wc::Entry#conflicted?): New convenient method.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_adm_access): Add Svn::Wc::AdmAccess.prove_open", 
   "test.", 
   "(SvnWcTest#test_traversal_info, SvnWcTest::test_externals)", 
   "(SvnWcTest#test_notify,", 
   "SvnWcTest#test_entry,", 
   "SvnWcTest#test_ancestry,", 
   "SvnWcTest#test_merge,", 
   "SvnWcTest#test_status): New test."
  ], 
  "revision_id": "856099"
 }, 
 {
  "author": "kou", 
  "date": "2005-09-01T10:08:47.137847Z", 
  "msg": [
   "Add some tests for Svn::Repos.", 
   "* subversion/bindings/swig/INSTALL", 
   "(STATUS OF THE SWIG BINDINGS): Update the Ruby bindings status.", 
   "* subversion/bindings/swig/svn_delta.i", 
   "(svn_swig_rb_make_editor): Remove.", 
   "(%typemap(ruby, in)", 
   "(const svn_delta_editor_t *editor, void *edit_baton)):", 
   "New typemap.", 
   "* subversion/bindings/swig/svn_repos.i", 
   "(%apply SWIGTYPE **OUTPARAM): Add 'svn_authz_t **'.", 
   "(%typemap(ruby, in)", 
   "(svn_repos_authz_func_t authz_read_func,", 
   "void *authz_read_baton)): Set NULL when nil is passed.", 
   "* subversion/bindings/swig/include/svn_types.swg", 
   "(%typemap(ruby, in) apr_array_header_t *location_revisions,", 
   "%typemap(ruby, in, numinputs=0) apr_hash_t **locations,", 
   "%typemap(ruby, argout) apr_hash_t **locations): New typemap. Move", 
   "from subversion/bindings/swig/svn_ra.i.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c,", 
   "subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_swig_rb_svn_delta_editor): New function.", 
   "(svn_swig_rb_make_delta_editor): Add 'delta_'.", 
   "* subversion/bindings/swig/ruby/svn/info.rb", 
   "(Svn::Info#traverse): Pass editor as argument.", 
   "* subversion/bindings/swig/ruby/svn/delta.rb", 
   "(Svn::Delta.make_editor): Remove.", 
   "(Svn::Delta#path_driver): Remove edit_baton.", 
   "* subversion/bindings/swig/ruby/svn/repos.rb", 
   "(Svn::Repos::ReposCore#baton.node,", 
   "Svn::Repos::ReposCore#delta_tree,", 
   "Svn::Repos::ReposCore#report): Remove Svn::Delta.make_editor.", 
   "(Svn::Repos::ReposCore#transaction_for_update): Use", 
   "Svn::Fs::Transaction#abort.", 
   "(Svn::Repos::ReposCore#lock): Add default argument value.", 
   "(Svn::Repos::ReposCore#unlock): Remove needless variable.", 
   "(Svn::Repos::ReposCore#file_revs,", 
   "Svn::Repos::ReposCore#get_locks,", 
   "Svn::Repos::ReposCore#logs", 
   "Svn::Repos::ReposCore#set_prop,", 
   "Svn::Repos::ReposCore#prop,", 
   "Svn::Repos::ReposCore#proplist): Accept authz_read_func as argument.", 
   "(Svn::Repos::Authz.read): New class method.", 
   "(Svn::Repos::Authz#can_access?): Fix typo.", 
   "* subversion/bindings/swig/ruby/svn/fs.rb", 
   "(Svn::Fs::FileSystem::trace_node_locations): New method. Move from", 
   "Svn::Fs::Access.", 
   "(Svn::Fs::Root#editor=,", 
   "Svn::Fs::Root#dir_delta,", 
   "Svn::Fs::Root#replay): Remove Svn::Delta.make_editor.", 
   "* subversion/bindings/swig/ruby/test/test_delta.rb", 
   "(SvnDeltaTest#test_path_driver,", 
   "SvnDeltaTest#traverse): Remove Svn::Delta.make_editor.", 
   "* subversion/bindings/swig/ruby/test/test_repos.rb", 
   "(SvnReposTest#test_transaction): Add", 
   "Svn::Repos::ReposCore#transaction_for_update test.", 
   "(SvnReposTest#test_trace_node_locations,", 
   "SvnReposTest#test_node_editor,", 
   "SvnReposTest#test_lock,", 
   "SvnReposTest#test_authz): New test.", 
   "* subversion/bindings/swig/svn_ra.i", 
   "(%typemap(ruby, in) apr_array_header_t *location_revisions,", 
   "%typemap(ruby, in, numinputs=0) apr_hash_t **locations,", 
   "%typemap(ruby, argout) apr_hash_t **locations): Remove.", 
   "Move to subversion/bindings/swig/include/svn_types.swg."
  ], 
  "revision_id": "856098"
 }, 
 {
  "author": "kou", 
  "date": "2005-09-01T07:13:23.695195Z", 
  "msg": [
   "Add some tests for Svn::Repos.", 
   "* subversion/bindings/swig/INSTALL", 
   "(STATUS OF THE SWIG BINDINGS): Update the Ruby bindings status.", 
   "* subversion/bindings/swig/svn_repos.i", 
   "(%apply const char *MAY_BE_NULL): Add 'const char *tgt_path'.", 
   "* subversion/bindings/swig/ruby/svn/repos.rb", 
   "(Svn::Repos.create): Add default argument value.", 
   "(Svn::Repos::ReposCore#report): Add guard.", 
   "(Svn::Repos::ReposCore#committed_info): Remove.", 
   "(Svn::Repos::ReposCore#logs): Return log info.", 
   "(Svn::Repos::ReposCore#file_revs): Return revision info.", 
   "(Svn::Repos::ReposCore#set_prop,", 
   "Svn::Repos::ReposCore#prop,", 
   "Svn::Repos::ReposCore#proplist): Remove 'rev_' prefix.", 
   "(Svn::Repos::ReposCore#load_fs): Fix typo.", 
   "(Svn::Repos::ReposCore#setup_report_baton): Add flag for guarding", 
   "- (baton.link_path): Fix typo.", 
   "- (baton.abort_report): Set flag.", 
   "* subversion/bindings/swig/ruby/svn/fs.rb", 
   "(Svn::Fs::Root#committed_info): New method. Move from", 
   "Svn::Repos::ReposCore.", 
   "* subversion/bindings/swig/ruby/test/test_repos.rb", 
   "(SvnReposTest#test_logs,", 
   "SvnReposTest#test_prop,", 
   "SvnReposTest#test_load): New test.", 
   "(SvnReposTest#test_report): Use SvnReposTest::TestEditor.", 
   "(SvnReposTest::TestEditor): New class for test_report.", 
   "* subversion/bindings/swig/ruby/test/test_ra.rb", 
   "(SvnRaTest#test_prop): Rename from test_prop1."
  ], 
  "revision_id": "856097"
 }, 
 {
  "author": "kou", 
  "date": "2005-09-01T03:13:32.723160Z", 
  "msg": [
   "Add some tests for Svn::Repos and Svn::Wc.", 
   "* subversion/bindings/swig/INSTALL", 
   "(STATUS OF THE SWIG BINDINGS): Update the Ruby bindings status.", 
   "* subversion/bindings/swig/svn_delta.i", 
   "(%apply const char *MAY_BE_NULL): Add 'const char *copyfrom_path',", 
   "'const char *copy_path' and 'const char *base_checksum'.", 
   "(%typemap(ruby, in)", 
   "(svn_txdelta_window_handler_t handler, void *handler_baton)):", 
   "Accept Svn::Delta::TextDeltaWindowHandler object.", 
   "(svn_txdelta_to_svndiff_handler, svn_txdelta_apply_wrapper): Remove. Use", 
   "Svn::Delta::TextDeltaWindowHandler as svn_txdelta_window_handler_t", 
   "wrapper.", 
   "* subversion/bindings/swig/svn_wc.i", 
   "(%apply const char *MAY_BE_NULL): Add.", 
   "(%typemap(ruby, in, numinputs=0)", 
   "apr_array_header_t **patterns (apr_array_header_t *temp),", 
   "%typemap(ruby, argout, fragment=\"output_helper\")", 
   "apr_array_header_t **patterns): New typemap.", 
   "(%typemap(ruby, in)", 
   "(svn_wc_notify_func2_t notify_func, void *notify_baton)): Fix typo.", 
   "* subversion/bindings/swig/svn_repos.i", 
   "(%apply SWIGTYPE **OUTPARAM): Add 'svn_dirent_t **'.", 
   "(%apply const char *MAY_BE_NULL): Add.", 
   "* subversion/bindings/swig/svn_fs.i", 
   "(svn_fs_apply_textdelta_wrapper): Remove. Use", 
   "Svn::Delta::TextDeltaWindowHandler as svn_txdelta_window_handler_t", 
   "wrapper.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c", 
   "(rb_svn_delta,", 
   "svn_swig_rb_svn_delta_text_delta_window_handler): New function.", 
   "(delta_editor_set_target_revision,", 
   "delta_editor_open_root,", 
   "delta_editor_delete_entry,", 
   "delta_editor_add_directory,", 
   "delta_editor_open_directory,", 
   "delta_editor_change_dir_prop,", 
   "delta_editor_close_baton,", 
   "delta_editor_close_directory,", 
   "delta_editor_absent_directory,", 
   "delta_editor_add_file,", 
   "delta_editor_open_file,", 
   "delta_editor_window_handler,", 
   "delta_editor_apply_textdelta,", 
   "delta_editor_change_file_prop,", 
   "delta_editor_close_file,", 
   "delta_editor_absent_file,", 
   "delta_editor_close_edit,", 
   "delta_editor_abort_edit,", 
   "svn_swig_rb_make_editor): Add 'delta_editor_' prefix.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c,", 
   "subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_swig_rb_svn_delta_text_delta_window_handler,", 
   "svn_swig_rb_to_swig_type,", 
   "svn_swig_rb_invoke_txdelta_window_handler): New function.", 
   "* subversion/bindings/swig/ruby/svn/wc.rb (Svn::Wc::cleanup): New", 
   "class method. Move from Svn::Wc::AdmAccess#cleanup.", 
   "(Svn::Wc::AdmAccess#open_anchor,", 
   "Svn::Wc::AdmAccess#probe_try): Fix typo.", 
   "(Svn::Wc::AdmAccess#path): Remove 'access_' prefix.", 
   "(Svn::Wc::AdmAccess#revert): Fix indentation.", 
   "(Svn::Wc::AdmAccess#ignores): Fix wrong arguments order.", 
   "* subversion/bindings/swig/ruby/svn/delta.rb", 
   "(Svn::Delta.svndiff_handler,", 
   "Svn::Delta.apply): Use Svn::Delta::TextDeltaWindowHandler object.", 
   "(Svn::Delta.send,", 
   "Svn::Delta::TextDeltaStream#send): Accept handler as non-block", 
   "argument.", 
   "(Svn::Delta.setup_handler_wrapper): Rename from", 
   "Svn::Delta.setup_handler_obj.", 
   "(Svn::Delta::TextDeltaWindowHandler): New class.", 
   "(Svn::Delta::Editor): New class. Work as svn_delta_editor_t", 
   "wrapper.", 
   "(Svn::Delta::BaseEditor): Rename from Svn::Delta::Editor.", 
   "* subversion/bindings/swig/ruby/svn/repos.rb", 
   "(Svn::Repos.db_logfiles): Enable only_unused option.", 
   "(Svn::Repos::ReposCore#commit_editor): Use", 
   "Svn::Delta::TextDeltaWindowHandler object.", 
   "(Svn::Repos::ReposCore#stat): Remove.", 
   "(Svn::Repos::ReposCore::#setup_report_baton): Fix typo and wrong", 
   "arguments order.", 
   "* subversion/bindings/swig/ruby/svn/fs.rb", 
   "(Svn::Fs::FileSystem#history): New method. Move from", 
   "Svn::Fs::Access.", 
   "(Svn::Fs::Access#history): Remove.", 
   "(Svn::Fs::Root#apply_textdelta): Use", 
   "Svn::Delta::TextDeltaWindowHandler object.", 
   "(Svn::Fs::Root#stat): New method. Move from", 
   "Svn::Repos::ReposCore#stat.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_status): Add Svn::Wc::AdmAccess#probe_open test.", 
   "(SvnWcTest#test_version,", 
   "SvnWcTest#test_wc,", 
   "SvnWcTest#test_adm_access): New test.", 
   "* subversion/bindings/swig/ruby/test/test_delta.rb", 
   "(SvnDeltaTest#test_apply): Use", 
   "Svn::Delta::TextDeltaWindowHandler#send.", 
   "(SvnDeltaTest#test_svndiff): Pass", 
   "Svn::Delta::TextDeltaWindowHandler object.", 
   "(SvnDeltaTest#test_path_driver): Use Svn::Delta::BaseEditor", 
   "object.", 
   "* subversion/bindings/swig/ruby/test/test_repos.rb", 
   "(SvnReposTest#test_path): Add configuration path check.", 
   "(SvnReposTest#test_version,", 
   "SvnReposTest#test_create,", 
   "SvnReposTest#test_hotcopy,", 
   "SvnReposTest#test_report,", 
   "SvnReposTest#test_commit_editor): New test."
  ], 
  "revision_id": "856096"
 }
]