[
 {
  "author": "arminw", 
  "date": "2003-10-17T15:07:53.000000Z", 
  "msg": [
   "deprecate this sequence manger impl, use", 
   "SequenceManagerNativeImpl instead"
  ], 
  "revision_id": "362969"
 }, 
 {
  "author": "arminw", 
  "date": "2003-10-17T14:53:46.000000Z", 
  "msg": [
   "fix, initialize properties for all constructor"
  ], 
  "revision_id": "362968"
 }, 
 {
  "author": "arminw", 
  "date": "2003-10-17T14:12:56.000000Z", 
  "msg": [
   "add patch by Andy Malakov to", 
   "support collections of pc object", 
   "collections within nested objects.", 
   "Test cases updated to check collection support"
  ], 
  "revision_id": "362967"
 }, 
 {
  "author": "brj", 
  "date": "2003-10-17T11:39:36.000000Z", 
  "msg": [
   "treat empty string as null", 
   "patch by andrew clute"
  ], 
  "revision_id": "362966"
 }, 
 {
  "author": "arminw", 
  "date": "2003-10-16T17:10:51.000000Z", 
  "msg": [
   "fix bug posted by Dave Derry,", 
   "he wrote:", 
   "However, there is a problem rollingback if there is a problem", 
   "in the TransactionImpl#commit.", 
   "Code for our Transaction#abort looks something like this", 
   "if (tx != null && tx.isOpen())", 
   "{    tx.abort();   }", 
   "along with some other processing. But if OJB has rolledback the transaction, this", 
   "test will pass, but the tx.abort() will throw an Exception.", 
   "The problem here is that in TransactionImpl#commit(), if an Exception occurs, the", 
   "status is set to STATUS_MARKED_ROLLBACK, and doAbort() is called. I believe that", 
   "abort() should be called instead. Calling abort() would result in the status", 
   "being set to STATUS_ROLLEDBACK, which would cause the tx.isOpen() test to fail.", 
   "In addition, PersistenceBroker#abortTransaction() would be called, which would", 
   "trigger the aborted transaction Listener events."
  ], 
  "revision_id": "362965"
 }
]