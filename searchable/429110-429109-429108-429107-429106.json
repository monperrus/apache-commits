[
 {
  "author": "craigmcc", 
  "date": "2006-08-06T05:58:05.747731Z", 
  "msg": [
   "Implement a basic exception processing strategy.  The default", 
   "ExceptionHandler implementation already logs and accumulates any", 
   "exceptions thrown by application event handlers, storing them in a", 
   "request scope attribute named by symbolic constant", 
   "FacesConstants.EXCEPTIONS_LIST for use later in the request processing", 
   "lifecycle.", 
   "The new functionality is implemented in a phase listener after the", 
   "Invoke Application phase has been completed (note that this is *before*", 
   "rendering, so it is before any potential call to a prerender() method).", 
   "*If* there have been any accumulated exceptions, and *if* the user has", 
   "provided a context relative path (starting with '/') to an exception", 
   "handler, then an ExternalContext.dispatch() call will be made to this", 
   "path (after setting request attributes corresponding to what a servlet", 
   "conatiner would report to an error handler, as defined in Section", 
   "SRV.9.9.1 of the Servlet Specification).  Then, responseComplete() will", 
   "be called to prevent the normal Render Response phase from being", 
   "executed.", 
   "To provide a context relative path to an error handler, the application", 
   "developer must specify a context initializaton parameter named", 
   "\"org.apache.shale.view.EXCEPTION_DISPATCH_PATH\".  Note that this error", 
   "handler will be called *before* the destroy() methods of any relevant", 
   "request scoped backing beans have been called, but those methods will", 
   "indeed be called as long as the error handler does not itself throw any", 
   "exceptions to the container.", 
   "SHALE-125"
  ], 
  "revision_id": "429110"
 }, 
 {
  "author": "mturyn", 
  "date": "2006-08-06T05:56:57.231840Z", 
  "msg": [
   "Put in .provide(<this class name>) calls."
  ], 
  "revision_id": "429109"
 }, 
 {
  "author": "mturyn", 
  "date": "2006-08-06T05:55:43.684728Z", 
  "msg": [
   "Put in an explicit require(<superclass>) statement."
  ], 
  "revision_id": "429108"
 }, 
 {
  "author": "mturyn", 
  "date": "2006-08-06T05:54:37.242435Z", 
  "msg": [
   "Altered setupClassAsSubclassOf() so that it's simpler, doesn't call dojo.inherit(), and doesn't perform the require(<superclass>), since on reflexion we're better off if that's explicitly in the source file rather than done algorithmically here."
  ], 
  "revision_id": "429107"
 }, 
 {
  "author": "jacopoc", 
  "date": "2006-08-06T05:52:57.529658Z", 
  "msg": [
   "tabs to spaces"
  ], 
  "revision_id": "429106"
 }
]