[
 {
  "author": "striker", 
  "date": "2002-05-30T00:20:56.000000Z", 
  "msg": [
   "Renames:", 
   "apr_allocator_set_owner -> apr_allocator_owner_set", 
   "apr_allocator_get_owner -> apr_allocator_owner_get", 
   "apr_allocator_set_mutex -> apr_allocator_mutex_set", 
   "apr_allocator_get_mutex -> apr_allocator_mutex_get", 
   "Suggested by: Cliff Woolley"
  ], 
  "revision_id": "63444"
 }, 
 {
  "author": "striker", 
  "date": "2002-05-29T23:02:24.000000Z", 
  "msg": [
   "Don't inline and export functions at the same time.", 
   "Submitted by: Branko Cibej <brane@xbc.nu>"
  ], 
  "revision_id": "63443"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-05-29T22:08:43.000000Z", 
  "msg": [
   "Forgot to commit [actually explicitly committed, but forgot", 
   "to save first.]"
  ], 
  "revision_id": "63442"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-05-29T22:07:58.000000Z", 
  "msg": [
   "Fix apr_generate_random_bytes() for Win32 on Win NT or 9x by", 
   "dropping the 0x40 bit (CRYPT_SILENT) for earlier OS'es.", 
   "Thanks for nagging Mr. Trawick :)", 
   "PR: 9286"
  ], 
  "revision_id": "63441"
 }, 
 {
  "author": "wrowe", 
  "date": "2002-05-29T21:19:44.000000Z", 
  "msg": [
   "Split APR_THREAD_MUTEX_DEFAULT with a new APR_THREAD_MUTEX_UNNESTED", 
   "which guarentees unnested lock behavior, keep APR_THREAD_MUTEX_DEFAULT", 
   "on Win32, Netware and OS2 as nested locks, leave Unix and BeOS with", 
   "unnested locks by default.", 
   "Needs an implementation on Netware and OS2 for UNNESTED locks, for now", 
   "return APR_ENOTIMPL.", 
   "Required for absolute locks in series for Win32 on the same thread,", 
   "since CriticalSection objects are blindingly fast without contention,", 
   "but they will always nest on the same thread."
  ], 
  "revision_id": "63440"
 }
]