[
 {
  "author": "cmpilato", 
  "date": "2001-09-21T19:54:47.216275Z", 
  "msg": [
   "* client.h", 
   "(svn_client__get_ra_callbacks): Added USE_ADMIN argument.", 
   "* auth.c", 
   "(open_admin_tmp_file): Renamed from open_tmp_file().", 
   "(open_tmp_file): New function.", 
   "(svn_client__get_ra_callbacks): Use new USE_ADMIN flag to choose", 
   "which tmp_file callback to send.", 
   "* status.c", 
   "(add_update_info_to_status_hash): Pass TRUE for USE_ADMIN argument", 
   "to svn_client__get_ra_callbacks().", 
   "* update.c", 
   "(svn_client_update): Pass TRUE for USE_ADMIN argument to", 
   "svn_client__get_ra_callbacks().", 
   "* commit.c", 
   "(send_to_repos): Pass TRUE for USE_ADMIN argument to", 
   "svn_client__get_ra_callbacks() if this is a commit, FALSE for", 
   "imports.", 
   "* checkout.c", 
   "(svn_client_checkout): Pass FALSE for USE_ADMIN argument to", 
   "svn_client__get_ra_callbacks()."
  ], 
  "revision_id": "840210"
 }, 
 {
  "author": "kevin", 
  "date": "2001-09-21T19:25:11.771097Z", 
  "msg": [
   "Get pre-commit hooks working.", 
   "* include/svn_io.h:svn_io_run_cmd - Add status argument, for the exit code", 
   "for the cmd.", 
   "* libsvn_subr/io.c:svn_io_run_cmd - Pass status argument to apr_proc_wait", 
   "to get the exit code for the cmd.", 
   "* libsvn_wc/log.c: - Pass a status argument to svn_io_run_cmd, note that", 
   "we could check the exit code.", 
   "* svnlook/main.c:print_diff_tree - Pass a status argument to", 
   "svn_io_run_cmd, note that we could check the exit code.", 
   "* mod_dav_svn/version.c:dav_svn_merge - Call svn_fs_abort_txn if we can't", 
   "commit.", 
   "* cmdline/diff.c:svn_cl__print_file_diff - Pass a status argument to", 
   "svn_io_run_cmd, note that we could check the exit code.", 
   "* libsvn_repos/hooks.c:run_cmd_with_output - Add status argument. All", 
   "callers changed.", 
   "* libsvn_repos/hooks.c:run_start_commit_hook, run_pre_commit_hook,", 
   "run_post_commit_hook - Change 'kind != svn_node_dir' to 'kind ==", 
   "svn_node_file', since kind is svn_node_none if the file doesn't exist.", 
   "* libsvn_repos/hooks.c:run_pre_commit_hook - If the status of the", 
   "pre-commit hook was non-zero, return an error.", 
   "* libsvn_repos/hooks.c:svn_repos_fs_commit_txn - Don't abort the txn if", 
   "the pre-commit hook fails, that is the caller's responsibility."
  ], 
  "revision_id": "840209"
 }, 
 {
  "author": "sussman", 
  "date": "2001-09-21T19:12:31.319667Z", 
  "msg": [
   "Oops!  Forgot to add this new file to previous commit.  Don't forget", 
   "to re-run autogen.sh, y'all.", 
   "* libsvn_wc/status_editor.c", 
   "(svn_wc_get_status_editor):  implement new editor."
  ], 
  "revision_id": "840208"
 }, 
 {
  "author": "sussman", 
  "date": "2001-09-21T19:08:44.849418Z", 
  "msg": [
   "New mechanisms: 'svn status' now calls a function which adds", 
   "update-information to the existing hash of of status structures.", 
   "(Specifically, we have RA->do_update() drive a special editor that", 
   "tweaks the structures.)  This new information is not yet printed.", 
   "* svn_wc.h", 
   "(svn_wc_status_t):  add two new repos-status fields.", 
   "(svn_wc_get_status_editor):  declare.", 
   "(svn_wc_crawl_revisions): update declaration (see below).", 
   "* libsvn_wc/status_editor.c", 
   "(svn_wc_get_status_editor):  implement new editor.", 
   "* libsvn_wc/status.c", 
   "(assemble_status):  set defaults on new status fields.", 
   "* libsvn_wc/adm_crawler.c", 
   "(report_revisions): new flag to turn off reporting unversioned objects.", 
   "(svn_wc_crawl_revisions):  add flag to public API as well.", 
   "* libsvn_client/status.c", 
   "(get_youngest_from_ra): merged into newer func.", 
   "(add_update_info_to_status_hash):  newer func.", 
   "(svn_client_status):  greatly simplify!"
  ], 
  "revision_id": "840207"
 }, 
 {
  "author": "cmpilato", 
  "date": "2001-09-21T14:54:18.208902Z", 
  "msg": [
   "Give users of svn_repos_dir_delta the option to disable text delta", 
   "processing.  This is useful for applications that care only that a", 
   "file has textual mods, but not what those mods are (e.g., `svnlook',", 
   "the check for out-of-dateness soon to be used by `svn status', etc).", 
   "* include/svn_repos.h", 
   "(svn_repos_dir_delta): Added TEXT_DELTAS argument for", 
   "enabling/disabling text delta windows.", 
   "* libsvn_repos/delta.c", 
   "(struct context): Added TEXT_DELTAS field.", 
   "(svn_repos_dir_delta): Added TEXT_DELTAS argument, which is now", 
   "stuffed in the context structure.", 
   "* libsvn_repos/reporter.c", 
   "(svn_repos_finish_report): Pass TRUE for the text_deltas argument of", 
   "svn_repos_dir_delta().", 
   "* svnlook/main.c", 
   "(generate_delta_tree): Pass FALSE for the text_deltas argument of", 
   "svn_repos_dir_delta().", 
   "* mod_dav_svn/merge.c", 
   "(dav_svn__merge_response): Pass TRUE for the text_deltas argument of", 
   "svn_repos_dir_delta().", 
   "* tests/libsvn_repos/repos-test.c", 
   "(dir_deltas): Fixed comment.  Pass TRUE for the text_deltas argument", 
   "of svn_repos_dir_delta()."
  ], 
  "revision_id": "840206"
 }
]