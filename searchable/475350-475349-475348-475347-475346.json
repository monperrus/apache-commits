[
 {
  "author": "minchau", 
  "date": "2006-11-15T18:39:15.690415Z", 
  "msg": [
   "Javadoc update, just to make the example clearer."
  ], 
  "revision_id": "475350"
 }, 
 {
  "author": "vamsic007", 
  "date": "2006-11-15T18:37:40.125638Z", 
  "msg": [
   "GERONIMO-2386 Cleanup debug log entries created during server startup"
  ], 
  "revision_id": "475349"
 }, 
 {
  "author": "vamsic007", 
  "date": "2006-11-15T18:36:14.132084Z", 
  "msg": [
   "GERONIMO-2386 Cleanup debug log entries created during server startup"
  ], 
  "revision_id": "475348"
 }, 
 {
  "author": "andreasmyth", 
  "date": "2006-11-15T18:32:46.422957Z", 
  "msg": [
   "Used a safe and non-invasive way to log outbound messages by using callbacks registered with an AbstractCachedOutputStream (to grab the contents of the wrapped ByteArrayOutputStream when the wrapping stream is flushed).", 
   "Logged warning when RM protocol messages cannot be issued from the server side due to using anonymous acks/replyTo.", 
   "Added support for terminating sequences and re-enabled SequenceTest.", 
   "Created the endpoint for the RM protocol messages as a JaxWsEndpointImpl in order to have the JAX-WS interceptors added to the chain when processing partial responses to RM protocol messages.  The absence of these interceptors causes the output stream of the outMessage to be flushed twice with predictably negative effects (previously causing NPE, now throwing  IOException from JettyHTTPDestination.flushHeaders). While for consistency we should use the same out interceptors for RM protocol messages as we would for application messages this behavior is not intuitive and reveals intricate dependencies that exist between the various interceptors. These, in addition to the fact that interceptors execute remaining parts of the chain, make the runtime currently rather fragile."
  ], 
  "revision_id": "475347"
 }, 
 {
  "author": "jta", 
  "date": "2006-11-15T18:32:37.202014Z", 
  "msg": [
   "update cayenne status"
  ], 
  "revision_id": "475346"
 }
]