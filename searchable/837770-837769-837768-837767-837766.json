[
 {
  "author": "kfogel", 
  "date": "2000-10-21T05:58:06.000000Z", 
  "msg": [
   "Make updates work:", 
   "* client/svn-test.sh: demonstrate updates.", 
   "* client/README: notes about update functionality and testing the", 
   "client.", 
   "* libsvn_client/commit.c (svn_client_commit): don't use test editor", 
   "for debugging anymore, use xml output editor unconditionally.", 
   "* libsvn_client/update.c (svn_client_update): call", 
   "svn_client__update_internal unconditionally.", 
   "* libsvn_wc/wc.h (SVN_WC__LOG_DELETE_ENTRY): new log item.", 
   "(SVN_WC__LOG_SET_VERSION): fix string value.", 
   "(svn_wc__entry_dup, svn_wc__entry_merge_sync): doc fixes.", 
   "* libsvn_wc/log.c (start_handler): handle SVN_WC__LOG_DELETE_ENTRY.", 
   "Handle deletion correctly in SVN_WC__LOG_COMMITTED.", 
   "Tighten up error handling in general, by bailing immediately after", 
   "signalling if any error is encountered.", 
   "(remove_from_version_control): new helper func for above.", 
   "* libsvn_wc/get_editor.c (replace_file): don't pass adding flag when", 
   "calling add_or_replace_file.", 
   "(replace_directory): set the child baton.", 
   "(delete): implement.", 
   "(apply_textdelta, window_handler): handle absence of text-base", 
   "gracefully, so adding works.", 
   "* libsvn_wc/adm_crawler.c (process_subdirectory): check for error", 
   "after reading entries.  Correct logic in checking for an entry that is", 
   "marked addition and deletion.  Remember to record deleted-only files", 
   "in affected_targets.", 
   "* libsvn_delta/xml_parse.c (outermost_tree_delta_close_p): new func.", 
   "(xml_handle_end): never call do_close_directory() on </tree-delta>", 
   "unless it's known to be the final </tree-delta>.  For all non-root", 
   "dirs, calling do_close_directory() on </dir> suffices.", 
   "(everywere): allocate in the safe way.", 
   "* libsvn_delta/xml_output.c (get_to_elem): revert previous change,", 
   "that is, emit prop-delta with svn_xml_normal instead of", 
   "svn_xml_protect_pcdata.", 
   "* STACK: note some future todo items."
  ], 
  "revision_id": "837770"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-21T02:44:21.000000Z", 
  "msg": [
   "(push_stack): allocate in the safe style."
  ], 
  "revision_id": "837769"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-21T02:42:08.000000Z", 
  "msg": [
   "(svn_test_get_editor): allocate in the safe style."
  ], 
  "revision_id": "837768"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-21T02:40:45.000000Z", 
  "msg": [
   "(svn_xml_make_parser): allocate in the safe style."
  ], 
  "revision_id": "837767"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-10-21T02:40:06.000000Z", 
  "msg": [
   "(svn_string_ncreate): allocate in the safe style."
  ], 
  "revision_id": "837766"
 }
]