[
 {
  "author": "wsanchez", 
  "date": "2002-12-08T21:18:29.000000Z", 
  "msg": [
   "the AccessAuthoritative directive should be AuthzDefaultAuthoritative", 
   "Submitted by:\tAndre Malo <nd@perlig.de>"
  ], 
  "revision_id": "97804"
 }, 
 {
  "author": "wsanchez", 
  "date": "2002-12-08T21:16:05.000000Z", 
  "msg": [
   "there is some confusion with \"yes\" and \"no\" and \"on\" and \"off\"... ;-)", 
   "Submitted by: Andre Malo <nd@perlig.de>"
  ], 
  "revision_id": "97803"
 }, 
 {
  "author": "wsanchez", 
  "date": "2002-12-08T21:13:07.000000Z", 
  "msg": [
   "outch. there are some possible NULL pointer references. Have you ever tried", 
   "AuthDigestProvider dbm? This results in a great kaboom. The patch makes", 
   "apache throw an error, if someone tries a provider, that doesn't support", 
   "the particular auth scheme.", 
   "Submitted by:\tAndre Malo <nd@perlig.de>"
  ], 
  "revision_id": "97802"
 }, 
 {
  "author": "wsanchez", 
  "date": "2002-12-08T21:10:37.000000Z", 
  "msg": [
   "when asking the providers for authentication, the main loop should", 
   "not only  break, if access is granted. It should also break, if", 
   "access was *denied*  by one provider. To be safe, it has to break", 
   "also, if an error occured. So  the patch turns the condition around", 
   "and continues only, if the user was  not found.", 
   "I find it also weird, that if auth was denied (by password", 
   "usually), the  AuthBasicAuthoritative behaviour can override that", 
   "by \"passing to lower  modules\". The patch changes that behaviour,", 
   "too.", 
   "Justin notes:", 
   "I'm kind of on the fence about that.  I was originally thinking", 
   "optimistically, but yeah, it might make sense to do it", 
   "pessimistically.  If there's any error, bug out.", 
   "Submitted by:\tAndre Malo <nd@perlig.de>"
  ], 
  "revision_id": "97801"
 }, 
 {
  "author": "wsanchez", 
  "date": "2002-12-08T21:05:57.000000Z", 
  "msg": [
   "2.0 -> 2.1"
  ], 
  "revision_id": "97800"
 }
]