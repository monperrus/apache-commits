[
 {
  "author": "gstein", 
  "date": "2004-09-05T11:10:18.167882Z", 
  "msg": [
   "Simplify the Status-Line reading code. A single call to run_machine() will", 
   "move us out of the STATUS_LINE state if possible. Add some semantics to", 
   "determine whether information was returned since there is ambiguity", 
   "whether data was returned when APR_EAGAIN or APR_EOF are returned.", 
   "* serf_bucket_types.h:", 
   "(serf_bucket_response_status): document the return values", 
   "* buckets/response_buckets.c:", 
   "(wait_for_sline): removed. we never need to loop on running the machine.", 
   "(serf_bucket_response_status): run the machine once rather than calling", 
   "the old wait_for_sline() function. be more diligent around the return", 
   "values from this function."
  ], 
  "revision_id": "1698483"
 }, 
 {
  "author": "gstein", 
  "date": "2004-09-04T16:50:45.802486Z", 
  "msg": [
   "The response bucket had a ton of awful busy-wait read loops. When a lower", 
   "level bucket returns something other than APR_SUCCESS, we shouldn't try", 
   "reading it again. The result should be propagated back to the next caller.", 
   "Also fixed a protocol bug in the chunk size parsing -- they are hex digits", 
   "rather than decimal. Fixed an edge case where a chunk size line exactly", 
   "matched our line buffer size, yet we added a NUL terminator.", 
   "* buckets/response_buckets.c:", 
   "(serf_bucket_response_create): _mem_alloc() does not guarantee zeroed", 
   "memory, so we need to initialize some fields in the bucket.", 
   "(fetch_line): rename the stream parameter to avoid confusion with the", 
   "response bucket itself.", 
   "(parse_status_line): new utility routine to parse the Status-Line,", 
   "factored out of serf_bucket_response_status.", 
   "(fetch_chunk_size): don't busy-wait for the line to be ready. read what", 
   "is possible, and if a line is complete, THEN parse it.", 
   "(fetch_headers): return the read status, so the caller knows whether", 
   "more reading is possible.", 
   "(run_machine): don't assume that fetch_line() has read the Status-Line;", 
   "check that a line is ready first. process one header or trailer at a", 
   "time, and let the caller know whether to run the machine again. add", 
   "switch section for processing trailers and the DONE state.", 
   "(wait_for_sline): don't busy-wait for the status line.", 
   "(wait_for_body): remove busy-waits and depend on run_machine to do the", 
   "state processing. when the body is ready, and we need a new chunk", 
   "size, then try to read it. if we hit the end of the body, move into", 
   "the trailers (possibly looping to process them).", 
   "(serf_bucket_response_status): depend upon wait_for_sline to move us out", 
   "of the STATUS_LINE state, or to signal that more reading is needed. if", 
   "we *are* out of the state, then it will have been parsed in the state", 
   "machine, and we can simply return the parsed status line.", 
   "(serf_response_read): adjust body_left whenever data has been read,", 
   "rather than only for APR_SUCCESS. move into STATE_DONE when we've", 
   "read all of a C-L style response."
  ], 
  "revision_id": "1698482"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2004-09-04T09:56:40.112658Z", 
  "msg": [
   "Add serf_file to use a file backend instead of a socket to allow easy checking", 
   "of protocol corner cases.", 
   "Notice: There *is* admittedly some ugliness in how the file backend is", 
   "implemented.  I want to check this code in and then discuss the correct way to", 
   "go about this.  I think the connection is too tied to a socket at the moment;", 
   "but having the response read from a file is so darn useful for a test suite.", 
   "(By and large, the biggest problem is with pollset, I think.)", 
   "[It's also 3AM, and I want to go to sleep.]", 
   "* test/serf_file.c: Copied from test/serf_get.c; uses files not a socket.", 
   "Remove #if 0 portions from serf_get.c;", 
   "(accept_response): Create file bucket instead of a socket bucket.", 
   "(main): Accept 3 parameters: URL, output for the request, input for response;", 
   "Call serf_connection_create_ex instead; pass our accept_ctx to _deliver.", 
   "* test/testcases/simple.response, test/testcases/chunked-empty.response,", 
   "test/testcases/chunked.response: Add test cases for serf_file.", 
   "* context.c:", 
   "(serf_connection_t): add write function and write_baton.", 
   "(update_pollset): *close eyes* in order to get this to work right now.", 
   "(open_connections): Just call update_pollset if we have a write_baton;", 
   "intialize the socket to the write_baton.", 
   "(write_to_connection): Call the write function instead.", 
   "(read_from_connection): Pass the write_baton to acceptor instead of skt.", 
   "(remove_pollset): *close eyes* in order to get this to work right now.", 
   "(serf_connection_create): Init write func to apr_socket_send.", 
   "(serf_connection_ex): New function that takes a write func and write baton.", 
   "* serf.h:", 
   "(serf_response_acceptor_t): Send a generic write_baton not a socket.", 
   "(serf_connection_write_t): New function type to act as write prototype.", 
   "(serf_connection_create_ex): New function that takes a write func and baton.", 
   "* Makefile: Add test/serf_file and 'check' target"
  ], 
  "revision_id": "1698481"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2004-09-04T09:52:51.575932Z", 
  "msg": [
   "Fix mmap bucket bugs.", 
   "* buckets/mmap_buckets.c:", 
   "(serf_bucket_mmap_create): Use the correct type.", 
   "(serf_mmap_read): Correctly initialize *len when we can satisfy it.", 
   "(serf_mmap_readline): Implement."
  ], 
  "revision_id": "1698480"
 }, 
 {
  "author": "jerenkrantz", 
  "date": "2004-09-04T09:52:02.259226Z", 
  "msg": [
   "Add chunking support.", 
   "Notice: the response_body seems like it should now grow to be a bucket of its", 
   "own.  Hold off on this for another day.", 
   "* buckets/response_buckets.c: Add chunking support.", 
   "(fetch_chunk_size): New function to read a chunk from the wire.", 
   "(fetch_headers): Factor our reading the headers as we have to read trailers;", 
   "note this may also help Greg when he switches to the header buckets soon.", 
   "(run_machine): If we see T-E: chunked, indicate we'll have to do chunking.", 
   "(wait_for_body): Handle additional body states for chunking.", 
   "(serf_response_read): The chunked case does not generate EOF from read,", 
   "instead EOF is generated from wait_for_body."
  ], 
  "revision_id": "1698479"
 }
]