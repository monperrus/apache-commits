[
 {
  "author": "gdaniels", 
  "date": "2001-06-20T12:26:43.000000Z", 
  "msg": [
   "Add test for RPC which also parses a message."
  ], 
  "revision_id": "252049"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-20T12:16:09.000000Z", 
  "msg": [
   "Quick fix for body dispatch in cases where no Handler has caused", 
   "a parse by the time we need to dispatch."
  ], 
  "revision_id": "252048"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-18T19:33:36.000000Z", 
  "msg": [
   "First cut at a tiny web management interface for Axis.", 
   "Add an AdminServlet which manages a singleton AxisServer instance.", 
   "Right now you can only turn it on and off, but if you do so you can see", 
   "the appropriate fault come back when its disabled."
  ], 
  "revision_id": "252047"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-18T18:34:38.000000Z", 
  "msg": [
   "Start of re-factoring Transports:", 
   "MessageContext gets transportName field.", 
   "AxisServlet sets transportName to it's request transport (\"request\" +", 
   "\"response\" transport names will soon go away)", 
   "SOAPService now has the ability to lock out particular transports from", 
   "accessing a service.", 
   "Next step is to actually bind the transport req/resp handlers together", 
   "into a single object, and add transport registries.", 
   "Initialize registries in engine.init().", 
   "AxisServlet gets its AxisServer from the getSingleton() method.", 
   "NOTE: This could be changed easily to AxisServer.getServer(String transport),", 
   "which was I believe what we originally discussed at the March F2F.  This would", 
   "enable a configuration file / system property to decide whether to instantiate", 
   "one AxisServer per VM, or one per transport, or whatever."
  ], 
  "revision_id": "252046"
 }, 
 {
  "author": "gdaniels", 
  "date": "2001-06-18T15:43:30.000000Z", 
  "msg": [
   "Clean up initialization a bit, get rid of unnecessary fields."
  ], 
  "revision_id": "252045"
 }
]