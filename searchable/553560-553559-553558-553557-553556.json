[
 {
  "author": "mamta", 
  "date": "2007-07-05T16:48:31.022403Z", 
  "msg": [
   "Merging revision 553557 from main into 10.3.1.1 codeline. The commit comments for 553557 were as follows", 
   "DERBY-2777", 
   "Currently, the parameters in LIKE clause always pickup their collation from the compilation schema. That logic is not", 
   "complete. I am fixing that logic here along with addition of some tests.", 
   "For the sake of explanation, let me use the following syntax for LIKE clause", 
   "receiver LIKE leftOperand ESCAPE rightOperand", 
   "With the fix in this patch, if receiver is a parameter, it will set it's collation using following logic", 
   "1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2", 
   "2)check if rightOperand is not a parameter. If yes, then receiver will pick up collation from rightOperand. If not, goto step 3", 
   "3)receiver picks up the collation of the compilation schema because everything in the LIKE clause is ?", 
   "Next, if leftOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a", 
   "parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct", 
   "collation IF leftOperand is a parameter.", 
   "Next, if rightOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a", 
   "parameter, we have set correct collation for receiver and hence rightOperand can simply rely on receiver for correct", 
   "collation IF rightOperand is a parameter."
  ], 
  "revision_id": "553560"
 }, 
 {
  "author": "jacopoc", 
  "date": "2007-07-05T16:46:01.566962Z", 
  "msg": [
   "Fixed a few wrong attributes (wrong maxlenght) in the edit postal address screen, discovered today while testing: we should really push forward the effort of migrating all these ftl files to the widgets."
  ], 
  "revision_id": "553559"
 }, 
 {
  "author": "carnold", 
  "date": "2007-07-05T16:45:19.926711Z", 
  "msg": [
   "Bungled SVN repo on logging-log4j-extras"
  ], 
  "revision_id": "553558"
 }, 
 {
  "author": "mamta", 
  "date": "2007-07-05T16:44:18.124630Z", 
  "msg": [
   "DERBY-2777", 
   "Currently, the parameters in LIKE clause always pickup their collation from the compilation schema. That logic is not", 
   "complete. I am fixing that logic here along with addition of some tests.", 
   "For the sake of explanation, let me use the following syntax for LIKE clause", 
   "receiver LIKE leftOperand ESCAPE rightOperand", 
   "With the fix in this patch, if receiver is a parameter, it will set it's collation using following logic", 
   "1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2", 
   "2)check if rightOperand is not a parameter. If yes, then receiver will pick up collation from rightOperand. If not, goto step 3", 
   "3)receiver picks up the collation of the compilation schema because everything in the LIKE clause is ?", 
   "Next, if leftOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a", 
   "parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct", 
   "collation IF leftOperand is a parameter.", 
   "Next, if rightOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a", 
   "parameter, we have set correct collation for receiver and hence rightOperand can simply rely on receiver for correct", 
   "collation IF rightOperand is a parameter."
  ], 
  "revision_id": "553557"
 }, 
 {
  "author": "rhillegas", 
  "date": "2007-07-05T16:38:16.731643Z", 
  "msg": [
   "DERBY-2372: Port docs change 553555 from trunk to 10.3 branch."
  ], 
  "revision_id": "553556"
 }
]