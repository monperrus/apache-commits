[
 {
  "author": "asmuts", 
  "date": "2002-02-16T23:21:21.000000Z", 
  "msg": [
   "specialized LRUElement in sample implementation"
  ], 
  "revision_id": "147674"
 }, 
 {
  "author": "asmuts", 
  "date": "2002-02-16T23:20:32.000000Z", 
  "msg": [
   "specialized LRUElement"
  ], 
  "revision_id": "147673"
 }, 
 {
  "author": "asmuts", 
  "date": "2002-02-16T23:12:34.000000Z", 
  "msg": [
   "Added LRUStore.  Should change to a map implementation later.  Created sample implementation with a main testing method.", 
   "The create time recording in the LRUElement should be removed.  A create element method should be created, so implementation can have their own element wrapper if they want.  Every ILRUElement creation should be done via this one method of teh LRUStore."
  ], 
  "revision_id": "147672"
 }, 
 {
  "author": "bayard", 
  "date": "2002-02-14T05:07:51.000000Z", 
  "msg": [
   "Unit test for substring added."
  ], 
  "revision_id": "147671"
 }, 
 {
  "author": "bayard", 
  "date": "2002-02-14T05:03:31.000000Z", 
  "msg": [
   "Made StringUtils.substring far more lenient than java.lang.String.substring.", 
   "It won't complain if too high an end value is used and it allows negative", 
   "values to be used. Negative meaning distance from the end of the string.", 
   "It also won't complain if too low a negative value is used.", 
   "One question standing is what to do if the start index is higher than the end index.", 
   "Should it reverse the text when it returns it, return a wrap around,", 
   "complain, or silently flip the two numbers."
  ], 
  "revision_id": "147670"
 }
]