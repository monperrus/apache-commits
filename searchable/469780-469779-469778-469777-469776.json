[
 {
  "author": "jdillon", 
  "date": "2006-11-01T04:59:54.932067Z", 
  "msg": [
   "Drop empty dir"
  ], 
  "revision_id": "469780"
 }, 
 {
  "author": "antoine", 
  "date": "2006-11-01T04:51:13.119756Z", 
  "msg": [
   "add date for JIRA"
  ], 
  "revision_id": "469779"
 }, 
 {
  "author": "jliu", 
  "date": "2006-11-01T04:38:36.097958Z", 
  "msg": [
   "SAAJ handlers support: The idea of building a full SAAJ tree from inputStream, then build stax reader on top of SAAJ tree(use its DOM interface) does not work well. As SAAJ doc has stated, it is not safe to do any saaj operations after retrieving dom node from saaj, this might invalid previous node retrieved from saaj.", 
   "To get around this, we build SAAJ on demand, i.e., we only build SAAJ tree if SOAPMessageContext.getMessage() is called from JAX-WS handlers. Essentially for the inbound, the SOAPHandlerInterceptor is positioned after interceptors that deal with attachment and headers and before all other interceptors that deal with body, unmarshalling etc. SOAPHandlerInterceptor uses whatever left in the intputstream to construct SOAPBody only, as headers and attachments are already consumed. After SOAPHandlerInterceptor, the content of SOAPBody is streamed back to staxReader to feed following interceptors."
  ], 
  "revision_id": "469778"
 }, 
 {
  "author": "blin", 
  "date": "2006-11-01T04:18:32.057544Z", 
  "msg": [
   "1. fixed namespace collisions in a bunch of pom.xml", 
   "2. add scm.connection property to buildtools/pom.xml", 
   "3. add a note in NOTICE to indicate generated java class location, generated java source shouldn't have Apache header"
  ], 
  "revision_id": "469777"
 }, 
 {
  "author": "ningjiang", 
  "date": "2006-11-01T04:03:16.731886Z", 
  "msg": [
   "Wait for a while for the jms session recycling in testRoundTripDestination to avoid NPE"
  ], 
  "revision_id": "469776"
 }
]