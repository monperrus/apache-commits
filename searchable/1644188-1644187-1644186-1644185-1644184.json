[
 {
  "author": "oheger", 
  "date": "2014-12-09T21:22:12.354858Z", 
  "msg": [
   "Updated release properties and download page."
  ], 
  "revision_id": "1644188"
 }, 
 {
  "author": "lewismc", 
  "date": "2014-12-09T21:14:03.146791Z", 
  "msg": [
   "CMS commit to oodt by lewismc"
  ], 
  "revision_id": "1644187"
 }, 
 {
  "author": "arkurth", 
  "date": "2014-12-09T21:13:08.510798Z", 
  "msg": [
   "VCL-174", 
   "Set svn properties on iptables.pm and init.pm."
  ], 
  "revision_id": "1644186"
 }, 
 {
  "author": "arkurth", 
  "date": "2014-12-09T21:11:37.342650Z", 
  "msg": [
   "VCL-174", 
   "Added backend support for NAT.", 
   "Added entries to $SUBROUTINE_MAPPINGS hash in DataStructure.pm for new NAT-related database tables.", 
   "Added subroutines:", 
   "-Module.pm::create_nathost_os_object", 
   "-Module.pm::nathost_os", 
   "-Module.pm::set_nathost_os subroutines.", 
   "-utils.pm::get_computer_nathost_info", 
   "-utils.pm::get_nathost_assigned_public_ports", 
   "-utils.pm::populate_reservation_natport", 
   "-utils.pm::insert_natport", 
   "-utils.pm::get_reservation_request_id", 
   "-utils.pm::get_reservation_request_info", 
   "-Linux.pm::firewall", 
   "-Linux.pm::enable_ip_forwarding", 
   "Updated utils.pm::get_connect_method_info to retrieve natport information.", 
   "Added code to State.pm::initialize to create a NAT host OS object if necessary.", 
   "Updated Module.pm::create_mn_os_object to pass the reservation ID to the DataStructure.pm constructor if it is available.", 
   "Updated utils.pm::get_request_info to populate the natport table.", 
   "Updated utils.pm::get_computer_info to also retrieve NAT host info.", 
   "Added modularized Linux firewall framework. This will eventually dynamically figure out which Linux firewall commands to use. For now, only iptables is supported. Added Linux/firewall directory and iptables.pm.", 
   "Added code to process_connect_methods to check if NAT is used. If so, a NAT port forwarding is added for each connect method port.", 
   "Added block to reclaim.pm::process to delete the NAT rules created for a reservation if necessary.", 
   "Updated all places that use results from connect_method_info to handle new format of hash returned.", 
   "Other", 
   "Fixed sloppy indentation in reclaim.pm. Please stop this nonsense.", 
   "Updated Module.pm::new to attempt to use an existing ManagementNode.pm object if one exists.", 
   "Added init.pm file, which is not the parent class of the Linux init modules. Updated Linux.pm::get_init_modules to pass a \"base_package\" argument to the init module constructor. Changed base package in init modules from VCL::Module::OS::Linux to VCL::Module::OS::Linux::init."
  ], 
  "revision_id": "1644185"
 }, 
 {
  "author": "schor", 
  "date": "2014-12-09T21:08:59.022592Z", 
  "msg": [
   "[UIMA-4135] support multi-add-back (use case: only where multiple add2indices of the same identical FS allowed)"
  ], 
  "revision_id": "1644184"
 }
]