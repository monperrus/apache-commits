[
 {
  "author": "ehu", 
  "date": "2007-09-15T20:52:57.972910Z", 
  "msg": [
   "Add cancellation support to (potentially long running) svn_io_remove_dir2().", 
   "Note: This function was already added to 1.5, so we're still allowed to", 
   "change the function interface.", 
   "* subversion/include/svn_io.h", 
   "* subversion/libsvn_subr/io.c", 
   "(svn_io_remove_dir2): Add (and use) cancellation callback and", 
   "baton arguments.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "* subversion/libsvn_wc/adm_files.c", 
   "* subversion/tests/svn_test_main.c", 
   "* subversion/libsvn_repos/repos.c", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "Change callers.", 
   "Inspired by: djames"
  ], 
  "revision_id": "866690"
 }, 
 {
  "author": "joeswatosh", 
  "date": "2007-09-15T20:22:21.519483Z", 
  "msg": [
   "Follow on to r26477 which implemented the command-line UI bits of issue #2822,", 
   "exposing an option which allows 'copy' and 'move' operations to propagate", 
   "merge history.", 
   "* subversion/bindings/swig/ruby/svn/client.rb", 
   "(Svn::Client::Context#copy, Svn::Client::Context#copy): Add new", 
   "with_merge_history parameter and forward to Client.copy4 and Client.move5", 
   "respectively."
  ], 
  "revision_id": "866689"
 }, 
 {
  "author": "joeswatosh", 
  "date": "2007-09-15T19:46:05.016818Z", 
  "msg": [
   "Follow on to r26471 which merged copy-on-updates branch to trunk.  This merely", 
   "gets the existing tests passing, it doesn't actually add new capabilities to", 
   "the bindings.  Some TODOs to remember to implement the functionality later.", 
   "This is a slightly different implementation than has been used in the past for", 
   "callbacks.  Instead of exporting the callback implementation directly I", 
   "created a \"getter\" function so if the svn_wc_get_file_t interface changes we", 
   "will get a compiler error.", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::AdmAccess#update_editor): Add a nil fetch_func argument to the", 
   "call to Wc.get_update_editor3.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_swig_rb_fetch_func_getter): New function.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c", 
   "(svn_swig_rb_fetch_func_getter, svn_swig_rb_fetch_func): New functions.", 
   "svn_swig_rb_fetch_func_getter returns a pointer to svn_swig_rb_fetch_func a", 
   "placeholder implementation that will eventually forward to the fetch_func.", 
   "* subversion/bindings/swig/include/svn_types.swg", 
   "(%typemap(in) (svn_wc_get_file_t fetch_func, void *fetch_baton),", 
   "%typemap(argout) (svn_wc_get_file_t fetch_func, void *fetch_baton)): New", 
   "typemaps to support the fetch_func callback."
  ], 
  "revision_id": "866688"
 }, 
 {
  "author": "hwright", 
  "date": "2007-09-15T19:03:39.722304Z", 
  "msg": [
   "JavaHL: Update doImport() interface to latest client API.", 
   "[in subversion/bindings/javahl/ ]", 
   "* native/org_tigris_subversion_javahl_SVNClient.cpp", 
   "(Java_org_tigris_subversion_javahl_SVNClient_doImport):", 
   "Add new arguments, update call to SVNClient::doImport().", 
   "* native/SVNClient.h,", 
   "native/SVNClient.cpp", 
   "(doImport): Add new arguments, update call to svn_client_import3().", 
   "* src/org/tigris/subversion/javahl/SVNClientInterface.java,", 
   "src/org/tigris/subversion/javahl/SVNClientSynchronized.java,", 
   "src/org/tigris/subversion/javahl/SVNClient.java:", 
   "(doImport): Add new interface, update compat wrappers."
  ], 
  "revision_id": "866687"
 }, 
 {
  "author": "kfogel", 
  "date": "2007-09-15T17:19:26.475096Z", 
  "msg": [
   "* subversion/libsvn_repos/delta.c (MAYBE_DEMOTE_DEPTH): Fix logic."
  ], 
  "revision_id": "866686"
 }
]