[
 {
  "author": "jpieper", 
  "date": "2004-07-01T13:36:21.909426Z", 
  "msg": [
   "Fix a bug in svn_io_create_unique_link.  If the first attempt at", 
   "creating the symlink failed, it would think all subsequent attempts", 
   "also failed, resulting in a lot of symlinks.", 
   "* subvesrion/libsvn_subr/io.c", 
   "(svn_io_create_unique_link): Always check the return value from", 
   "symlink before trying to get the system error."
  ], 
  "revision_id": "850190"
 }, 
 {
  "author": "clkao", 
  "date": "2004-07-01T12:10:52.674849Z", 
  "msg": [
   "Fix various immortal Perl data that causes leakage.", 
   "* core.i:", 
   "(const char *data, apr_size_t *len): Make variable mortal.", 
   "* perl/libsvn_swig_perl/swigutil_pl.c:", 
   "(convert_int, convert_hash, convert_array):", 
   "Don't increase reference counts for HV and AV, make RV and IV mortal."
  ], 
  "revision_id": "850189"
 }, 
 {
  "author": "jpieper", 
  "date": "2004-07-01T11:52:54.878242Z", 
  "msg": [
   "Issue #677: Allow special files such as symlinks to be added to", 
   "working copies on systems that support them.  The special files are", 
   "stored in the repository and text-base as normal files with the", 
   "svn:special property set.  The information necessary to recreate the", 
   "special files is stored in the contents of the normal file.", 
   "Most of the work involves just having all callers of the existing", 
   "EOL/keyword translation framework look for special status, although", 
   "there are a few logic changes when checking for obstructed status.", 
   "The platform-specific routines are designed to return an unsupported", 
   "feature error if the current platform does not support that type of", 
   "file.  In this case, the translation routines just install a normal", 
   "file in the user's working copy.", 
   "* subversion/include/svn_subst.h", 
   "(svn_subst_copy_and_translate): Deprecated.", 
   "(svn_subst_copy_and_translate2): New routine which duplicates the", 
   "functionality of svn_subst_copy_and_translate and also allows", 
   "translation of special files.  All callers changed to use the new", 
   "API.", 
   "* subversion/include/svn_props.h", 
   "(SVN_PROP_SPECIAL, SVN_PROP_SPECIAL_VALUE): New property that sets a", 
   "file as being a \"special\" file.", 
   "* subversion/include/svn_types.h", 
   "(svn_node_kind_t): Include a new type, svn_node_special, which can", 
   "be used to represent platform-specific file types.", 
   "* subversion/include/svn_io.h", 
   "(svn_io_check_special_path): New.", 
   "(svn_io_create_unique_link): New.", 
   "(svn_io_read_link): New.", 
   "* subversion/libsvn_wc/translate.h", 
   "(svn_wc__get_special): New.", 
   "* subversion/libsvn_wc/merge.c", 
   "* subversion/libsvn_wc/adm_crawler.c", 
   "* subversion/libsvn_wc/log.c", 
   "* subversion/libsvn_wc/adm_ops.c", 
   "(svn_wc_merge, restore_file, file_xfer_under_path,", 
   "install_committed_file, revert_admin_things): Use the new", 
   "svn_subst_copy_and_translate2.", 
   "* subversion/libsvn_wc/status.c", 
   "(assemble_status): Only check for textual modifications if the", 
   "special status has not changed and mark the file as obstructed if", 
   "a special file exists without the svn:special property.", 
   "* subversion/libsvn_wc/translate.c", 
   "(svn_wc_translated_file): Use the new svn_subst_copy_and_translate2.", 
   "(svn_wc__get_special): New, determines if the svn:special property", 
   "is set on a path.", 
   "* subversion/libsvn_subr/subst.c", 
   "(SVN_SUBST__SPECIAL_LINK_STR): New, the special string for a", 
   "symbolic link.", 
   "(create_special_file): New, given a repository normal version of a", 
   "special file, create the actual special file using whatever", 
   "platform-dependent methods are necessary.", 
   "(detranslate_special_file): New, given an actual special file,", 
   "create a repository normal version of it.", 
   "(svn_subst_copy_and_translate): Implemented in terms of", 
   "svn_subst_copy_and_translate2.", 
   "(svn_subst_copy_and_translate2): New, similar to", 
   "svn_subst_copy_and_translate except for the addition of the", 
   "special option, which controls whether a file should be translated", 
   "as if it were a special file.", 
   "* subversion/libsvn_subr/io.c", 
   "(io_check_path): Add a new option that determines whether special", 
   "file types will be collapsed into svn_node_file or whether they", 
   "will be returned as their actual types.", 
   "(svn_io_check_path, svn_io_check_resolved_path): Use the new", 
   "io_check_path.  Note that this changes their behavior slightly", 
   "since special files used to return svn_node_unknown and will now", 
   "return svn_node_file.", 
   "(svn_io_check_special_path): New, similar to svn_io_check_path,", 
   "except that any special files are returned as svn_node_special,", 
   "not svn_node_file.", 
   "(svn_io_create_unique_link): New, creates a symlink that has a", 
   "unique name.", 
   "(svn_io_read_link): New, reads the destination path from a symlink.", 
   "(svn_io_file_affected_time): Check the time at the symbolic link if", 
   "the target is one.", 
   "(svn_io_get_dirents): Return svn_node_file for any special files.", 
   "* subversion/libsvn_client/commit_util.c", 
   "(harvest_committables): Don't complain if the target path is a", 
   "special file, but do complain if it is not supposed to be.", 
   "* subversion/libsvn_client/add.c", 
   "(add_file): Check to see if the svn:special property should be set", 
   "when adding a new file.", 
   "(add_dir_recursive): Add all files types that aren't unknown, rather", 
   "than just regular files.", 
   "* build.conf: Add special_tests.py to 'make check'.", 
   "* configure.in: Check for symlink and readlink at configure time.", 
   "* subversion/tests/clients/cmdline/special_tests.py", 
   "(general_symlink): New test that creates a symlink, checks it in,", 
   "and verifies that updating to different revisions correctly", 
   "destroys and recreates the link.", 
   "(replace_file_with_symlink): New test that replaces a versioned file", 
   "with a symbolic link and verifies that status shows the", 
   "obstruction and that a commit will not succeed.", 
   "* subversion/tests/clients/cmdline/commit_tests.py", 
   "(commit_symlink): Removed, this test is superceded by those in", 
   "special_tests.py."
  ], 
  "revision_id": "850188"
 }, 
 {
  "author": "clkao", 
  "date": "2004-07-01T11:07:45.548610Z", 
  "msg": [
   "* perl/native/Base.pm", 
   "Fix a typo in document.", 
   "Patch by: Mark Glines <mark@glines.org>"
  ], 
  "revision_id": "850187"
 }, 
 {
  "author": "clkao", 
  "date": "2004-07-01T11:03:13.067443Z", 
  "msg": [
   "Fix the reference count of svn_commit_callback_t in Perl Bindings.", 
   "* perl/libsvn_swig_perl/swigutil_pl.c", 
   "(cleanup_refcnt, svn_swig_pl_hold_ref_in_pool): New.", 
   "* perl/libsvn_swig_perl/swigutil_pl.h", 
   "(svn_swig_pl_hold_ref_in_pool): New.", 
   "* perl/native/t/1repos.t", 
   "Test for proper garbage collection for symbols referenced in commit", 
   "callback.", 
   "* svn_types.i", 
   "(svn_commit_callback_t):", 
   "Hold the callback reference in pool instead of blindly increase", 
   "its refcount."
  ], 
  "revision_id": "850186"
 }
]