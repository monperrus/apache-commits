[
 {
  "author": "andyc", 
  "date": "2000-11-02T00:58:35.000000Z", 
  "msg": [
   "Fixed bug that could hang the scanLiteral call when it hit a ']'", 
   "character and couldn't swallow it."
  ], 
  "revision_id": "316489"
 }, 
 {
  "author": "lehors", 
  "date": "2000-11-01T22:39:42.000000Z", 
  "msg": [
   "fixed a couple of bugs in the new scanAttributeValue method"
  ], 
  "revision_id": "316488"
 }, 
 {
  "author": "lehors", 
  "date": "2000-11-01T21:33:20.000000Z", 
  "msg": [
   "Patch from Elena Litani and Lynn Monson:", 
   "------------", 
   "Lynn wrote:", 
   "I believe I've found an error in the toString() method of RangeImpl.java.", 
   "For certain types of ranges, not all of the correct text is returned.  For", 
   "example, if I have the following XML document:", 
   "<root><foo>abc</foo><bar>def</bar></root>", 
   "And I have a range that extends from:", 
   "start container: abc", 
   "start offset: 0", 
   "to", 
   "end container: bar", 
   "end offset: 1", 
   "Then invoking the .toString() method will return \"abc\" instead of \"abcdef\".", 
   "This is due to a premature loop exit condition.  I've included a proposed", 
   "patch below.  Thanks in advance for taking a look.", 
   "------------", 
   "Elena wrote:", 
   "I've reviewed it and found one case missing.", 
   "Ex.", 
   "<body>text1<p1/>text2</body>", 
   "Start container: body", 
   "start offset: 1", 
   "end container: body", 
   "end offset:3", 
   "If start container is not text node we must find a first kid in Range..", 
   "In current implementation the output is: text1text2", 
   "But it supposed to be: text2", 
   "Everything else in your patch looks good :).", 
   "The modified patch is attached."
  ], 
  "revision_id": "316487"
 }, 
 {
  "author": "lehors", 
  "date": "2000-11-01T21:28:22.000000Z", 
  "msg": [
   "Patch from Lynn Monson and Elena Litani:", 
   "----------", 
   "Lynn wrote:", 
   "While using Range.insertNode(), I came across what I think are two small,", 
   "but significant bugs.  The existing Xerces code for Range.insertNode()", 
   "assumes that the end point of the range is unrelated to the starting point.", 
   "However, if the ending container is the same as the start container, or if", 
   "the end container is the parent of the start container, the range is left in", 
   "an incorrect state.", 
   "For example:", 
   "Assume my document is the following:", 
   "<root>abc</root>", 
   "If my range is:", 
   "start container: abc", 
   "start offset: 1", 
   "end container: abc", 
   "end offset: 3", 
   "Then after inserting the node <foo/>, I am left with the document:", 
   "<root>a<foo/>bc</root>", 
   "But my range was not updated correctly.  It reads:", 
   "start container: a", 
   "start offset: 1", 
   "end container: a", 
   "end offset: 3", 
   "The end container is incorrect, and the end offset is illegal.  I believe", 
   "the range should be:", 
   "end container: bc", 
   "end offset: 2", 
   "A similar situation exists if the original range had used <root> as the end", 
   "container with an offset of 1.  Included below is a suggested fix for this", 
   "problem.  As always, thanks in advance for considering it.", 
   "----------", 
   "Elena wrote:", 
   "Lynn, thanks for reporting the bug and producing a patch.", 
   "While looking at it, I discovered some other problems with insertNode().", 
   "So I compared the implementation against specs and here are the changes", 
   "I came up with:", 
   "1. Proper exception handling (which was not done)", 
   "2. Include handling DocumentFragment. Actually, it is handled", 
   "automatically by insertBefore(), or appendChild(). So the only thing I", 
   "needed to do is not to throw \"DOM012 Invalid node type\" exception.", 
   "3. Update ranges for insertion", 
   "a) Lynns patch for text nodes; I have changed it a little bit to", 
   "incorporate DocumentFragment insertions", 
   "b) Updating ranges for all other nodes also need to be done.", 
   "ex.", 
   "DOM tree:<body><p/></body>.", 
   "Range(start;end): body,0; body,1", 
   "After insertion of insert <h1>:", 
   "DOM tree: <body></h1><p/></body>.", 
   "Range(start;end): body,0; body,2", 
   "4. Deleted normalization of text nodes. According to specs (2.9)", 
   "normalization should be handled by application. That is if 2 adjacent", 
   "Text nodes are created -> we don't merge 'em.", 
   "There is a special case which is handled the same:", 
   "fStartContainer=text node and fStartOffset=0. We still split text node", 
   "although one of the resulting text nodes will be empty."
  ], 
  "revision_id": "316486"
 }, 
 {
  "author": "jeffreyr", 
  "date": "2000-11-01T18:05:08.000000Z", 
  "msg": [
   "patch review submitted by Kent Tamura"
  ], 
  "revision_id": "316485"
 }
]