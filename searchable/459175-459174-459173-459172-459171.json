[
 {
  "author": "jdonnerstag", 
  "date": "2006-02-11T10:51:08.000000Z", 
  "msg": [
   "wip: support for inline panels."
  ], 
  "revision_id": "459175"
 }, 
 {
  "author": "jonl", 
  "date": "2006-02-11T10:36:41.000000Z", 
  "msg": [
   "Argument checking"
  ], 
  "revision_id": "459174"
 }, 
 {
  "author": "jonl", 
  "date": "2006-02-11T10:33:34.000000Z", 
  "msg": [
   "It is now perfectly valid to have no sign in page when one is requested.  In that case, an alternative action is taken such as throwing an exception."
  ], 
  "revision_id": "459173"
 }, 
 {
  "author": "jonl", 
  "date": "2006-02-11T10:22:03.000000Z", 
  "msg": [
   "Moved the logic in ComponentInstantiationAuthorizer into Application to hide it and then exposed the handling logic for unauthorized instantiations of components through a new security setting IUnauthorizedComponentInstantiationListener ISecuritySettings.getUnauthorizedComponentInstantiationListener().  The listener is called whenever an attempt to instantiate a component is made that cannot be allowed.  A DefaultUnauthorizedComponentInstantiationListener (that must be a record for longest reasonable Java class name) is installed in the default security settings which redirects the user to a sign in page if one has been specified in the security settings.  Since this logic is now nicely isolated through this listener, removed duplicate logic in Abstract/SimplePageAuthorizationStrategy.  The decoupling solves a problem with all authorization strategies, but the compound role strategy in particular.  The strategy for determining instantiation authorization is now completely separate from the strategy for deciding what to do about it."
  ], 
  "revision_id": "459172"
 }, 
 {
  "author": "jonl", 
  "date": "2006-02-11T09:00:39.000000Z", 
  "msg": [
   "Removed extra blank line."
  ], 
  "revision_id": "459171"
 }
]