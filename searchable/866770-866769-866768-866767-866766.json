[
 {
  "author": "hwright", 
  "date": "2007-09-20T04:23:14.213916Z", 
  "msg": [
   "Code refactor: move a couple of local symbols closer to their use.", 
   "No functional change.", 
   "* subversion/libsvn_client/blame.c", 
   "(log_message_baton, log_message_receiver): Move closer to old_blame()."
  ], 
  "revision_id": "866770"
 }, 
 {
  "author": "dlr", 
  "date": "2007-09-20T03:37:49.966172Z", 
  "msg": [
   "svntest: Augment \"expected output\" handling to support more types of", 
   "comparisons against actual output.  Implement by replacing our", 
   "spattering of comparison functions with a small class hierarchy.", 
   "[ in subversion/tests/cmdline/ ]", 
   "* svntest/actions.py", 
   "(ExpectedOutput, AnyOutput, RegexOutput): Implement new class", 
   "hierarchy of comparisons.  Contains code factored out of", 
   "compare_and_display_lines(), match_or_fail(), compare_unordered_output(),", 
   "and run_and_verify_svn().", 
   "(UnorderedOutput, UnorderedRegexOutput): Tweak per ExpectedOutput API.", 
   "(run_and_verify_svn, compare_and_display_lines): Re-implement to use", 
   "ExpectedOutput.", 
   "(display_lines): Tweak output formatting code.", 
   "(match_or_fail): Remove function, replaced by RegexOutput(expected, False).", 
   "* svntest/main.py", 
   "(compare_unordered_output): Remove function, replaced by UnorderedOutput.", 
   "* merge_tests.py", 
   "(empty_rev_range_mergeinfo): Supply match_all=False keyword argument", 
   "to the UnorderedRegexOutput ctor.", 
   "* svnsync_tests.py", 
   "Bump copyright year.", 
   "(run_sync): Replace use of match_or_fail() with RegexOutput and", 
   "compare_and_display_lines()."
  ], 
  "revision_id": "866769"
 }, 
 {
  "author": "joeswatosh", 
  "date": "2007-09-20T03:26:52.664018Z", 
  "msg": [
   "Follow on to r26666 \"For issue #2820, finish the first draft of", 
   "svn_client_mergeinfo_get_available. Also, change the way that", 
   "svn_client_mergeinfo_get_merged returns paths.\"", 
   "* subversion/bindings/swig/ruby/test/test_client.rb", 
   "(SvnClientTest#test_merge, SvnClientTest#test_merge_peg): Update the", 
   "expected key in the mergeinfo hash and use the new key to access the data in", 
   "the hash."
  ], 
  "revision_id": "866768"
 }, 
 {
  "author": "hwright", 
  "date": "2007-09-19T23:54:15.871369Z", 
  "msg": [
   "JavaHL: Update info2() interface to latest client API.  Follow up to", 
   "r26692.", 
   "[in subversion/bindings/javahl/ ]", 
   "* native/org_tigris_subversion_javahl_SVNClient.cpp", 
   "(Java_org_tigris_subversion_javahl_SVNClient_info2):", 
   "Add new arguments, update call to SVNClient::info2().", 
   "* native/SVNClient.h,", 
   "native/SVNClient.cpp", 
   "(info2): Add new arguments, update call to svn_client_info2().", 
   "* src/org/tigris/subversion/javahl/SVNClientInterface.java,", 
   "src/org/tigris/subversion/javahl/SVNClientSynchronized.java,", 
   "src/org/tigris/subversion/javahl/SVNClient.java:", 
   "(info2): Add new interface, update compat wrappers."
  ], 
  "revision_id": "866767"
 }, 
 {
  "author": "kfogel", 
  "date": "2007-09-19T23:26:38.510895Z", 
  "msg": [
   "Implement 'svn info --depth'.  This is part of issue #2847 ('depthy APIs')", 
   "and issue #2844 ('take care of \"TODO(sd)\" comments').", 
   "* subversion/include/svn_client.h", 
   "(svn_client_info2, svn_client_info): Do the deprecation dance.", 
   "* subversion/libsvn_client/info.c", 
   "(svn_client_info2, svn_client_info): Same.", 
   "(crawl_entries): Take depth instead of recurse.", 
   "(push_dir_info): Take new depth parameter, use it to control recursion.", 
   "* subversion/svn/info-cmd.c", 
   "(svn_cl__info): Adjust accordingly, including changing the default", 
   "depth to match the behavior previously achieved by converting", 
   "depth to a recursion boolean."
  ], 
  "revision_id": "866766"
 }
]