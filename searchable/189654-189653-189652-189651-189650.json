[
 {
  "author": "evenisse", 
  "date": "2005-06-08T22:03:01.178262Z", 
  "msg": [
   "[SCM-43] Access to the changeSet list from update command."
  ], 
  "revision_id": "189654"
 }, 
 {
  "author": "elecharny", 
  "date": "2005-06-08T22:02:56.340133Z", 
  "msg": [
   "Added two methods in this interface :", 
   "- getGrammarName(int)", 
   "- getGrammarName(IGrammar)", 
   "deleted the static keyword"
  ], 
  "revision_id": "189653"
 }, 
 {
  "author": "rdonkin", 
  "date": "2005-06-08T22:01:09.841218Z", 
  "msg": [
   "Added -src suffix to source distribution. Thanks to Simon Kitching."
  ], 
  "revision_id": "189652"
 }, 
 {
  "author": "elecharny", 
  "date": "2005-06-08T22:00:57.161500Z", 
  "msg": [
   "This class was not abstract enough ! Deleted the references to ldapObject and reference the", 
   "new container's method getStates which gives the grammar name, instead of invocing LdapStateEnum", 
   "(which is not very good when decoding Spnego grammar ...)"
  ], 
  "revision_id": "189651"
 }, 
 {
  "author": "bandaram", 
  "date": "2005-06-08T22:00:43.155945Z", 
  "msg": [
   "DERBY-337: Enhance dblook to support SQL functions.", 
   "1 - Renames \"impl/tools/dblook/DB_StoredProcedure.java\" to \"impl/tools/dblook/DB_Alias.java\" because that file now handles stored procedures AND functions AND synonyms, all of which are based on the SYSALIASES system catalog.", 
   "2 - Adds logic to new DB_Alias.java file to generate DDL for functions.", 
   "3 - Modifies the \"toString()\" method of the catalog/types/RoutineAliasInfo file to generate a string that is SYNTACTICALLY VALID based on whether an instance of that class is for a PROCEDURE or for a FUNCTION.  The reason this change is required is because the \"ALIASINFO\" column that is returned as part of the SYS.SYSALIASES result set is an instance of RoutineAliasInfo, and thus a call to ResultSet.getString() on the ALIASINFO column ultimately makes a call to RoutineAliasInfo.toString().  That said, the dblook utility makes a \"getString()\" call on the ALIASINFO column and uses the result to generate the corresponding DDL.  Before this patch, the result of the toString() method always corresponded to the PROCEDURE syntax; but now, since dblook is generating DDL for FUNCTIONs, the RoutineAliasInfo.toString() method must recognize if an instance is a PROCEDURE or FUNCTION and return the appropriate syntax.", 
   "4 - Adds test cases for FUNCTIONS to the dblook tests and updates the master files accordingly.", 
   "Submitted by Army Brown (qozinx@sbcglobal.net)"
  ], 
  "revision_id": "189650"
 }
]