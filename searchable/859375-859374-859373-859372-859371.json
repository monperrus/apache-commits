[
 {
  "author": "lundblad", 
  "date": "2006-04-10T20:29:12.388273Z", 
  "msg": [
   "On the nonxml-entries branch: Reintroduce support for XML format files", 
   "for reading.", 
   "* subversion/libsvn_wc/entries.c", 
   "(struct entries_accumulator): Move further down in the file.", 
   "(handle_start_tag): Reenable.", 
   "(parse_entries_xml): New function.", 
   "(read_entries): Call parse_entries_xml if the file looks like an XML", 
   "format file.", 
   "* subversion/libsvn_subr/io.c", 
   "(svn_io_read_version_file): Close the file before checking the data, avoiding", 
   "\"leaking\" the file handle if the data is invalid."
  ], 
  "revision_id": "859375"
 }, 
 {
  "author": "lundblad", 
  "date": "2006-04-10T19:51:55.325369Z", 
  "msg": [
   "* TODO: Remove done entry."
  ], 
  "revision_id": "859374"
 }, 
 {
  "author": "lundblad", 
  "date": "2006-04-10T19:38:08.932979Z", 
  "msg": [
   "On the nonxml-entries branch:", 
   "* subversion/libsvn_wc/README: Document the new line based entries file format."
  ], 
  "revision_id": "859373"
 }, 
 {
  "author": "kou", 
  "date": "2006-04-10T14:10:18.279301Z", 
  "msg": [
   "Don't use svn_wc_text_modified_p2() (Svn::Wc.text_modified_p2). Because", 
   "svn_wc_text_modified_p2() will be removed from public API for 1.4.", 
   "Suggested by: ivan", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::AdmAccess#text_modified?): Revert the change in r19297."
  ], 
  "revision_id": "859372"
 }, 
 {
  "author": "kou", 
  "date": "2006-04-10T09:57:08.629968Z", 
  "msg": [
   "Support 1.4 in svn_wc.h.", 
   "* subversion/bindings/swig/svn_wc.i", 
   "(%apply SWIGTYPE **OUTPARAM): Add svn_wc_revision_status_t **.", 
   "(%apply int *OUTPUT): Add enum svn_wc_merge_outcome_t *.", 
   "(%apply apr_hash_t *PROPHASH): Add apr_hash_t *new_base_props.", 
   "(%apply const char *MAY_BE_NULL): Add const char *new_text_path and", 
   "const char *trail_url.", 
   "(%typemap(ruby, in) apr_array_header_t *merge_options): New typemap.", 
   "(%typemap(ruby, in) (svn_wc_relocation_validator2_t validator,", 
   "void *validator_baton)):", 
   "Use svn_wc_relocation_validator2_t instead of svn_wc_relocation_validator_t.", 
   "* subversion/bindings/swig/include/svn_types.swg", 
   "(%typemap(ruby, in) const unsigned char *digest,", 
   "%typemap(ruby, argout) const unsigned char *digest): New typemap.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c,", 
   "subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_swig_rb_wc_relocation_validator2): Use svn_wc_relocation_validator2_t", 
   "instead of svn_wc_relocation_validator_t.", 
   "* subversion/bindings/swig/ruby/svn/wc.rb", 
   "(Svn::Wc::AdmAccess#text_modified?): Use Svn::Wc.text_modified_p2", 
   "instead of Svn::Wc.text_modified_p.", 
   "(Svn::Wc::AdmAccess#add_repos_file2): New method.", 
   "(Svn::Wc::AdmAccess#process_committed): Use Svn::Wc.process_committed3", 
   "instead of Svn::Wc.process_committed2.", 
   "(Svn::Wc::AdmAccess#merge): Use Svn::Wc.merge2 instead of Svn::Wc.merge.", 
   "(Svn::Wc::AdmAccess#relocate): Use Svn::Wc.relocate2 instead of", 
   "Svn::Wc.relocate.", 
   "(Svn::Wc::AdmAccess#translated_file): New method.", 
   "(Svn::Wc::AdmAccess#transmit_text_deltas2): New method.", 
   "(Svn::Wc::RevisionStatus.new): New class method.", 
   "* subversion/bindings/swig/ruby/test/test_wc.rb", 
   "(SvnWcTest#test_merge): Implement Svn::Wc::AdmAccess#merge test.", 
   "(SvnWcTest#test_status): Use Svn::Wc::AdmAccess#add_repos_file2 instead of", 
   "Svn::Wc::AdmAccess#add_repos_file.", 
   "(SvnWcTest#test_translated_file): New test for", 
   "Svn::Wc::AdmAccess#translated_file.", 
   "(SvnWcTest#test_revision_status): New test for Svn::Wc::RevisionStatus."
  ], 
  "revision_id": "859371"
 }
]