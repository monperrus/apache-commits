[
 {
  "author": "marc", 
  "date": "2007-06-05T22:20:14.000000Z", 
  "msg": [
   "Modified PosixThreadFactory", 
   "Added explicit detached getter and setter", 
   "Modified PosixThreadFactory::~PThread:", 
   "Check for join failing and don't transition to detached_ state if it does.  Potential thread-handle leak for", 
   "threads created joinable who aren't referenced by any external thread.  Solution for now has to be", 
   "\"DONT DO THAT\", the clever approach doesn't always work.", 
   "Added ThreadFactoryTests.floodNThreads:", 
   "Loop M times for N threads where M x N is bigger than 32K to verify that detached threads can be created", 
   "ad infinitum.", 
   "Reviewed By: mcslee", 
   "Revert Plan: revertible", 
   "Test Plan: concurrency_test thread-factory passes"
  ], 
  "revision_id": "665130"
 }, 
 {
  "author": "marc", 
  "date": "2007-06-04T21:01:19.000000Z", 
  "msg": [
   "Modified PosixThreadFactory::PThread:", 
   "Pay attention to detached flags.  If thread is create non-detached and has not been joined when all references are given up,", 
   "(ie boost::share_ptr calls ~PThread) do the join in the destructor to prevent thread ids from being leaked.", 
   "Modified ThreadFactoryTests.reapNThreads:", 
   "Loop M times for M threads where M x N is bigger than 32K to verify that thread ids aren't leaked", 
   "Modified TimerManager.cpp:", 
   "Removed debug messages.", 
   "Reviewed By: mcslee", 
   "Revert Plan: revertible", 
   "Test Plan: concurrency_test thread-factory passes"
  ], 
  "revision_id": "665129"
 }, 
 {
  "author": "mcslee", 
  "date": "2007-06-01T23:04:09.000000Z", 
  "msg": [
   "Forgot to add ProcessorFactory", 
   "Reviewed By: biren"
  ], 
  "revision_id": "665128"
 }, 
 {
  "author": "boz", 
  "date": "2007-05-31T23:38:37.000000Z", 
  "msg": [
   "THRIFT: ADITYASLOP", 
   "Summary: thrift didn't compile", 
   "Reviewed By: marc", 
   "Test Plan: thrift compiles"
  ], 
  "revision_id": "665127"
 }, 
 {
  "author": "mcslee", 
  "date": "2007-05-31T02:30:34.000000Z", 
  "msg": [
   "Memory buffer for perl", 
   "Reviewed By: Jake Luciani"
  ], 
  "revision_id": "665126"
 }
]