[
 {
  "author": "gstein", 
  "date": "2009-09-21T01:37:17.960519Z", 
  "msg": [
   "Remove some remnants of the wcprops (and some other admin) files, shifting", 
   "knowledge into upgrade.c.", 
   "* subversion/libsvn_wc/wc.h:", 
   "(SVN_WC__ADM_WCPROPS, SVN_WC__ADM_DIR_WCPROPS, SVN_WC__ADM_ALL_WCPROPS,", 
   "SVN_WC__ADM_README, SVN_WC__ADM_EMPTY_FILE): removed.", 
   "* subversion/libsvn_wc/upgrade.c:", 
   "(WCPROPS_SUBDIR_FOR_FILES, WCPROPS_FNAME_FOR_DIR, WCPROPS_ALL_DATA,", 
   "ADM_README, ADM_EMPTY_FILE): new symbols based on the values from", 
   "wc.h to be used while upgrading old working copies", 
   "(read_many_wcprops, read_wcprops, upgrade_to_wcng): track renames", 
   "* subversion/libsvn_wc/props.h:", 
   "(svn_wc__props_wcprop): no longer needed", 
   "* subversion/libsvn_wc/props.c:", 
   "(svn_wc__loggy_props_delete): remove assertion", 
   "(svn_wc__props_delete): no need to key on props_wcprop", 
   "* subversion/libsvn_wc/adm_files.c:", 
   "(svn_wc__prop_path): no longer generate wcprop paths", 
   "* subversion/libsvn_wc/adm_ops.c:", 
   "(mark_tree, svn_wc__remove_from_revision_control_internal, svn_wc_add4):", 
   "use db_base_set_dav_cache() rather than props_delete()."
  ], 
  "revision_id": "879550"
 }, 
 {
  "author": "gstein", 
  "date": "2009-09-21T00:27:27.214660Z", 
  "msg": [
   "Rename svn_wc__db_check_node() to svn_wc__db_read_kind() to align with the", 
   "other \"read\" functions. Take an extra parameter on whether a missing node", 
   "is allowed or not.", 
   "* subversion/libsvn_wc/wc_db.h:", 
   "* subversion/libsvn_wc/wc_db.c:", 
   "(svn_wc__db_check_node): renamed to ...", 
   "(svn_wc__db_read_kind): ... this. added ALLOW_MISSING parameter and more", 
   "documentation.", 
   "* subversion/libsvn_wc/props.c:", 
   "(load_props, svn_wc__working_props_committed,", 
   "svn_wc__loggy_props_delete, svn_wc__props_delete,", 
   "svn_wc__loggy_revert_props_create,", 
   "svn_wc__loggy_revert_props_restore, svn_wc__merge_props): rename", 
   "svn_wc__db_check_node() calls to read_kind, and pass FALSE for the", 
   "ALLOW_MISSING parameter.", 
   "(svn_wc__merge_props): rename call and pass TRUE, but leave a comment", 
   "that the ALLOW_MISSING should probably be FALSE.", 
   "(svn_wc__internal_propdiff): rename call, set ALLOW_MISSING to FALSE,", 
   "and remove the test/error logic.", 
   "* subversion/libsvn_wc/adm_ops.c:", 
   "(svn_wc__remove_from_revision_control_internal): rename call, add param", 
   "* subversion/libsvn_wc/entries.c:", 
   "(visit_tc_too_found_entry): rename call, add param.", 
   "* subversion/libsvn_wc/copy.c:", 
   "(post_copy_cleanup): rename call, add param.", 
   "* subversion/libsvn_wc/adm_crawler.c:", 
   "(svn_wc__internal_transmit_prop_deltas): rename call, add param.", 
   "* subversion/libsvn_wc/node.c:", 
   "(svn_wc__node_get_kind): rename call, add param. be explicit on mapping", 
   "all db_kind_t values, and MALFUNCTION on unexpected values.", 
   "* subversion/libsvn_wc/workqueue.c:", 
   "(run_prepare_revert_files): rename call, add param."
  ], 
  "revision_id": "879549"
 }, 
 {
  "author": "gstein", 
  "date": "2009-09-20T22:48:42.535459Z", 
  "msg": [
   "Group the functions by operation. No functional change.", 
   "* subversion/libsvn_wc/workqueue.c: reorder functions in the file."
  ], 
  "revision_id": "879548"
 }, 
 {
  "author": "gstein", 
  "date": "2009-09-20T19:01:20.629159Z", 
  "msg": [
   "Grab another low-hanging fruit for migration to the workqueue. When a node", 
   "is added, we set up the \"revert\" files in a loggy fashion. Shift that to a", 
   "workqueue operation, running it immediately.", 
   "* subversion/libsvn_wc/workqueue.h:", 
   "(svn_wc__wq_prepare_revert_files): new declaration", 
   "* subversion/libsvn_wc/workqueue.c:", 
   "(OP_PREPARE_REVERT_FILES): new operation code", 
   "(move_if_present): move/rename a file if the source is present, based on", 
   "some code from run_revert.", 
   "(run_revert): factor some code out to move_if_present, and call it. in", 
   "another spot, rather than test if a source is present, and trying to", 
   "move it... just move it, ignoring a missing source file", 
   "(run_prepare_revert_files): new function to prepare the revert files for", 
   "properties and the text base.", 
   "(dispatch_table): add OP_PREPARE_REVERT_FILES", 
   "(svn_wc__wq_prepare_revert_files): set up a skel and add it to the work", 
   "queue.", 
   "* subversion/libsvn_wc/adm_ops.c:", 
   "(svn_wc_add4): use svn_wc__wq_prepare_revert_files, and run it, rather", 
   "than a loggy prep/run."
  ], 
  "revision_id": "879547"
 }, 
 {
  "author": "gstein", 
  "date": "2009-09-20T08:50:36.555420Z", 
  "msg": [
   "Unify props file writing into a single function, which can do the write", 
   "immediately or via loggy.", 
   "* subversion/libsvn_wc/props.h:", 
   "(svn_wc__write_properties): new writing function", 
   "* subversion/libsvn_wc/props.c:", 
   "(save_prop_tmp_file): removed.", 
   "(svn_wc__write_properties): new function to write a set of properties to", 
   "a file (atomically or via loggy). unlike save_prop_tmp_file(), this", 
   "function will write a zero-length file if there are no props (which is", 
   "fine since the read function handles it)", 
   "(install_props_file, immediate_install_props,", 
   "svn_wc__loggy_revert_props_create): fetch abspath values and use the", 
   "new write_properties() function. by using the same writing function,", 
   "all three variants use the same algorithm (in particular: ensuring the", 
   "resulting file is readonly)"
  ], 
  "revision_id": "879546"
 }
]