[
 {
  "author": "kfogel", 
  "date": "2005-03-12T19:36:56.159559Z", 
  "msg": [
   "Fix some pool usage and documentation buglets.", 
   "* subversion/libsvn_fs_fs/fs.c", 
   "(fs_open): Pass pool, not fs->pool, to svn_fs_fs__open.  Fix", 
   "documentation regarding both pool usage and API conformance.", 
   "(fs_create): Fix documentation regarding API conformance.", 
   "(fs_set_errcall): Move to a more intuitive location, and add note", 
   "about API conformance.", 
   "(fs_hotcopy, fs_set_errcall, fs_recover, fs_logfiles): Add notes", 
   "about API conformance.", 
   "* subversion/libsvn_fs_fs/fs_fs.c", 
   "(svn_fs_fs__open): Allocate fs->path in fs->pool, not pool.", 
   "* subversion/libsvn_fs_base/fs.c", 
   "(base_open): Use the right pool at the right time."
  ], 
  "revision_id": "853460"
 }, 
 {
  "author": "sussman", 
  "date": "2005-03-11T22:59:47.710589Z", 
  "msg": [
   "* notes/locking/TODO.txt:  update."
  ], 
  "revision_id": "853459"
 }, 
 {
  "author": "kfogel", 
  "date": "2005-03-11T22:48:15.574933Z", 
  "msg": [
   "Instead of waiting until a locking operation to upgrade a legacy", 
   "repository's format number, just do it the first time the repository", 
   "is opened.  This involves reverting most of r13366.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_fs_lock, svn_repos_fs_attach_lock, svn_repos_fs_unlock,", 
   "svn_repos_fs_get_locks): Revert doc changes of r13366, regretfully", 
   "losing the \"which see\" idiom that so annoys Fitz.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_lock): Tweak warning introduced in r13366, gleefully finding", 
   "a new place to use the \"which see\" idiom that so annoys Fitz.", 
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(maybe_bump_format_number): Remove.", 
   "(svn_repos_fs_lock, svn_repos_fs_attach_lock, svn_repos_fs_unlock,", 
   "svn_repos_fs_get_locks): Revert changes of r13366.", 
   "* subversion/libsvn_repos/repos.c", 
   "(check_repos_version): Upgrade format 3 to 4 unconditionally."
  ], 
  "revision_id": "853458"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-11T22:31:16.050383Z", 
  "msg": [
   "Finish issue #2048.  Teach the libsvn_ra_dav implemenation of", 
   "svn_ra_do_diff() to spool the entire REPORT response to a temporary", 
   "file, then read it back for processing.", 
   "THE PROBLEM:  Subversion currently uses parallel network connections to", 
   "pull of repository diff and merge operations, holding open and slowly", 
   "reading from a master REPORT response, and firing off secondary GETs", 
   "and such.  The problem is that if the GETs or svndiff calculations or", 
   "contextual diff calculations or -- basically if anything keeps", 
   "Subversion tied up for long enough, Apache will notice that nothing is", 
   "being read from the master REPORT request, think the client has gone", 
   "AWOL, and drop the connection.  This is Bad.", 
   "MY SOLUTION:  This change does two things.  First, it teaches", 
   "svn_ra_dav__parsed_request() and svn_ra_dav__parsed_request_compat()", 
   "how to optionally operate using a temporary intermediate file.  And", 
   "then it teaches the libsvn_ra_dav svn_ra_do_diff() implementation to", 
   "make use of this mode of operation, as well as reverting its REPORT", 
   "request type back to the original \"skelta\" format (whereby the REPORT", 
   "contains only the directory diffs, not the text deltas).  This is", 
   "latter change is to prevent us from caching on disk a potentially much", 
   "larger REPORT response (which eats disk and delays initial feedback to", 
   "the user from the operation).", 
   "NOTES: This will cause diff and merge over ra_dav to be slower on", 
   "high-latency networks, but correctness trumps performance any day.", 
   "Also, this change admittedly makes the assumption that implementors of", 
   "the do_update/do_switch/do_status editors won't need to use secondary", 
   "network streams, and that implementors of the do_diff editor will.", 
   "The \"use an intermediate file\" could be exposed in the RA vtable, but", 
   "that wouldn't really make sense for, say, ra-local or ra-svn usages.", 
   "* subversion/libsvn_ra_dav/ra_dav.h", 
   "(svn_ra_dav__parsed_request, svn_ra_dav__parsed_request_compat): Add", 
   "'spool_response' parameter.", 
   "* subversion/libsvn_ra_dav/util.c", 
   "(spool_reader_baton_t, spool_reader_baton_t, parse_spool_file): New.", 
   "(parsed_request): Add 'spool_response' parameter, and teach the code", 
   "to, if that parameter is set, spool the whole request response to", 
   "disk before reading it back and parsing it.", 
   "(svn_ra_dav__parsed_request, svn_ra_dav__parsed_request_compat): Add", 
   "'spool_response' parameter, passed to parsed_request().", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(report_baton_t): Add 'spool_response' member.", 
   "(report_head, report_tail):  Lose.", 
   "(make_reporter): Add 'send_all' and use it to dynamically set the", 
   "\"send-all\" attribute of the update REPORT's head XML tag.  Add", 
   "'spool_response' parameter (for stuffing into the report_baton).", 
   "Also, add a (more) useful docstring.", 
   "(reporter_finish_report): Move the definition of the report_tail to", 
   "a #define herein.  Pass rb->spool_response to svn_ra_dav__parsed_request().", 
   "(svn_ra_dav__do_update, svn_ra_dav__do_status,", 
   "svn_ra_dav__do_switch, svn_ra_dav__do_diff):  Update calls to", 
   "make_reporter().  Only svn_ra_dav__do_diff will *not* request that", 
   "the REPORT response contain *everything*.", 
   "(svn_ra_dav__get_dated_revision): Update call to", 
   "svn_ra_dav__parsed_request_compat().", 
   "(svn_ra_dav__get_locations): Update call to svn_ra_dav__parsed_request().", 
   "* subversion/libsvn_ra_dav/file_revs.c", 
   "(svn_ra_dav__get_file_revs): Update call to svn_ra_dav__parsed_request().", 
   "* subversion/libsvn_ra_dav/merge.c", 
   "(svn_ra_dav__merge_activity): Update call to", 
   "svn_ra_dav__parsed_request_compat().", 
   "* subversion/libsvn_ra_dav/log.c", 
   "(svn_ra_dav__get_log): Update call to svn_ra_dav__parsed_request_compat().", 
   "* subversion/libsvn_ra_dav/props.c", 
   "(svn_ra_dav__get_props): Update call to svn_ra_dav__parsed_request_compat().", 
   "* subversion/libsvn_ra_dav/options.c", 
   "(svn_ra_dav__get_activity_collection): Update call to", 
   "svn_ra_dav__parsed_request_compat()."
  ], 
  "revision_id": "853457"
 }, 
 {
  "author": "cmpilato", 
  "date": "2005-03-11T21:49:22.446519Z", 
  "msg": [
   "More bugfixes for repository diffs.", 
   "* subversion/libsvn_client/repos_diff.c", 
   "(open_root): Fetch dirprops for the root directory unconditionally.", 
   "Besides, target paths are never NULL (though they may be empty).", 
   "* subversion/libsvn_client/diff.c", 
   "(display_prop_diffs): Don't show no-op diffs.  This can happen if a", 
   "new client is hitting a mod_dav_svn server that doesn't understand", 
   "the new(ish) \"send-all\" REPORT style."
  ], 
  "revision_id": "853456"
 }
]