[
 {
  "author": "rmuir", 
  "date": "2012-04-04T05:03:53.421079Z", 
  "msg": [
   "LUCENE-1866: better RAT reporting"
  ], 
  "revision_id": "1309248"
 }, 
 {
  "author": "bodewig", 
  "date": "2012-04-04T04:55:23.059176Z", 
  "msg": [
   "get a little bit ahead of ourselves in trunk-site and talk about the 1.4 release"
  ], 
  "revision_id": "1309247"
 }, 
 {
  "author": "bodewig", 
  "date": "2012-04-04T04:51:50.482026Z", 
  "msg": [
   "Add license and fix line-ends"
  ], 
  "revision_id": "1309246"
 }, 
 {
  "author": "kathleen", 
  "date": "2012-04-04T04:51:48.489353Z", 
  "msg": [
   "Added news item regarding graduation."
  ], 
  "revision_id": "1309245"
 }, 
 {
  "author": "mamta", 
  "date": "2012-04-04T04:50:12.517274Z", 
  "msg": [
   "DerbyDERBY-5663 Getting NPE when trying to set derby.language.logStatementText property to true inside a junit suite.", 
   "It is possible that the same instance of SystemPropertyTestSetup decorator is used more than once. In such a case, nulling out the oldValues in tearDown method can cause a null pointer exception in the subsequent use of the same SystemPropertyTestSetup. The right thing to do is to initialize oldValues to new Properties object everytime SystemPropertyTestSetup.setUp gets used. In order to do this, we are removing the initialization of oldValues from the constructor and putting it in setUp method.", 
   "Additionally, we do not want to null out newValues in tearDown method because the subsequent use of same SystemPropertyTestSetup instance will loose the new values requested by the user of the decorator. Because of this, we will not null newValues in tearDown anymore.", 
   "Existing junit All suite and derbyall ran fine with these changes."
  ], 
  "revision_id": "1309244"
 }
]