[
 {
  "author": "ehu", 
  "date": "2004-12-07T19:45:04.934312Z", 
  "msg": [
   "Eliminate compile warning.", 
   "* subversion/libsvn_wc/props.c (svn_wc_prop_list):", 
   "Remove unused variable left behind in r11680."
  ], 
  "revision_id": "852300"
 }, 
 {
  "author": "ehu", 
  "date": "2004-12-07T19:42:35.084831Z", 
  "msg": [
   "Merge r11862, r11921, r12061 (part of issue #1997):", 
   "Fix encoding bug in svnserve -h", 
   "Approved by:", 
   "+1: lundblad, maxb, epg", 
   "+0: nori (not r12061)"
  ], 
  "revision_id": "852299"
 }, 
 {
  "author": "philip", 
  "date": "2004-12-07T19:37:14.754833Z", 
  "msg": [
   "* subversion/libsvn_subr/utf.c (invalid_utf8): Use a single error string", 
   "to allow translation."
  ], 
  "revision_id": "852298"
 }, 
 {
  "author": "sussman", 
  "date": "2004-12-07T18:41:49.581092Z", 
  "msg": [
   "Locking branch:  create svn_fs_begin_txn2(), with a new 'flags' argument.", 
   "This allows svn_fs.h users to ask (or not ask) the filesystem to do", 
   "on-the-fly lock checks (and someday, out-of-dateness checks).", 
   "For now, both servers call svn_repos_fs_begin_txn_for_commit(), which", 
   "now calls svn_fs_begin_txn2() with the CHECK_LOCKS flag.", 
   "* include/svn_fs.h", 
   "(SVN_FS_TXN_CHECK_OUT_OF_DATENESS): new flag value.", 
   "(SVN_FS_TXN_CHECK_LOCKS):  new flag value.", 
   "(svn_fs_begin_txn2):  new declaration, take new 'flags' argument.", 
   "(svn_fs_begin_txn):   deprecate.", 
   "* libsvn_fs/fs-loader.h", 
   "(SVN_FS_PROP_TXN_CHECK_LOCKS):  new name of txn-prop.", 
   "(SVN_FS_PROP_TXN_CHECK_OUT_OF_DATENESS):  new name of txn-prop.", 
   "(fs_vtable_t):        add new arg to vtable definition of begin_txn().", 
   "(struct svn_fs_root_t):  add 'txn_flags' to root_t structure.", 
   "* libsvn_fs/fs-loader.c", 
   "(svn_fs_begin_txn2):  new dispatch func, pass flag to vtable->begin_txn().", 
   "(svn_fs_begin_txn):   pass 0 flag to vtable->begin_txn().", 
   "* libsvn_fs_base/revs-txns.h:", 
   "(svn_fs_base__txn_proplist_from_trail):  new declaration.", 
   "(svn_fs_base__begin_txn):   add a 'flags' arg.", 
   "* libsvn_fs_base/revs-txns.c", 
   "(struct txn_proplist_args): remove unused 'rev' field.", 
   "(svn_fs_base__begin_txn):  add a 'flags' arg.", 
   "(struct begin_txn_args):   add a 'flags' field.", 
   "(txn_body_begin_txn):      possibly set two temporary txn props.", 
   "(svn_fs_base__txn_proplist_from_trail):  implement new helper func.", 
   "* libsvn_fs_base/dag.c", 
   "(svn_fs_base__dag_commit_txn):  remove the txn props at commit time.", 
   "* libsvn_fs_base/tree.c", 
   "(make_txn_root):  take a 'flags' field when building root_t struct.", 
   "(txn_body_txn_root):   look for the unversioned props, pass an", 
   "appropriate 'flags' arg to make_txn_root().", 
   "(txn_body_change_node_prop):  conditionalize the lock-check upon 'flags'.", 
   "(txn_body_make_dir):          same.", 
   "(txn_body_make_file):         same.", 
   "(txn_body_delete):            same.", 
   "(txn_body_copy):              same.", 
   "(txn_body_apply_textdelta):   same.", 
   "(txn_body_apply_text)         same.", 
   "* libsvn_fs_fs/revs-txn.h", 
   "(svn_fs_fs__begin_txn):   add a 'flags' arg.", 
   "* libsvn_fs_fs/revs-txns.c", 
   "(svn_fs_fs__begin_txn):   possibly set two temporary txn props.", 
   "* libsvn_fs_fs/tree.c", 
   "(make_txn_root):          take a 'flags' field when building root_t struct.", 
   "(svn_fs_fs__txn_root):    detect the temporary txn props, update", 
   "call to above.", 
   "* libsvn_fs_fs/fs_fs.c", 
   "(svn_fs_fs__comit):       remove the temporary txn props at commit time.", 
   "* libsvn_repos/fs-wrap.c", 
   "(svn_repos_fs_begin_txn_for_commit):  call svn_fs_begin_txn2(), ask", 
   "for on-the-fly lock checks.", 
   "(svn_repos_fs_begin_txn_for_update):  same, but pass empty flag.", 
   "* libsvn_repos/load.c", 
   "(new_revision_record):  call svn_fs_begin_txn2(), pass empty flag.", 
   "* tests/libsvn_fs/locks-test.c", 
   "(basic_lock, lock_credentials, final_lock_check,", 
   "lock_dir_propchange, lock_name_reservation, lock_expiration),", 
   "lock_break_steal_refresh),  call svn_fs_begin_txn2() with lock-checks."
  ], 
  "revision_id": "852297"
 }, 
 {
  "author": "ehu", 
  "date": "2004-12-07T18:31:01.492955Z", 
  "msg": [
   "Apply patches by David Summers from issue #2111: Fix RPM build breakage.", 
   "Approved by:", 
   "+1: david, ghudson"
  ], 
  "revision_id": "852296"
 }
]