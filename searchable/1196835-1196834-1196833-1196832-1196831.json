[
 {
  "author": "olamy", 
  "date": "2011-11-02T22:29:46.558055Z", 
  "msg": [
   "do not index directory in case of group: prevent NPE"
  ], 
  "revision_id": "1196835"
 }, 
 {
  "author": "olamy", 
  "date": "2011-11-02T22:29:30.120851Z", 
  "msg": [
   "do not display index directory in case of group"
  ], 
  "revision_id": "1196834"
 }, 
 {
  "author": "olamy", 
  "date": "2011-11-02T22:29:11.199829Z", 
  "msg": [
   "fix bad taglib declaration from a previous commit"
  ], 
  "revision_id": "1196833"
 }, 
 {
  "author": "olamy", 
  "date": "2011-11-02T22:28:47.530293Z", 
  "msg": [
   "fix formatting"
  ], 
  "revision_id": "1196832"
 }, 
 {
  "author": "jmsnell", 
  "date": "2011-11-02T22:27:11.464146Z", 
  "msg": [
   "Ok.. so this update gives us an alternative way of doing extensions. the ASBase object supports generic setProperty(\"foo\",\"bar\") style extensions but it's not typesafe and can be cumbersome. Since we already have cglib in the dependencies now, I decided to use a different approach... the ASBase object now has an extend method that allows you to attach an Interface using getter/setter methods to an existing ASBase object. The cglib proxy will route the various get/set methods called on that interface to the appropriate setProperty/getProperty methods on the underlying ASBase... for instance,", 
   "interface Foo {", 
   "String getBar();", 
   "void setBar(String val);", 
   "}", 
   "PersonObject obj = new PersonObject();", 
   "Foo foo = obj.extend(Foo.class);", 
   "foo.setBar(\"data\");", 
   "obj.writeTo(System.out);", 
   "will result in {\"objectType\":\"person\",\"bar\":\"data\"} ... notice that the \"setBar\" method name is mapped to the \"bar\" property. A property name like \"getFooBarBaz\" would be mapped to a property named \"fooBarBaz\". Use the @Name attribute on the method in the interface to specify a different name... e.g. \"@Name(\"baz\") String getBar()\"", 
   "The nicest thing about this approach is that it's simple and type-safe."
  ], 
  "revision_id": "1196831"
 }
]