[
 {
  "author": "cziegeler", 
  "date": "2013-10-19T17:21:45.738835Z", 
  "msg": [
   "SLiNG-3184 : Create a job consumer to clean up the history"
  ], 
  "revision_id": "1533793"
 }, 
 {
  "author": "markrmiller", 
  "date": "2013-10-19T17:21:24.307691Z", 
  "msg": [
   "LUCENE-5295: Allow the license checker to optionally avoid check sum comparisons."
  ], 
  "revision_id": "1533792"
 }, 
 {
  "author": "markrmiller", 
  "date": "2013-10-19T17:20:20.692281Z", 
  "msg": [
   "LUCENE-5295: Allow the license checker to optionally avoid check sum comparisons."
  ], 
  "revision_id": "1533791"
 }, 
 {
  "author": "brane", 
  "date": "2013-10-19T17:16:30.780195Z", 
  "msg": [
   "Make the channel implementation thread-safe(r) and add additional checks", 
   "for file descriptor validity.", 
   "[in subversion/bindings/javahl/src/org/apache/subversion/javahl]", 
   "* util/TunnelChannel.java", 
   "(TunnelChannel.nativeChannel): Use an atomic long to store the native handle.", 
   "(TunnelChannel.TunnelChannel, TunnelChannel.isOpen, TunnelChannel.close):", 
   "Update to use atomic operations.", 
   "* util/RequestChannel.java (RequestChannel.read): Properly detect a closed", 
   "channel, and deactivate it if the underlying implementation threw", 
   "an exception.", 
   "* util/ResponseChannel.java (ResponseChannel.write): As above.", 
   "[in subversion/bindings/javahl/native]", 
   "* org_apache_subversion_javahl_util_TunnelChannel.cpp", 
   "(throw_IOException): Allow the APR status to be zero.", 
   "(Java_org_apache_subversion_javahl_util_RequestChannel_nativeRead,", 
   "Java_org_apache_subversion_javahl_util_ResponseChannel_nativeWrite):", 
   "Throw an exception if the read failed."
  ], 
  "revision_id": "1533790"
 }, 
 {
  "author": "markrmiller", 
  "date": "2013-10-19T17:16:10.741404Z", 
  "msg": [
   "SOLR-5357: add solr.xml to schemaless solrhome"
  ], 
  "revision_id": "1533789"
 }
]