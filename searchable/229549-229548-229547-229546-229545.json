[
 {
  "author": "seade", 
  "date": "2004-08-27T01:49:07.000000Z", 
  "msg": [
   "Bump versions."
  ], 
  "revision_id": "229549"
 }, 
 {
  "author": "cvs2svn", 
  "date": "2004-08-27T01:46:23.000000Z", 
  "msg": [
   "This commit was manufactured by cvs2svn to create tag", 
   "'TORQUE_3_1_1_RC2'."
  ], 
  "revision_id": "229548"
 }, 
 {
  "author": "seade", 
  "date": "2004-08-27T01:46:23.000000Z", 
  "msg": [
   "Release of 3.1.1-rc2."
  ], 
  "revision_id": "229547"
 }, 
 {
  "author": "seade", 
  "date": "2004-08-27T00:52:50.000000Z", 
  "msg": [
   "Picky style fix - no functional change."
  ], 
  "revision_id": "229546"
 }, 
 {
  "author": "henning", 
  "date": "2004-08-26T17:01:25.000000Z", 
  "msg": [
   "Folks,", 
   "while I was using a blind eye to look at the mess that the LIMIT /", 
   "OFFSET generation has turned into, the last patch from Augustin was", 
   "the straw that broke the camels' back.  Or, to be literal, broke the", 
   "LIMIT / OFFSET generation for everything else but DB2. E.g. PostgreSQL.", 
   "Which upsets me, because I use PostgreSQL. However, I didn't use LIMIT", 
   "until about an hour ago.", 
   "At some point, one has to take a step back, look at what has been done", 
   "and ask oneself \"is this really what I intended to do\". Three", 
   "different places in the already much too large BasePeer class where", 
   "limits are checked in different ways; Criteria manipulation just to", 
   "satisfy a single caller of createQueryString, patch over patch over", 
   "patch just to get this somehow to compile.", 
   "My stomach couldn't take this any longer (and I need a working OFFSET", 
   "LIMIT for PostgreSQL and I would not touch this mess with a 3 metre", 
   "pole).", 
   "So I ripped everything out, rewrote it into a helper class and put it", 
   "back in. Cleaned up the logic and everything. It still passes the unit", 
   "tests (which is a good sign). And there are a lot of the invariants", 
   "removed. Why do we need \"supportsNativeOffset\" and", 
   "\"supportsNativeLimit\" when e.g. Oracle and DB2 allows this (by using a", 
   "subquery) but return false/false for the supportsNativeLimit/Offset", 
   "(DB2) or true/false (Oracle)?", 
   "All of this stuff _needs_ testing. Sorry Scott. We will need an RC2."
  ], 
  "revision_id": "229545"
 }
]