[
 {
  "author": "craigmcc", 
  "date": "2002-01-17T21:26:18.000000Z", 
  "msg": [
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "48819"
 }, 
 {
  "author": "oalexeev", 
  "date": "2002-01-17T18:20:16.000000Z", 
  "msg": [
   "Patch for bug -", 
   "[Bug 5865] New:  -     WriteTag tests for null format string but PropertyMessageResources always returns String."
  ], 
  "revision_id": "48818"
 }, 
 {
  "author": "dwinterfeldt", 
  "date": "2002-01-17T05:55:36.000000Z", 
  "msg": [
   "Changing contact e-mail to dwinterfeldt@apache.org."
  ], 
  "revision_id": "48817"
 }, 
 {
  "author": "craigmcc", 
  "date": "2002-01-17T00:15:05.000000Z", 
  "msg": [
   "Initial check-in of dynamic ActionForm support (uses the new DynaBean", 
   "support in the Commons version of BeanUtils).  Now, you have three choices", 
   "for how to implement ActionForms:", 
   "* Implement your own ActionForm subclass with standard JavaBean", 
   "properties, as before.", 
   "* Use the standard class \"org.apache.struts.action.DynaActionForm\",", 
   "which will be populated with properties defined by <form-property>", 
   "elements nested inside the <form-bean> element.  Note that you can", 
   "also set initial values in the <form-property> element; these are", 
   "used in the default implementation of reset().  Intelligent defaults", 
   "take care of the most common cases.  Note that the default validate()", 
   "method does NO checking, so you will need to do everything in your", 
   "Action.", 
   "* Implement a subclass of \"org.apache.struts.action.DynaActionForm\"", 
   "if you need to customize just the reset() and/or validate() methods.", 
   "In this case, you will need to tell Struts that you still want", 
   "dynamic bean support:", 
   "<form-bean name=\"logonForm\" dynamic=\"true\"", 
   "type=\"com.mycompany.mypackage.MyDynaActionForm\">", 
   "... <form-property> elements ...", 
   "</form-bean>", 
   "Just as an illustration of how this is used, the logon form bean in the", 
   "Struts example app has been replaced by a corresponding dynamic bean.", 
   "Note that I had to adjust the Action to use PropertyUtils to read the", 
   "properties, in order to make it not care about the actual implementation --", 
   "this approach will be common when rapidly prototyping an applicaiton, and", 
   "then going back and implementing specific ActionForm classes when needed", 
   "later.  PropertyUtils knows how to handle either kind of ActionForm", 
   "transparently, so no changes to the Action are required."
  ], 
  "revision_id": "48816"
 }, 
 {
  "author": "craigmcc", 
  "date": "2002-01-16T17:42:40.000000Z", 
  "msg": [
   "Repair configuration of data sources so that it works with custom", 
   "javax.sql.DataSource implementations again.", 
   "Remove the <data-source> properties that we deprecated in 1.0; now, everything", 
   "about a data source is configured with <set-property> elements.", 
   "Restore ActionServlet.initDataSources() -- but deprecate it -- in case", 
   "existing apps are using this as a hook to perform their own initialization."
  ], 
  "revision_id": "48815"
 }
]