[
 {
  "author": "lgo", 
  "date": "2013-11-29T20:36:01.367947Z", 
  "msg": [
   "On the 1.3.x branch:", 
   "* serf.h", 
   "(SERF_PATCH_VERSION): Set to 3 in preparation of 1.3.3 release."
  ], 
  "revision_id": "1699768"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-11-13T14:05:08.364162Z", 
  "msg": [
   "Following up on recent changes, suppress some now duplicated log lines and", 
   "adjust the warning level of ssl errors/warnings on the warning type.", 
   "* buckets/ssl_buckets.c", 
   "(apps_ssl_info_callback): Handle non error exits as informational. Reduce", 
   "level of the SSL_ERROR_WANT_READ error that happens during the initial", 
   "handshake to debug level.", 
   "(ssl_encrypt): Remove logging of errors that openssl has already written", 
   "via the apps_ssl_info_callback."
  ], 
  "revision_id": "1699767"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-11-13T13:38:28.832423Z", 
  "msg": [
   "Simplify the ssl bucket code by removing a now unneeded layer of buffering", 
   "and by reducing the BIO retry update/check code to just what is needed by", 
   "OpenSSL.", 
   "Somehow our code assumed that the BIO retry flags we retrieved contained more", 
   "information than we set into it, while we were the only ones who update these", 
   "flags. The information we really needed is provided by the SSL layer on top", 
   "of the BIO layer, which might conflict with what is in our BIO implementation.", 
   "Let's use a simple boolean, as that is all we need.", 
   "Before this patch we first read all socket data through an intermediate stream", 
   "before handing it to OpenSSL, while the socket stream before us already buffers", 
   "everything efficiently enough for us.", 
   "* buckets/ssl_buckets.c", 
   "(documentation): Update schema.", 
   "(serf_ssl_stream_t): Remove variables that only apply to encode or decode.", 
   "(serf_ssl_context_t): Add an encrypt/decrypt shared crypt_status as openssl", 
   "assumes that we handle errors like some global 'errno' in the BIO layer.", 
   "Add want_read boolean.", 
   "(apps_ssl_info_callback): Update status usage.", 
   "(bio_bucket_read): Unconditionally clear the BIO flags on entrance. Directly", 
   "read from the decrypt stream as that is already buffered. Set retry flag", 
   "when got an incomplete write for a different reason than EOF.", 
   "(bio_bucket_write): Unconditionally clear the BIO flags and crypt status.", 
   "(ssl_decrypt): Remove intermediate buffering. Always handle errors from", 
   "SSL_read.", 
   "(ssl_encrypt): Remove bio flag magic. Use the much simpler want_read boolean", 
   "for stopping writes.", 
   "(ssl_init_context): Update initialization.", 
   "(serf_ssl_encrypt_destroy_and_data): Update cleanup."
  ], 
  "revision_id": "1699766"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-11-13T11:41:28.759363Z", 
  "msg": [
   "* trunk/buckets/ssl_buckets.c", 
   "Remove the unused exhausted vairables from the ssl streams."
  ], 
  "revision_id": "1699765"
 }, 
 {
  "author": "rhuijben", 
  "date": "2013-11-13T11:38:38.401015Z", 
  "msg": [
   "* buckets/ssl_buckets.c", 
   "(apps_ssl_info_callback): Instead of only logging in which state an error", 
   "occured also log the error itself and the bucket read status."
  ], 
  "revision_id": "1699764"
 }
]