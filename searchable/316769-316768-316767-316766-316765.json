[
 {
  "author": "andyc", 
  "date": "2001-01-05T09:33:28.000000Z", 
  "msg": [
   "1) Added lots more comments.", 
   "2) Added protected factory methods for parser components. This allows", 
   "greater power by subclassers to take advantage of the default", 
   "implementation for most components but plug in specialized", 
   "versions of certain components. For example: a custom datatype", 
   "validator factory or validator component.", 
   "3) Implemented CachingParserPool. However, more work needs to be", 
   "done before it can be used. First, there's an issue of whether", 
   "the symbol table and grammar pool cache should be flushed with", 
   "each new parse (yes if single parser instance or shadowed from", 
   "parser pool; no if not shadowed from parser pool). Will add a", 
   "feature to support this functionality.", 
   "Also thinking of adding another feature that will allow the", 
   "application to select whether grammars are resolved or if they", 
   "*must* come from the grammar pool. This will allow people to", 
   "control exactly which grammars are to be used for validation", 
   "-- a much requested feature.", 
   "Lastly, I want to create a more powerful grammar pool that can", 
   "be populated and queried with 2 types of grammars: those keyed", 
   "by target namespace (ala Schema); and those keyed by allowed", 
   "root element name (ala DTD). The validator would have to be", 
   "modified to support this, though.", 
   "4) Added another reportError method to XMLErrorReporter to allow", 
   "people to report an error at a specific location instead of", 
   "only at the current parsing location. We don't currently use", 
   "this functionality in the parser but it will allow us to do", 
   "things like store the location of each IDREF so that if", 
   "there's an error, we report the location at the reference", 
   "and not at the end of the document like we do now. Neat!", 
   "5) Did I do anything else this time? Can't remember."
  ], 
  "revision_id": "316769"
 }, 
 {
  "author": "andyc", 
  "date": "2001-01-05T06:30:21.000000Z", 
  "msg": [
   "1) Starting to clean up and comment XMLValidator class. There's", 
   "still a lot to do.", 
   "2) Replaced String#equals calls with symbol reference comparisons.", 
   "Every little change like this across the whole system should", 
   "yield some nice performance gains.", 
   "3) Fixed bug in NamespaceSupport so that prefixes are returned", 
   "correctly. This fixes the endPrefixMapping callbacks from", 
   "the parser."
  ], 
  "revision_id": "316768"
 }, 
 {
  "author": "andyc", 
  "date": "2001-01-04T08:17:04.000000Z", 
  "msg": [
   "1) Fix for checking root element name against the DOCTYPE when", 
   "using Schema grammar. It just didn't make sense to check it", 
   "because you won't usually have a DOCTYPE in an XML document", 
   "that uses Schema.", 
   "2) The start of some re-working of the validation code. Before", 
   "the code would not allow you to plug in your own datatype", 
   "validator factory. The factory impl was hardcoded when it", 
   "shouldn't have been. NOTE: There is still a *lot* of work", 
   "to do on the validation architecture and implementation."
  ], 
  "revision_id": "316767"
 }, 
 {
  "author": "lehors", 
  "date": "2000-12-30T00:28:47.000000Z", 
  "msg": [
   "fixed infinite recursion - patch from Mark Diekhans"
  ], 
  "revision_id": "316766"
 }, 
 {
  "author": "lehors", 
  "date": "2000-12-30T00:24:44.000000Z", 
  "msg": [
   "removed bogus line preventing compilation"
  ], 
  "revision_id": "316765"
 }
]