[
 {
  "author": "jleroux", 
  "date": "2010-10-28T11:39:44.575645Z", 
  "msg": [
   "Definitively removes all OOTB Prototype references (libs loading)"
  ], 
  "revision_id": "1028265"
 }, 
 {
  "author": "gertv", 
  "date": "2010-10-28T11:38:50.800955Z", 
  "msg": [
   "Upgrade to Scalate 1.3.1"
  ], 
  "revision_id": "1028264"
 }, 
 {
  "author": "kkolinko", 
  "date": "2010-10-28T11:35:48.001826Z", 
  "msg": [
   "Add changelog entry for r1027893"
  ], 
  "revision_id": "1028263"
 }, 
 {
  "author": "apadilla", 
  "date": "2010-10-28T11:28:22.593653Z", 
  "msg": [
   "[NPANDAY-288] - revised version to run test against v1.2.2-incubating-SNAPSHOT", 
   "- added TimeSpan.ParseExact to show .net 4.0 feature supported", 
   "[NPANDAY-330] - revised version to run test against v1.2.2-incubating-SNAPSHOT"
  ], 
  "revision_id": "1028262"
 }, 
 {
  "author": "jleroux", 
  "date": "2010-10-28T11:26:32.020671Z", 
  "msg": [
   "Implements the description in lookup which so far was missed in migration.", 
   "It works well in all browsers; though I had to add a String.trim() function because IE8 does not implement trim yet. BWT, it was the 1st time I used the integrated IE8 debugger and crossed an issue to have it to work :(.", 
   "Also", 
   "* In Chrome the description is not at right of the lookup but below.", 
   "* When loading and the field has no value a small yellow colored square appears at right of the lookup (all browsers), should not be a bid deal to fix later...", 
   "Also adds a new feature which allows to set a dependent field using autocomplete in lookups (was only working with lookup, not with autocomplete). Convenient when, for instance, you want to allow you users to handle names instead of Ids but need to set an Id key in a hidden field. Demonstrated with Geo in example/control/FormWidgetExamples.", 
   "Note: for this new feature at some point I wondered if I should not introduce a class plugin. But finally decided to go my own way with prototypes (actually following jQuery spirit, javascript and prototype are powerful, just another way of thinking about classes)"
  ], 
  "revision_id": "1028261"
 }
]