[
 {
  "author": "", 
  "date": "2012-01-31T18:20:17.721533Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 13097", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-18T02:36:41.995341Z", 
   "Log Message:", 
   "-----------", 
   "Add ISystemCursorClient so that it is possible to detect whether system cursor should be displayed in mouseOverHandler.  In particular this will detect if it is a RichEditableText component.  This removes a FIXME.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs:", 
   "Reviewer: Alex, Glenn", 
   "Tests run:", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"A\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/core/ISystemCursorClient.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/FrameworkClasses.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/framework/src/mx/managers/CursorManagerImpl.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1280213"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:20:15.731176Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 13075", 
   "Author:   aharui@adobe.com", 
   "Date:     2009-12-17T22:09:56.306311Z", 
   "Log Message:", 
   "-----------", 
   "Protect against null FocusManager in RichText", 
   "QE Notes: None", 
   "Doc Notes: None", 
   "Bugs: SDK-24675", 
   "Reviewer: Corey", 
   "API Change: No", 
   "Is noteworthy for integration: No", 
   "tests: checkintests mustella/gumbo/components/TextInput, TextArea", 
   "Modified Paths:", 
   "--------------", 
   "/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as"
  ], 
  "revision_id": "1280212"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:20:13.825283Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12971", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-15T22:01:01.993302Z", 
   "Log Message:", 
   "-----------", 
   "Remove obsolete code.  We no longer need the override in RichEditableTextEditManager to force remeasure when one or both of the width and height is auto-sizing and we are typing.  Each insert will trigger the damageHandler which now invalidates the size and if \"auto-sizing\" will remeasure the text and the update the display.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs:", 
   "Reviewer: Gordon", 
   "Tests run: checkintests, TextArea, TextInput, NumericStepper, ComboBox", 
   "Is noteworthy for integration: no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/supportClasses/RichEditableTextEditManager.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1280211"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:20:11.172812Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12909", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-14T18:33:13.575050Z", 
   "Log Message:", 
   "-----------", 
   "Pre-FP10.1, set default tab stops in TLF.  Without this, if there is a tab and TLF is measuring width, the tab will measure as the rest of the remaining width up to 10000.", 
   "QE notes:", 
   "Doc notes:", 
   "Bugs: SDK-24589", 
   "Reviewer:", 
   "Tests run: checkintests", 
   "Is noteworthy for integration: yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichText.as</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1280210"
 }, 
 {
  "author": "", 
  "date": "2012-01-31T18:20:08.727054Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 12862", 
   "Author:   cframpto@adobe.com", 
   "Date:     2009-12-11T21:13:05.311449Z", 
   "Log Message:", 
   "-----------", 
   "RET.calculateFontMetrics() was measuring a sample line of text using embedded and since the font wasn\u2019t embedded it was using the player\u2019s default font rather than the device font \u2013 hence the 1 pixel difference in height.  Now the code uses the same resolveFontLookup method that the rest of the code uses to implement the fallback to device lookup if the font isn't embedded.", 
   "Uncommented the checkin test and removed fontLookup=\"device\" since it wasn't orginally there.", 
   "QE notes:", 
   "Doc notes: see above", 
   "Bugs: broken spark TextInput checkin test", 
   "Reviewer: Corey", 
   "Tests run: checkintests", 
   "Is noteworthy for integration:  no", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/tests/basicTests/spark/scripts/TextInputTestScript.mxml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/tests/basicTests/spark/views/TextInputTests.mxml</path>", 
   "<path kind=\"file\" action=\"M\">/flex/sdk/trunk/frameworks/projects/spark/src/spark/components/RichEditableText.as</path>"
  ], 
  "revision_id": "1280209"
 }
]