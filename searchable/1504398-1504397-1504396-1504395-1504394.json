[
 {
  "author": "coheigea", 
  "date": "2013-07-18T09:19:41.519165Z", 
  "msg": [
   "[WSS-466] - assure compatibility with the change in ehcache CacheManager's create method from version 2.5.1 to 2.5.2 and up"
  ], 
  "revision_id": "1504398"
 }, 
 {
  "author": "mdisabatino", 
  "date": "2013-07-18T09:19:19.812275Z", 
  "msg": [
   "SYNCOPE-402 Fix RoleController, add propagation status to assigned resource when primary resource failed."
  ], 
  "revision_id": "1504397"
 }, 
 {
  "author": "thomasm", 
  "date": "2013-07-18T09:18:12.846599Z", 
  "msg": [
   "OAK-913 Query: relative fulltext conditions return the wrong result (disabled test case)"
  ], 
  "revision_id": "1504396"
 }, 
 {
  "author": "hashutosh", 
  "date": "2013-07-18T09:16:52.613814Z", 
  "msg": [
   "HIVE-2206 [jira] add a new optimizer for query correlation discovery and optimization", 
   "(Yin Huai via Ashutosh Chauhan)", 
   "Summary:", 
   "update test results", 
   "This issue proposes a new logical optimizer called Correlation Optimizer, which is used to merge correlated MapReduce jobs (MR jobs) into a single MR job. The idea is based on YSmart (http://ysmart.cse.ohio-state.edu/). The paper and slides of YSmart are linked at the bottom.", 
   "Since Hive translates queries in a sentence by sentence fashion, for every operation which may need to shuffle the data (e.g. join and aggregation operations), Hive will generate a MapReduce job for that operation. However, for those operations which may need to shuffle the data, they may involve correlations explained below and thus can be executed in a single MR job.", 
   "Input Correlation: Multiple MR jobs have input correlation (IC) if their input relation sets are not disjoint;", 
   "Transit Correlation: Multiple MR jobs have transit correlation (TC) if they have not only input correlation, but also the same partition key;", 
   "Job Flow Correlation: An MR has job \ufb02ow correlation (JFC) with one of its child nodes if it has the same partition key as that child node.", 
   "The current implementation of correlation optimizer only detect correlations among MR jobs for reduce-side join operators and reduce-side aggregation operators (not map only aggregation). A query will be optimized if it satisfies following conditions.", 
   "There exists a MR job for reduce-side join operator or reduce side aggregation operator which have JFC with all of its parents MR jobs (TCs will be also exploited if JFC exists);", 
   "All input tables of those correlated MR job are original input tables (not intermediate tables generated by sub-queries); and", 
   "No self join is involved in those correlated MR jobs.", 
   "Correlation optimizer is implemented as a logical optimizer. The main reasons are that it only needs to manipulate the query plan tree and it can leverage the existing component on generating MR jobs.", 
   "Current implementation can serve as a framework for correlation related optimizations. I think that it is better than adding individual optimizers.", 
   "There are several work that can be done in future to improve this optimizer. Here are three examples.", 
   "Support queries only involve TC;", 
   "Support queries in which input tables of correlated MR jobs involves intermediate tables; and", 
   "Optimize queries involving self join.", 
   "References:", 
   "Paper and presentation of YSmart.", 
   "Paper: http://www.cse.ohio-state.edu/hpcs/WWW/HTML/publications/papers/TR-11-7.pdf", 
   "Slides: http://sdrv.ms/UpwJJc", 
   "Test Plan: EMPTY", 
   "Reviewers: JIRA, ashutoshc", 
   "Reviewed By: ashutoshc", 
   "CC: brock", 
   "Differential Revision: https://reviews.facebook.net/D11097"
  ], 
  "revision_id": "1504395"
 }, 
 {
  "author": "desruisseaux", 
  "date": "2013-07-18T09:08:11.005648Z", 
  "msg": [
   "Removed anchors since the TOC macro ignores them anyway."
  ], 
  "revision_id": "1504394"
 }
]