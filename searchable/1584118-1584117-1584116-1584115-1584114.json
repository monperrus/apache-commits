[
 {
  "author": "thejas", 
  "date": "2014-04-02T18:19:01.416382Z", 
  "msg": [
   "HIVE-6804 : sql std auth - granting existing table privilege to owner should result in error (Thejas Nair, reviewed by Ashutosh Chauhan)"
  ], 
  "revision_id": "1584118"
 }, 
 {
  "author": "tilman", 
  "date": "2014-04-02T18:15:56.613929Z", 
  "msg": [
   "PDFBOX-2008: fix error in check of max generation number"
  ], 
  "revision_id": "1584117"
 }, 
 {
  "author": "tilman", 
  "date": "2014-04-02T18:14:57.887752Z", 
  "msg": [
   "PDFBOX-2008: fix error in check of max generation number"
  ], 
  "revision_id": "1584116"
 }, 
 {
  "author": "noble", 
  "date": "2014-04-02T18:10:06.552186Z", 
  "msg": [
   "SOLR-5859 removing accidental removal of SOLR-5908 changes"
  ], 
  "revision_id": "1584115"
 }, 
 {
  "author": "philip", 
  "date": "2014-04-02T17:55:25.856493Z", 
  "msg": [
   "Convert the new multi-path lock and unlock functions to a callback API,", 
   "rename from _lock2 and _unlock2 to _lock_many and _unlock_many.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_lock_result_t): Remove.", 
   "(svn_fs_lock_callback_t):", 
   "(svn_fs_lock2): Rename to...", 
   "(svn_fs_lock_many): ...this, change to callback API.", 
   "(svn_fs_unlock2): Rename to...", 
   "(svn_fs_unlock_many): ...this, change to callback API.", 
   "* subversion/include/svn_repos.h", 
   "(svn_repos_fs_lock2): Rename to...", 
   "(svn_repos_fs_lock_many): ...this, change to callback API.", 
   "(svn_repos_fs_unlock2): Rename to...", 
   "(svn_repos_fs_unlock_many): ...this, change to callback API.", 
   "* subversion/libsvn_fs/fs-loader.h", 
   "(struct fs_vtable_t): Change lock and unlock to callback API.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(struct lock_many_baton_t, lock_many_cb): New.", 
   "(svn_fs_lock2): Rename to...", 
   "(svn_fs_lock_many): ...this, change to callback API.", 
   "(struct lock_baton_t, lock_cb): New.", 
   "(svn_fs_lock): Adapt to callback API.", 
   "(svn_fs_unlock2): Rename to...", 
   "(svn_fs_unlock_many): ...this, change to callback API.", 
   "(svn_fs_unlock): Adapt to callback API.", 
   "* subversion/libsvn_fs_fs/lock.h", 
   "* subversion/libsvn_fs_fs/lock.c", 
   "(svn_fs_fs__lock, svn_fs_fs__unlock): Change to callback API.", 
   "* subversion/libsvn_fs_base/lock.h", 
   "* subversion/libsvn_fs_base/lock.c", 
   "(svn_fs_base__lock, svn_fs_base__unlock): Change to callback API.", 
   "* subversion/libsvn_fs_x/lock.h", 
   "* subversion/libsvn_fs_x/lock.c", 
   "(svn_fs_x__lock, svn_fs_x__unlock): Change to callback API.", 
   "* subversion/libsvn_ra_local/ra_plugin.c", 
   "(deltify_etc): Adapt to callback API.", 
   "(struct lock_baton_t, lock_cb): New.", 
   "(svn_ra_local__lock, svn_ra_local__unlock): Adapt to callback API.", 
   "* subversion/libsvn_repos/fs-wrap.c", 
   "(struct lock_many_baton_t, lock_many_cb): New.", 
   "(svn_repos_fs_lock2): Rename to...", 
   "(svn_repos_fs_lock_many): ...this, change to callback API.", 
   "(struct lock_baton_t, lock_cb): New.", 
   "(svn_repos_fs_lock): Adapt to callback API.", 
   "(svn_repos_fs_unlock2): Rename to...", 
   "(svn_repos_fs_unlock_many): ...this, change to callback API.", 
   "(svn_repos_fs_unlock): Adapt to callback API.", 
   "* subversion/mod_dav_svn/version.c", 
   "(unlock_many_cb): New.", 
   "(release_locks): Adapt to callback API.", 
   "* subversion/svnserve/serve.c", 
   "(write_lock): Make parameter const.", 
   "(lock_cb): New.", 
   "(unlock_paths): Adapt to callback API.", 
   "(struct lock_result_t, struct lock_many_baton_t, lock_many_cb): New.", 
   "(clear_lock_result_hash): New.", 
   "(lock_many, unlock_many): Adapt to callback API.", 
   "* subversion/tests/libsvn_fs/locks-test.c", 
   "(struct lock_result_t): New.", 
   "(expect_lock, expect_error, expect_unlock, expect_unlock_error): Change", 
   "to struct lock_result_t.", 
   "(struct lock_many_baton_t, lock_many_cb): New.", 
   "(lock_multiple_paths): Adapt to callback API.", 
   "* subversion/tests/libsvn_ra/ra-test.c", 
   "(struct lock_result_t): New.", 
   "(lock_cb, expect_lock, expect_error, expect_unlock, expect_unlock_error,", 
   "lock_test): Change to struct lock_result_t."
  ], 
  "revision_id": "1584114"
 }
]