[
 {
  "author": "wrowe", 
  "date": "2007-10-23T09:53:28.640197Z", 
  "msg": [
   "Another explicitly-int length arg we can do nothing about"
  ], 
  "revision_id": "587435"
 }, 
 {
  "author": "wrowe", 
  "date": "2007-10-23T09:52:53.235369Z", 
  "msg": [
   "Folks, I'd appreciate if this received extra attention;", 
   "I believe my analysis is correct that we protect from", 
   "the cases where the off_t 'point' arg (signed!) falls", 
   "out of scope of the size_t e->length (equivilant or", 
   "smaller sized, and unsigned.)", 
   "We could use an official MAX_SIZE_T - heh."
  ], 
  "revision_id": "587434"
 }, 
 {
  "author": "jonesde", 
  "date": "2007-10-23T09:52:49.258251Z", 
  "msg": [
   "Fairly significant update to correct a long-standing problem; reverted ByteWrapper back for backward compatibility, and then replaced all use of ByteWrapper with java.nio.ByteBuffer; the main point is to both store only the byte[] data in the database and not a serialized object containing the byte[], and at the same time be able to read the old ByteWrapper objects, and there is a service to read and update all old data to be plan bytes instead of wrapped in a serialized object; this includes changing the java-type for blob fields to be java.sql.Blob to greater compatibility and flexibility, ie you can either set a plain byte[] or you can pass in a Blob object to be persisted, you can also get both as get returns java.sql.Blob, but getBytes always returns the byte[], converting as needed; this is tested a fair amount, but obviously needs to be watched as it is new code"
  ], 
  "revision_id": "587433"
 }, 
 {
  "author": "wrowe", 
  "date": "2007-10-23T09:50:12.126051Z", 
  "msg": [
   "XML_Parse is well-defined as accepting only an int", 
   "for the size arg"
  ], 
  "revision_id": "587432"
 }, 
 {
  "author": "wrowe", 
  "date": "2007-10-23T09:49:21.578462Z", 
  "msg": [
   "When dealing with deltas/offsets, use size_t until", 
   "the last possible moment (the API restricts us to", 
   "returning int's)."
  ], 
  "revision_id": "587431"
 }
]