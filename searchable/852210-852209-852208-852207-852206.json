[
 {
  "author": "philip", 
  "date": "2004-12-03T03:20:00.609732Z", 
  "msg": [
   "Add a bit of sanity checking, and get rid of a bit of silly disk IO.", 
   "* subversion/libsvn_client/ra.c (set_wc_prop): Make sure there is a", 
   "versioned entry before setting the property."
  ], 
  "revision_id": "852210"
 }, 
 {
  "author": "sussman", 
  "date": "2004-12-02T23:44:01.773309Z", 
  "msg": [
   "Locking branch:  add a 'comment' field to svn_lock_t and svn_fs_lock().", 
   "* include/svn_types.h", 
   "(svn_lock_t):   new 'comment' field.", 
   "* include/svn_fs.h", 
   "(svn_fs_lock):  take a new 'comment' argument.", 
   "* include/svn_repos.h", 
   "(svn_repos_fs_lock):  take a new 'comment' argument.", 
   "* include/svn_ra.h", 
   "(svn_ra_plugin_t):  add 'comment' arg to RA->lock().", 
   "* libsvn_repos/fs-wrap.c", 
   "(svn_repos_fs_lock):  take a 'comment' arg.", 
   "* libsvn_fs/fs-loader.c", 
   "(svn_fs_lock):  take a 'comment' arg.", 
   "* libsvn_fs/fs-loader.h", 
   "(fs_vtable_t):  add 'comment' arg to lock() signature.", 
   "* libsvn_fs_base/lock.c, lock.h", 
   "(svn_fs_base__lock):  take a 'comment' arg.", 
   "(generate_new_lock):  take a 'comment' arg.", 
   "(txn_body_lock, struct lock_args):  update callers.", 
   "* libsvn_fs_base/notes/structure:  update BDB documentation.", 
   "* libsvn_fs_base/util/fs_skels.c", 
   "(svn_fs_base__unparse_lock_skel, svn_fs_base__parse_lock_skel,", 
   "is_valid_lock_skel):   update BDB lock-storage functions.", 
   "* libsvn_fs_fs/lock.c, lock.h", 
   "(svn_fs_fs__lock):  take a 'comment' arg.", 
   "* mod_dav_svn/lock.c:", 
   "(svn_lock_to_dav_lock):  map new 'comment' field to 'DAV:owner' attribute.", 
   "(dav_lock_to_svn_lock):  map 'DAV:owner' attribute to new 'comment' field.", 
   "* libsvn_ra_local/ra_plugin.c", 
   "(svn_ra_local__lock):  add 'comment' arg.", 
   "* libsvn_ra_svn/client.c", 
   "(ra_svn_lock):  add 'comment' arg.  add TO-DO comment for lundblad.", 
   "* svnserve/serve.c", 
   "(lock):  pass empty comment, add TO-DO comment for lundblad.", 
   "* svnadmin/main.c", 
   "(subcommand_lock):  pass a comment.", 
   "(subcommand_lslocks):  print the comment field.", 
   "* svnlook/main.c", 
   "(subcommand_lock):  print the comment field.", 
   "* tests/libsvn_fs_base/fs-test.c", 
   "(basic_lock, lock_credentials, lock_name_reservation,", 
   "lock_expiration, lock_break_steal_refresh, ): update calls to svn_fs_lock()."
  ], 
  "revision_id": "852209"
 }, 
 {
  "author": "kfogel", 
  "date": "2004-12-02T23:36:44.032758Z", 
  "msg": [
   "* STATUS: Nominate and vote (self and cmpilato) for r12133."
  ], 
  "revision_id": "852208"
 }, 
 {
  "author": "kfogel", 
  "date": "2004-12-02T23:29:30.600906Z", 
  "msg": [
   "With Mike Pilato, fix issue #2106: Do the version_resource_url", 
   "cleanups in subpools, instead of in the global session pool.", 
   "* subversion/libsvn_ra_dav/fetch.c", 
   "(report_baton_t): New member 'scratch_pool'.", 
   "(make_reporter): Initialize rb->scratch_pool.", 
   "(end_element): Use rb->scratch_pool for wc_props.", 
   "See also http://www.snopes.com/business/genius/where.asp."
  ], 
  "revision_id": "852207"
 }, 
 {
  "author": "lundblad", 
  "date": "2004-12-02T22:44:41.545362Z", 
  "msg": [
   "Locking branch: implement locking commands in svnserve.", 
   "* subversion/svnserve/serve.c (send_mechs): New needs_username parameter.", 
   "Callers updated.  Don't allow anon authentication if this is true.", 
   "(set_user): New function.", 
   "(auth): New needs_username parameter.  Callers updated..  Use set_user to", 
   "set the user.", 
   "(auth_request): New needs_username parameter.  Callers updated.", 
   "Use in calls to auth and send_mechs.", 
   "(must_have_write_access): New needs_username parameter.  Callers updated.", 
   "Authenticate if the client has write access, but there is no username.", 
   "(write_lock, lock, unlock, get_lock, get_locks): New function.", 
   "(main_commands): aDD NEW COMMAND HANDLERS."
  ], 
  "revision_id": "852206"
 }
]