[
 {
  "author": "jvanzyl", 
  "date": "2000-11-16T02:15:29.000000Z", 
  "msg": [
   "- a lot of changes in the runtime.", 
   "o Central template cache is now here.", 
   "o List of possible template loaders (input stream sources, really) are", 
   "initialized from the properties files. The Runtime will search all", 
   "these sources to try and find the requested template. So application", 
   "code will not have to change at all (in fact the VelocityServlet didn't", 
   "change at all while I changed the loading mechanism) in order to", 
   "draw templates from a different source. You can for example move", 
   "some of your templates to into a database and use (a non-existent)", 
   "DBTemplateLoader in conjuction with the FileTemplate loader and", 
   "your app code will not change the call to Runtime.getTemplate(X)", 
   "will have the Runtime search all the available sources and return", 
   "the template. So it is possible to use multiple template sources", 
   "at the same time.", 
   "o remove a lot of the properties that were specifically related", 
   "the the file template loader.", 
   "o a new property external.init was added to indicate the Runtime", 
   "that properties will be set from an external system that will", 
   "initialize the Runtime when it is ready :-) This is for Turbine.", 
   "This code should probably be factored out into some smaller", 
   "pieces now, it's gettting pretty big :-)", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "73684"
 }, 
 {
  "author": "jvanzyl", 
  "date": "2000-11-16T02:04:06.000000Z", 
  "msg": [
   "- some of the fields of the class have been moved into the Template", 
   "class in an attempt to make the Template a little more self-managing.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "73683"
 }, 
 {
  "author": "jvanzyl", 
  "date": "2000-11-16T02:03:28.000000Z", 
  "msg": [
   "- the cache has been removed from this file as the Runtime is now", 
   "the central place to store assembled templates. this loader simply", 
   "retrieves a FileInputstream that is sent back to the Runtime, and", 
   "it knows how to check the source for modification, just looking", 
   "at the modification time for the file.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "73682"
 }, 
 {
  "author": "jvanzyl", 
  "date": "2000-11-16T02:01:52.000000Z", 
  "msg": [
   "- New Template Loading Mechanism", 
   "First these classes could probably use new names. What these loaders", 
   "actually do now is locate an InputStream that is passed back to", 
   "the Runtime, and the Runtime assembles the Template and caches it", 
   "there. There is now a central cache for templates in the Runtime.", 
   "This means that loader implementors only need be concerned with", 
   "1. How to get the InputStream that the particular loader deals with.", 
   "2. How to check the source of the stream for modification.", 
   "The resultant template that is created by the Velocity Runtime will", 
   "be cached in the Runtime. So the loaders can be very simple.", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "73681"
 }, 
 {
  "author": "jvanzyl", 
  "date": "2000-11-16T01:57:28.000000Z", 
  "msg": [
   "- made the parse directive work with the new loader mechanism. now", 
   "template that are to be parsed may come from any source. the template", 
   "to be #parsed will be searched for in all the sources. so that a template", 
   "that is loaded from disc can #parse a template that is pulled a database,", 
   "and that template can #parse a template that is pulled from your toaster!", 
   ":-)", 
   "PR:", 
   "Obtained from:", 
   "Submitted by:", 
   "Reviewed by:"
  ], 
  "revision_id": "73680"
 }
]