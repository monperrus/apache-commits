[
 {
  "author": "leif", 
  "date": "2005-01-06T08:35:56.615196Z", 
  "msg": [
   "Remove the old code which saved the state by creating a Configuration object.  Broke the commits out to make it easier to recover this functionality if it is every needed.  There is no reason that both could not be possible and this may once again be needed if an application ever wants to gain access to the state as a Configuration object."
  ], 
  "revision_id": "124354"
 }, 
 {
  "author": "leif", 
  "date": "2005-01-06T08:27:53.098892Z", 
  "msg": [
   "Rework the way the instrument state is written to disk.  It now is done using a PrintWriter and manual XML generation directly to a temporary file.   This makes it possible to generate the state with very little impact on memory.   The old method created a large Configuration object containing all of the state.  This was Ok for most applications, but I had one app which contained about 3500 instrument samples.  The act of saving the instrument state was forcing the JVM to allocate an inordinate amount of memory for the task.  The new code doesn't even cause a noticeable hiccup in the memory usage."
  ], 
  "revision_id": "124353"
 }, 
 {
  "author": "leif", 
  "date": "2005-01-06T07:53:27.377485Z", 
  "msg": [
   "Add code donated by Tanuki Software for token replacement.  This was needed to generate XML safe attribute values in generated XML."
  ], 
  "revision_id": "124352"
 }, 
 {
  "author": "leif", 
  "date": "2005-01-06T07:52:45.735402Z", 
  "msg": [
   "Add code donated by Tanuki Software for token replacement.  This was needed to generate XML safe attribute values in generated XML."
  ], 
  "revision_id": "124351"
 }, 
 {
  "author": "pquerna", 
  "date": "2005-01-06T07:04:24.055348Z", 
  "msg": [
   "* Fix compiler warning for type mismatch on nget.", 
   "* Add locking to prevent a race condition that the Event MPM hit."
  ], 
  "revision_id": "124350"
 }
]