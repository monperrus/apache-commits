[
 {
  "author": "clkao", 
  "date": "2006-12-13T04:34:39.859529Z", 
  "msg": [
   "Revert my vote on the wrong branch."
  ], 
  "revision_id": "862755"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-13T03:42:11.510106Z", 
  "msg": [
   "A follow-up to r22678, making a preprocessor macro definition safer.", 
   "* subversion/libsvn_client/client.h", 
   "(SVN_CLIENT__HAS_LOG_MSG_FUNC): Put parenthesis around usage of CTX", 
   "parameter, in case it's passed into the macro in a fashion which", 
   "could cause precedence mix-ups.", 
   "Suggested by: glasser"
  ], 
  "revision_id": "862754"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-13T01:01:15.960772Z", 
  "msg": [
   "Correct the built '.jar', '.so', and '.dll' file names.", 
   "* subversion/bindings/java/javahl/README", 
   "(Build system):", 
   "'libsvnjavahl.so' -> 'libsvnjavahl-1.so'", 
   "'libsvnjavahl.dll' -> 'libsvnjavahl-1.dll'", 
   "'svnjavahl.jar' -> 'svn-javahl.jar'", 
   "Patch by: Kamesh Jayachandran <kamesh@collab.net>", 
   "(Tweaked by me.)", 
   "Review by: malcolm", 
   "pmayweg"
  ], 
  "revision_id": "862753"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-13T00:58:42.089016Z", 
  "msg": [
   "Along the lines of r22674, introduce a facility to check for the", 
   "presense of a log_msg_func in svn_client_ctx_t.", 
   "* subversion/libsvn_client/client.h", 
   "(SVN_CLIENT__HAS_LOG_MSG_FUNC): Define preprocessor macro which", 
   "checks whether the provided svn_client_context_t * has one or more", 
   "of log_msg_func3, log_msg_func2, or log_msg_func defined.", 
   "* subversion/libsvn_client/delete.c", 
   "(delete_urls): Use SVN_CLIENT__HAS_LOG_MSG_FUNC().", 
   "* subversion/libsvn_client/prop_commands.c", 
   "(propset_on_url): Ditto.", 
   "* subversion/libsvn_client/copy.c", 
   "(repos_to_repos_copy, wc_to_repos_copy): Ditto.", 
   "* subversion/libsvn_client/commit.c", 
   "(svn_client_import2, svn_client_commit4): Ditto.", 
   "* subversion/libsvn_client/add.c", 
   "(mkdir_urls): Ditto."
  ], 
  "revision_id": "862752"
 }, 
 {
  "author": "dlr", 
  "date": "2006-12-13T00:18:52.382508Z", 
  "msg": [
   "Rev the svn_client_commit_item2_t (and thus the svn_client_get_commit_log2_t)", 
   "API, creating API revision 3.", 
   "This change will make it easier to modify the svn_client_commit_item3_t", 
   "structure in the future, in preparation for adding fields to support", 
   "client -> repos transfer of properties not stored in the WC.  This", 
   "facility may turn out to be generally useful, but will immediately be", 
   "consumed on the merge-tracking branch.  (Only repos -> WC was", 
   "previously supported, by way of the", 
   "svn_client_commit_item2_t.wcprop_changes field.)", 
   "This change will also bring the bindings up to date with the log", 
   "message retrieval APIs.  Some bindings were using the first", 
   "incarnation of the API, which involves extra overhead (roughly 2x as", 
   "much memory per commit item, plus processing to perform data type", 
   "conversions).", 
   "This change will be broken into several distinct commits:", 
   "1) Change the libsvn_client library and svn_client.h header (r22674).", 
   "2) Propogate the changes to the 'svn' command-line client (r22675).", 
   "3) Propogate the changes to the JavaHL bindings (r22676).", 
   "4) Propogate the changes and SWIG Perl/Python/Ruby bindings.  This is", 
   "likely a backwards-incompatible change for consumers which supply", 
   "their own svn_client_ctx_t.log_msg_func (r22677).", 
   "* subversion/bindings/swig/svn_client.i", 
   "(callback_typemap): For Python, map svn_client_get_commit_log3_t", 
   "instead of svn_client_get_commit_log_t. For Ruby, map", 
   "svn_client_get_commit_log3_t instead of svn_client_get_commit_log2_t,", 
   "supplying svn_swig_rb_get_commit_log_func.", 
   "(CALLBACK_BATON): Rename Perl and Ruby's log_msg_baton3 from", 
   "log_msg_baton2.", 
   "(svn_client_ctx_t **): Rename log_msg_func3 and log_msg_baton3 from", 
   "log_msg_func2 and log_msg_baton2.", 
   "(constant svn_client_get_commit_log3_t): For Python, use instead of", 
   "svn_client_get_commit_log2_t.", 
   "(svn_client_set_log_msg_func3): For Ruby, rename from", 
   "svn_client_set_log_msg_func2, and refer to log_msg_func3 and", 
   "log_msg_func2 internally.", 
   "* subversion/bindings/swig/perl/native/Client.pm", 
   "(log_msg): Update Perldoc to indicate expectation of an array of", 
   "svn_client_commit_item3_t objects, and implementation to use the", 
   "client context's log_msg_baton3 field.", 
   "(_p_svn_client_commit_info_t): Rename svn_client_commit_item3_t from", 
   "svn_client_commit_item2_t, and _p_svn_client_commit_item3_t from", 
   "_p_svn_client_commit_item2_t.", 
   "* subversion/bindings/swig/perl/native/t/3client.t", 
   "Update the $ctx->log_msg() callback to expect commit items of type", 
   "_p_svn_client_commit_item3_t.", 
   "* subversion/bindings/swig/perl/libsvn_swig_perl/swigutil_pl.h", 
   "(svn_swig_pl_get_commit_log_func): Update doc string to indicate", 
   "that this function implements svn_client_get_commit_log3_t.", 
   "* subversion/bindings/swig/perl/libsvn_swig_perl/swigutil_pl.c", 
   "(svn_swig_pl_get_commit_log_func): Convert array elements from type", 
   "\"svn_client_commit_item3_t *\".", 
   "* subversion/bindings/swig/ruby/svn/client.rb", 
   "(Context.set_log_msg_func): Refer to Client.set_log_msg_func3().", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.h", 
   "(svn_swig_rb_get_commit_log_func): Rename from", 
   "svn_swig_rb_get_commit_log_func2().  Adjust doc string.", 
   "* subversion/bindings/swig/ruby/libsvn_swig_ruby/swigutil_rb.c", 
   "(DEFINE_DUP_NO_CONVENIENCE2): Refer to client_commit_item3.", 
   "(DEFINE_APR_ARRAY_TO_ARRAY): Define as c2r_client_commit_item3_dup,", 
   "referring to svn_client_commit_item3_t.", 
   "(svn_swig_rb_get_commit_log_func): Rename from", 
   "svn_swig_rb_get_commit_log_func2().  Use c2r_commit_item3_array()", 
   "in implementation.", 
   "* subversion/bindings/swig/python/libsvn_swig_py/swigutil_py.h", 
   "(svn_swig_py_get_commit_log_func): Make COMMIT_ITEMS parameter const.", 
   "* subversion/bindings/swig/python/libsvn_swig_py/swigutil_py.c", 
   "(convert_svn_client_commit_item3_t): Rename from", 
   "convert_svn_client_commit_item_t, and refer to svn_client_commit_item3_t", 
   "internally.  Update implementation to account for the new fields in", 
   "the data type.", 
   "(commit_item_array_to_list): Refer to svn_client_commit_item3_t internally.", 
   "(svn_swig_py_get_commit_log_func): Make COMMIT_ITEMS parameter const."
  ], 
  "revision_id": "862751"
 }
]