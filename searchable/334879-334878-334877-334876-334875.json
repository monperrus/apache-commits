[
 {
  "author": "sboag", 
  "date": "2001-05-28T06:27:25.000000Z", 
  "msg": [
   "Set dtm identity on node passed to m_wsfilter.getShouldStripSpace."
  ], 
  "revision_id": "334879"
 }, 
 {
  "author": "sboag", 
  "date": "2001-05-28T06:22:15.000000Z", 
  "msg": [
   "Set the dtm identity bits on the way to getShouldStripSpace."
  ], 
  "revision_id": "334878"
 }, 
 {
  "author": "sboag", 
  "date": "2001-05-28T06:21:25.000000Z", 
  "msg": [
   "Wasn't setting the dtm identity for getNextIndexed return, which", 
   "I fixed."
  ], 
  "revision_id": "334877"
 }, 
 {
  "author": "sboag", 
  "date": "2001-05-28T05:28:56.000000Z", 
  "msg": [
   "Fixed ugly bug that I introduced when breaking up the original", 
   "array... I inverted a statement in nextNode.", 
   "Also, increment m_size in addNode.", 
   "In my d2d test, which already has a fair number of exclusions", 
   "(which I should probably un-exclude for the new stuff), there", 
   "were five failures, having to do with copying subtrees.  I'll", 
   "look at these in a while."
  ], 
  "revision_id": "334876"
 }, 
 {
  "author": "sboag", 
  "date": "2001-05-28T04:07:45.000000Z", 
  "msg": [
   "Element indexing in the DTM is now implemented.  It's only used", 
   "for the moment with DescendantTraversers, and taken advantage", 
   "of by the xpath DescendantIterator.  The signature for getDTM changed", 
   "to add a boolean argument that tells if indexing is requested (we", 
   "of course don't want to do indexing for RTFs, and there may be", 
   "other cases where we don't want to do indexing).  The index", 
   "lookup is done with a binary search.  We might be able to optimize", 
   "this for short lists.  Also, perhaps the next operation should look to", 
   "the next first to see if it matches, before looking to the index.", 
   "Joe should review this mechanism.", 
   "Also generalized AxisWalker, and got rid of all the derivatives", 
   "except the reverse walker.  This will allow me to optimize AxisWalker", 
   "and it's use of traversers (and iterators for the reverse walker).", 
   "I may have noticed a bit of a slowdown since I did this, perhaps", 
   "since there were specialized AxisWalker derivatives.  If this is so,", 
   "and it might be my imagination, I'll have to see what's going on", 
   "in the profiler."
  ], 
  "revision_id": "334875"
 }
]