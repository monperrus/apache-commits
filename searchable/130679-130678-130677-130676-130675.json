[
 {
  "author": "morgand", 
  "date": "2002-03-28T06:50:15.000000Z", 
  "msg": [
   "added target for source distribution"
  ], 
  "revision_id": "130679"
 }, 
 {
  "author": "morgand", 
  "date": "2002-03-28T05:23:37.000000Z", 
  "msg": [
   "added LICENSE to binary distribution jar"
  ], 
  "revision_id": "130678"
 }, 
 {
  "author": "morgand", 
  "date": "2002-03-28T05:13:54.000000Z", 
  "msg": [
   "added targets to build binary distributions"
  ], 
  "revision_id": "130677"
 }, 
 {
  "author": "morgand", 
  "date": "2002-03-25T21:20:53.000000Z", 
  "msg": [
   "List constructors for ComparatorChain no longer perform defensive copies"
  ], 
  "revision_id": "130676"
 }, 
 {
  "author": "mas", 
  "date": "2002-03-25T05:50:57.000000Z", 
  "msg": [
   "Renamed AbstractBag to DefaultMapBag.  The implementation is more of a", 
   "\"default map based implementation\" and differs in design from the", 
   "AbstractSet, AbstractMap classes which do not make assumptions about", 
   "how they might be implemented.  To be consistent with JDK AbstractX", 
   "collections, an AbstractBag class should just be providing default", 
   "implementations that could be used regardless of underlying storage", 
   "mechanism.  For example, the add(Object) method would call the abstract", 
   "add(Object,int) method passing the object and 1. Since this", 
   "implementation assumes a Map based storage for the Bag, it does not", 
   "follow the AbstractX pattern, and thus has been renamed.  There is", 
   "still room for future addition of an AbstractBag that does not assume", 
   "a storage data structure."
  ], 
  "revision_id": "130675"
 }
]