[
 {
  "author": "dlr", 
  "date": "2006-08-02T23:24:25.816894Z", 
  "msg": [
   "Merge r20834 and r20864 from trunk into the 1.4.x branch, fixing issue", 
   "#2583 (a regression): 'svn diff' shouldn't require write access to the", 
   "working copy.", 
   "Votes: +1: dionisos, dlr, jerenkrantz"
  ], 
  "revision_id": "861010"
 }, 
 {
  "author": "dlr", 
  "date": "2006-08-02T23:18:23.939538Z", 
  "msg": [
   "* TODO: Note immediate plan for 3-way merge."
  ], 
  "revision_id": "861009"
 }, 
 {
  "author": "djh", 
  "date": "2006-08-02T22:43:05.057050Z", 
  "msg": [
   "* STATUS: Vote for r20927 and move it to approved."
  ], 
  "revision_id": "861008"
 }, 
 {
  "author": "rooneg", 
  "date": "2006-08-02T20:08:30.314819Z", 
  "msg": [
   "* STATUS: Propose r20932."
  ], 
  "revision_id": "861007"
 }, 
 {
  "author": "rooneg", 
  "date": "2006-08-02T19:48:03.888590Z", 
  "msg": [
   "Fix --enable-dso builds, which broke when we added the new bdb environment", 
   "cache.", 
   "This makes DSO loading of filesystem modules use a global pool, one that", 
   "is created before the global pool for bdb environments.  This means that", 
   "the bdb environment cleanups will occur prior to unloading libsvn_fs_base.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_initialize): Update comments, note that the pool passed to", 
   "this function is no longer used.", 
   "* subversion/libsvn_fs/fs-loader.c", 
   "(dso_cache): New global variable.", 
   "(load_module): Use our new global dso cache, protecting access to it", 
   "with the common pool lock.", 
   "(uninit): Removed.", 
   "(svn_fs_initialize): Make common_pool a top level pool, create the", 
   "dso cache.  Don't set up a cleanup function to NULL out the pool", 
   "and mutex, since it causes problems when we're unloaded to early,", 
   "and isn't really needed now that this is a global pool."
  ], 
  "revision_id": "861006"
 }
]