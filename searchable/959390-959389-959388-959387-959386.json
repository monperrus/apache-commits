[
 {
  "author": "davsclaus", 
  "date": "2010-06-30T18:05:02.345566Z", 
  "msg": [
   "Fixed test."
  ], 
  "revision_id": "959390"
 }, 
 {
  "author": "kstam", 
  "date": "2010-06-30T18:04:23.336482Z", 
  "msg": [
   "JUDDI-406, juddiv3.properties file references interface, fixed up exception handling."
  ], 
  "revision_id": "959389"
 }, 
 {
  "author": "dannas", 
  "date": "2010-06-30T17:55:25.389985Z", 
  "msg": [
   "Add support for parsing git diffs. The parser is implemented as a lookup", 
   "table. The idea is that we call different callbacks depending on what line", 
   "we have just read and or current state. There is one flag though, to help us", 
   "distinguish between the case when we have tree modifications and when we", 
   "have both tree and text modifications. In the former case, the last read", 
   "line will be put back into the stream so that it can be re-read when we", 
   "start scanning for a new patch.", 
   "Currently the parser isn't very strict about how a 'git diff' header must", 
   "look like.  For instance it doesn't ..", 
   ".. handle paths with spaces, tabs or newlines.", 
   ".. check if the lines are continous, e.g. we could have a line between", 
   "'copy from ' and 'copy to ' and the parser would still say that the patch is", 
   "valid.", 
   ".. compare the paths found in 'git --diff a/path b/path' with 'copy from", 
   "path' and 'copy to path'", 
   "But it's a start and something to work from!", 
   "* subversion/libsvn_diff/parse-diff.c", 
   "(parse_next_hunk): Add check for 'git --diff'. If we see a line like that", 
   "when looking for a hunk header, we bail out.", 
   "(parse_state): The different states our state machine can be in.", 
   "(transition): The struct descibing transitions in the state machine.", 
   "(grab_filename): New.", 
   "(diff_minus,", 
   "diff_plus,", 
   "git_start,", 
   "git_minus,", 
   "git_plus,", 
   "git_move_from,", 
   "git_move_to,", 
   "git_copy_from,", 
   "git_copy_to,", 
   "git_new_file,", 
   "git_deleted_file): Callbacks for the parser.", 
   "(svn_diff_parse_next_patch): Add a table of transitions and loop over", 
   "those transitions until we've either find a regular unidiff or a", 
   "git diff or reached eof.", 
   "* subversion/tests/libsvn_diff/parse-diff-tests.c", 
   "(test_funcs): Remove XFail for test_parse_git_diff() and", 
   "test_parse_git_tree_and_text_diff()."
  ], 
  "revision_id": "959388"
 }, 
 {
  "author": "hboutemy", 
  "date": "2010-06-30T17:47:49.809039Z", 
  "msg": [
   "[MSHARED-158] added GAV coordinates to information message \"Parent project loaded from repository\""
  ], 
  "revision_id": "959387"
 }, 
 {
  "author": "jm", 
  "date": "2010-06-30T17:46:54.343334Z", 
  "msg": [
   "auto-generated test rules"
  ], 
  "revision_id": "959386"
 }
]