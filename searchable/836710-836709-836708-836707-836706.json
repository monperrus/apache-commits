[
 {
  "author": "gstein", 
  "date": "2000-07-12T04:28:03.000000Z", 
  "msg": [
   "oops. these should not have been imported. we have a different build", 
   "environment from Apache."
  ], 
  "revision_id": "836710"
 }, 
 {
  "author": "sussman", 
  "date": "2000-07-12T03:20:43.000000Z", 
  "msg": [
   "saving work"
  ], 
  "revision_id": "836709"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-07-12T02:00:15.000000Z", 
  "msg": [
   "Hmm.  Not sure if this bug isn't in apr_hash.c itself, now...", 
   "After this code", 
   "/* Test overwriting: same key both times, but different values. */", 
   "key = svn_string_create (\"twice-used property name\", pool);", 
   "ap_hash_set (proplist, key->data, key->len,", 
   "svn_string_create (\"This is the FIRST value.\", pool));", 
   "ap_hash_set (proplist, key->data, key->len,", 
   "svn_string_create (\"This is the SECOND value.\", pool));", 
   "there should be no way for the \"FIRST\" value to still be in the hash", 
   "table, right?  Why is it still appearing in the dump, and not", 
   "\"SECOND\"?"
  ], 
  "revision_id": "836708"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-07-12T01:33:45.000000Z", 
  "msg": [
   "Eliminate typedef of `svn_proplist_t' to `ap_hash_t'.", 
   "Change all references to use `ap_hash_t'.", 
   "We'll be good, GCC.  Promise."
  ], 
  "revision_id": "836707"
 }, 
 {
  "author": "kfogel", 
  "date": "2000-07-12T01:26:26.000000Z", 
  "msg": [
   "Hash on (svn_string_t).data now.", 
   "There's still a bug, though; see the final two entries in the test", 
   "main() function."
  ], 
  "revision_id": "836706"
 }
]