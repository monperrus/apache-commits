[
 {
  "author": "davsclaus", 
  "date": "2008-08-22T15:34:57.543240Z", 
  "msg": [
   "Upgrade slf4j to 1.5.2"
  ], 
  "revision_id": "688100"
 }, 
 {
  "author": "bodewig", 
  "date": "2008-08-22T15:33:21.861918Z", 
  "msg": [
   "add a resourceDoesntContain assertion"
  ], 
  "revision_id": "688099"
 }, 
 {
  "author": "mor", 
  "date": "2008-08-22T15:32:53.823759Z", 
  "msg": [
   "Added a comment to facilitate the usage of new profile and customer pages."
  ], 
  "revision_id": "688098"
 }, 
 {
  "author": "xavier", 
  "date": "2008-08-22T15:32:18.717301Z", 
  "msg": [
   "FIX: ChainResolverTest failures (IVY-882)", 
   "The problem was due to the changes introduced in IVY-857. Indeed the cache checking was removed from the chain, to allow a resolver to force a revision even when there is already something in the cache. The problem is that resolvers where always checked in the chain even when the cache is filled. To implement this properly, I've moved the responsibility of knowing what resolved module revision should be returned to each individual resolver instead of the chain (pretty much like in the chain of responsibility pattern, where each node is responsible for calling the next one). To avoid changing the DependencyResolver API, I've added the detail about a possibly already resolved module revision in ResolveData. The added responsibility to DependencyResolver makes it more flexible, but also more complex to write. Hopefully most people writing dependency resolvers at least extend BasicResolver where all this logic is already implemented."
  ], 
  "revision_id": "688097"
 }, 
 {
  "author": "bodewig", 
  "date": "2008-08-22T15:29:46.051091Z", 
  "msg": [
   "document assertResourceContains"
  ], 
  "revision_id": "688096"
 }
]