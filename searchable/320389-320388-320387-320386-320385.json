[
 {
  "author": "mrglavas", 
  "date": "2005-05-22T20:20:00.000000Z", 
  "msg": [
   "Hooking in ValidatorImpl."
  ], 
  "revision_id": "320389"
 }, 
 {
  "author": "mrglavas", 
  "date": "2005-05-22T20:19:09.000000Z", 
  "msg": [
   "Merging in ValidatorImpl from the RI with many modifications.", 
   "Use native support for DOM and stream validation rather", 
   "than identity transformers and SAX. Manage the configuration", 
   "with a component manager rather than the ValidatorHandler.", 
   "Re-implemented reset so that it interacts with the component", 
   "manager rather than the validator handler."
  ], 
  "revision_id": "320388"
 }, 
 {
  "author": "mrglavas", 
  "date": "2005-05-22T20:12:47.000000Z", 
  "msg": [
   "Support for stream validation. Rather than going through SAX", 
   "use XNI since there's no event consumer. After creating", 
   "the parser configuration, we cache it in a SoftReference for", 
   "future use.  If there's memory demand the garbage collector", 
   "should clear it to reclaim some memory."
  ], 
  "revision_id": "320387"
 }, 
 {
  "author": "mrglavas", 
  "date": "2005-05-22T20:08:07.000000Z", 
  "msg": [
   "DOM validation support.", 
   "In the RI this was achieved using identity transformers.", 
   "Here we go directly from DOM to XNI and back", 
   "instead of the intermediate SAX step. In addition to eliminating", 
   "the dependency on a transformer this gives us better performance.", 
   "We do a non-recursive walk of the DOM to prevent a stack overflow", 
   "for DOM's with high depth.", 
   "It should also be noted that the result builder will fill in PSVI and", 
   "DOM TypeInfo if the result node comes from the Xerces' DOM", 
   "implementation."
  ], 
  "revision_id": "320386"
 }, 
 {
  "author": "mrglavas", 
  "date": "2005-05-22T20:02:15.000000Z", 
  "msg": [
   "A helper interface for SAX, DOM and stream input into the Validator."
  ], 
  "revision_id": "320385"
 }
]