[
 {
  "author": "thorsten", 
  "date": "2008-10-02T12:31:15.971283Z", 
  "msg": [
   "FOR-1118", 
   "Parsing the resulting stream to the xmlconsumer. This way it is present in further processing."
  ], 
  "revision_id": "701105"
 }, 
 {
  "author": "thorsten", 
  "date": "2008-10-02T12:28:52.532425Z", 
  "msg": [
   "FOR-1118", 
   "The problem had been that the structurer processing worked differently in cocoon and junit.", 
   "This was caused by the cocoon serializer. It seems to be a feature that it only declares once the xmlns. Preferable in the root element.", 
   "Due to this fact the namespace declaration for e.g. the forrest prefix never had been written to the return source from the processTemplate method. Provoking the code to fail when started in cocoon.", 
   "I overcame this problem by adding a custom implementation (NSAllocator) for the XMLEventAllocator interface. It is not optimal since it will always add the xmlns declaration to the element if a prefix is used.", 
   "The better way would have been to write all namespaces from the NamespaceContext to the first start element. However this is not possible since the interface does not return an iterator of all registered namespaces without an input parameter. There should be a Iterator getNamespaces(), but there is not. :("
  ], 
  "revision_id": "701104"
 }, 
 {
  "author": "dims", 
  "date": "2008-10-02T12:23:12.142229Z", 
  "msg": [
   "when you do a svn checkout of wscommons transport into a directory parallel to axis2 check out, build them together"
  ], 
  "revision_id": "701103"
 }, 
 {
  "author": "thorsten", 
  "date": "2008-10-02T12:13:45.145872Z", 
  "msg": [
   "Using prefixes instead of default namespaces"
  ], 
  "revision_id": "701102"
 }, 
 {
  "author": "lhein", 
  "date": "2008-10-02T12:06:05.798770Z", 
  "msg": [
   "do not fail on test failures"
  ], 
  "revision_id": "701101"
 }
]