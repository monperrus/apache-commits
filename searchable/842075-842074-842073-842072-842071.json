[
 {
  "author": "cmpilato", 
  "date": "2002-05-23T16:31:09.193003Z", 
  "msg": [
   "More cleanups and completions in the filesystem for Issue #654.", 
   "* subversion/libsvn_fs/tree.c", 
   "(parent_path_t): Add `copy_id' member.", 
   "(make_parent_path): Add `copy_id' argument.", 
   "(make_path_mutable): Use `copy_id' member of parent_path_t when", 
   "cloning.", 
   "(txn_body_revisions_changed): Re-implement this under the new schema.", 
   "(id_check_ancestor): Was id_is_ancestor, now returns svn_error_t *", 
   "and takes `is_ancestor' as an argument.", 
   "(merge): Update calls to id_check_ancestor().", 
   "* subversion/libsvn_fs/dag.c", 
   "(svn_fs__dag_get_predecessor_id): New.", 
   "(svn_fs__dag_clone_child, svn_fs__dag_clone_root): Link clones", 
   "through predecessor_id history.", 
   "(svn_fs__dag_copied_from): Doh!  Forgot to init the return values.", 
   "Also, fix the logic of this function.", 
   "(svn_fs__dag_is_ancestor): Finish coding this.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(struct get_node_revision_args, txn_body_get_node_revision):", 
   "Removed.  Test with public interface function.", 
   "(merging_commit): Abort transactions that conflict.", 
   "* subversion/libsvn_fs/dag.h", 
   "(svn_fs__dag_get_predecessor_id): New.", 
   "* subversion/libsvn_fs/id.c", 
   "(svn_fs_check_related): Fix this broken function.  Pray Greg Stein", 
   "doesn't rag on me about it.", 
   "* subversion/libsvn_fs/cmpilato-TODO", 
   "Keep updating my TODO list."
  ], 
  "revision_id": "842075"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-22T20:54:36.378909Z", 
  "msg": [
   "* subversion/libsvn_fs/dag.h", 
   "(svn_fs__dag_check_mutable): Remove `is_mutable' argument, and now", 
   "return an int.", 
   "* subversion/libsvn_fs/dag.c", 
   "(svn_fs__dag_check_mutable): Remove `is_mutable' argument, and now", 
   "return an int.", 
   "(make_entry, svn_fs__dag_set_entry, svn_fs__dag_set_proplist,", 
   "svn_fs__dag_clone_child, svn_fs__dag_delete_if_mutable,", 
   "svn_fs__dag_link, svn_fs__dag_get_edit_stream, delete_entry,", 
   "svn_fs__dag_finalize_edits, make_node_immutable, stabilize_node):", 
   "Update calls to svn_fs__dag_check_mutable.", 
   "* subversion/libsvn_fs/tree.c", 
   "(make_path_mutable, merge): Update calls to svn_fs__dag_check_mutable.", 
   "* subversion/libsvn_fs/cmpilato-TODO", 
   "Remove this change from my TODO list."
  ], 
  "revision_id": "842074"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-22T20:42:50.324629Z", 
  "msg": [
   "Still chugging away on Issue #654...", 
   "* subversion/libsvn_fs/fs.h", 
   "(svn_fs__node_revision_t): Remove 'ancestor_path', 'ancestor_rev',", 
   "and 'revision' members.  Add 'predecessor_id' member.  Rename", 
   "`edit_data_key' to `edit_key'.", 
   "* subversion/libsvn_fs/fs_skels.c", 
   "(is_valid_node_revision_header_skel, is_valid_node_revision_skel,", 
   "svn_fs__parse_node_revision_skel, svn_fs__unparse_node_revision_skel):", 
   "Update to handle new svn_fs__node_revision_t.", 
   "(svn_fs__unparse_copy_skel): Allow NULL src_paths.", 
   "* subversion/libsvn_fs/dag.c", 
   "(copy_node_revision, svn_fs__dag_delete_if_mutable,", 
   "svn_fs__dag_get_edit_stream, svn_fs__dag_finalize_edits,", 
   "make_node_immutable, make_entry): Update", 
   "to handle new svn_fs__node_revision_t.", 
   "(txn_body_dag_init_fs): Create default `copies' table entry.  Update", 
   "to handle new svn_fs__node_revision_t.", 
   "(svn_fs__dag_copy): Now creates a successor node instead of a new", 
   "node when doing copies with history.", 
   "(svn_fs__dag_copied_from): Actually finish this implementation.", 
   "Update to handle new svn_fs__node_revision_t.", 
   "* subversion/libsvn_fs/txn-table.h", 
   "* subversion/libsvn_fs/txn-table.c", 
   "(svn_fs__add_txn_copy): New.", 
   "(svn_fs__create_txn, allocate_txn_id): Constify returned id.", 
   "* subversion/libsvn_fs/copies-table.h", 
   "* subversion/libsvn_fs/copies-table.c", 
   "(svn_fs__reserve_copy_id): Constify returned id.", 
   "* subversion/libsvn_fs/tree.c", 
   "(open_path): Formatting mods only.", 
   "* subversion/libsvn_fs/cmpilato-TODO", 
   "Tracking thotz.", 
   "* subversion/libsvn_fs/txn.c", 
   "(txn_body_begin_txn): Constify `svn_txn_id' and renamed to just `txn_id'."
  ], 
  "revision_id": "842073"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-22T17:03:43.611196Z", 
  "msg": [
   "Kill another instance of svn_stringbuf_t!", 
   "* subversion/libsvn_fs/id.c", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_unparse_id): Now returns svn_string_t *.", 
   "* subversion/libsvn_fs/dag.c", 
   "(svn_fs__dag_set_proplist, make_node_immutable): Update use of", 
   "svn_fs_unparse_id.", 
   "* subversion/libsvn_fs/dbt.c", 
   "(svn_fs__id_to_dbt): Update use of svn_fs_unparse_id.", 
   "(svn_fs__set_dbt): Constify `data' argument.", 
   "* subversion/libsvn_fs/err.c", 
   "(corrupt_id, svn_fs__err_dangling_id): Update use of svn_fs_unparse_id.", 
   "* subversion/libsvn_fs/fs_skels.c", 
   "(svn_fs__unparse_revision_skel, svn_fs__unparse_copy_skel,", 
   "svn_fs__unparse_entries_skel): Update use of svn_fs_unparse_id.", 
   "* subversion/libsvn_fs/nodes-table.c", 
   "(svn_fs__new_successor_id): Update use of svn_fs_unparse_id.", 
   "* subversion/libsvn_fs/tree.c", 
   "(merge, txn_body_commit): Update use of svn_fs_unparse_id.", 
   "* subversion/svnlook/main.c", 
   "(print_ids_tree): Update use of svn_fs_unparse_id.", 
   "* subversion/svnadmin/main.c", 
   "(print_tree): Update use of svn_fs_unparse_id.", 
   "* subversion/svnadmin/shell.c", 
   "(print_dirent): Update use of svn_fs_unparse_id.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(txn_body_check_id, check_id_present, check_id_absent): Update use", 
   "of svn_fs_unparse_id.", 
   "* subversion/libsvn_fs/dbt.h", 
   "(svn_fs__set_dbt): Constify `data' argument.", 
   "* subversion/libsvn_fs/cmpilato-TODO", 
   "Update with latest thotz."
  ], 
  "revision_id": "842072"
 }, 
 {
  "author": "cmpilato", 
  "date": "2002-05-22T16:32:25.187378Z", 
  "msg": [
   "More work on issue 654.  This code is expected to compile in a static", 
   "build only (some pieces of the filesystem currently in use by", 
   "mod_dav_svn have been removed, as planned).  Also, while most of the", 
   "fs-tests are passing (woohoo!!), some are not.  But this, too, is", 
   "expected since I just haven't finished coding the change in full. :-)", 
   "At any rate, this is a good place to commit, as the change is getting", 
   "rather large (though still not *terribly* complex, thankfully).", 
   "--", 
   "* subversion/include/svn_error_codes.h", 
   "(SVN_ERR_FS_ALREADY_EXISTS): Genericize this error message.", 
   "* subversion/include/svn_fs.h", 
   "(svn_fs_id_distance): Change promise.", 
   "(svn_fs_check_related): Remove 'fs', 'pool', and 'related'", 
   "arguments, and return an int.", 
   "(svn_fs_parse_id, svn_fs_unparse_id): Docstring/formatting mods.", 
   "* subversion/libsvn_fs/id.h", 
   "(struct svn_fs_id_t): Remove `digits', add `node_id', `copy_id', and", 
   "`txn_id' members.", 
   "(svn_fs__create_id, svn_fs__id_node_id, svn_fs__id_copy_id,", 
   "svn_fs__id_txn_id): New.", 
   "(svn_fs__id_length, svn_fs__id_is_ancestor, svn_fs__precede_id,", 
   "svn_fs__precede_id, svn_fs__id_is_parent): Removed.", 
   "* subversion/libsvn_fs/key-gen.h", 
   "* subversion/libsvn_fs/key-gen.c", 
   "(svn_fs__key_compare): New.", 
   "* subversion/libsvn_fs/validate.h", 
   "* subversion/libsvn_fs/validate.c", 
   "(svn_fs__count_id_components): Remove.", 
   "* subversion/libsvn_fs/nodes-table.h", 
   "(svn_fs__get_node_revision): Change promise.", 
   "* subversion/libsvn_fs/id.c", 
   "(svn_fs__create_id, svn_fs__id_node_id, svn_fs__id_copy_id,", 
   "svn_fs__id_txn_id): New.", 
   "(svn_fs__id_length, svn_fs__id_is_ancestor, distance_from_prefix,", 
   "svn_fs_id_distance, svn_fs__id_is_parent, svn_fs__precede_id):", 
   "Removed.", 
   "(svn_fs__id_eq, svn_fs__id_copy, svn_fs_parse_id): Convert to the", 
   "new NodeRevId schema.", 
   "(svn_fs_unparse_id): Convert to the new NodeRevId schema.", 
   "(svn_fs_check_related): Remove 'fs', 'pool', and 'related'", 
   "arguments, and return an int.  Convert to the new NodeRevId schema.", 
   "(svn_fs_id_distance): Re-implement as a wrapper around", 
   "svn_fs_check_related.", 
   "* subversion/libsvn_fs/nodes-table.c", 
   "(compare_ids, parse_node_revision_dbt): Convert to the new NodeRevId", 
   "schema.", 
   "(svn_fs__new_node_id): Add `txn_id' argument.  Convert to the new", 
   "NodeRevId schema.", 
   "(last_key_before): Remove.", 
   "(svn_fs__new_successor_id): Add `copy_id' and `txn_id' arguments.", 
   "Convert to the new NodeRevId schema.", 
   "* subversion/libsvn_fs/node-rev.h", 
   "(svn_fs__create_node): Add `txn_id'.", 
   "(svn_fs__create_successor): Add `txn_id' and `copy_id'.", 
   "* subversion/libsvn_fs/node-rev.c", 
   "(svn_fs__create_node): Add `txn_id'.  Update call to svn_fs__new_node_id.", 
   "(svn_fs__create_successor): Add `txn_id' and `copy_id'.  Update", 
   "calls to changed function interfaces.", 
   "* subversion/libsvn_fs/dag.h", 
   "(svn_fs__dag_check_mutable): Remove `trail', add `txn_id' arguments.", 
   "(svn_fs__dag_clone_child): Add `txn_id' and `copy_id' arguments.", 
   "(svn_fs__dag_clone_root, svn_fs__dag_commit_txn): Rename `svn_txn'", 
   "to `txn_id' for consistency.", 
   "(svn_fs__dag_set_entry, svn_fs__dag_set_proplist,", 
   "svn_fs__dag_delete_tree, svn_fs__dag_delete,", 
   "svn_fs__dag_delete_if_mutable, svn_fs__dag_make_file,", 
   "svn_fs__dag_make_dir, svn_fs__dag_link, svn_fs__dag_get_edit_stream,", 
   "svn_fs__dag_finalize_edits, svn_fs__dag_copy): Add `txn_id'.", 
   "(svn_fs__dag_txn_root, svn_fs__dag_txn_base_root): Rename `txn' to", 
   "`txn_id' for consistency.", 
   "(svn_fs__dag_is_ancestor): New.", 
   "* subversion/libsvn_fs/dag.c", 
   "(node_rev_is_mutable, node_rev_make_mutable): Removed.", 
   "(cache_node_revision): For now, always discard the cached node", 
   "revision when the trail completes.", 
   "(svn_fs__dag_check_mutable): Remove `trail', add `txn_id' arguments.", 
   "Convert to new NodeRevId schema.", 
   "(svn_fs__dag_get_revision): Convert to new NodeRevId schema.", 
   "(make_entry, stabilize_node): Add `txn_id'.  Update calls to changed", 
   "function interfaces.", 
   "(svn_fs__dag_clone_child): Add `txn_id' and `copy_id'.  Update calls", 
   "to changed functions interfaces.", 
   "(svn_fs__dag_clone_root, svn_fs__dag_commit_txn): Rename `svn_txn'", 
   "to `txn_id' for consistency.  Update calls to changed functions", 
   "interfaces.", 
   "(make_node_immutable, svn_fs__dag_set_entry, delete_entry,", 
   "svn_fs__dag_set_proplist, svn_fs__dag_delete_tree,", 
   "svn_fs__dag_delete, svn_fs__dag_delete_if_mutable,", 
   "svn_fs__dag_make_file, svn_fs__dag_make_dir, svn_fs__dag_link,", 
   "svn_fs__dag_finalize_edits, svn_fs__dag_copy,", 
   "svn_fs__dag_get_edit_stream,): Add `txn_id'.  Update calls to", 
   "changed function interfaces.  No longer replace node revision (not", 
   "necessary).", 
   "(txn_body_dag_init_fs): Use node id \"0.0.0\" for root node now.", 
   "(svn_fs__dag_txn_root, svn_fs__dag_txn_base_root): Rename `txn' to", 
   "`txn_id' for consistency.", 
   "(svn_fs__dag_is_ancestor): New (and unfinished).", 
   "* subversion/libsvn_fs/deltify.c", 
   "(deltify_by_id): For now, just return success without deltifying.", 
   "* subversion/libsvn_fs/tree.c", 
   "(txn_body_revisions_changed): For now, just return success with an", 
   "empty array.", 
   "(id_is_ancestor): New.", 
   "(merge): Add `txn_id'.  Remove re-id code.  Replace calls to", 
   "svn_fs__id_is_ancestor with the new helper id_is_ancestor.", 
   "(txn_body_merge): Rename `txn_name' to `txn_id' for consistency.", 
   "Remove re-id code.  Update calls to changed function interfaces.", 
   "(open_path): Remove id root support.  Will fix indentation later.", 
   "(root_kind_t): Remove `id_root' type.", 
   "(svn_fs_txn_path_is_id, svn_fs_id_root, svn_fs_is_id_root): Remove.", 
   "(mutable_root_node, make_path_mutable, txn_body_change_node_prop,", 
   "txn_body_make_dir, txn_body_delete, txn_body_copy,", 
   "txn_body_finalize_edits, txn_body_apply_textdelta,", 
   "another_txn_body_finalize_edits, txn_body_apply_text,", 
   "txn_body_make_file): Update calls to changed function interfaces.", 
   "* subversion/libsvn_fs/txn.c", 
   "(txn_body_abort_txn): Rename `txn_name' to `txn_id' for consistency.", 
   "Update calls to changed function interfaces.", 
   "* subversion/tests/libsvn_fs/fs-test.c", 
   "(fetch_by_id, unexpected_node_id, merge_re_id): Remove.", 
   "(check_related): Update calls to svn_fs_check_related.", 
   "(test_funcs): Remove reference to `merge_reid' and `fetch_by_id' tests."
  ], 
  "revision_id": "842071"
 }
]