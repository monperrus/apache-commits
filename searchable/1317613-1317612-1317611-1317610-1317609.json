[
 {
  "author": "", 
  "date": "2012-03-29T02:27:02.349138Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 20430", 
   "Author:   pfarland@adobe.com", 
   "Date:     2011-02-23T22:18:58.775997Z", 
   "Log Message:", 
   "-----------", 
   "Reverting fix for SDK-29482 to fix regressions SDK-29636, SDK-29634. The order of defaults.css does not appear to be guaranteed and if a theme is also in the library path it needs to be re-applied in a duplicate manner.", 
   "QE notes: Solving duplicate @media generated code (per SDK-29482) will be deferred for Hero.", 
   "Doc notes: N/A", 
   "Bugs: SDK-29636, SDK-29634", 
   "Reviewer: Chris B", 
   "Tests run: checkintests", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java"
  ], 
  "revision_id": "1317613"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T02:26:59.418391Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 20395", 
   "Author:   pfarland@adobe.com", 
   "Date:     2011-02-18T22:34:20.007235Z", 
   "Log Message:", 
   "-----------", 
   "Avoiding re-parsing defaults.css files and themes if we've already just parsed them for the given compilation. This is a small workaround to stop @media queries from appearing multiple times when PreLink is run more than once (which happens often when new late-breaking dependencies are discovered from ClassReferences in CSS in the pre-link phase processing style defaults.css and themes). This wasn't obvious before the @media query work because duplicate style declarations are merged (where as @media queries are not). So this should also save some time in both full and incremental compilation too.", 
   "Incremental compile APIs re-create a new SymbolTable context for each recompile call so the StylesContainer in this context should be refreshed between each compile and thus we'll notice changes to defaults.css in our dependent libraries.", 
   "While testing this fix it looks like theme files specified on the command line as a reference to *.css files do not trigger an incremental compile when they are modified. A clean build will pick up changes, however. This happens with and without this change and is a separate bug.", 
   "QE notes: Please check that @media queries in a defaults.css (say, with the mobile theme) do not cause duplicate media query code in _myapp_Styles.as (need to check with -keep command line compiler option enabled to see this generated code).", 
   "Doc notes: N/A", 
   "Bugs: SDK-29482", 
   "Reviewer: Chris B, Gaurav", 
   "Tests run: checkintests, cyclone", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java"
  ], 
  "revision_id": "1317612"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T02:26:56.616235Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19843", 
   "Author:   pfarland@adobe.com", 
   "Date:     2011-01-20T21:40:15.316198Z", 
   "Log Message:", 
   "-----------", 
   "Modifying PreLink to fix SDK-28758.", 
   "The problem was that PreLink was only checking whether the number of Sources had changed after running PreLink. This is true the first time we run because we generate a new source for the CSS selectors that matched any type dependencies found in all compilation units. However, when one of those CSS selectors introduced a new type dependency, say a Skin ClassReference(), the new generated source would just replace the old one and while it would get compiled, pre-link would not run again to pick up yet more matching CSS selectors for that new type.", 
   "This change tries to determine whether a new source was actually generated for the matching CSS selectors rather than rely on the generated source count.", 
   "It's not pretty, but it's the least invasive change without re-architecting PreLink and CSS.", 
   "QE notes: Please add a test case that has a class -> style -> skin class -> style -> skin class dependency chain to show that arbitrary dependency chains solely via styles work.", 
   "Doc notes: N/A", 
   "Bugs: SDK-28758", 
   "Reviewer: chris b", 
   "Tests run: checkintests, cyclone", 
   "Is noteworthy for integration: No", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/CompcPreLink.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/CompilerAPI.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/PreLink.java</path>"
  ], 
  "revision_id": "1317611"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T02:26:53.388989Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 19012", 
   "Author:   pfarland@adobe.com", 
   "Date:     2010-12-03T17:57:59.709024Z", 
   "Log Message:", 
   "-----------", 
   "Part 2 of CSS Media Query support. Now that Batik has been updated to support media query syntax for @media rules in Part 1, this change updates the Flex SDK compiler to process these new rules and generate conditional ActionScript that queries whether the media features match the runtime and thus the selectors should apply.", 
   "This change was complicated by the fact that the framework requires re-occuring selectors to be merged. The work around was to generate conditional checks inside the style protochain factory functions. Theoretically this means that the queries could be re-evaluated at runtime if needed too.", 
   "Part 3 of this change will be from the framework team to introduce an ActionScript API on style manager that will check if a media query applies. As a place holder for now the generated code assumes that API is on mx.styles.IStyleManager.acceptMediaQuery(query:String):Boolean. This is currently only generated when -keep is enabled.", 
   "One the final runtime ActionScript API is signed off, the direct-AST generation path will be updated to create an AST fragment to check the media query.", 
   "QE notes: Not yet", 
   "Doc notes: N/A", 
   "Bugs: N/A", 
   "Reviewer: For Chris B", 
   "Tests run: Checkintests, cyclone", 
   "Is noteworthy for integration: Yes", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleDef.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleDocumentHandler.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleDef.vm</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/mxml/ImplementationGenerator.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/tools/PreLink.java</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleDeclarationBlock.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleModule.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StyleModule.vm</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleProperty.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/StyleDeclaration.java</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/MediaRule.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/mxml/gen/ClassDefLib.vm</path>", 
   "<path kind=\"file\" action=\"A\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flash/css/MediaList.java</path>"
  ], 
  "revision_id": "1317610"
 }, 
 {
  "author": "", 
  "date": "2012-03-29T02:26:50.210163Z", 
  "msg": [
   "Transferred from the Adobe Open Source Subversion Repository", 
   "Revision: 16991", 
   "Author:   tierney@adobe.com", 
   "Date:     2010-07-21T14:55:18.126779Z", 
   "Log Message:", 
   "-----------", 
   "QE notes: none", 
   "Doc notes: none", 
   "Bugs: SDK-26727", 
   "Reviewer: Paul Reilly", 
   "Tests run: checkintests", 
   "Is noteworthy for integration:", 
   "Clean up some error/warning classes - declare them as static so they don't hold a pointer to the outer class instance they were created in.  This was causing some mem leaks in builder, as builder holds on to the instances of the warning classes for a while.", 
   "Modified Paths:", 
   "--------------", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/mxml/builder/ComponentBuilder.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/css/StylesContainer.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/media/LosslessImageTranscoder.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/util/OrderedProperties.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/as3/binding/BindableFirstPassEvaluator.java</path>", 
   "<path kind=\"file\" action=\"M\">/private/flex/sdk/branches/hero_private/modules/compiler/src/java/flex2/compiler/as3/binding/DataBindingFirstPassEvaluator.java</path>"
  ], 
  "revision_id": "1317609"
 }
]